/// This module was generated from JSON Schema from
/// <file:///home/iachini/pkl/cloudformation.schema.json>.
///
/// WARN: The root schema describes open-ended properties, but this is not possible to describe at the
/// module level.
module CloudformationSchema

AWSTemplateFormatVersion: "2010-09-09"?

Conditions: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), Dynamic>?

/// Template description
Description: String(length <= 1024)?

Mappings: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), Dynamic>?

Metadata: Dynamic?

Outputs: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), Dynamic>(length.isBetween(1, 60))?

Parameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), Parameter>(length <= 50)?

Resources: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), 
  `AWS::ACMPCA::Certificate`
  |`AWS::ACMPCA::CertificateAuthority`
  |`AWS::ACMPCA::CertificateAuthorityActivation`
  |`AWS::ACMPCA::Permission`
  |`AWS::APS::RuleGroupsNamespace`
  |`AWS::APS::Workspace`
  |`AWS::ARCZonalShift::ZonalAutoshiftConfiguration`
  |`AWS::AccessAnalyzer::Analyzer`
  |`AWS::AmazonMQ::Broker`
  |`AWS::AmazonMQ::Configuration`
  |`AWS::AmazonMQ::ConfigurationAssociation`
  |`AWS::Amplify::App`
  |`AWS::Amplify::Branch`
  |`AWS::Amplify::Domain`
  |`AWS::AmplifyUIBuilder::Component`
  |`AWS::AmplifyUIBuilder::Form`
  |`AWS::AmplifyUIBuilder::Theme`
  |`AWS::ApiGateway::Account`
  |`AWS::ApiGateway::ApiKey`
  |`AWS::ApiGateway::Authorizer`
  |`AWS::ApiGateway::BasePathMapping`
  |`AWS::ApiGateway::ClientCertificate`
  |`AWS::ApiGateway::Deployment`
  |`AWS::ApiGateway::DocumentationPart`
  |`AWS::ApiGateway::DocumentationVersion`
  |`AWS::ApiGateway::DomainName`
  |`AWS::ApiGateway::GatewayResponse`
  |`AWS::ApiGateway::Method`
  |`AWS::ApiGateway::Model`
  |`AWS::ApiGateway::RequestValidator`
  |`AWS::ApiGateway::Resource`
  |`AWS::ApiGateway::RestApi`
  |`AWS::ApiGateway::Stage`
  |`AWS::ApiGateway::UsagePlan`
  |`AWS::ApiGateway::UsagePlanKey`
  |`AWS::ApiGateway::VpcLink`
  |`AWS::ApiGatewayV2::Api`
  |`AWS::ApiGatewayV2::ApiGatewayManagedOverrides`
  |`AWS::ApiGatewayV2::ApiMapping`
  |`AWS::ApiGatewayV2::Authorizer`
  |`AWS::ApiGatewayV2::Deployment`
  |`AWS::ApiGatewayV2::DomainName`
  |`AWS::ApiGatewayV2::Integration`
  |`AWS::ApiGatewayV2::IntegrationResponse`
  |`AWS::ApiGatewayV2::Model`
  |`AWS::ApiGatewayV2::Route`
  |`AWS::ApiGatewayV2::RouteResponse`
  |`AWS::ApiGatewayV2::Stage`
  |`AWS::ApiGatewayV2::VpcLink`
  |`AWS::AppConfig::Application`
  |`AWS::AppConfig::ConfigurationProfile`
  |`AWS::AppConfig::Deployment`
  |`AWS::AppConfig::DeploymentStrategy`
  |`AWS::AppConfig::Environment`
  |`AWS::AppConfig::Extension`
  |`AWS::AppConfig::ExtensionAssociation`
  |`AWS::AppConfig::HostedConfigurationVersion`
  |`AWS::AppFlow::Connector`
  |`AWS::AppFlow::ConnectorProfile`
  |`AWS::AppFlow::Flow`
  |`AWS::AppIntegrations::DataIntegration`
  |`AWS::AppIntegrations::EventIntegration`
  |`AWS::AppMesh::GatewayRoute`
  |`AWS::AppMesh::Mesh`
  |`AWS::AppMesh::Route`
  |`AWS::AppMesh::VirtualGateway`
  |`AWS::AppMesh::VirtualNode`
  |`AWS::AppMesh::VirtualRouter`
  |`AWS::AppMesh::VirtualService`
  |`AWS::AppRunner::AutoScalingConfiguration`
  |`AWS::AppRunner::ObservabilityConfiguration`
  |`AWS::AppRunner::Service`
  |`AWS::AppRunner::VpcConnector`
  |`AWS::AppRunner::VpcIngressConnection`
  |`AWS::AppStream::AppBlock`
  |`AWS::AppStream::AppBlockBuilder`
  |`AWS::AppStream::Application`
  |`AWS::AppStream::ApplicationEntitlementAssociation`
  |`AWS::AppStream::ApplicationFleetAssociation`
  |`AWS::AppStream::DirectoryConfig`
  |`AWS::AppStream::Entitlement`
  |`AWS::AppStream::Fleet`
  |`AWS::AppStream::ImageBuilder`
  |`AWS::AppStream::Stack`
  |`AWS::AppStream::StackFleetAssociation`
  |`AWS::AppStream::StackUserAssociation`
  |`AWS::AppStream::User`
  |`AWS::AppSync::ApiCache`
  |`AWS::AppSync::ApiKey`
  |`AWS::AppSync::DataSource`
  |`AWS::AppSync::DomainName`
  |`AWS::AppSync::DomainNameApiAssociation`
  |`AWS::AppSync::FunctionConfiguration`
  |`AWS::AppSync::GraphQLApi`
  |`AWS::AppSync::GraphQLSchema`
  |`AWS::AppSync::Resolver`
  |`AWS::AppSync::SourceApiAssociation`
  |`AWS::ApplicationAutoScaling::ScalableTarget`
  |`AWS::ApplicationAutoScaling::ScalingPolicy`
  |`AWS::ApplicationInsights::Application`
  |`AWS::Athena::CapacityReservation`
  |`AWS::Athena::DataCatalog`
  |`AWS::Athena::NamedQuery`
  |`AWS::Athena::PreparedStatement`
  |`AWS::Athena::WorkGroup`
  |`AWS::AuditManager::Assessment`
  |`AWS::AutoScaling::AutoScalingGroup`
  |`AWS::AutoScaling::LaunchConfiguration`
  |`AWS::AutoScaling::LifecycleHook`
  |`AWS::AutoScaling::ScalingPolicy`
  |`AWS::AutoScaling::ScheduledAction`
  |`AWS::AutoScaling::WarmPool`
  |`AWS::AutoScalingPlans::ScalingPlan`
  |`AWS::B2BI::Capability`
  |`AWS::B2BI::Partnership`
  |`AWS::B2BI::Profile`
  |`AWS::B2BI::Transformer`
  |`AWS::Backup::BackupPlan`
  |`AWS::Backup::BackupSelection`
  |`AWS::Backup::BackupVault`
  |`AWS::Backup::Framework`
  |`AWS::Backup::ReportPlan`
  |`AWS::Backup::RestoreTestingPlan`
  |`AWS::Backup::RestoreTestingSelection`
  |`AWS::BackupGateway::Hypervisor`
  |`AWS::Batch::ComputeEnvironment`
  |`AWS::Batch::JobDefinition`
  |`AWS::Batch::JobQueue`
  |`AWS::Batch::SchedulingPolicy`
  |`AWS::BillingConductor::BillingGroup`
  |`AWS::BillingConductor::CustomLineItem`
  |`AWS::BillingConductor::PricingPlan`
  |`AWS::BillingConductor::PricingRule`
  |`AWS::Budgets::Budget`
  |`AWS::Budgets::BudgetsAction`
  |`AWS::CE::AnomalyMonitor`
  |`AWS::CE::AnomalySubscription`
  |`AWS::CE::CostCategory`
  |`AWS::CUR::ReportDefinition`
  |`AWS::Cassandra::Keyspace`
  |`AWS::Cassandra::Table`
  |`AWS::CertificateManager::Account`
  |`AWS::CertificateManager::Certificate`
  |`AWS::Chatbot::MicrosoftTeamsChannelConfiguration`
  |`AWS::Chatbot::SlackChannelConfiguration`
  |`AWS::CleanRooms::AnalysisTemplate`
  |`AWS::CleanRooms::Collaboration`
  |`AWS::CleanRooms::ConfiguredTable`
  |`AWS::CleanRooms::ConfiguredTableAssociation`
  |`AWS::CleanRooms::Membership`
  |`AWS::Cloud9::EnvironmentEC2`
  |`AWS::CloudFormation::CustomResource`
  |`AWS::CloudFormation::HookDefaultVersion`
  |`AWS::CloudFormation::HookTypeConfig`
  |`AWS::CloudFormation::HookVersion`
  |`AWS::CloudFormation::Macro`
  |`AWS::CloudFormation::ModuleDefaultVersion`
  |`AWS::CloudFormation::ModuleVersion`
  |`AWS::CloudFormation::PublicTypeVersion`
  |`AWS::CloudFormation::Publisher`
  |`AWS::CloudFormation::ResourceDefaultVersion`
  |`AWS::CloudFormation::ResourceVersion`
  |`AWS::CloudFormation::Stack`
  |`AWS::CloudFormation::StackSet`
  |`AWS::CloudFormation::TypeActivation`
  |`AWS::CloudFormation::WaitCondition`
  |`AWS::CloudFormation::WaitConditionHandle`
  |`AWS::CloudFront::CachePolicy`
  |`AWS::CloudFront::CloudFrontOriginAccessIdentity`
  |`AWS::CloudFront::ContinuousDeploymentPolicy`
  |`AWS::CloudFront::Distribution`
  |`AWS::CloudFront::Function`
  |`AWS::CloudFront::KeyGroup`
  |`AWS::CloudFront::KeyValueStore`
  |`AWS::CloudFront::MonitoringSubscription`
  |`AWS::CloudFront::OriginAccessControl`
  |`AWS::CloudFront::OriginRequestPolicy`
  |`AWS::CloudFront::PublicKey`
  |`AWS::CloudFront::RealtimeLogConfig`
  |`AWS::CloudFront::ResponseHeadersPolicy`
  |`AWS::CloudFront::StreamingDistribution`
  |`AWS::CloudTrail::Channel`
  |`AWS::CloudTrail::EventDataStore`
  |`AWS::CloudTrail::ResourcePolicy`
  |`AWS::CloudTrail::Trail`
  |`AWS::CloudWatch::Alarm`
  |`AWS::CloudWatch::AnomalyDetector`
  |`AWS::CloudWatch::CompositeAlarm`
  |`AWS::CloudWatch::Dashboard`
  |`AWS::CloudWatch::InsightRule`
  |`AWS::CloudWatch::MetricStream`
  |`AWS::CodeArtifact::Domain`
  |`AWS::CodeArtifact::Repository`
  |`AWS::CodeBuild::Project`
  |`AWS::CodeBuild::ReportGroup`
  |`AWS::CodeBuild::SourceCredential`
  |`AWS::CodeCommit::Repository`
  |`AWS::CodeDeploy::Application`
  |`AWS::CodeDeploy::DeploymentConfig`
  |`AWS::CodeDeploy::DeploymentGroup`
  |`AWS::CodeGuruProfiler::ProfilingGroup`
  |`AWS::CodeGuruReviewer::RepositoryAssociation`
  |`AWS::CodePipeline::CustomActionType`
  |`AWS::CodePipeline::Pipeline`
  |`AWS::CodePipeline::Webhook`
  |`AWS::CodeStar::GitHubRepository`
  |`AWS::CodeStarConnections::Connection`
  |`AWS::CodeStarConnections::RepositoryLink`
  |`AWS::CodeStarConnections::SyncConfiguration`
  |`AWS::CodeStarNotifications::NotificationRule`
  |`AWS::Cognito::IdentityPool`
  |`AWS::Cognito::IdentityPoolPrincipalTag`
  |`AWS::Cognito::IdentityPoolRoleAttachment`
  |`AWS::Cognito::LogDeliveryConfiguration`
  |`AWS::Cognito::UserPool`
  |`AWS::Cognito::UserPoolClient`
  |`AWS::Cognito::UserPoolDomain`
  |`AWS::Cognito::UserPoolGroup`
  |`AWS::Cognito::UserPoolIdentityProvider`
  |`AWS::Cognito::UserPoolResourceServer`
  |`AWS::Cognito::UserPoolRiskConfigurationAttachment`
  |`AWS::Cognito::UserPoolUICustomizationAttachment`
  |`AWS::Cognito::UserPoolUser`
  |`AWS::Cognito::UserPoolUserToGroupAttachment`
  |`AWS::Comprehend::DocumentClassifier`
  |`AWS::Comprehend::Flywheel`
  |`AWS::Config::AggregationAuthorization`
  |`AWS::Config::ConfigRule`
  |`AWS::Config::ConfigurationAggregator`
  |`AWS::Config::ConfigurationRecorder`
  |`AWS::Config::ConformancePack`
  |`AWS::Config::DeliveryChannel`
  |`AWS::Config::OrganizationConfigRule`
  |`AWS::Config::OrganizationConformancePack`
  |`AWS::Config::RemediationConfiguration`
  |`AWS::Config::StoredQuery`
  |`AWS::Connect::ApprovedOrigin`
  |`AWS::Connect::ContactFlow`
  |`AWS::Connect::ContactFlowModule`
  |`AWS::Connect::EvaluationForm`
  |`AWS::Connect::HoursOfOperation`
  |`AWS::Connect::Instance`
  |`AWS::Connect::InstanceStorageConfig`
  |`AWS::Connect::IntegrationAssociation`
  |`AWS::Connect::PhoneNumber`
  |`AWS::Connect::PredefinedAttribute`
  |`AWS::Connect::Prompt`
  |`AWS::Connect::Queue`
  |`AWS::Connect::QuickConnect`
  |`AWS::Connect::RoutingProfile`
  |`AWS::Connect::Rule`
  |`AWS::Connect::SecurityKey`
  |`AWS::Connect::SecurityProfile`
  |`AWS::Connect::TaskTemplate`
  |`AWS::Connect::TrafficDistributionGroup`
  |`AWS::Connect::User`
  |`AWS::Connect::UserHierarchyGroup`
  |`AWS::Connect::View`
  |`AWS::Connect::ViewVersion`
  |`AWS::ConnectCampaigns::Campaign`
  |`AWS::ControlTower::EnabledControl`
  |`AWS::ControlTower::LandingZone`
  |`AWS::CustomerProfiles::CalculatedAttributeDefinition`
  |`AWS::CustomerProfiles::Domain`
  |`AWS::CustomerProfiles::EventStream`
  |`AWS::CustomerProfiles::Integration`
  |`AWS::CustomerProfiles::ObjectType`
  |`AWS::DAX::Cluster`
  |`AWS::DAX::ParameterGroup`
  |`AWS::DAX::SubnetGroup`
  |`AWS::DLM::LifecyclePolicy`
  |`AWS::DMS::Certificate`
  |`AWS::DMS::DataProvider`
  |`AWS::DMS::Endpoint`
  |`AWS::DMS::EventSubscription`
  |`AWS::DMS::InstanceProfile`
  |`AWS::DMS::MigrationProject`
  |`AWS::DMS::ReplicationConfig`
  |`AWS::DMS::ReplicationInstance`
  |`AWS::DMS::ReplicationSubnetGroup`
  |`AWS::DMS::ReplicationTask`
  |`AWS::DataBrew::Dataset`
  |`AWS::DataBrew::Job`
  |`AWS::DataBrew::Project`
  |`AWS::DataBrew::Recipe`
  |`AWS::DataBrew::Ruleset`
  |`AWS::DataBrew::Schedule`
  |`AWS::DataPipeline::Pipeline`
  |`AWS::DataSync::Agent`
  |`AWS::DataSync::LocationAzureBlob`
  |`AWS::DataSync::LocationEFS`
  |`AWS::DataSync::LocationFSxLustre`
  |`AWS::DataSync::LocationFSxONTAP`
  |`AWS::DataSync::LocationFSxOpenZFS`
  |`AWS::DataSync::LocationFSxWindows`
  |`AWS::DataSync::LocationHDFS`
  |`AWS::DataSync::LocationNFS`
  |`AWS::DataSync::LocationObjectStorage`
  |`AWS::DataSync::LocationS3`
  |`AWS::DataSync::LocationSMB`
  |`AWS::DataSync::StorageSystem`
  |`AWS::DataSync::Task`
  |`AWS::Detective::Graph`
  |`AWS::Detective::MemberInvitation`
  |`AWS::Detective::OrganizationAdmin`
  |`AWS::DevOpsGuru::LogAnomalyDetectionIntegration`
  |`AWS::DevOpsGuru::NotificationChannel`
  |`AWS::DevOpsGuru::ResourceCollection`
  |`AWS::DirectoryService::MicrosoftAD`
  |`AWS::DirectoryService::SimpleAD`
  |`AWS::DocDB::DBCluster`
  |`AWS::DocDB::DBClusterParameterGroup`
  |`AWS::DocDB::DBInstance`
  |`AWS::DocDB::DBSubnetGroup`
  |`AWS::DocDB::EventSubscription`
  |`AWS::DocDBElastic::Cluster`
  |`AWS::DynamoDB::GlobalTable`
  |`AWS::DynamoDB::Table`
  |`AWS::EC2::CapacityReservation`
  |`AWS::EC2::CapacityReservationFleet`
  |`AWS::EC2::CarrierGateway`
  |`AWS::EC2::ClientVpnAuthorizationRule`
  |`AWS::EC2::ClientVpnEndpoint`
  |`AWS::EC2::ClientVpnRoute`
  |`AWS::EC2::ClientVpnTargetNetworkAssociation`
  |`AWS::EC2::CustomerGateway`
  |`AWS::EC2::DHCPOptions`
  |`AWS::EC2::EC2Fleet`
  |`AWS::EC2::EIP`
  |`AWS::EC2::EIPAssociation`
  |`AWS::EC2::EgressOnlyInternetGateway`
  |`AWS::EC2::EnclaveCertificateIamRoleAssociation`
  |`AWS::EC2::FlowLog`
  |`AWS::EC2::GatewayRouteTableAssociation`
  |`AWS::EC2::Host`
  |`AWS::EC2::IPAM`
  |`AWS::EC2::IPAMAllocation`
  |`AWS::EC2::IPAMPool`
  |`AWS::EC2::IPAMPoolCidr`
  |`AWS::EC2::IPAMResourceDiscovery`
  |`AWS::EC2::IPAMResourceDiscoveryAssociation`
  |`AWS::EC2::IPAMScope`
  |`AWS::EC2::Instance`
  |`AWS::EC2::InstanceConnectEndpoint`
  |`AWS::EC2::InternetGateway`
  |`AWS::EC2::KeyPair`
  |`AWS::EC2::LaunchTemplate`
  |`AWS::EC2::LocalGatewayRoute`
  |`AWS::EC2::LocalGatewayRouteTable`
  |`AWS::EC2::LocalGatewayRouteTableVPCAssociation`
  |`AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation`
  |`AWS::EC2::NatGateway`
  |`AWS::EC2::NetworkAcl`
  |`AWS::EC2::NetworkAclEntry`
  |`AWS::EC2::NetworkInsightsAccessScope`
  |`AWS::EC2::NetworkInsightsAccessScopeAnalysis`
  |`AWS::EC2::NetworkInsightsAnalysis`
  |`AWS::EC2::NetworkInsightsPath`
  |`AWS::EC2::NetworkInterface`
  |`AWS::EC2::NetworkInterfaceAttachment`
  |`AWS::EC2::NetworkInterfacePermission`
  |`AWS::EC2::NetworkPerformanceMetricSubscription`
  |`AWS::EC2::PlacementGroup`
  |`AWS::EC2::PrefixList`
  |`AWS::EC2::Route`
  |`AWS::EC2::RouteTable`
  |`AWS::EC2::SecurityGroup`
  |`AWS::EC2::SecurityGroupEgress0`
  |`AWS::EC2::SecurityGroupIngress0`
  |`AWS::EC2::SnapshotBlockPublicAccess`
  |`AWS::EC2::SpotFleet`
  |`AWS::EC2::Subnet`
  |`AWS::EC2::SubnetCidrBlock`
  |`AWS::EC2::SubnetNetworkAclAssociation`
  |`AWS::EC2::SubnetRouteTableAssociation`
  |`AWS::EC2::TrafficMirrorFilter`
  |`AWS::EC2::TrafficMirrorFilterRule`
  |`AWS::EC2::TrafficMirrorSession`
  |`AWS::EC2::TrafficMirrorTarget`
  |`AWS::EC2::TransitGateway`
  |`AWS::EC2::TransitGatewayAttachment`
  |`AWS::EC2::TransitGatewayConnect`
  |`AWS::EC2::TransitGatewayMulticastDomain`
  |`AWS::EC2::TransitGatewayMulticastDomainAssociation`
  |`AWS::EC2::TransitGatewayMulticastGroupMember`
  |`AWS::EC2::TransitGatewayMulticastGroupSource`
  |`AWS::EC2::TransitGatewayPeeringAttachment`
  |`AWS::EC2::TransitGatewayRoute`
  |`AWS::EC2::TransitGatewayRouteTable`
  |`AWS::EC2::TransitGatewayRouteTableAssociation`
  |`AWS::EC2::TransitGatewayRouteTablePropagation`
  |`AWS::EC2::TransitGatewayVpcAttachment`
  |`AWS::EC2::VPC`
  |`AWS::EC2::VPCCidrBlock`
  |`AWS::EC2::VPCDHCPOptionsAssociation`
  |`AWS::EC2::VPCEndpoint`
  |`AWS::EC2::VPCEndpointConnectionNotification`
  |`AWS::EC2::VPCEndpointService`
  |`AWS::EC2::VPCEndpointServicePermissions`
  |`AWS::EC2::VPCGatewayAttachment`
  |`AWS::EC2::VPCPeeringConnection`
  |`AWS::EC2::VPNConnection`
  |`AWS::EC2::VPNConnectionRoute`
  |`AWS::EC2::VPNGateway`
  |`AWS::EC2::VPNGatewayRoutePropagation`
  |`AWS::EC2::VerifiedAccessEndpoint`
  |`AWS::EC2::VerifiedAccessGroup`
  |`AWS::EC2::VerifiedAccessInstance`
  |`AWS::EC2::VerifiedAccessTrustProvider`
  |`AWS::EC2::Volume`
  |`AWS::EC2::VolumeAttachment`
  |`AWS::ECR::PublicRepository`
  |`AWS::ECR::PullThroughCacheRule`
  |`AWS::ECR::RegistryPolicy`
  |`AWS::ECR::ReplicationConfiguration`
  |`AWS::ECR::Repository`
  |`AWS::ECS::CapacityProvider`
  |`AWS::ECS::Cluster`
  |`AWS::ECS::ClusterCapacityProviderAssociations`
  |`AWS::ECS::PrimaryTaskSet`
  |`AWS::ECS::Service`
  |`AWS::ECS::TaskDefinition`
  |`AWS::ECS::TaskSet`
  |`AWS::EFS::AccessPoint`
  |`AWS::EFS::FileSystem`
  |`AWS::EFS::MountTarget`
  |`AWS::EKS::AccessEntry`
  |`AWS::EKS::Addon`
  |`AWS::EKS::Cluster`
  |`AWS::EKS::FargateProfile`
  |`AWS::EKS::IdentityProviderConfig`
  |`AWS::EKS::Nodegroup`
  |`AWS::EKS::PodIdentityAssociation`
  |`AWS::EMR::Cluster`
  |`AWS::EMR::InstanceFleetConfig`
  |`AWS::EMR::InstanceGroupConfig`
  |`AWS::EMR::SecurityConfiguration`
  |`AWS::EMR::Step`
  |`AWS::EMR::Studio`
  |`AWS::EMR::StudioSessionMapping`
  |`AWS::EMR::WALWorkspace`
  |`AWS::EMRContainers::VirtualCluster`
  |`AWS::EMRServerless::Application`
  |`AWS::ElastiCache::CacheCluster`
  |`AWS::ElastiCache::GlobalReplicationGroup`
  |`AWS::ElastiCache::ParameterGroup`
  |`AWS::ElastiCache::ReplicationGroup`
  |`AWS::ElastiCache::SecurityGroup`
  |`AWS::ElastiCache::SecurityGroupIngress`
  |`AWS::ElastiCache::ServerlessCache`
  |`AWS::ElastiCache::SubnetGroup`
  |`AWS::ElastiCache::User`
  |`AWS::ElastiCache::UserGroup`
  |`AWS::ElasticBeanstalk::Application`
  |`AWS::ElasticBeanstalk::ApplicationVersion`
  |`AWS::ElasticBeanstalk::ConfigurationTemplate`
  |`AWS::ElasticBeanstalk::Environment`
  |`AWS::ElasticLoadBalancing::LoadBalancer`
  |`AWS::ElasticLoadBalancingV2::Listener`
  |`AWS::ElasticLoadBalancingV2::ListenerCertificate0`
  |`AWS::ElasticLoadBalancingV2::ListenerRule`
  |`AWS::ElasticLoadBalancingV2::LoadBalancer`
  |`AWS::ElasticLoadBalancingV2::TargetGroup`
  |`AWS::ElasticLoadBalancingV2::TrustStore`
  |`AWS::ElasticLoadBalancingV2::TrustStoreRevocation`
  |`AWS::Elasticsearch::Domain`
  |`AWS::EntityResolution::IdMappingWorkflow`
  |`AWS::EntityResolution::MatchingWorkflow`
  |`AWS::EntityResolution::SchemaMapping`
  |`AWS::EventSchemas::Discoverer`
  |`AWS::EventSchemas::Registry`
  |`AWS::EventSchemas::RegistryPolicy`
  |`AWS::EventSchemas::Schema`
  |`AWS::Events::ApiDestination`
  |`AWS::Events::Archive`
  |`AWS::Events::Connection`
  |`AWS::Events::Endpoint`
  |`AWS::Events::EventBus`
  |`AWS::Events::EventBusPolicy`
  |`AWS::Events::Rule`
  |`AWS::Evidently::Experiment`
  |`AWS::Evidently::Feature`
  |`AWS::Evidently::Launch`
  |`AWS::Evidently::Project`
  |`AWS::Evidently::Segment`
  |`AWS::FIS::ExperimentTemplate`
  |`AWS::FIS::TargetAccountConfiguration`
  |`AWS::FMS::NotificationChannel`
  |`AWS::FMS::Policy`
  |`AWS::FMS::ResourceSet`
  |`AWS::FSx::DataRepositoryAssociation`
  |`AWS::FSx::FileSystem`
  |`AWS::FSx::Snapshot`
  |`AWS::FSx::StorageVirtualMachine`
  |`AWS::FSx::Volume`
  |`AWS::FinSpace::Environment`
  |`AWS::Forecast::Dataset`
  |`AWS::Forecast::DatasetGroup`
  |`AWS::FraudDetector::Detector`
  |`AWS::FraudDetector::EntityType`
  |`AWS::FraudDetector::EventType`
  |`AWS::FraudDetector::Label`
  |`AWS::FraudDetector::List`
  |`AWS::FraudDetector::Outcome`
  |`AWS::FraudDetector::Variable`
  |`AWS::GameLift::Alias`
  |`AWS::GameLift::Build`
  |`AWS::GameLift::Fleet`
  |`AWS::GameLift::GameServerGroup`
  |`AWS::GameLift::GameSessionQueue`
  |`AWS::GameLift::Location`
  |`AWS::GameLift::MatchmakingConfiguration`
  |`AWS::GameLift::MatchmakingRuleSet`
  |`AWS::GameLift::Script`
  |`AWS::GlobalAccelerator::Accelerator`
  |`AWS::GlobalAccelerator::EndpointGroup`
  |`AWS::GlobalAccelerator::Listener`
  |`AWS::Glue::Classifier`
  |`AWS::Glue::Connection`
  |`AWS::Glue::Crawler`
  |`AWS::Glue::CustomEntityType`
  |`AWS::Glue::DataCatalogEncryptionSettings`
  |`AWS::Glue::DataQualityRuleset`
  |`AWS::Glue::Database`
  |`AWS::Glue::DevEndpoint`
  |`AWS::Glue::Job`
  |`AWS::Glue::MLTransform`
  |`AWS::Glue::Partition`
  |`AWS::Glue::Registry`
  |`AWS::Glue::Schema`
  |`AWS::Glue::SchemaVersion`
  |`AWS::Glue::SchemaVersionMetadata`
  |`AWS::Glue::SecurityConfiguration`
  |`AWS::Glue::Table`
  |`AWS::Glue::Trigger`
  |`AWS::Glue::Workflow`
  |`AWS::Grafana::Workspace`
  |`AWS::Greengrass::ConnectorDefinition`
  |`AWS::Greengrass::ConnectorDefinitionVersion`
  |`AWS::Greengrass::CoreDefinition`
  |`AWS::Greengrass::CoreDefinitionVersion`
  |`AWS::Greengrass::DeviceDefinition`
  |`AWS::Greengrass::DeviceDefinitionVersion`
  |`AWS::Greengrass::FunctionDefinition`
  |`AWS::Greengrass::FunctionDefinitionVersion`
  |`AWS::Greengrass::Group`
  |`AWS::Greengrass::GroupVersion`
  |`AWS::Greengrass::LoggerDefinition`
  |`AWS::Greengrass::LoggerDefinitionVersion`
  |`AWS::Greengrass::ResourceDefinition`
  |`AWS::Greengrass::ResourceDefinitionVersion`
  |`AWS::Greengrass::SubscriptionDefinition`
  |`AWS::Greengrass::SubscriptionDefinitionVersion`
  |`AWS::GreengrassV2::ComponentVersion`
  |`AWS::GreengrassV2::Deployment`
  |`AWS::GroundStation::Config`
  |`AWS::GroundStation::DataflowEndpointGroup`
  |`AWS::GroundStation::MissionProfile`
  |`AWS::GuardDuty::Detector`
  |`AWS::GuardDuty::Filter`
  |`AWS::GuardDuty::IPSet`
  |`AWS::GuardDuty::Master`
  |`AWS::GuardDuty::Member`
  |`AWS::GuardDuty::ThreatIntelSet`
  |`AWS::HealthImaging::Datastore`
  |`AWS::HealthLake::FHIRDatastore`
  |`AWS::IAM::AccessKey`
  |`AWS::IAM::Group`
  |`AWS::IAM::GroupPolicy0`
  |`AWS::IAM::InstanceProfile`
  |`AWS::IAM::ManagedPolicy`
  |`AWS::IAM::OIDCProvider`
  |`AWS::IAM::Policy`
  |`AWS::IAM::Role`
  |`AWS::IAM::RolePolicy0`
  |`AWS::IAM::SAMLProvider`
  |`AWS::IAM::ServerCertificate`
  |`AWS::IAM::ServiceLinkedRole`
  |`AWS::IAM::User`
  |`AWS::IAM::UserPolicy0`
  |`AWS::IAM::UserToGroupAddition`
  |`AWS::IAM::VirtualMFADevice`
  |`AWS::IVS::Channel`
  |`AWS::IVS::PlaybackKeyPair`
  |`AWS::IVS::RecordingConfiguration`
  |`AWS::IVS::StreamKey`
  |`AWS::IVSChat::LoggingConfiguration`
  |`AWS::IVSChat::Room`
  |`AWS::IdentityStore::Group`
  |`AWS::IdentityStore::GroupMembership`
  |`AWS::ImageBuilder::Component`
  |`AWS::ImageBuilder::ContainerRecipe`
  |`AWS::ImageBuilder::DistributionConfiguration`
  |`AWS::ImageBuilder::Image`
  |`AWS::ImageBuilder::ImagePipeline`
  |`AWS::ImageBuilder::ImageRecipe`
  |`AWS::ImageBuilder::InfrastructureConfiguration`
  |`AWS::ImageBuilder::LifecyclePolicy`
  |`AWS::ImageBuilder::Workflow`
  |`AWS::Inspector::AssessmentTarget`
  |`AWS::Inspector::AssessmentTemplate`
  |`AWS::Inspector::ResourceGroup`
  |`AWS::InspectorV2::Filter`
  |`AWS::InternetMonitor::Monitor`
  |`AWS::IoT1Click::Device`
  |`AWS::IoT1Click::Placement`
  |`AWS::IoT1Click::Project`
  |`AWS::IoT::AccountAuditConfiguration`
  |`AWS::IoT::Authorizer`
  |`AWS::IoT::BillingGroup`
  |`AWS::IoT::CACertificate`
  |`AWS::IoT::Certificate`
  |`AWS::IoT::CertificateProvider`
  |`AWS::IoT::CustomMetric`
  |`AWS::IoT::Dimension`
  |`AWS::IoT::DomainConfiguration`
  |`AWS::IoT::FleetMetric`
  |`AWS::IoT::JobTemplate`
  |`AWS::IoT::Logging`
  |`AWS::IoT::MitigationAction`
  |`AWS::IoT::Policy`
  |`AWS::IoT::PolicyPrincipalAttachment`
  |`AWS::IoT::ProvisioningTemplate`
  |`AWS::IoT::ResourceSpecificLogging`
  |`AWS::IoT::RoleAlias`
  |`AWS::IoT::ScheduledAudit`
  |`AWS::IoT::SecurityProfile`
  |`AWS::IoT::SoftwarePackage`
  |`AWS::IoT::SoftwarePackageVersion`
  |`AWS::IoT::Thing`
  |`AWS::IoT::ThingGroup`
  |`AWS::IoT::ThingPrincipalAttachment`
  |`AWS::IoT::ThingType`
  |`AWS::IoT::TopicRule`
  |`AWS::IoT::TopicRuleDestination`
  |`AWS::IoTAnalytics::Channel`
  |`AWS::IoTAnalytics::Dataset`
  |`AWS::IoTAnalytics::Datastore`
  |`AWS::IoTAnalytics::Pipeline`
  |`AWS::IoTCoreDeviceAdvisor::SuiteDefinition`
  |`AWS::IoTEvents::AlarmModel`
  |`AWS::IoTEvents::DetectorModel`
  |`AWS::IoTEvents::Input`
  |`AWS::IoTFleetHub::Application`
  |`AWS::IoTFleetWise::Campaign`
  |`AWS::IoTFleetWise::DecoderManifest`
  |`AWS::IoTFleetWise::Fleet`
  |`AWS::IoTFleetWise::ModelManifest`
  |`AWS::IoTFleetWise::SignalCatalog`
  |`AWS::IoTFleetWise::Vehicle`
  |`AWS::IoTSiteWise::AccessPolicy`
  |`AWS::IoTSiteWise::Asset`
  |`AWS::IoTSiteWise::AssetModel`
  |`AWS::IoTSiteWise::Dashboard`
  |`AWS::IoTSiteWise::Gateway`
  |`AWS::IoTSiteWise::Portal`
  |`AWS::IoTSiteWise::Project`
  |`AWS::IoTThingsGraph::FlowTemplate`
  |`AWS::IoTTwinMaker::ComponentType`
  |`AWS::IoTTwinMaker::Entity`
  |`AWS::IoTTwinMaker::Scene`
  |`AWS::IoTTwinMaker::SyncJob`
  |`AWS::IoTTwinMaker::Workspace`
  |`AWS::IoTWireless::Destination`
  |`AWS::IoTWireless::DeviceProfile`
  |`AWS::IoTWireless::FuotaTask`
  |`AWS::IoTWireless::MulticastGroup`
  |`AWS::IoTWireless::NetworkAnalyzerConfiguration`
  |`AWS::IoTWireless::PartnerAccount`
  |`AWS::IoTWireless::ServiceProfile`
  |`AWS::IoTWireless::TaskDefinition`
  |`AWS::IoTWireless::WirelessDevice`
  |`AWS::IoTWireless::WirelessDeviceImportTask`
  |`AWS::IoTWireless::WirelessGateway`
  |`AWS::KMS::Alias`
  |`AWS::KMS::Key`
  |`AWS::KMS::ReplicaKey`
  |`AWS::KafkaConnect::Connector`
  |`AWS::Kendra::DataSource`
  |`AWS::Kendra::Faq`
  |`AWS::Kendra::Index`
  |`AWS::KendraRanking::ExecutionPlan`
  |`AWS::Kinesis::Stream`
  |`AWS::Kinesis::StreamConsumer`
  |`AWS::KinesisAnalytics::Application`
  |`AWS::KinesisAnalytics::ApplicationOutput`
  |`AWS::KinesisAnalytics::ApplicationReferenceDataSource`
  |`AWS::KinesisAnalyticsV2::Application`
  |`AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption`
  |`AWS::KinesisAnalyticsV2::ApplicationOutput`
  |`AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource`
  |`AWS::KinesisFirehose::DeliveryStream`
  |`AWS::KinesisVideo::SignalingChannel`
  |`AWS::KinesisVideo::Stream`
  |`AWS::LakeFormation::DataCellsFilter`
  |`AWS::LakeFormation::DataLakeSettings`
  |`AWS::LakeFormation::Permissions`
  |`AWS::LakeFormation::PrincipalPermissions`
  |`AWS::LakeFormation::Resource`
  |`AWS::LakeFormation::Tag`
  |`AWS::LakeFormation::TagAssociation`
  |`AWS::Lambda::Alias`
  |`AWS::Lambda::CodeSigningConfig`
  |`AWS::Lambda::EventInvokeConfig`
  |`AWS::Lambda::EventSourceMapping`
  |`AWS::Lambda::Function`
  |`AWS::Lambda::LayerVersion`
  |`AWS::Lambda::LayerVersionPermission`
  |`AWS::Lambda::Permission`
  |`AWS::Lambda::Url`
  |`AWS::Lambda::Version`
  |`AWS::Lex::Bot`
  |`AWS::Lex::BotAlias`
  |`AWS::Lex::BotVersion`
  |`AWS::Lex::ResourcePolicy`
  |`AWS::LicenseManager::Grant`
  |`AWS::LicenseManager::License`
  |`AWS::Lightsail::Alarm`
  |`AWS::Lightsail::Bucket`
  |`AWS::Lightsail::Certificate`
  |`AWS::Lightsail::Container`
  |`AWS::Lightsail::Database`
  |`AWS::Lightsail::Disk`
  |`AWS::Lightsail::Distribution`
  |`AWS::Lightsail::Instance`
  |`AWS::Lightsail::LoadBalancer`
  |`AWS::Lightsail::LoadBalancerTlsCertificate`
  |`AWS::Lightsail::StaticIp`
  |`AWS::Location::APIKey`
  |`AWS::Location::GeofenceCollection`
  |`AWS::Location::Map`
  |`AWS::Location::PlaceIndex`
  |`AWS::Location::RouteCalculator`
  |`AWS::Location::Tracker`
  |`AWS::Location::TrackerConsumer`
  |`AWS::Logs::AccountPolicy`
  |`AWS::Logs::Delivery`
  |`AWS::Logs::DeliveryDestination`
  |`AWS::Logs::DeliverySource`
  |`AWS::Logs::Destination`
  |`AWS::Logs::LogAnomalyDetector`
  |`AWS::Logs::LogGroup`
  |`AWS::Logs::LogStream`
  |`AWS::Logs::MetricFilter`
  |`AWS::Logs::QueryDefinition`
  |`AWS::Logs::ResourcePolicy`
  |`AWS::Logs::SubscriptionFilter`
  |`AWS::LookoutEquipment::InferenceScheduler`
  |`AWS::LookoutMetrics::Alert`
  |`AWS::LookoutMetrics::AnomalyDetector`
  |`AWS::LookoutVision::Project`
  |`AWS::M2::Application`
  |`AWS::M2::Environment`
  |`AWS::MSK::BatchScramSecret`
  |`AWS::MSK::Cluster`
  |`AWS::MSK::ClusterPolicy`
  |`AWS::MSK::Configuration`
  |`AWS::MSK::Replicator`
  |`AWS::MSK::ServerlessCluster`
  |`AWS::MSK::VpcConnection`
  |`AWS::MWAA::Environment`
  |`AWS::Macie::AllowList`
  |`AWS::Macie::CustomDataIdentifier`
  |`AWS::Macie::FindingsFilter`
  |`AWS::Macie::Session`
  |`AWS::ManagedBlockchain::Accessor`
  |`AWS::ManagedBlockchain::Member`
  |`AWS::ManagedBlockchain::Node`
  |`AWS::MediaConnect::Bridge`
  |`AWS::MediaConnect::BridgeOutput`
  |`AWS::MediaConnect::BridgeSource`
  |`AWS::MediaConnect::Flow`
  |`AWS::MediaConnect::FlowEntitlement`
  |`AWS::MediaConnect::FlowOutput`
  |`AWS::MediaConnect::FlowSource0`
  |`AWS::MediaConnect::FlowVpcInterface`
  |`AWS::MediaConnect::Gateway`
  |`AWS::MediaConvert::JobTemplate`
  |`AWS::MediaConvert::Preset`
  |`AWS::MediaConvert::Queue`
  |`AWS::MediaLive::Channel`
  |`AWS::MediaLive::Input`
  |`AWS::MediaLive::InputSecurityGroup`
  |`AWS::MediaLive::Multiplex`
  |`AWS::MediaLive::Multiplexprogram`
  |`AWS::MediaPackage::Asset`
  |`AWS::MediaPackage::Channel`
  |`AWS::MediaPackage::OriginEndpoint`
  |`AWS::MediaPackage::PackagingConfiguration`
  |`AWS::MediaPackage::PackagingGroup`
  |`AWS::MediaPackageV2::Channel`
  |`AWS::MediaPackageV2::ChannelGroup`
  |`AWS::MediaPackageV2::ChannelPolicy`
  |`AWS::MediaPackageV2::OriginEndpoint`
  |`AWS::MediaPackageV2::OriginEndpointPolicy`
  |`AWS::MediaStore::Container`
  |`AWS::MediaTailor::Channel`
  |`AWS::MediaTailor::ChannelPolicy`
  |`AWS::MediaTailor::LiveSource`
  |`AWS::MediaTailor::PlaybackConfiguration`
  |`AWS::MediaTailor::SourceLocation`
  |`AWS::MediaTailor::VodSource`
  |`AWS::MemoryDB::ACL`
  |`AWS::MemoryDB::Cluster`
  |`AWS::MemoryDB::ParameterGroup`
  |`AWS::MemoryDB::SubnetGroup`
  |`AWS::MemoryDB::User`
  |`AWS::Neptune::DBCluster`
  |`AWS::Neptune::DBClusterParameterGroup`
  |`AWS::Neptune::DBInstance`
  |`AWS::Neptune::DBParameterGroup`
  |`AWS::Neptune::DBSubnetGroup`
  |`AWS::NeptuneGraph::Graph`
  |`AWS::NeptuneGraph::PrivateGraphEndpoint`
  |`AWS::NetworkFirewall::Firewall`
  |`AWS::NetworkFirewall::FirewallPolicy`
  |`AWS::NetworkFirewall::LoggingConfiguration`
  |`AWS::NetworkFirewall::RuleGroup`
  |`AWS::NetworkFirewall::TLSInspectionConfiguration`
  |`AWS::NetworkManager::ConnectAttachment`
  |`AWS::NetworkManager::ConnectPeer`
  |`AWS::NetworkManager::CoreNetwork`
  |`AWS::NetworkManager::CustomerGatewayAssociation`
  |`AWS::NetworkManager::Device`
  |`AWS::NetworkManager::GlobalNetwork`
  |`AWS::NetworkManager::Link`
  |`AWS::NetworkManager::LinkAssociation`
  |`AWS::NetworkManager::Site`
  |`AWS::NetworkManager::SiteToSiteVpnAttachment`
  |`AWS::NetworkManager::TransitGatewayPeering`
  |`AWS::NetworkManager::TransitGatewayRegistration`
  |`AWS::NetworkManager::TransitGatewayRouteTableAttachment`
  |`AWS::NetworkManager::VpcAttachment`
  |`AWS::NimbleStudio::LaunchProfile`
  |`AWS::NimbleStudio::StreamingImage`
  |`AWS::NimbleStudio::Studio`
  |`AWS::NimbleStudio::StudioComponent`
  |`AWS::OSIS::Pipeline`
  |`AWS::Oam::Link`
  |`AWS::Oam::Sink`
  |`AWS::Omics::AnnotationStore`
  |`AWS::Omics::ReferenceStore`
  |`AWS::Omics::RunGroup`
  |`AWS::Omics::SequenceStore`
  |`AWS::Omics::VariantStore`
  |`AWS::Omics::Workflow`
  |`AWS::OpenSearchServerless::AccessPolicy`
  |`AWS::OpenSearchServerless::Collection`
  |`AWS::OpenSearchServerless::LifecyclePolicy`
  |`AWS::OpenSearchServerless::SecurityConfig`
  |`AWS::OpenSearchServerless::SecurityPolicy`
  |`AWS::OpenSearchServerless::VpcEndpoint`
  |`AWS::OpenSearchService::Domain`
  |`AWS::OpsWorks::App`
  |`AWS::OpsWorks::ElasticLoadBalancerAttachment`
  |`AWS::OpsWorks::Instance`
  |`AWS::OpsWorks::Layer`
  |`AWS::OpsWorks::Stack`
  |`AWS::OpsWorks::UserProfile`
  |`AWS::OpsWorks::Volume`
  |`AWS::OpsWorksCM::Server`
  |`AWS::Organizations::Account`
  |`AWS::Organizations::Organization`
  |`AWS::Organizations::OrganizationalUnit`
  |`AWS::Organizations::Policy`
  |`AWS::Organizations::ResourcePolicy`
  |`AWS::PCAConnectorAD::Connector`
  |`AWS::PCAConnectorAD::DirectoryRegistration`
  |`AWS::PCAConnectorAD::ServicePrincipalName`
  |`AWS::PCAConnectorAD::Template`
  |`AWS::PCAConnectorAD::TemplateGroupAccessControlEntry`
  |`AWS::Panorama::ApplicationInstance`
  |`AWS::Panorama::Package`
  |`AWS::Panorama::PackageVersion`
  |`AWS::Personalize::Dataset`
  |`AWS::Personalize::DatasetGroup`
  |`AWS::Personalize::Schema`
  |`AWS::Personalize::Solution`
  |`AWS::Pinpoint::ADMChannel`
  |`AWS::Pinpoint::APNSChannel`
  |`AWS::Pinpoint::APNSSandboxChannel`
  |`AWS::Pinpoint::APNSVoipChannel`
  |`AWS::Pinpoint::APNSVoipSandboxChannel`
  |`AWS::Pinpoint::App`
  |`AWS::Pinpoint::ApplicationSettings`
  |`AWS::Pinpoint::BaiduChannel`
  |`AWS::Pinpoint::Campaign`
  |`AWS::Pinpoint::EmailChannel`
  |`AWS::Pinpoint::EmailTemplate`
  |`AWS::Pinpoint::EventStream`
  |`AWS::Pinpoint::GCMChannel`
  |`AWS::Pinpoint::InAppTemplate`
  |`AWS::Pinpoint::PushTemplate`
  |`AWS::Pinpoint::SMSChannel`
  |`AWS::Pinpoint::Segment`
  |`AWS::Pinpoint::SmsTemplate`
  |`AWS::Pinpoint::VoiceChannel`
  |`AWS::PinpointEmail::ConfigurationSet`
  |`AWS::PinpointEmail::ConfigurationSetEventDestination`
  |`AWS::PinpointEmail::DedicatedIpPool`
  |`AWS::PinpointEmail::Identity`
  |`AWS::Pipes::Pipe`
  |`AWS::Proton::EnvironmentAccountConnection`
  |`AWS::Proton::EnvironmentTemplate`
  |`AWS::Proton::ServiceTemplate`
  |`AWS::QLDB::Ledger`
  |`AWS::QLDB::Stream`
  |`AWS::QuickSight::Analysis`
  |`AWS::QuickSight::Dashboard`
  |`AWS::QuickSight::DataSet`
  |`AWS::QuickSight::DataSource`
  |`AWS::QuickSight::RefreshSchedule`
  |`AWS::QuickSight::Template`
  |`AWS::QuickSight::Theme`
  |`AWS::QuickSight::Topic`
  |`AWS::QuickSight::VPCConnection`
  |`AWS::RAM::Permission`
  |`AWS::RAM::ResourceShare`
  |`AWS::RDS::CustomDBEngineVersion`
  |`AWS::RDS::DBCluster`
  |`AWS::RDS::DBClusterParameterGroup`
  |`AWS::RDS::DBInstance`
  |`AWS::RDS::DBParameterGroup`
  |`AWS::RDS::DBProxy`
  |`AWS::RDS::DBProxyEndpoint`
  |`AWS::RDS::DBProxyTargetGroup`
  |`AWS::RDS::DBSecurityGroup`
  |`AWS::RDS::DBSecurityGroupIngress0`
  |`AWS::RDS::DBSubnetGroup`
  |`AWS::RDS::EventSubscription`
  |`AWS::RDS::GlobalCluster`
  |`AWS::RDS::OptionGroup`
  |`AWS::RUM::AppMonitor`
  |`AWS::Redshift::Cluster`
  |`AWS::Redshift::ClusterParameterGroup`
  |`AWS::Redshift::ClusterSecurityGroup`
  |`AWS::Redshift::ClusterSecurityGroupIngress`
  |`AWS::Redshift::ClusterSubnetGroup`
  |`AWS::Redshift::EndpointAccess`
  |`AWS::Redshift::EndpointAuthorization`
  |`AWS::Redshift::EventSubscription`
  |`AWS::Redshift::ScheduledAction`
  |`AWS::RedshiftServerless::Namespace`
  |`AWS::RedshiftServerless::Workgroup`
  |`AWS::RefactorSpaces::Application`
  |`AWS::RefactorSpaces::Environment`
  |`AWS::RefactorSpaces::Route`
  |`AWS::RefactorSpaces::Service`
  |`AWS::Rekognition::Collection`
  |`AWS::Rekognition::Project`
  |`AWS::Rekognition::StreamProcessor`
  |`AWS::ResilienceHub::App`
  |`AWS::ResilienceHub::ResiliencyPolicy`
  |`AWS::ResourceExplorer2::DefaultViewAssociation`
  |`AWS::ResourceExplorer2::Index`
  |`AWS::ResourceExplorer2::View`
  |`AWS::ResourceGroups::Group`
  |`AWS::RoboMaker::Fleet`
  |`AWS::RoboMaker::Robot`
  |`AWS::RoboMaker::RobotApplication`
  |`AWS::RoboMaker::RobotApplicationVersion`
  |`AWS::RoboMaker::SimulationApplication`
  |`AWS::RoboMaker::SimulationApplicationVersion`
  |`AWS::RolesAnywhere::CRL`
  |`AWS::RolesAnywhere::Profile`
  |`AWS::RolesAnywhere::TrustAnchor`
  |`AWS::Route53::CidrCollection`
  |`AWS::Route53::DNSSEC`
  |`AWS::Route53::HealthCheck`
  |`AWS::Route53::HostedZone`
  |`AWS::Route53::KeySigningKey`
  |`AWS::Route53::RecordSet`
  |`AWS::Route53::RecordSetGroup`
  |`AWS::Route53RecoveryControl::Cluster`
  |`AWS::Route53RecoveryControl::ControlPanel`
  |`AWS::Route53RecoveryControl::RoutingControl`
  |`AWS::Route53RecoveryControl::SafetyRule`
  |`AWS::Route53RecoveryReadiness::Cell`
  |`AWS::Route53RecoveryReadiness::ReadinessCheck`
  |`AWS::Route53RecoveryReadiness::RecoveryGroup`
  |`AWS::Route53RecoveryReadiness::ResourceSet`
  |`AWS::Route53Resolver::FirewallDomainList`
  |`AWS::Route53Resolver::FirewallRuleGroup`
  |`AWS::Route53Resolver::FirewallRuleGroupAssociation`
  |`AWS::Route53Resolver::OutpostResolver`
  |`AWS::Route53Resolver::ResolverConfig`
  |`AWS::Route53Resolver::ResolverDNSSECConfig`
  |`AWS::Route53Resolver::ResolverEndpoint`
  |`AWS::Route53Resolver::ResolverQueryLoggingConfig`
  |`AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation`
  |`AWS::Route53Resolver::ResolverRule`
  |`AWS::Route53Resolver::ResolverRuleAssociation`
  |`AWS::S3::AccessGrant`
  |`AWS::S3::AccessGrantsInstance`
  |`AWS::S3::AccessGrantsLocation`
  |`AWS::S3::AccessPoint`
  |`AWS::S3::Bucket`
  |`AWS::S3::BucketPolicy`
  |`AWS::S3::MultiRegionAccessPoint`
  |`AWS::S3::MultiRegionAccessPointPolicy`
  |`AWS::S3::StorageLens`
  |`AWS::S3::StorageLensGroup`
  |`AWS::S3Express::BucketPolicy`
  |`AWS::S3Express::DirectoryBucket`
  |`AWS::S3ObjectLambda::AccessPoint`
  |`AWS::S3ObjectLambda::AccessPointPolicy`
  |`AWS::S3Outposts::AccessPoint`
  |`AWS::S3Outposts::Bucket`
  |`AWS::S3Outposts::BucketPolicy`
  |`AWS::S3Outposts::Endpoint`
  |`AWS::SDB::Domain`
  |`AWS::SES::ConfigurationSet`
  |`AWS::SES::ConfigurationSetEventDestination`
  |`AWS::SES::ContactList`
  |`AWS::SES::DedicatedIpPool`
  |`AWS::SES::EmailIdentity`
  |`AWS::SES::ReceiptFilter`
  |`AWS::SES::ReceiptRule`
  |`AWS::SES::ReceiptRuleSet`
  |`AWS::SES::Template`
  |`AWS::SES::VdmAttributes`
  |`AWS::SNS::Subscription`
  |`AWS::SNS::Topic`
  |`AWS::SNS::TopicInlinePolicy`
  |`AWS::SNS::TopicPolicy`
  |`AWS::SQS::Queue`
  |`AWS::SQS::QueueInlinePolicy`
  |`AWS::SQS::QueuePolicy`
  |`AWS::SSM::Association`
  |`AWS::SSM::Document`
  |`AWS::SSM::MaintenanceWindow`
  |`AWS::SSM::MaintenanceWindowTarget`
  |`AWS::SSM::MaintenanceWindowTask`
  |`AWS::SSM::Parameter`
  |`AWS::SSM::PatchBaseline`
  |`AWS::SSM::ResourceDataSync`
  |`AWS::SSM::ResourcePolicy`
  |`AWS::SSMContacts::Contact`
  |`AWS::SSMContacts::ContactChannel`
  |`AWS::SSMContacts::Plan`
  |`AWS::SSMContacts::Rotation`
  |`AWS::SSMIncidents::ReplicationSet`
  |`AWS::SSMIncidents::ResponsePlan`
  |`AWS::SSO::Assignment`
  |`AWS::SSO::InstanceAccessControlAttributeConfiguration`
  |`AWS::SSO::PermissionSet`
  |`AWS::SageMaker::App`
  |`AWS::SageMaker::AppImageConfig`
  |`AWS::SageMaker::CodeRepository`
  |`AWS::SageMaker::DataQualityJobDefinition`
  |`AWS::SageMaker::Device`
  |`AWS::SageMaker::DeviceFleet`
  |`AWS::SageMaker::Domain`
  |`AWS::SageMaker::Endpoint`
  |`AWS::SageMaker::EndpointConfig`
  |`AWS::SageMaker::FeatureGroup`
  |`AWS::SageMaker::Image`
  |`AWS::SageMaker::ImageVersion`
  |`AWS::SageMaker::InferenceComponent`
  |`AWS::SageMaker::InferenceExperiment`
  |`AWS::SageMaker::Model`
  |`AWS::SageMaker::ModelBiasJobDefinition`
  |`AWS::SageMaker::ModelCard`
  |`AWS::SageMaker::ModelExplainabilityJobDefinition`
  |`AWS::SageMaker::ModelPackage`
  |`AWS::SageMaker::ModelPackageGroup`
  |`AWS::SageMaker::ModelQualityJobDefinition`
  |`AWS::SageMaker::MonitoringSchedule`
  |`AWS::SageMaker::NotebookInstance`
  |`AWS::SageMaker::NotebookInstanceLifecycleConfig`
  |`AWS::SageMaker::Pipeline`
  |`AWS::SageMaker::Project`
  |`AWS::SageMaker::Space`
  |`AWS::SageMaker::UserProfile`
  |`AWS::SageMaker::Workteam`
  |`AWS::Scheduler::Schedule`
  |`AWS::Scheduler::ScheduleGroup`
  |`AWS::SecretsManager::ResourcePolicy`
  |`AWS::SecretsManager::RotationSchedule`
  |`AWS::SecretsManager::Secret`
  |`AWS::SecretsManager::SecretTargetAttachment`
  |`AWS::SecurityHub::AutomationRule`
  |`AWS::SecurityHub::Hub`
  |`AWS::SecurityHub::Standard`
  |`AWS::ServiceCatalog::AcceptedPortfolioShare`
  |`AWS::ServiceCatalog::CloudFormationProduct`
  |`AWS::ServiceCatalog::CloudFormationProvisionedProduct`
  |`AWS::ServiceCatalog::LaunchNotificationConstraint`
  |`AWS::ServiceCatalog::LaunchRoleConstraint`
  |`AWS::ServiceCatalog::LaunchTemplateConstraint`
  |`AWS::ServiceCatalog::Portfolio`
  |`AWS::ServiceCatalog::PortfolioPrincipalAssociation`
  |`AWS::ServiceCatalog::PortfolioProductAssociation`
  |`AWS::ServiceCatalog::PortfolioShare`
  |`AWS::ServiceCatalog::ResourceUpdateConstraint`
  |`AWS::ServiceCatalog::ServiceAction`
  |`AWS::ServiceCatalog::ServiceActionAssociation`
  |`AWS::ServiceCatalog::StackSetConstraint`
  |`AWS::ServiceCatalog::TagOption`
  |`AWS::ServiceCatalog::TagOptionAssociation`
  |`AWS::ServiceCatalogAppRegistry::Application`
  |`AWS::ServiceCatalogAppRegistry::AttributeGroup`
  |`AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation`
  |`AWS::ServiceCatalogAppRegistry::ResourceAssociation`
  |`AWS::ServiceDiscovery::HttpNamespace`
  |`AWS::ServiceDiscovery::Instance`
  |`AWS::ServiceDiscovery::PrivateDnsNamespace`
  |`AWS::ServiceDiscovery::PublicDnsNamespace`
  |`AWS::ServiceDiscovery::Service`
  |`AWS::Shield::DRTAccess`
  |`AWS::Shield::ProactiveEngagement`
  |`AWS::Shield::Protection`
  |`AWS::Shield::ProtectionGroup`
  |`AWS::Signer::ProfilePermission`
  |`AWS::Signer::SigningProfile`
  |`AWS::SimSpaceWeaver::Simulation`
  |`AWS::StepFunctions::Activity`
  |`AWS::StepFunctions::StateMachine`
  |`AWS::StepFunctions::StateMachineAlias`
  |`AWS::StepFunctions::StateMachineVersion`
  |`AWS::SupportApp::AccountAlias`
  |`AWS::SupportApp::SlackChannelConfiguration`
  |`AWS::SupportApp::SlackWorkspaceConfiguration`
  |`AWS::Synthetics::Canary`
  |`AWS::Synthetics::Group`
  |`AWS::SystemsManagerSAP::Application`
  |`AWS::Timestream::Database`
  |`AWS::Timestream::ScheduledQuery`
  |`AWS::Timestream::Table`
  |`AWS::Transfer::Agreement`
  |`AWS::Transfer::Certificate`
  |`AWS::Transfer::Connector`
  |`AWS::Transfer::Profile`
  |`AWS::Transfer::Server`
  |`AWS::Transfer::User`
  |`AWS::Transfer::Workflow`
  |`AWS::VerifiedPermissions::IdentitySource`
  |`AWS::VerifiedPermissions::Policy`
  |`AWS::VerifiedPermissions::PolicyStore`
  |`AWS::VerifiedPermissions::PolicyTemplate`
  |`AWS::VoiceID::Domain`
  |`AWS::VpcLattice::AccessLogSubscription`
  |`AWS::VpcLattice::AuthPolicy`
  |`AWS::VpcLattice::Listener`
  |`AWS::VpcLattice::ResourcePolicy`
  |`AWS::VpcLattice::Rule`
  |`AWS::VpcLattice::Service`
  |`AWS::VpcLattice::ServiceNetwork`
  |`AWS::VpcLattice::ServiceNetworkServiceAssociation`
  |`AWS::VpcLattice::ServiceNetworkVpcAssociation`
  |`AWS::VpcLattice::TargetGroup`
  |`AWS::WAF::ByteMatchSet`
  |`AWS::WAF::IPSet`
  |`AWS::WAF::Rule`
  |`AWS::WAF::SizeConstraintSet`
  |`AWS::WAF::SqlInjectionMatchSet`
  |`AWS::WAF::WebACL`
  |`AWS::WAF::XssMatchSet`
  |`AWS::WAFRegional::ByteMatchSet`
  |`AWS::WAFRegional::GeoMatchSet`
  |`AWS::WAFRegional::IPSet`
  |`AWS::WAFRegional::RateBasedRule`
  |`AWS::WAFRegional::RegexPatternSet`
  |`AWS::WAFRegional::Rule`
  |`AWS::WAFRegional::SizeConstraintSet`
  |`AWS::WAFRegional::SqlInjectionMatchSet`
  |`AWS::WAFRegional::WebACL`
  |`AWS::WAFRegional::WebACLAssociation`
  |`AWS::WAFRegional::XssMatchSet`
  |`AWS::WAFv2::IPSet`
  |`AWS::WAFv2::LoggingConfiguration`
  |`AWS::WAFv2::RegexPatternSet`
  |`AWS::WAFv2::RuleGroup`
  |`AWS::WAFv2::WebACL`
  |`AWS::WAFv2::WebACLAssociation`
  |`AWS::Wisdom::Assistant`
  |`AWS::Wisdom::AssistantAssociation`
  |`AWS::Wisdom::KnowledgeBase`
  |`AWS::WorkSpaces::ConnectionAlias`
  |`AWS::WorkSpaces::Workspace`
  |`AWS::WorkSpacesThinClient::Environment`
  |`AWS::WorkSpacesWeb::BrowserSettings`
  |`AWS::WorkSpacesWeb::IdentityProvider`
  |`AWS::WorkSpacesWeb::IpAccessSettings`
  |`AWS::WorkSpacesWeb::NetworkSettings`
  |`AWS::WorkSpacesWeb::Portal`
  |`AWS::WorkSpacesWeb::TrustStore`
  |`AWS::WorkSpacesWeb::UserAccessLoggingSettings`
  |`AWS::WorkSpacesWeb::UserSettings`
  |`AWS::XRay::Group`
  |`AWS::XRay::ResourcePolicy`
  |`AWS::XRay::SamplingRule`
  |`Alexa::ASK::Skill`
  |CustomResource>

Transform: (String|Listing<String>)?

class `AWS::ACMPCA::Certificate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: Properties

  Type: "AWS::ACMPCA::Certificate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class Properties {
  ApiPassthrough: `AWS::ACMPCA::CertificateApiPassthrough`?

  CertificateAuthorityArn: String

  CertificateSigningRequest: String

  SigningAlgorithm: String

  TemplateArn: String?

  Validity: `AWS::SageMaker::EndpointCapacitySize`

  ValidityNotBefore: `AWS::SageMaker::EndpointCapacitySize`?
}

class `AWS::ACMPCA::CertificateApiPassthrough` {
  Extensions: `AWS::ACMPCA::CertificateExtensions`?

  Subject: `AWS::ACMPCA::CertificateSubject`?
}

class `AWS::ACMPCA::CertificateAuthorityCustomAttribute` {
  ObjectIdentifier: String

  Value: String
}

class `AWS::ACMPCA::CertificateCustomExtension` {
  Critical: Boolean?

  ObjectIdentifier: String

  Value: String
}

class `AWS::ACMPCA::CertificateAuthorityEdiPartyName` {
  NameAssigner: String

  PartyName: String
}

class `AWS::ACMPCA::CertificateExtendedKeyUsage` {
  ExtendedKeyUsageObjectIdentifier: String?

  ExtendedKeyUsageType: String?
}

class `AWS::ACMPCA::CertificateExtensions` {
  CertificatePolicies: Listing<`AWS::ACMPCA::CertificatePolicyInformation`>?

  CustomExtensions: Listing<`AWS::ACMPCA::CertificateCustomExtension`>?

  ExtendedKeyUsage: Listing<`AWS::ACMPCA::CertificateExtendedKeyUsage`>?

  KeyUsage: `AWS::ACMPCA::CertificateAuthorityKeyUsage`?

  SubjectAlternativeNames: Listing<`AWS::ACMPCA::CertificateGeneralName`>?
}

class `AWS::ACMPCA::CertificateGeneralName` {
  DirectoryName: `AWS::ACMPCA::CertificateSubject`?

  DnsName: String?

  EdiPartyName: `AWS::ACMPCA::CertificateAuthorityEdiPartyName`?

  IpAddress: String?

  OtherName: `AWS::ACMPCA::CertificateAuthorityOtherName`?

  RegisteredId: String?

  Rfc822Name: String?

  UniformResourceIdentifier: String?
}

class `AWS::ACMPCA::CertificateAuthorityKeyUsage` {
  CRLSign: Boolean?

  DataEncipherment: Boolean?

  DecipherOnly: Boolean?

  DigitalSignature: Boolean?

  EncipherOnly: Boolean?

  KeyAgreement: Boolean?

  KeyCertSign: Boolean?

  KeyEncipherment: Boolean?

  NonRepudiation: Boolean?
}

class `AWS::ACMPCA::CertificateAuthorityOtherName` {
  TypeId: String

  Value: String
}

class `AWS::ACMPCA::CertificatePolicyInformation` {
  CertPolicyId: String

  PolicyQualifiers: Listing<`AWS::ACMPCA::CertificatePolicyQualifierInfo`>?
}

class `AWS::ACMPCA::CertificatePolicyQualifierInfo` {
  PolicyQualifierId: String

  Qualifier: `AWS::ACMPCA::CertificateQualifier`
}

class `AWS::ACMPCA::CertificateQualifier` {
  CpsUri: String
}

class `AWS::ACMPCA::CertificateSubject` {
  CommonName: String?

  Country: String?

  CustomAttributes: Listing<`AWS::ACMPCA::CertificateAuthorityCustomAttribute`>?

  DistinguishedNameQualifier: String?

  GenerationQualifier: String?

  GivenName: String?

  Initials: String?

  Locality: String?

  Organization: String?

  OrganizationalUnit: String?

  Pseudonym: String?

  SerialNumber: String?

  State: String?

  Surname: String?

  Title: String?
}

class `AWS::SageMaker::EndpointCapacitySize` {
  Type: String

  Value: Number
}

class `AWS::ACMPCA::CertificateAuthority` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ACMPCA::CertificateAuthorityProperties`

  Type: "AWS::ACMPCA::CertificateAuthority"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ACMPCA::CertificateAuthorityProperties` {
  CsrExtensions: `AWS::ACMPCA::CertificateAuthorityCsrExtensions`?

  KeyAlgorithm: String

  KeyStorageSecurityStandard: String?

  RevocationConfiguration: `AWS::ACMPCA::CertificateAuthorityRevocationConfiguration`?

  SigningAlgorithm: String

  Subject: `AWS::ACMPCA::CertificateAuthoritySubject`

  Tags: Listing<Tag>?

  Type: String

  UsageMode: String?
}

class `AWS::ACMPCA::CertificateAuthorityAccessDescription` {
  AccessLocation: `AWS::ACMPCA::CertificateAuthorityGeneralName`

  AccessMethod: `AWS::ACMPCA::CertificateAuthorityAccessMethod`
}

class `AWS::ACMPCA::CertificateAuthorityAccessMethod` {
  AccessMethodType: String?

  CustomObjectIdentifier: String?
}

class `AWS::ACMPCA::CertificateAuthorityCrlConfiguration` {
  CrlDistributionPointExtensionConfiguration: `AWS::ACMPCA::CertificateAuthorityCrlDistributionPointExtensionConfiguration`?

  CustomCname: String?

  Enabled: Boolean?

  ExpirationInDays: Number?

  S3BucketName: String?

  S3ObjectAcl: String?
}

class `AWS::ACMPCA::CertificateAuthorityCrlDistributionPointExtensionConfiguration` {
  OmitExtension: Boolean
}

class `AWS::ACMPCA::CertificateAuthorityCsrExtensions` {
  KeyUsage: `AWS::ACMPCA::CertificateAuthorityKeyUsage`?

  SubjectInformationAccess: Listing<`AWS::ACMPCA::CertificateAuthorityAccessDescription`>?
}

class `AWS::ACMPCA::CertificateAuthorityGeneralName` {
  DirectoryName: `AWS::ACMPCA::CertificateAuthoritySubject`?

  DnsName: String?

  EdiPartyName: `AWS::ACMPCA::CertificateAuthorityEdiPartyName`?

  IpAddress: String?

  OtherName: `AWS::ACMPCA::CertificateAuthorityOtherName`?

  RegisteredId: String?

  Rfc822Name: String?

  UniformResourceIdentifier: String?
}

class `AWS::ACMPCA::CertificateAuthorityOcspConfiguration` {
  Enabled: Boolean?

  OcspCustomCname: String?
}

class `AWS::ACMPCA::CertificateAuthorityRevocationConfiguration` {
  CrlConfiguration: `AWS::ACMPCA::CertificateAuthorityCrlConfiguration`?

  OcspConfiguration: `AWS::ACMPCA::CertificateAuthorityOcspConfiguration`?
}

class `AWS::ACMPCA::CertificateAuthoritySubject` {
  CommonName: String?

  Country: String?

  CustomAttributes: Listing<`AWS::ACMPCA::CertificateAuthorityCustomAttribute`>?

  DistinguishedNameQualifier: String?

  GenerationQualifier: String?

  GivenName: String?

  Initials: String?

  Locality: String?

  Organization: String?

  OrganizationalUnit: String?

  Pseudonym: String?

  SerialNumber: String?

  State: String?

  Surname: String?

  Title: String?
}

class `AWS::ACMPCA::CertificateAuthorityActivation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ACMPCA::CertificateAuthorityActivationProperties`

  Type: "AWS::ACMPCA::CertificateAuthorityActivation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ACMPCA::CertificateAuthorityActivationProperties` {
  Certificate: String

  CertificateAuthorityArn: String

  CertificateChain: String?

  Status: String?
}

class `AWS::ACMPCA::Permission` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ACMPCA::PermissionProperties`

  Type: "AWS::ACMPCA::Permission"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ACMPCA::PermissionProperties` {
  Actions: Listing<String>

  CertificateAuthorityArn: String

  Principal: String

  SourceAccount: String?
}

class `AWS::APS::RuleGroupsNamespace` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::APS::RuleGroupsNamespaceProperties`

  Type: "AWS::APS::RuleGroupsNamespace"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::APS::RuleGroupsNamespaceProperties` {
  Data: String

  Name: String

  Tags: Listing<Tag>?

  Workspace: String
}

class `AWS::APS::Workspace` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::APS::WorkspaceProperties`?

  Type: "AWS::APS::Workspace"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::APS::WorkspaceProperties` {
  AlertManagerDefinition: String?

  Alias: String?

  KmsKeyArn: String?

  LoggingConfiguration: `AWS::StepFunctions::StateMachineCloudWatchLogsLogGroup`?

  Tags: Listing<Tag>?
}

class `AWS::StepFunctions::StateMachineCloudWatchLogsLogGroup` {
  LogGroupArn: String?
}

class `AWS::ARCZonalShift::ZonalAutoshiftConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ARCZonalShift::ZonalAutoshiftConfigurationProperties`?

  Type: "AWS::ARCZonalShift::ZonalAutoshiftConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ARCZonalShift::ZonalAutoshiftConfigurationProperties` {
  PracticeRunConfiguration: `AWS::ARCZonalShift::ZonalAutoshiftConfigurationPracticeRunConfiguration`?

  ResourceIdentifier: String?

  ZonalAutoshiftStatus: String?
}

class `AWS::ARCZonalShift::ZonalAutoshiftConfigurationControlCondition` {
  AlarmIdentifier: String

  Type: String
}

class `AWS::ARCZonalShift::ZonalAutoshiftConfigurationPracticeRunConfiguration` {
  BlockedDates: Listing<String>?

  BlockedWindows: Listing<String>?

  BlockingAlarms: Listing<`AWS::ARCZonalShift::ZonalAutoshiftConfigurationControlCondition`>?

  OutcomeAlarms: Listing<`AWS::ARCZonalShift::ZonalAutoshiftConfigurationControlCondition`>
}

class `AWS::AccessAnalyzer::Analyzer` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AccessAnalyzer::AnalyzerProperties`

  Type: "AWS::AccessAnalyzer::Analyzer"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AccessAnalyzer::AnalyzerProperties` {
  AnalyzerConfiguration: `AWS::AccessAnalyzer::AnalyzerAnalyzerConfiguration`?

  AnalyzerName: String?

  ArchiveRules: Listing<`AWS::AccessAnalyzer::AnalyzerArchiveRule`>?

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::AccessAnalyzer::AnalyzerAnalyzerConfiguration` {
  UnusedAccessConfiguration: `AWS::AccessAnalyzer::AnalyzerUnusedAccessConfiguration`?
}

class `AWS::AccessAnalyzer::AnalyzerArchiveRule` {
  Filter: Listing<`AWS::AccessAnalyzer::AnalyzerFilter`>

  RuleName: String
}

class `AWS::AccessAnalyzer::AnalyzerFilter` {
  Contains: Listing<String>?

  Eq: Listing<String>?

  Exists: Boolean?

  Neq: Listing<String>?

  Property: String
}

class `AWS::AccessAnalyzer::AnalyzerUnusedAccessConfiguration` {
  UnusedAccessAge: Number?
}

class `AWS::AmazonMQ::Broker` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AmazonMQ::BrokerProperties`

  Type: "AWS::AmazonMQ::Broker"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AmazonMQ::BrokerProperties` {
  AuthenticationStrategy: String?

  AutoMinorVersionUpgrade: Boolean

  BrokerName: String

  Configuration: `AWS::AmazonMQ::ConfigurationAssociationConfigurationId`?

  DataReplicationMode: String?

  DataReplicationPrimaryBrokerArn: String?

  DeploymentMode: String

  EncryptionOptions: `AWS::AmazonMQ::BrokerEncryptionOptions`?

  EngineType: String

  EngineVersion: String

  HostInstanceType: String

  LdapServerMetadata: `AWS::AmazonMQ::BrokerLdapServerMetadata`?

  Logs: `AWS::AmazonMQ::BrokerLogList`?

  MaintenanceWindowStartTime: `AWS::AmazonMQ::BrokerMaintenanceWindow`?

  PubliclyAccessible: Boolean

  SecurityGroups: Listing<String>?

  StorageType: String?

  SubnetIds: Listing<String>?

  Tags: Listing<Tag>?

  Users: Listing<`AWS::AmazonMQ::BrokerUser`>
}

class `AWS::AmazonMQ::ConfigurationAssociationConfigurationId` {
  Id: String

  Revision: Number
}

class `AWS::AmazonMQ::BrokerEncryptionOptions` {
  KmsKeyId: String?

  UseAwsOwnedKey: Boolean
}

class `AWS::AmazonMQ::BrokerLdapServerMetadata` {
  Hosts: Listing<String>

  RoleBase: String

  RoleName: String?

  RoleSearchMatching: String

  RoleSearchSubtree: Boolean?

  ServiceAccountPassword: String

  ServiceAccountUsername: String

  UserBase: String

  UserRoleName: String?

  UserSearchMatching: String

  UserSearchSubtree: Boolean?
}

class `AWS::AmazonMQ::BrokerLogList` {
  Audit: Boolean?

  General: Boolean?
}

class `AWS::AmazonMQ::BrokerMaintenanceWindow` {
  DayOfWeek: String

  TimeOfDay: String

  TimeZone: String
}

class Tag {
  Key: String

  Value: String
}

class `AWS::AmazonMQ::BrokerUser` {
  ConsoleAccess: Boolean?

  Groups: Listing<String>?

  Password: String

  Username: String
}

class `AWS::AmazonMQ::Configuration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AmazonMQ::ConfigurationProperties`

  Type: "AWS::AmazonMQ::Configuration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AmazonMQ::ConfigurationProperties` {
  AuthenticationStrategy: String?

  Data: String

  Description: String?

  EngineType: String

  EngineVersion: String

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::AmazonMQ::ConfigurationAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AmazonMQ::ConfigurationAssociationProperties`

  Type: "AWS::AmazonMQ::ConfigurationAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AmazonMQ::ConfigurationAssociationProperties` {
  Broker: String

  Configuration: `AWS::AmazonMQ::ConfigurationAssociationConfigurationId`
}

class `AWS::Amplify::App` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Amplify::AppProperties`

  Type: "AWS::Amplify::App"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Amplify::AppProperties` {
  AccessToken: String?

  AutoBranchCreationConfig: `AWS::Amplify::AppAutoBranchCreationConfig`?

  BasicAuthConfig: `AWS::Amplify::AppBasicAuthConfig`?

  BuildSpec: String?

  CustomHeaders: String?

  CustomRules: Listing<`AWS::Amplify::AppCustomRule`>?

  Description: String?

  EnableBranchAutoDeletion: Boolean?

  EnvironmentVariables: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  IAMServiceRole: String?

  Name: String

  OauthToken: String?

  Platform: String?

  Repository: String?

  Tags: Listing<Tag>?
}

class `AWS::Amplify::AppAutoBranchCreationConfig` {
  AutoBranchCreationPatterns: Listing<String>?

  BasicAuthConfig: `AWS::Amplify::AppBasicAuthConfig`?

  BuildSpec: String?

  EnableAutoBranchCreation: Boolean?

  EnableAutoBuild: Boolean?

  EnablePerformanceMode: Boolean?

  EnablePullRequestPreview: Boolean?

  EnvironmentVariables: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  Framework: String?

  PullRequestEnvironmentName: String?

  Stage: String?
}

class `AWS::Amplify::AppBasicAuthConfig` {
  EnableBasicAuth: Boolean?

  Password: String?

  Username: String?
}

class `AWS::Amplify::AppCustomRule` {
  Condition: String?

  Source: String

  Status: String?

  Target: String
}

class `AWS::WAFv2::WebACLCustomHTTPHeader` {
  Name: String

  Value: String
}

class `AWS::Amplify::Branch` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Amplify::BranchProperties`

  Type: "AWS::Amplify::Branch"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Amplify::BranchProperties` {
  AppId: String

  Backend: `AWS::Amplify::BranchBackend`?

  BasicAuthConfig: `AWS::Amplify::BranchBasicAuthConfig`?

  BranchName: String

  BuildSpec: String?

  Description: String?

  EnableAutoBuild: Boolean?

  EnablePerformanceMode: Boolean?

  EnablePullRequestPreview: Boolean?

  EnvironmentVariables: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  Framework: String?

  PullRequestEnvironmentName: String?

  Stage: String?

  Tags: Listing<Tag>?
}

class `AWS::Amplify::BranchBackend` {
  StackArn: String?
}

class `AWS::Amplify::BranchBasicAuthConfig` {
  EnableBasicAuth: Boolean?

  Password: String

  Username: String
}

class `AWS::Amplify::Domain` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Amplify::DomainProperties`

  Type: "AWS::Amplify::Domain"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Amplify::DomainProperties` {
  AppId: String

  AutoSubDomainCreationPatterns: Listing<String>?

  AutoSubDomainIAMRole: String?

  DomainName: String

  EnableAutoSubDomain: Boolean?

  SubDomainSettings: Listing<`AWS::Amplify::DomainSubDomainSetting`>
}

class `AWS::Amplify::DomainSubDomainSetting` {
  BranchName: String

  Prefix: String
}

class `AWS::AmplifyUIBuilder::Component` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AmplifyUIBuilder::ComponentProperties`

  Type: "AWS::AmplifyUIBuilder::Component"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AmplifyUIBuilder::ComponentProperties` {
  AppId: String?

  BindingProperties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::AmplifyUIBuilder::ComponentComponentBindingPropertiesValue`>

  Children: Listing<`AWS::AmplifyUIBuilder::ComponentComponentChild`>?

  CollectionProperties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::AmplifyUIBuilder::ComponentComponentDataConfiguration`>?

  ComponentType: String

  EnvironmentName: String?

  Events: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::AmplifyUIBuilder::ComponentComponentEvent`>?

  Name: String

  Overrides: Dynamic

  Properties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::AmplifyUIBuilder::ComponentComponentProperty`>

  SchemaVersion: String?

  SourceId: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Variants: Listing<`AWS::AmplifyUIBuilder::ComponentComponentVariant`>
}

class `AWS::AmplifyUIBuilder::ComponentActionParameters` {
  Anchor: `AWS::AmplifyUIBuilder::ComponentComponentProperty`?

  Fields: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::AmplifyUIBuilder::ComponentComponentProperty`>?

  Global: `AWS::AmplifyUIBuilder::ComponentComponentProperty`?

  Id: `AWS::AmplifyUIBuilder::ComponentComponentProperty`?

  Model: String?

  State: `AWS::AmplifyUIBuilder::ComponentMutationActionSetStateParameter`?

  Target: `AWS::AmplifyUIBuilder::ComponentComponentProperty`?

  Type: `AWS::AmplifyUIBuilder::ComponentComponentProperty`?

  Url: `AWS::AmplifyUIBuilder::ComponentComponentProperty`?
}

class `AWS::AmplifyUIBuilder::ComponentComponentBindingPropertiesValue` {
  BindingProperties: `AWS::AmplifyUIBuilder::ComponentComponentBindingPropertiesValueProperties`?

  DefaultValue: String?

  Type: String?
}

class `AWS::AmplifyUIBuilder::ComponentComponentBindingPropertiesValueProperties` {
  Bucket: String?

  DefaultValue: String?

  Field: String?

  Key: String?

  Model: String?

  Predicates: Listing<`AWS::AmplifyUIBuilder::ComponentPredicate`>?

  UserAttribute: String?
}

class `AWS::AmplifyUIBuilder::ComponentComponentChild` {
  Children: Listing<`AWS::AmplifyUIBuilder::ComponentComponentChild`>?

  ComponentType: String

  Events: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::AmplifyUIBuilder::ComponentComponentEvent`>?

  Name: String

  Properties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::AmplifyUIBuilder::ComponentComponentProperty`>
}

class `AWS::AmplifyUIBuilder::ComponentComponentConditionProperty` {
  Else: `AWS::AmplifyUIBuilder::ComponentComponentProperty`?

  Field: String?

  Operand: String?

  OperandType: String?

  Operator: String?

  Property: String?

  Then: `AWS::AmplifyUIBuilder::ComponentComponentProperty`?
}

class `AWS::AmplifyUIBuilder::ComponentComponentDataConfiguration` {
  Identifiers: Listing<String>?

  Model: String

  Predicate: `AWS::AmplifyUIBuilder::ComponentPredicate`?

  Sort: Listing<`AWS::AmplifyUIBuilder::ComponentSortProperty`>?
}

class `AWS::AmplifyUIBuilder::ComponentComponentEvent` {
  Action: String?

  Parameters: `AWS::AmplifyUIBuilder::ComponentActionParameters`?
}

class `AWS::AmplifyUIBuilder::ComponentComponentProperty` {
  BindingProperties: `AWS::AmplifyUIBuilder::ComponentComponentPropertyBindingProperties`?

  Bindings: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::AmplifyUIBuilder::ComponentFormBindingElement`>?

  CollectionBindingProperties: `AWS::AmplifyUIBuilder::ComponentComponentPropertyBindingProperties`?

  ComponentName: String?

  Concat: Listing<`AWS::AmplifyUIBuilder::ComponentComponentProperty`>?

  Condition: `AWS::AmplifyUIBuilder::ComponentComponentConditionProperty`?

  Configured: Boolean?

  DefaultValue: String?

  Event: String?

  ImportedValue: String?

  Model: String?

  Property: String?

  Type: String?

  UserAttribute: String?

  Value: String?
}

class `AWS::AmplifyUIBuilder::ComponentComponentPropertyBindingProperties` {
  Field: String?

  Property: String
}

class `AWS::AmplifyUIBuilder::ComponentComponentVariant` {
  Overrides: Dynamic?

  VariantValues: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::AmplifyUIBuilder::ComponentFormBindingElement` {
  Element: String

  Property: String
}

class `AWS::AmplifyUIBuilder::ComponentMutationActionSetStateParameter` {
  ComponentName: String

  Property: String

  Set: `AWS::AmplifyUIBuilder::ComponentComponentProperty`
}

class `AWS::AmplifyUIBuilder::ComponentPredicate` {
  And: Listing<`AWS::AmplifyUIBuilder::ComponentPredicate`>?

  Field: String?

  Operand: String?

  Operator: String?

  Or: Listing<`AWS::AmplifyUIBuilder::ComponentPredicate`>?
}

class `AWS::AmplifyUIBuilder::ComponentSortProperty` {
  Direction: String

  Field: String
}

class `AWS::AmplifyUIBuilder::Form` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AmplifyUIBuilder::FormProperties`

  Type: "AWS::AmplifyUIBuilder::Form"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AmplifyUIBuilder::FormProperties` {
  AppId: String?

  Cta: `AWS::AmplifyUIBuilder::FormFormCTA`?

  DataType: `AWS::AmplifyUIBuilder::FormFormDataTypeConfig`

  EnvironmentName: String?

  Fields: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::AmplifyUIBuilder::FormFieldConfig`>

  FormActionType: String

  LabelDecorator: String?

  Name: String

  SchemaVersion: String

  SectionalElements: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::AmplifyUIBuilder::FormSectionalElement`>

  Style: `AWS::AmplifyUIBuilder::FormFormStyle`

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::AmplifyUIBuilder::FormFieldConfig` {
  Excluded: Boolean?

  InputType: `AWS::AmplifyUIBuilder::FormFieldInputConfig`?

  Label: String?

  Position: `AWS::AmplifyUIBuilder::FormFieldPosition`?

  Validations: Listing<`AWS::AmplifyUIBuilder::FormFieldValidationConfiguration`>?
}

class `AWS::AmplifyUIBuilder::FormFieldInputConfig` {
  DefaultChecked: Boolean?

  DefaultCountryCode: String?

  DefaultValue: String?

  DescriptiveText: String?

  FileUploaderConfig: `AWS::AmplifyUIBuilder::FormFileUploaderFieldConfig`?

  IsArray: Boolean?

  MaxValue: Number?

  MinValue: Number?

  Name: String?

  Placeholder: String?

  ReadOnly: Boolean?

  Required: Boolean?

  Step: Number?

  Type: String

  Value: String?

  ValueMappings: `AWS::AmplifyUIBuilder::FormValueMappings`?
}

class `AWS::AmplifyUIBuilder::FormFieldPosition` {
  Below: String?

  Fixed: String?

  RightOf: String?
}

class `AWS::AmplifyUIBuilder::FormFieldValidationConfiguration` {
  NumValues: Listing<Number>?

  StrValues: Listing<String>?

  Type: String

  ValidationMessage: String?
}

class `AWS::AmplifyUIBuilder::FormFileUploaderFieldConfig` {
  AcceptedFileTypes: Listing<String>

  AccessLevel: String

  IsResumable: Boolean?

  MaxFileCount: Number?

  MaxSize: Number?

  ShowThumbnails: Boolean?
}

class `AWS::AmplifyUIBuilder::FormFormButton` {
  Children: String?

  Excluded: Boolean?

  Position: `AWS::AmplifyUIBuilder::FormFieldPosition`?
}

class `AWS::AmplifyUIBuilder::FormFormCTA` {
  Cancel: `AWS::AmplifyUIBuilder::FormFormButton`?

  Clear: `AWS::AmplifyUIBuilder::FormFormButton`?

  Position: String?

  Submit: `AWS::AmplifyUIBuilder::FormFormButton`?
}

class `AWS::AmplifyUIBuilder::FormFormDataTypeConfig` {
  DataSourceType: String

  DataTypeName: String
}

class `AWS::Config::RemediationConfigurationResourceValue` {
  Value: String?
}

class `AWS::AmplifyUIBuilder::FormFormStyle` {
  HorizontalGap: `AWS::AmplifyUIBuilder::FormFormStyleConfig`?

  OuterPadding: `AWS::AmplifyUIBuilder::FormFormStyleConfig`?

  VerticalGap: `AWS::AmplifyUIBuilder::FormFormStyleConfig`?
}

class `AWS::AmplifyUIBuilder::FormFormStyleConfig` {
  TokenReference: String?

  Value: String?
}

class `AWS::AmplifyUIBuilder::FormSectionalElement` {
  Excluded: Boolean?

  Level: Number?

  Orientation: String?

  Position: `AWS::AmplifyUIBuilder::FormFieldPosition`?

  Text: String?

  Type: String
}

class `AWS::AmplifyUIBuilder::FormValueMapping` {
  DisplayValue: `AWS::Config::RemediationConfigurationResourceValue`?

  Value: `AWS::Config::RemediationConfigurationResourceValue`
}

class `AWS::AmplifyUIBuilder::FormValueMappings` {
  Values: Listing<`AWS::AmplifyUIBuilder::FormValueMapping`>
}

class `AWS::AmplifyUIBuilder::Theme` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AmplifyUIBuilder::ThemeProperties`

  Type: "AWS::AmplifyUIBuilder::Theme"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AmplifyUIBuilder::ThemeProperties` {
  AppId: String?

  EnvironmentName: String?

  Name: String

  Overrides: Listing<`AWS::AmplifyUIBuilder::ThemeThemeValues`>?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Values: Listing<`AWS::AmplifyUIBuilder::ThemeThemeValues`>
}

class `AWS::AmplifyUIBuilder::ThemeThemeValue` {
  Children: Listing<`AWS::AmplifyUIBuilder::ThemeThemeValues`>?

  Value: String?
}

class `AWS::AmplifyUIBuilder::ThemeThemeValues` {
  Key: String?

  Value: `AWS::AmplifyUIBuilder::ThemeThemeValue`?
}

class `AWS::ApiGateway::Account` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::AccountProperties`?

  Type: "AWS::ApiGateway::Account"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::AccountProperties` {
  CloudWatchRoleArn: String?
}

class `AWS::ApiGateway::ApiKey` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::ApiKeyProperties`?

  Type: "AWS::ApiGateway::ApiKey"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::ApiKeyProperties` {
  CustomerId: String?

  Description: String?

  Enabled: Boolean?

  GenerateDistinctId: Boolean?

  Name: String?

  StageKeys: Listing<`AWS::ApiGateway::ApiKeyStageKey`>?

  Tags: Listing<Tag>?

  Value: String?
}

class `AWS::ApiGateway::ApiKeyStageKey` {
  RestApiId: String?

  StageName: String?
}

class `AWS::ApiGateway::Authorizer` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::AuthorizerProperties`

  Type: "AWS::ApiGateway::Authorizer"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::AuthorizerProperties` {
  AuthType: String?

  AuthorizerCredentials: String?

  AuthorizerResultTtlInSeconds: Number?

  AuthorizerUri: String?

  IdentitySource: String?

  IdentityValidationExpression: String?

  Name: String

  ProviderARNs: Listing<String>?

  RestApiId: String

  Type: String
}

class `AWS::ApiGateway::BasePathMapping` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::BasePathMappingProperties`

  Type: "AWS::ApiGateway::BasePathMapping"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::BasePathMappingProperties` {
  BasePath: String?

  DomainName: String

  Id: String?

  RestApiId: String?

  Stage: String?
}

class `AWS::ApiGateway::ClientCertificate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::ClientCertificateProperties`?

  Type: "AWS::ApiGateway::ClientCertificate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::ClientCertificateProperties` {
  Description: String?

  Tags: Listing<Tag>?
}

class `AWS::ApiGateway::Deployment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::DeploymentProperties`

  Type: "AWS::ApiGateway::Deployment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::DeploymentProperties` {
  DeploymentCanarySettings: `AWS::ApiGateway::DeploymentDeploymentCanarySettings`?

  Description: String?

  RestApiId: String

  StageDescription: `AWS::ApiGateway::DeploymentStageDescription`?

  StageName: String?
}

class `AWS::ApiGatewayV2::StageAccessLogSettings` {
  DestinationArn: String?

  Format: String?
}

class `AWS::ApiGateway::DeploymentDeploymentCanarySettings` {
  PercentTraffic: Number?

  StageVariableOverrides: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  UseStageCache: Boolean?
}

class `AWS::ApiGateway::StageMethodSetting` {
  CacheDataEncrypted: Boolean?

  CacheTtlInSeconds: Number?

  CachingEnabled: Boolean?

  DataTraceEnabled: Boolean?

  HttpMethod: String?

  LoggingLevel: String?

  MetricsEnabled: Boolean?

  ResourcePath: String?

  ThrottlingBurstLimit: Number?

  ThrottlingRateLimit: Number?
}

class `AWS::ApiGateway::DeploymentStageDescription` {
  AccessLogSetting: `AWS::ApiGatewayV2::StageAccessLogSettings`?

  CacheClusterEnabled: Boolean?

  CacheClusterSize: String?

  CacheDataEncrypted: Boolean?

  CacheTtlInSeconds: Number?

  CachingEnabled: Boolean?

  CanarySetting: `AWS::ApiGateway::DeploymentDeploymentCanarySettings`?

  ClientCertificateId: String?

  DataTraceEnabled: Boolean?

  Description: String?

  DocumentationVersion: String?

  LoggingLevel: String?

  MethodSettings: Listing<`AWS::ApiGateway::StageMethodSetting`>?

  MetricsEnabled: Boolean?

  Tags: Listing<Tag>?

  ThrottlingBurstLimit: Number?

  ThrottlingRateLimit: Number?

  TracingEnabled: Boolean?

  Variables: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::ApiGateway::DocumentationPart` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::DocumentationPartProperties`

  Type: "AWS::ApiGateway::DocumentationPart"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::DocumentationPartProperties` {
  Location: `AWS::ApiGateway::DocumentationPartLocation`

  Properties: String

  RestApiId: String
}

class `AWS::ApiGateway::DocumentationPartLocation` {
  Method: String?

  Name: String?

  Path: String?

  StatusCode: String?

  Type: String?
}

class `AWS::ApiGateway::DocumentationVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::DocumentationVersionProperties`

  Type: "AWS::ApiGateway::DocumentationVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::DocumentationVersionProperties` {
  Description: String?

  DocumentationVersion: String

  RestApiId: String
}

class `AWS::ApiGateway::DomainName` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::DomainNameProperties`?

  Type: "AWS::ApiGateway::DomainName"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::DomainNameProperties` {
  CertificateArn: String?

  DomainName: String?

  EndpointConfiguration: `AWS::ApiGateway::DomainNameEndpointConfiguration`?

  MutualTlsAuthentication: `AWS::ApiGatewayV2::DomainNameMutualTlsAuthentication`?

  OwnershipVerificationCertificateArn: String?

  RegionalCertificateArn: String?

  SecurityPolicy: String?

  Tags: Listing<Tag>?
}

class `AWS::ApiGateway::DomainNameEndpointConfiguration` {
  Types: Listing<String>?
}

class `AWS::ApiGatewayV2::DomainNameMutualTlsAuthentication` {
  TruststoreUri: String?

  TruststoreVersion: String?
}

class `AWS::ApiGateway::GatewayResponse` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::GatewayResponseProperties`

  Type: "AWS::ApiGateway::GatewayResponse"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::GatewayResponseProperties` {
  ResponseParameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ResponseTemplates: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ResponseType: String

  RestApiId: String

  StatusCode: String?
}

class `AWS::ApiGateway::Method` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::MethodProperties`

  Type: "AWS::ApiGateway::Method"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::MethodProperties` {
  ApiKeyRequired: Boolean?

  AuthorizationScopes: Listing<String>?

  AuthorizationType: String?

  AuthorizerId: String?

  HttpMethod: String

  Integration: `AWS::ApiGateway::MethodIntegration`?

  MethodResponses: Listing<`AWS::ApiGateway::MethodMethodResponse`>?

  OperationName: String?

  RequestModels: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  RequestParameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  RequestValidatorId: String?

  ResourceId: String

  RestApiId: String
}

class `AWS::ApiGateway::MethodIntegration` {
  CacheKeyParameters: Listing<String>?

  CacheNamespace: String?

  ConnectionId: String?

  ConnectionType: String?

  ContentHandling: String?

  Credentials: String?

  IntegrationHttpMethod: String?

  IntegrationResponses: Listing<`AWS::ApiGateway::MethodIntegrationResponse`>?

  PassthroughBehavior: String?

  RequestParameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  RequestTemplates: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  TimeoutInMillis: Number?

  Type: String

  Uri: String?
}

class `AWS::ApiGateway::MethodIntegrationResponse` {
  ContentHandling: String?

  ResponseParameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ResponseTemplates: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  SelectionPattern: String?

  StatusCode: String
}

class `AWS::ApiGateway::MethodMethodResponse` {
  ResponseModels: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ResponseParameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  StatusCode: String
}

class `AWS::ApiGateway::Model` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::ModelProperties`

  Type: "AWS::ApiGateway::Model"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::ModelProperties` {
  ContentType: String?

  Description: String?

  Name: String?

  RestApiId: String

  Schema: Dynamic?
}

class `AWS::ApiGateway::RequestValidator` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::RequestValidatorProperties`

  Type: "AWS::ApiGateway::RequestValidator"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::RequestValidatorProperties` {
  Name: String?

  RestApiId: String

  ValidateRequestBody: Boolean?

  ValidateRequestParameters: Boolean?
}

class `AWS::ApiGateway::Resource` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::ResourceProperties`

  Type: "AWS::ApiGateway::Resource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::ResourceProperties` {
  ParentId: String

  PathPart: String

  RestApiId: String
}

class `AWS::ApiGateway::RestApi` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::RestApiProperties`?

  Type: "AWS::ApiGateway::RestApi"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::RestApiProperties` {
  ApiKeySourceType: String?

  BinaryMediaTypes: Listing<String>?

  Body: Dynamic?

  BodyS3Location: `AWS::ApiGateway::RestApiS3Location`?

  CloneFrom: String?

  Description: String?

  DisableExecuteApiEndpoint: Boolean?

  EndpointConfiguration: `AWS::ApiGateway::RestApiEndpointConfiguration`?

  FailOnWarnings: Boolean?

  MinimumCompressionSize: Number?

  Mode: String?

  Name: String?

  Parameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Policy: Dynamic?

  Tags: Listing<Tag>?
}

class `AWS::ApiGateway::RestApiEndpointConfiguration` {
  Types: Listing<String>?

  VpcEndpointIds: Listing<String>?
}

class `AWS::ApiGateway::RestApiS3Location` {
  Bucket: String?

  ETag: String?

  Key: String?

  Version: String?
}

class `AWS::ApiGateway::Stage` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::StageProperties`

  Type: "AWS::ApiGateway::Stage"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::StageProperties` {
  AccessLogSetting: `AWS::ApiGatewayV2::StageAccessLogSettings`?

  CacheClusterEnabled: Boolean?

  CacheClusterSize: String?

  CanarySetting: `AWS::ApiGateway::StageCanarySetting`?

  ClientCertificateId: String?

  DeploymentId: String?

  Description: String?

  DocumentationVersion: String?

  MethodSettings: Listing<`AWS::ApiGateway::StageMethodSetting`>?

  RestApiId: String

  StageName: String?

  Tags: Listing<Tag>?

  TracingEnabled: Boolean?

  Variables: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::ApiGateway::StageCanarySetting` {
  DeploymentId: String?

  PercentTraffic: Number?

  StageVariableOverrides: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  UseStageCache: Boolean?
}

class `AWS::ApiGateway::UsagePlan` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::UsagePlanProperties`?

  Type: "AWS::ApiGateway::UsagePlan"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::UsagePlanProperties` {
  ApiStages: Listing<`AWS::ApiGateway::UsagePlanApiStage`>?

  Description: String?

  Quota: `AWS::ApiGateway::UsagePlanQuotaSettings`?

  Tags: Listing<Tag>?

  Throttle: `AWS::ApiGateway::UsagePlanThrottleSettings`?

  UsagePlanName: String?
}

class `AWS::ApiGateway::UsagePlanApiStage` {
  ApiId: String?

  Stage: String?

  Throttle: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::ApiGateway::UsagePlanThrottleSettings`>?
}

class `AWS::ApiGateway::UsagePlanQuotaSettings` {
  Limit: Number?

  Offset: Number?

  Period: String?
}

class `AWS::ApiGateway::UsagePlanThrottleSettings` {
  BurstLimit: Number?

  RateLimit: Number?
}

class `AWS::ApiGateway::UsagePlanKey` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::UsagePlanKeyProperties`

  Type: "AWS::ApiGateway::UsagePlanKey"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::UsagePlanKeyProperties` {
  KeyId: String

  KeyType: String

  UsagePlanId: String
}

class `AWS::ApiGateway::VpcLink` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGateway::VpcLinkProperties`

  Type: "AWS::ApiGateway::VpcLink"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGateway::VpcLinkProperties` {
  Description: String?

  Name: String

  Tags: Listing<Tag>?

  TargetArns: Listing<String>
}

class `AWS::ApiGatewayV2::Api` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGatewayV2::ApiProperties`?

  Type: "AWS::ApiGatewayV2::Api"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGatewayV2::ApiProperties` {
  ApiKeySelectionExpression: String?

  BasePath: String?

  Body: Dynamic?

  BodyS3Location: `AWS::ApiGatewayV2::ApiBodyS3Location`?

  CorsConfiguration: `AWS::Lambda::UrlCors`?

  CredentialsArn: String?

  Description: String?

  DisableExecuteApiEndpoint: Boolean?

  DisableSchemaValidation: Boolean?

  FailOnWarnings: Boolean?

  Name: String?

  ProtocolType: String?

  RouteKey: String?

  RouteSelectionExpression: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Target: String?

  Version: String?
}

class `AWS::ApiGatewayV2::ApiBodyS3Location` {
  Bucket: String?

  Etag: String?

  Key: String?

  Version: String?
}

class `AWS::Lambda::UrlCors` {
  AllowCredentials: Boolean?

  AllowHeaders: Listing<String>?

  AllowMethods: Listing<String>?

  AllowOrigins: Listing<String>?

  ExposeHeaders: Listing<String>?

  MaxAge: Number?
}

class `AWS::ApiGatewayV2::ApiGatewayManagedOverrides` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGatewayV2::ApiGatewayManagedOverridesProperties`

  Type: "AWS::ApiGatewayV2::ApiGatewayManagedOverrides"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGatewayV2::ApiGatewayManagedOverridesProperties` {
  ApiId: String

  Integration: `AWS::ApiGatewayV2::ApiGatewayManagedOverridesIntegrationOverrides`?

  Route: `AWS::ApiGatewayV2::ApiGatewayManagedOverridesRouteOverrides`?

  Stage: `AWS::ApiGatewayV2::ApiGatewayManagedOverridesStageOverrides`?
}

class `AWS::ApiGatewayV2::ApiGatewayManagedOverridesIntegrationOverrides` {
  Description: String?

  IntegrationMethod: String?

  PayloadFormatVersion: String?

  TimeoutInMillis: Number?
}

class `AWS::ApiGatewayV2::ApiGatewayManagedOverridesRouteOverrides` {
  AuthorizationScopes: Listing<String>?

  AuthorizationType: String?

  AuthorizerId: String?

  OperationName: String?

  Target: String?
}

class `AWS::ApiGatewayV2::StageRouteSettings` {
  DataTraceEnabled: Boolean?

  DetailedMetricsEnabled: Boolean?

  LoggingLevel: String?

  ThrottlingBurstLimit: Number?

  ThrottlingRateLimit: Number?
}

class `AWS::ApiGatewayV2::ApiGatewayManagedOverridesStageOverrides` {
  AccessLogSettings: `AWS::ApiGatewayV2::StageAccessLogSettings`?

  AutoDeploy: Boolean?

  DefaultRouteSettings: `AWS::ApiGatewayV2::StageRouteSettings`?

  Description: String?

  RouteSettings: Dynamic?

  StageVariables: Dynamic?
}

class `AWS::ApiGatewayV2::ApiMapping` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGatewayV2::ApiMappingProperties`

  Type: "AWS::ApiGatewayV2::ApiMapping"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGatewayV2::ApiMappingProperties` {
  ApiId: String

  ApiMappingKey: String?

  DomainName: String

  Stage: String
}

class `AWS::ApiGatewayV2::Authorizer` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGatewayV2::AuthorizerProperties`

  Type: "AWS::ApiGatewayV2::Authorizer"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGatewayV2::AuthorizerProperties` {
  ApiId: String

  AuthorizerCredentialsArn: String?

  AuthorizerPayloadFormatVersion: String?

  AuthorizerResultTtlInSeconds: Number?

  AuthorizerType: String

  AuthorizerUri: String?

  EnableSimpleResponses: Boolean?

  IdentitySource: Listing<String>?

  IdentityValidationExpression: String?

  JwtConfiguration: `AWS::ApiGatewayV2::AuthorizerJWTConfiguration`?

  Name: String
}

class `AWS::ApiGatewayV2::AuthorizerJWTConfiguration` {
  Audience: Listing<String>?

  Issuer: String?
}

class `AWS::ApiGatewayV2::Deployment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGatewayV2::DeploymentProperties`

  Type: "AWS::ApiGatewayV2::Deployment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGatewayV2::DeploymentProperties` {
  ApiId: String

  Description: String?

  StageName: String?
}

class `AWS::ApiGatewayV2::DomainName` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGatewayV2::DomainNameProperties`

  Type: "AWS::ApiGatewayV2::DomainName"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGatewayV2::DomainNameProperties` {
  DomainName: String

  DomainNameConfigurations: Listing<`AWS::ApiGatewayV2::DomainNameDomainNameConfiguration`>?

  MutualTlsAuthentication: `AWS::ApiGatewayV2::DomainNameMutualTlsAuthentication`?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::ApiGatewayV2::DomainNameDomainNameConfiguration` {
  CertificateArn: String?

  CertificateName: String?

  EndpointType: String?

  OwnershipVerificationCertificateArn: String?

  SecurityPolicy: String?
}

class `AWS::ApiGatewayV2::Integration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGatewayV2::IntegrationProperties`

  Type: "AWS::ApiGatewayV2::Integration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGatewayV2::IntegrationProperties` {
  ApiId: String

  ConnectionId: String?

  ConnectionType: String?

  ContentHandlingStrategy: String?

  CredentialsArn: String?

  Description: String?

  IntegrationMethod: String?

  IntegrationSubtype: String?

  IntegrationType: String

  IntegrationUri: String?

  PassthroughBehavior: String?

  PayloadFormatVersion: String?

  RequestParameters: Dynamic?

  RequestTemplates: Dynamic?

  ResponseParameters: Dynamic?

  TemplateSelectionExpression: String?

  TimeoutInMillis: Number?

  TlsConfig: `AWS::ApiGatewayV2::IntegrationTlsConfig`?
}

class `AWS::ApiGatewayV2::IntegrationResponseParameter` {
  Destination: String

  Source: String
}

class `AWS::ApiGatewayV2::IntegrationResponseParameterList` {
  ResponseParameters: Listing<`AWS::ApiGatewayV2::IntegrationResponseParameter`>?
}

class `AWS::ApiGatewayV2::IntegrationTlsConfig` {
  ServerNameToVerify: String?
}

class `AWS::ApiGatewayV2::IntegrationResponse` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGatewayV2::IntegrationResponseProperties`

  Type: "AWS::ApiGatewayV2::IntegrationResponse"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGatewayV2::IntegrationResponseProperties` {
  ApiId: String

  ContentHandlingStrategy: String?

  IntegrationId: String

  IntegrationResponseKey: String

  ResponseParameters: Dynamic?

  ResponseTemplates: Dynamic?

  TemplateSelectionExpression: String?
}

class `AWS::ApiGatewayV2::Model` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGatewayV2::ModelProperties`

  Type: "AWS::ApiGatewayV2::Model"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGatewayV2::ModelProperties` {
  ApiId: String

  ContentType: String?

  Description: String?

  Name: String

  Schema: Dynamic
}

class `AWS::ApiGatewayV2::Route` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGatewayV2::RouteProperties`

  Type: "AWS::ApiGatewayV2::Route"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGatewayV2::RouteProperties` {
  ApiId: String

  ApiKeyRequired: Boolean?

  AuthorizationScopes: Listing<String>?

  AuthorizationType: String?

  AuthorizerId: String?

  ModelSelectionExpression: String?

  OperationName: String?

  RequestModels: Dynamic?

  RequestParameters: Dynamic?

  RouteKey: String

  RouteResponseSelectionExpression: String?

  Target: String?
}

class `AWS::ApiGatewayV2::RouteResponse` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGatewayV2::RouteResponseProperties`

  Type: "AWS::ApiGatewayV2::RouteResponse"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGatewayV2::RouteResponseProperties` {
  ApiId: String

  ModelSelectionExpression: String?

  ResponseModels: Dynamic?

  ResponseParameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::ApiGatewayV2::RouteResponseParameterConstraints`>?

  RouteId: String

  RouteResponseKey: String
}

class `AWS::ApiGatewayV2::RouteResponseParameterConstraints` {
  Required: Boolean
}

class `AWS::ApiGatewayV2::Stage` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGatewayV2::StageProperties`

  Type: "AWS::ApiGatewayV2::Stage"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGatewayV2::StageProperties` {
  AccessLogSettings: `AWS::ApiGatewayV2::StageAccessLogSettings`?

  AccessPolicyId: String?

  ApiId: String

  AutoDeploy: Boolean?

  ClientCertificateId: String?

  DefaultRouteSettings: `AWS::ApiGatewayV2::StageRouteSettings`?

  DeploymentId: String?

  Description: String?

  RouteSettings: Dynamic?

  StageName: String

  StageVariables: Dynamic?

  Tags: Dynamic?
}

class `AWS::ApiGatewayV2::VpcLink` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApiGatewayV2::VpcLinkProperties`

  Type: "AWS::ApiGatewayV2::VpcLink"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApiGatewayV2::VpcLinkProperties` {
  Name: String

  SecurityGroupIds: Listing<String>?

  SubnetIds: Listing<String>

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::AppConfig::Application` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppConfig::ApplicationProperties`

  Type: "AWS::AppConfig::Application"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppConfig::ApplicationProperties` {
  Description: String?

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::AppConfig::ConfigurationProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppConfig::ConfigurationProfileProperties`

  Type: "AWS::AppConfig::ConfigurationProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppConfig::ConfigurationProfileProperties` {
  ApplicationId: String

  Description: String?

  KmsKeyIdentifier: String?

  LocationUri: String

  Name: String

  RetrievalRoleArn: String?

  Tags: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?

  Type: String?

  Validators: Listing<`AWS::AppConfig::ConfigurationProfileValidators`>?
}

class `AWS::RDS::DBProxyEndpointTagFormat` {
  Key: String?

  Value: String?
}

class `AWS::AppConfig::ConfigurationProfileValidators` {
  Content: String?

  Type: String?
}

class `AWS::AppConfig::Deployment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppConfig::DeploymentProperties`

  Type: "AWS::AppConfig::Deployment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppConfig::DeploymentProperties` {
  ApplicationId: String

  ConfigurationProfileId: String

  ConfigurationVersion: String

  DeploymentStrategyId: String

  Description: String?

  EnvironmentId: String

  KmsKeyIdentifier: String?

  Tags: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?
}

class `AWS::AppConfig::DeploymentStrategy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppConfig::DeploymentStrategyProperties`

  Type: "AWS::AppConfig::DeploymentStrategy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppConfig::DeploymentStrategyProperties` {
  DeploymentDurationInMinutes: Number

  Description: String?

  FinalBakeTimeInMinutes: Number?

  GrowthFactor: Number

  GrowthType: String?

  Name: String

  ReplicateTo: String

  Tags: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?
}

class `AWS::AppConfig::Environment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppConfig::EnvironmentProperties`

  Type: "AWS::AppConfig::Environment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppConfig::EnvironmentProperties` {
  ApplicationId: String

  Description: String?

  Monitors: Listing<`AWS::AppConfig::EnvironmentMonitors`>?

  Name: String

  Tags: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?
}

class `AWS::AppConfig::EnvironmentMonitors` {
  AlarmArn: String?

  AlarmRoleArn: String?
}

class `AWS::AppConfig::Extension` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppConfig::ExtensionProperties`

  Type: "AWS::AppConfig::Extension"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppConfig::ExtensionProperties` {
  Actions: Dynamic

  Description: String?

  LatestVersionNumber: Number?

  Name: String

  Parameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::AppConfig::ExtensionParameter`>?

  Tags: Listing<Tag>?
}

class `AWS::AppConfig::ExtensionParameter` {
  Description: String?

  Required: Boolean
}

class `AWS::AppConfig::ExtensionAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppConfig::ExtensionAssociationProperties`?

  Type: "AWS::AppConfig::ExtensionAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppConfig::ExtensionAssociationProperties` {
  ExtensionIdentifier: String?

  ExtensionVersionNumber: Number?

  Parameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ResourceIdentifier: String?

  Tags: Listing<Tag>?
}

class `AWS::AppConfig::HostedConfigurationVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppConfig::HostedConfigurationVersionProperties`

  Type: "AWS::AppConfig::HostedConfigurationVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppConfig::HostedConfigurationVersionProperties` {
  ApplicationId: String

  ConfigurationProfileId: String

  Content: String

  ContentType: String

  Description: String?

  LatestVersionNumber: Number?

  VersionLabel: String?
}

class `AWS::AppFlow::Connector` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppFlow::ConnectorProperties`

  Type: "AWS::AppFlow::Connector"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppFlow::ConnectorProperties` {
  ConnectorLabel: String?

  ConnectorProvisioningConfig: `AWS::AppFlow::ConnectorConnectorProvisioningConfig`

  ConnectorProvisioningType: String

  Description: String?
}

class `AWS::AppFlow::ConnectorConnectorProvisioningConfig` {
  Lambda: `AWS::AppFlow::ConnectorLambdaConnectorProvisioningConfig`?
}

class `AWS::AppFlow::ConnectorLambdaConnectorProvisioningConfig` {
  LambdaArn: String
}

class `AWS::AppFlow::ConnectorProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppFlow::ConnectorProfileProperties`

  Type: "AWS::AppFlow::ConnectorProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppFlow::ConnectorProfileProperties` {
  ConnectionMode: String

  ConnectorLabel: String?

  ConnectorProfileConfig: `AWS::AppFlow::ConnectorProfileConnectorProfileConfig`?

  ConnectorProfileName: String

  ConnectorType: String

  KMSArn: String?
}

class `AWS::AppFlow::ConnectorProfileAmplitudeConnectorProfileCredentials` {
  ApiKey: String

  SecretKey: String
}

class `AWS::AppFlow::ConnectorProfileApiKeyCredentials` {
  ApiKey: String

  ApiSecretKey: String?
}

class `AWS::Events::ConnectionBasicAuthParameters` {
  Password: String

  Username: String
}

class `AWS::AppFlow::ConnectorProfileConnectorOAuthRequest` {
  AuthCode: String?

  RedirectUri: String?
}

class `AWS::AppFlow::ConnectorProfileConnectorProfileConfig` {
  ConnectorProfileCredentials: `AWS::AppFlow::ConnectorProfileConnectorProfileCredentials`?

  ConnectorProfileProperties: `AWS::AppFlow::ConnectorProfileConnectorProfileProperties`?
}

class `AWS::AppFlow::ConnectorProfileConnectorProfileCredentials` {
  Amplitude: `AWS::AppFlow::ConnectorProfileAmplitudeConnectorProfileCredentials`?

  CustomConnector: `AWS::AppFlow::ConnectorProfileCustomConnectorProfileCredentials`?

  Datadog: `AWS::AppFlow::ConnectorProfileDatadogConnectorProfileCredentials`?

  Dynatrace: `AWS::AppFlow::ConnectorProfileDynatraceConnectorProfileCredentials`?

  GoogleAnalytics: `AWS::AppFlow::ConnectorProfileGoogleAnalyticsConnectorProfileCredentials`?

  InforNexus: `AWS::AppFlow::ConnectorProfileInforNexusConnectorProfileCredentials`?

  Marketo: `AWS::AppFlow::ConnectorProfileZendeskConnectorProfileCredentials`?

  Pardot: `AWS::AppFlow::ConnectorProfilePardotConnectorProfileCredentials`?

  Redshift: `AWS::AppFlow::ConnectorProfileRedshiftConnectorProfileCredentials`?

  SAPOData: `AWS::AppFlow::ConnectorProfileSAPODataConnectorProfileCredentials`?

  Salesforce: `AWS::AppFlow::ConnectorProfileSalesforceConnectorProfileCredentials`?

  ServiceNow: `AWS::AppFlow::ConnectorProfileServiceNowConnectorProfileCredentials`?

  Singular: `AWS::AppFlow::ConnectorProfileSingularConnectorProfileCredentials`?

  Slack: `AWS::AppFlow::ConnectorProfileZendeskConnectorProfileCredentials`?

  Snowflake: `AWS::Events::ConnectionBasicAuthParameters`?

  Trendmicro: `AWS::AppFlow::ConnectorProfileTrendmicroConnectorProfileCredentials`?

  Veeva: `AWS::Events::ConnectionBasicAuthParameters`?

  Zendesk: `AWS::AppFlow::ConnectorProfileZendeskConnectorProfileCredentials`?
}

class `AWS::AppFlow::ConnectorProfileConnectorProfileProperties` {
  CustomConnector: `AWS::AppFlow::ConnectorProfileCustomConnectorProfileProperties`?

  Datadog: `AWS::AppFlow::ConnectorProfileZendeskConnectorProfileProperties`?

  Dynatrace: `AWS::AppFlow::ConnectorProfileZendeskConnectorProfileProperties`?

  InforNexus: `AWS::AppFlow::ConnectorProfileZendeskConnectorProfileProperties`?

  Marketo: `AWS::AppFlow::ConnectorProfileZendeskConnectorProfileProperties`?

  Pardot: `AWS::AppFlow::ConnectorProfilePardotConnectorProfileProperties`?

  Redshift: `AWS::AppFlow::ConnectorProfileRedshiftConnectorProfileProperties`?

  SAPOData: `AWS::AppFlow::ConnectorProfileSAPODataConnectorProfileProperties`?

  Salesforce: `AWS::AppFlow::ConnectorProfileSalesforceConnectorProfileProperties`?

  ServiceNow: `AWS::AppFlow::ConnectorProfileZendeskConnectorProfileProperties`?

  Slack: `AWS::AppFlow::ConnectorProfileZendeskConnectorProfileProperties`?

  Snowflake: `AWS::AppFlow::ConnectorProfileSnowflakeConnectorProfileProperties`?

  Veeva: `AWS::AppFlow::ConnectorProfileZendeskConnectorProfileProperties`?

  Zendesk: `AWS::AppFlow::ConnectorProfileZendeskConnectorProfileProperties`?
}

class `AWS::AppFlow::ConnectorProfileCustomAuthCredentials` {
  CredentialsMap: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  CustomAuthenticationType: String
}

class `AWS::AppFlow::ConnectorProfileCustomConnectorProfileCredentials` {
  ApiKey: `AWS::AppFlow::ConnectorProfileApiKeyCredentials`?

  AuthenticationType: String

  Basic: `AWS::Events::ConnectionBasicAuthParameters`?

  Custom: `AWS::AppFlow::ConnectorProfileCustomAuthCredentials`?

  Oauth2: `AWS::AppFlow::ConnectorProfileOAuth2Credentials`?
}

class `AWS::AppFlow::ConnectorProfileCustomConnectorProfileProperties` {
  OAuth2Properties: `AWS::AppFlow::ConnectorProfileOAuth2Properties`?

  ProfileProperties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::AppFlow::ConnectorProfileDatadogConnectorProfileCredentials` {
  ApiKey: String

  ApplicationKey: String
}

class `AWS::AppFlow::ConnectorProfileZendeskConnectorProfileProperties` {
  InstanceUrl: String
}

class `AWS::AppFlow::ConnectorProfileDynatraceConnectorProfileCredentials` {
  ApiToken: String
}

class `AWS::AppFlow::ConnectorProfileGoogleAnalyticsConnectorProfileCredentials` {
  AccessToken: String?

  ClientId: String

  ClientSecret: String

  ConnectorOAuthRequest: `AWS::AppFlow::ConnectorProfileConnectorOAuthRequest`?

  RefreshToken: String?
}

class `AWS::AppFlow::ConnectorProfileInforNexusConnectorProfileCredentials` {
  AccessKeyId: String

  Datakey: String

  SecretAccessKey: String

  UserId: String
}

class `AWS::AppFlow::ConnectorProfileZendeskConnectorProfileCredentials` {
  AccessToken: String?

  ClientId: String

  ClientSecret: String

  ConnectorOAuthRequest: `AWS::AppFlow::ConnectorProfileConnectorOAuthRequest`?
}

class `AWS::AppFlow::ConnectorProfileOAuth2Credentials` {
  AccessToken: String?

  ClientId: String?

  ClientSecret: String?

  OAuthRequest: `AWS::AppFlow::ConnectorProfileConnectorOAuthRequest`?

  RefreshToken: String?
}

class `AWS::AppFlow::ConnectorProfileOAuth2Properties` {
  OAuth2GrantType: String?

  TokenUrl: String?

  TokenUrlCustomProperties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::AppFlow::ConnectorProfileOAuthCredentials` {
  AccessToken: String?

  ClientId: String?

  ClientSecret: String?

  ConnectorOAuthRequest: `AWS::AppFlow::ConnectorProfileConnectorOAuthRequest`?

  RefreshToken: String?
}

class `AWS::AppFlow::ConnectorProfileOAuthProperties` {
  AuthCodeUrl: String?

  OAuthScopes: Listing<String>?

  TokenUrl: String?
}

class `AWS::AppFlow::ConnectorProfilePardotConnectorProfileCredentials` {
  AccessToken: String?

  ClientCredentialsArn: String?

  ConnectorOAuthRequest: `AWS::AppFlow::ConnectorProfileConnectorOAuthRequest`?

  RefreshToken: String?
}

class `AWS::AppFlow::ConnectorProfilePardotConnectorProfileProperties` {
  BusinessUnitId: String

  InstanceUrl: String?

  IsSandboxEnvironment: Boolean?
}

class `AWS::AppFlow::ConnectorProfileRedshiftConnectorProfileCredentials` {
  Password: String?

  Username: String?
}

class `AWS::AppFlow::ConnectorProfileRedshiftConnectorProfileProperties` {
  BucketName: String

  BucketPrefix: String?

  ClusterIdentifier: String?

  DataApiRoleArn: String?

  DatabaseName: String?

  DatabaseUrl: String?

  IsRedshiftServerless: Boolean?

  RoleArn: String

  WorkgroupName: String?
}

class `AWS::AppFlow::ConnectorProfileSAPODataConnectorProfileCredentials` {
  BasicAuthCredentials: `AWS::Events::ConnectionBasicAuthParameters`?

  OAuthCredentials: `AWS::AppFlow::ConnectorProfileOAuthCredentials`?
}

class `AWS::AppFlow::ConnectorProfileSAPODataConnectorProfileProperties` {
  ApplicationHostUrl: String?

  ApplicationServicePath: String?

  ClientNumber: String?

  DisableSSO: Boolean?

  LogonLanguage: String?

  OAuthProperties: `AWS::AppFlow::ConnectorProfileOAuthProperties`?

  PortNumber: Number?

  PrivateLinkServiceName: String?
}

class `AWS::AppFlow::ConnectorProfileSalesforceConnectorProfileCredentials` {
  AccessToken: String?

  ClientCredentialsArn: String?

  ConnectorOAuthRequest: `AWS::AppFlow::ConnectorProfileConnectorOAuthRequest`?

  JwtToken: String?

  OAuth2GrantType: String?

  RefreshToken: String?
}

class `AWS::AppFlow::ConnectorProfileSalesforceConnectorProfileProperties` {
  InstanceUrl: String?

  isSandboxEnvironment: Boolean?

  usePrivateLinkForMetadataAndAuthorization: Boolean?
}

class `AWS::AppFlow::ConnectorProfileServiceNowConnectorProfileCredentials` {
  OAuth2Credentials: `AWS::AppFlow::ConnectorProfileOAuth2Credentials`?

  Password: String?

  Username: String?
}

class `AWS::AppFlow::ConnectorProfileSingularConnectorProfileCredentials` {
  ApiKey: String
}

class `AWS::AppFlow::ConnectorProfileSnowflakeConnectorProfileProperties` {
  AccountName: String?

  BucketName: String

  BucketPrefix: String?

  PrivateLinkServiceName: String?

  Region: String?

  Stage: String

  Warehouse: String
}

class `AWS::AppFlow::ConnectorProfileTrendmicroConnectorProfileCredentials` {
  ApiSecretKey: String
}

class `AWS::AppFlow::Flow` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppFlow::FlowProperties`

  Type: "AWS::AppFlow::Flow"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppFlow::FlowProperties` {
  Description: String?

  DestinationFlowConfigList: Listing<`AWS::AppFlow::FlowDestinationFlowConfig`>

  FlowName: String

  FlowStatus: String?

  KMSArn: String?

  MetadataCatalogConfig: `AWS::AppFlow::FlowMetadataCatalogConfig`?

  SourceFlowConfig: `AWS::AppFlow::FlowSourceFlowConfig`

  Tags: Listing<Tag>?

  Tasks: Listing<`AWS::AppFlow::FlowTask`>

  TriggerConfig: `AWS::AppFlow::FlowTriggerConfig`
}

class `AWS::AppFlow::FlowAggregationConfig` {
  AggregationType: String?

  TargetFileSize: Number?
}

class `AWS::CustomerProfiles::IntegrationZendeskSourceProperties` {
  Object: String
}

class `AWS::AppFlow::FlowConnectorOperator` {
  Amplitude: String?

  CustomConnector: String?

  Datadog: String?

  Dynatrace: String?

  GoogleAnalytics: String?

  InforNexus: String?

  Marketo: String?

  Pardot: String?

  S3: String?

  SAPOData: String?

  Salesforce: String?

  ServiceNow: String?

  Singular: String?

  Slack: String?

  Trendmicro: String?

  Veeva: String?

  Zendesk: String?
}

class `AWS::AppFlow::FlowCustomConnectorDestinationProperties` {
  CustomProperties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  EntityName: String

  ErrorHandlingConfig: `AWS::AppFlow::FlowErrorHandlingConfig`?

  IdFieldNames: Listing<String>?

  WriteOperationType: String?
}

class `AWS::AppFlow::FlowCustomConnectorSourceProperties` {
  CustomProperties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  DataTransferApi: `AWS::IoTAnalytics::DatastoreColumn`?

  EntityName: String
}

class `AWS::IoTAnalytics::DatastoreColumn` {
  Name: String

  Type: String
}

class `AWS::AppFlow::FlowDestinationConnectorProperties` {
  CustomConnector: `AWS::AppFlow::FlowCustomConnectorDestinationProperties`?

  EventBridge: `AWS::AppFlow::FlowMarketoDestinationProperties`?

  LookoutMetrics: `AWS::AppFlow::FlowLookoutMetricsDestinationProperties`?

  Marketo: `AWS::AppFlow::FlowMarketoDestinationProperties`?

  Redshift: `AWS::AppFlow::FlowSnowflakeDestinationProperties`?

  S3: `AWS::AppFlow::FlowS3DestinationProperties`?

  SAPOData: `AWS::AppFlow::FlowSAPODataDestinationProperties`?

  Salesforce: `AWS::AppFlow::FlowSalesforceDestinationProperties`?

  Snowflake: `AWS::AppFlow::FlowSnowflakeDestinationProperties`?

  Upsolver: `AWS::AppFlow::FlowUpsolverDestinationProperties`?

  Zendesk: `AWS::AppFlow::FlowZendeskDestinationProperties`?
}

class `AWS::AppFlow::FlowDestinationFlowConfig` {
  ApiVersion: String?

  ConnectorProfileName: String?

  ConnectorType: String

  DestinationConnectorProperties: `AWS::AppFlow::FlowDestinationConnectorProperties`
}

class `AWS::AppFlow::FlowErrorHandlingConfig` {
  BucketName: String?

  BucketPrefix: String?

  FailOnFirstError: Boolean?
}

class `AWS::AppFlow::FlowMarketoDestinationProperties` {
  ErrorHandlingConfig: `AWS::AppFlow::FlowErrorHandlingConfig`?

  Object: String
}

class `AWS::AppFlow::FlowGlueDataCatalog` {
  DatabaseName: String

  RoleArn: String

  TablePrefix: String
}

class `AWS::CustomerProfiles::IntegrationIncrementalPullConfig` {
  DatetimeTypeFieldName: String?
}

class `AWS::AppFlow::FlowLookoutMetricsDestinationProperties` {
  Object: String?
}

class `AWS::AppFlow::FlowMetadataCatalogConfig` {
  GlueDataCatalog: `AWS::AppFlow::FlowGlueDataCatalog`?
}

class `AWS::AppFlow::FlowPrefixConfig` {
  PathPrefixHierarchy: Listing<String>?

  PrefixFormat: String?

  PrefixType: String?
}

class `AWS::AppFlow::FlowSnowflakeDestinationProperties` {
  BucketPrefix: String?

  ErrorHandlingConfig: `AWS::AppFlow::FlowErrorHandlingConfig`?

  IntermediateBucketName: String

  Object: String
}

class `AWS::AppFlow::FlowS3DestinationProperties` {
  BucketName: String

  BucketPrefix: String?

  S3OutputFormatConfig: `AWS::AppFlow::FlowS3OutputFormatConfig`?
}

class `AWS::AppFlow::FlowS3InputFormatConfig` {
  S3InputFileType: String?
}

class `AWS::AppFlow::FlowS3OutputFormatConfig` {
  AggregationConfig: `AWS::AppFlow::FlowAggregationConfig`?

  FileType: String?

  PrefixConfig: `AWS::AppFlow::FlowPrefixConfig`?

  PreserveSourceDataTyping: Boolean?
}

class `AWS::AppFlow::FlowS3SourceProperties` {
  BucketName: String

  BucketPrefix: String

  S3InputFormatConfig: `AWS::AppFlow::FlowS3InputFormatConfig`?
}

class `AWS::AppFlow::FlowSAPODataDestinationProperties` {
  ErrorHandlingConfig: `AWS::AppFlow::FlowErrorHandlingConfig`?

  IdFieldNames: Listing<String>?

  ObjectPath: String

  SuccessResponseHandlingConfig: `AWS::AppFlow::FlowSuccessResponseHandlingConfig`?

  WriteOperationType: String?
}

class `AWS::AppFlow::FlowSAPODataPaginationConfig` {
  maxPageSize: Number
}

class `AWS::AppFlow::FlowSAPODataParallelismConfig` {
  maxParallelism: Number
}

class `AWS::AppFlow::FlowSAPODataSourceProperties` {
  ObjectPath: String

  paginationConfig: `AWS::AppFlow::FlowSAPODataPaginationConfig`?

  parallelismConfig: `AWS::AppFlow::FlowSAPODataParallelismConfig`?
}

class `AWS::AppFlow::FlowSalesforceDestinationProperties` {
  DataTransferApi: String?

  ErrorHandlingConfig: `AWS::AppFlow::FlowErrorHandlingConfig`?

  IdFieldNames: Listing<String>?

  Object: String

  WriteOperationType: String?
}

class `AWS::AppFlow::FlowSalesforceSourceProperties` {
  DataTransferApi: String?

  EnableDynamicFieldUpdate: Boolean?

  IncludeDeletedRecords: Boolean?

  Object: String
}

class `AWS::AppFlow::FlowScheduledTriggerProperties` {
  DataPullMode: String?

  FirstExecutionFrom: Number?

  FlowErrorDeactivationThreshold: Number?

  ScheduleEndTime: Number?

  ScheduleExpression: String

  ScheduleOffset: Number?

  ScheduleStartTime: Number?

  TimeZone: String?
}

class `AWS::AppFlow::FlowSourceConnectorProperties` {
  Amplitude: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?

  CustomConnector: `AWS::AppFlow::FlowCustomConnectorSourceProperties`?

  Datadog: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?

  Dynatrace: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?

  GoogleAnalytics: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?

  InforNexus: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?

  Marketo: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?

  Pardot: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?

  S3: `AWS::AppFlow::FlowS3SourceProperties`?

  SAPOData: `AWS::AppFlow::FlowSAPODataSourceProperties`?

  Salesforce: `AWS::AppFlow::FlowSalesforceSourceProperties`?

  ServiceNow: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?

  Singular: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?

  Slack: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?

  Trendmicro: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?

  Veeva: `AWS::AppFlow::FlowVeevaSourceProperties`?

  Zendesk: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?
}

class `AWS::AppFlow::FlowSourceFlowConfig` {
  ApiVersion: String?

  ConnectorProfileName: String?

  ConnectorType: String

  IncrementalPullConfig: `AWS::CustomerProfiles::IntegrationIncrementalPullConfig`?

  SourceConnectorProperties: `AWS::AppFlow::FlowSourceConnectorProperties`
}

class `AWS::AppFlow::FlowSuccessResponseHandlingConfig` {
  BucketName: String?

  BucketPrefix: String?
}

class `AWS::AppFlow::FlowTask` {
  ConnectorOperator: `AWS::AppFlow::FlowConnectorOperator`?

  DestinationField: String?

  SourceFields: Listing<String>

  TaskProperties: Listing<Tag>?

  TaskType: String
}

class `AWS::AppFlow::FlowTriggerConfig` {
  TriggerProperties: `AWS::AppFlow::FlowScheduledTriggerProperties`?

  TriggerType: String
}

class `AWS::AppFlow::FlowUpsolverDestinationProperties` {
  BucketName: String

  BucketPrefix: String?

  S3OutputFormatConfig: `AWS::AppFlow::FlowUpsolverS3OutputFormatConfig`
}

class `AWS::AppFlow::FlowUpsolverS3OutputFormatConfig` {
  AggregationConfig: `AWS::AppFlow::FlowAggregationConfig`?

  FileType: String?

  PrefixConfig: `AWS::AppFlow::FlowPrefixConfig`
}

class `AWS::AppFlow::FlowVeevaSourceProperties` {
  DocumentType: String?

  IncludeAllVersions: Boolean?

  IncludeRenditions: Boolean?

  IncludeSourceFiles: Boolean?

  Object: String
}

class `AWS::AppFlow::FlowZendeskDestinationProperties` {
  ErrorHandlingConfig: `AWS::AppFlow::FlowErrorHandlingConfig`?

  IdFieldNames: Listing<String>?

  Object: String

  WriteOperationType: String?
}

class `AWS::AppIntegrations::DataIntegration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppIntegrations::DataIntegrationProperties`

  Type: "AWS::AppIntegrations::DataIntegration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppIntegrations::DataIntegrationProperties` {
  Description: String?

  FileConfiguration: `AWS::AppIntegrations::DataIntegrationFileConfiguration`?

  KmsKey: String

  Name: String

  ObjectConfiguration: Dynamic?

  ScheduleConfig: `AWS::AppIntegrations::DataIntegrationScheduleConfig`?

  SourceURI: String

  Tags: Listing<Tag>?
}

class `AWS::AppIntegrations::DataIntegrationFileConfiguration` {
  Filters: Dynamic?

  Folders: Listing<String>
}

class `AWS::AppIntegrations::DataIntegrationScheduleConfig` {
  FirstExecutionFrom: String?

  Object: String?

  ScheduleExpression: String
}

class `AWS::AppIntegrations::EventIntegration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppIntegrations::EventIntegrationProperties`

  Type: "AWS::AppIntegrations::EventIntegration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppIntegrations::EventIntegrationProperties` {
  Description: String?

  EventBridgeBus: String

  EventFilter: `AWS::AppIntegrations::EventIntegrationEventFilter`

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::AppIntegrations::EventIntegrationEventFilter` {
  Source: String
}

class `AWS::AppMesh::GatewayRoute` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppMesh::GatewayRouteProperties`

  Type: "AWS::AppMesh::GatewayRoute"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppMesh::GatewayRouteProperties` {
  GatewayRouteName: String?

  MeshName: String

  MeshOwner: String?

  Spec: `AWS::AppMesh::GatewayRouteGatewayRouteSpec`

  Tags: Listing<Tag>?

  VirtualGatewayName: String
}

class `AWS::AppMesh::GatewayRouteGatewayRouteHostnameMatch` {
  Exact: String?

  Suffix: String?
}

class `AWS::AppMesh::GatewayRouteGatewayRouteHostnameRewrite` {
  DefaultTargetHostname: String?
}

class `AWS::AppMesh::GatewayRouteHttpGatewayRouteHeaderMatch` {
  Exact: String?

  Prefix: String?

  Range: `AWS::AppMesh::RouteMatchRange`?

  Regex: String?

  Suffix: String?
}

class `AWS::AppMesh::RouteMatchRange` {
  End: Number

  Start: Number
}

class `AWS::AppMesh::GatewayRouteGatewayRouteSpec` {
  GrpcRoute: `AWS::AppMesh::GatewayRouteGrpcGatewayRoute`?

  Http2Route: `AWS::AppMesh::GatewayRouteHttpGatewayRoute`?

  HttpRoute: `AWS::AppMesh::GatewayRouteHttpGatewayRoute`?

  Priority: Number?
}

class `AWS::AppMesh::GatewayRouteGatewayRouteTarget` {
  Port: Number?

  VirtualService: `AWS::AppMesh::GatewayRouteGatewayRouteVirtualService`
}

class `AWS::AppMesh::GatewayRouteGatewayRouteVirtualService` {
  VirtualServiceName: String
}

class `AWS::AppMesh::GatewayRouteGrpcGatewayRoute` {
  Action: `AWS::AppMesh::GatewayRouteGrpcGatewayRouteAction`

  Match: `AWS::AppMesh::GatewayRouteGrpcGatewayRouteMatch`
}

class `AWS::AppMesh::GatewayRouteGrpcGatewayRouteAction` {
  Rewrite: `AWS::AppMesh::GatewayRouteGrpcGatewayRouteRewrite`?

  Target: `AWS::AppMesh::GatewayRouteGatewayRouteTarget`
}

class `AWS::AppMesh::GatewayRouteGrpcGatewayRouteMatch` {
  Hostname: `AWS::AppMesh::GatewayRouteGatewayRouteHostnameMatch`?

  Metadata: Listing<`AWS::AppMesh::GatewayRouteGrpcGatewayRouteMetadata`>?

  Port: Number?

  ServiceName: String?
}

class `AWS::AppMesh::GatewayRouteGrpcGatewayRouteMetadata` {
  Invert: Boolean?

  Match: `AWS::AppMesh::GatewayRouteHttpGatewayRouteHeaderMatch`?

  Name: String
}

class `AWS::AppMesh::GatewayRouteGrpcGatewayRouteRewrite` {
  Hostname: `AWS::AppMesh::GatewayRouteGatewayRouteHostnameRewrite`?
}

class `AWS::AppMesh::GatewayRouteHttpGatewayRoute` {
  Action: `AWS::AppMesh::GatewayRouteHttpGatewayRouteAction`

  Match: `AWS::AppMesh::GatewayRouteHttpGatewayRouteMatch`
}

class `AWS::AppMesh::GatewayRouteHttpGatewayRouteAction` {
  Rewrite: `AWS::AppMesh::GatewayRouteHttpGatewayRouteRewrite`?

  Target: `AWS::AppMesh::GatewayRouteGatewayRouteTarget`
}

class `AWS::AppMesh::GatewayRouteHttpGatewayRouteHeader` {
  Invert: Boolean?

  Match: `AWS::AppMesh::GatewayRouteHttpGatewayRouteHeaderMatch`?

  Name: String
}

class `AWS::AppMesh::GatewayRouteHttpGatewayRouteMatch` {
  Headers: Listing<`AWS::AppMesh::GatewayRouteHttpGatewayRouteHeader`>?

  Hostname: `AWS::AppMesh::GatewayRouteGatewayRouteHostnameMatch`?

  Method: String?

  Path: `AWS::AppMesh::RouteHttpPathMatch`?

  Port: Number?

  Prefix: String?

  QueryParameters: Listing<`AWS::AppMesh::GatewayRouteQueryParameter`>?
}

class `AWS::AppMesh::RouteHttpQueryParameterMatch` {
  Exact: String?
}

class `AWS::AppMesh::GatewayRouteHttpGatewayRoutePrefixRewrite` {
  DefaultPrefix: String?

  Value: String?
}

class `AWS::AppMesh::GatewayRouteHttpGatewayRouteRewrite` {
  Hostname: `AWS::AppMesh::GatewayRouteGatewayRouteHostnameRewrite`?

  Path: `AWS::AppMesh::RouteHttpQueryParameterMatch`?

  Prefix: `AWS::AppMesh::GatewayRouteHttpGatewayRoutePrefixRewrite`?
}

class `AWS::AppMesh::RouteHttpPathMatch` {
  Exact: String?

  Regex: String?
}

class `AWS::AppMesh::GatewayRouteQueryParameter` {
  Match: `AWS::AppMesh::RouteHttpQueryParameterMatch`?

  Name: String
}

class `AWS::AppMesh::Mesh` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppMesh::MeshProperties`?

  Type: "AWS::AppMesh::Mesh"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppMesh::MeshProperties` {
  MeshName: String?

  Spec: `AWS::AppMesh::MeshMeshSpec`?

  Tags: Listing<Tag>?
}

class `AWS::WAFRegional::WebACLAction` {
  Type: String
}

class `AWS::AppMesh::MeshMeshServiceDiscovery` {
  IpPreference: String?
}

class `AWS::AppMesh::MeshMeshSpec` {
  EgressFilter: `AWS::WAFRegional::WebACLAction`?

  ServiceDiscovery: `AWS::AppMesh::MeshMeshServiceDiscovery`?
}

class `AWS::AppMesh::Route` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppMesh::RouteProperties`

  Type: "AWS::AppMesh::Route"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppMesh::RouteProperties` {
  MeshName: String

  MeshOwner: String?

  RouteName: String?

  Spec: `AWS::AppMesh::RouteRouteSpec`

  Tags: Listing<Tag>?

  VirtualRouterName: String
}

class `AWS::SecurityHub::AutomationRuleDateRange` {
  Unit: String

  Value: Number
}

class `AWS::AppMesh::RouteGrpcRetryPolicy` {
  GrpcRetryEvents: Listing<String>?

  HttpRetryEvents: Listing<String>?

  MaxRetries: Number

  PerRetryTimeout: `AWS::SecurityHub::AutomationRuleDateRange`

  TcpRetryEvents: Listing<String>?
}

class `AWS::AppMesh::RouteGrpcRoute` {
  Action: `AWS::AppMesh::RouteTcpRouteAction`

  Match: `AWS::AppMesh::RouteGrpcRouteMatch`

  RetryPolicy: `AWS::AppMesh::RouteGrpcRetryPolicy`?

  Timeout: `AWS::AppMesh::RouteHttpTimeout`?
}

class `AWS::AppMesh::RouteTcpRouteAction` {
  WeightedTargets: Listing<`AWS::AppMesh::RouteWeightedTarget`>
}

class `AWS::AppMesh::RouteGrpcRouteMatch` {
  Metadata: Listing<`AWS::AppMesh::RouteGrpcRouteMetadata`>?

  MethodName: String?

  Port: Number?

  ServiceName: String?
}

class `AWS::AppMesh::RouteGrpcRouteMetadata` {
  Invert: Boolean?

  Match: `AWS::AppMesh::RouteHeaderMatchMethod`?

  Name: String
}

class `AWS::AppMesh::RouteHeaderMatchMethod` {
  Exact: String?

  Prefix: String?

  Range: `AWS::AppMesh::RouteMatchRange`?

  Regex: String?

  Suffix: String?
}

class `AWS::AppMesh::RouteHttpTimeout` {
  Idle: `AWS::SecurityHub::AutomationRuleDateRange`?

  PerRequest: `AWS::SecurityHub::AutomationRuleDateRange`?
}

class `AWS::AppMesh::RouteHttpRetryPolicy` {
  HttpRetryEvents: Listing<String>?

  MaxRetries: Number

  PerRetryTimeout: `AWS::SecurityHub::AutomationRuleDateRange`

  TcpRetryEvents: Listing<String>?
}

class `AWS::AppMesh::RouteHttpRoute` {
  Action: `AWS::AppMesh::RouteTcpRouteAction`

  Match: `AWS::AppMesh::RouteHttpRouteMatch`

  RetryPolicy: `AWS::AppMesh::RouteHttpRetryPolicy`?

  Timeout: `AWS::AppMesh::RouteHttpTimeout`?
}

class `AWS::AppMesh::RouteHttpRouteHeader` {
  Invert: Boolean?

  Match: `AWS::AppMesh::RouteHeaderMatchMethod`?

  Name: String
}

class `AWS::AppMesh::RouteHttpRouteMatch` {
  Headers: Listing<`AWS::AppMesh::RouteHttpRouteHeader`>?

  Method: String?

  Path: `AWS::AppMesh::RouteHttpPathMatch`?

  Port: Number?

  Prefix: String?

  QueryParameters: Listing<`AWS::AppMesh::RouteQueryParameter`>?

  Scheme: String?
}

class `AWS::AppMesh::RouteQueryParameter` {
  Match: `AWS::AppMesh::RouteHttpQueryParameterMatch`?

  Name: String
}

class `AWS::AppMesh::RouteRouteSpec` {
  GrpcRoute: `AWS::AppMesh::RouteGrpcRoute`?

  Http2Route: `AWS::AppMesh::RouteHttpRoute`?

  HttpRoute: `AWS::AppMesh::RouteHttpRoute`?

  Priority: Number?

  TcpRoute: `AWS::AppMesh::RouteTcpRoute`?
}

class `AWS::AppMesh::RouteTcpRoute` {
  Action: `AWS::AppMesh::RouteTcpRouteAction`

  Match: `AWS::AppMesh::RouteTcpRouteMatch`?

  Timeout: `AWS::AppMesh::RouteTcpTimeout`?
}

class `AWS::AppMesh::RouteTcpRouteMatch` {
  Port: Number?
}

class `AWS::AppMesh::RouteTcpTimeout` {
  Idle: `AWS::SecurityHub::AutomationRuleDateRange`?
}

class `AWS::AppMesh::RouteWeightedTarget` {
  Port: Number?

  VirtualNode: String

  Weight: Number
}

class `AWS::AppMesh::VirtualGateway` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppMesh::VirtualGatewayProperties`

  Type: "AWS::AppMesh::VirtualGateway"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppMesh::VirtualGatewayProperties` {
  MeshName: String

  MeshOwner: String?

  Spec: `AWS::AppMesh::VirtualGatewayVirtualGatewaySpec`

  Tags: Listing<Tag>?

  VirtualGatewayName: String?
}

class `AWS::AppMesh::VirtualGatewayLoggingFormat` {
  Json: Listing<Tag>?

  Text: String?
}

class `AWS::AppMesh::VirtualNodeSubjectAlternativeNameMatchers` {
  Exact: Listing<String>?
}

class `AWS::AppMesh::VirtualGatewaySubjectAlternativeNames` {
  Match: `AWS::AppMesh::VirtualNodeSubjectAlternativeNameMatchers`
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayAccessLog` {
  File: `AWS::AppMesh::VirtualGatewayVirtualGatewayFileAccessLog`?
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayBackendDefaults` {
  ClientPolicy: `AWS::AppMesh::VirtualGatewayVirtualGatewayClientPolicy`?
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayClientPolicy` {
  TLS: `AWS::AppMesh::VirtualGatewayVirtualGatewayClientPolicyTls`?
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayClientPolicyTls` {
  Certificate: `AWS::AppMesh::VirtualGatewayVirtualGatewayClientTlsCertificate`?

  Enforce: Boolean?

  Ports: Listing<Number>?

  Validation: `AWS::AppMesh::VirtualGatewayVirtualGatewayTlsValidationContext`
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayClientTlsCertificate` {
  File: `AWS::AppMesh::VirtualNodeListenerTlsFileCertificate`?

  SDS: `AWS::AppMesh::VirtualNodeTlsValidationContextSdsTrust`?
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayConnectionPool` {
  GRPC: `AWS::AppMesh::VirtualNodeVirtualNodeHttp2ConnectionPool`?

  HTTP: `AWS::AppMesh::VirtualNodeVirtualNodeHttpConnectionPool`?

  HTTP2: `AWS::AppMesh::VirtualNodeVirtualNodeHttp2ConnectionPool`?
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayFileAccessLog` {
  Format: `AWS::AppMesh::VirtualGatewayLoggingFormat`?

  Path: String
}

class `AWS::AppMesh::VirtualNodeVirtualNodeHttp2ConnectionPool` {
  MaxRequests: Number
}

class `AWS::AppMesh::VirtualNodeHealthCheck` {
  HealthyThreshold: Number

  IntervalMillis: Number

  Path: String?

  Port: Number?

  Protocol: String

  TimeoutMillis: Number

  UnhealthyThreshold: Number
}

class `AWS::AppMesh::VirtualNodeVirtualNodeHttpConnectionPool` {
  MaxConnections: Number

  MaxPendingRequests: Number?
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayListener` {
  ConnectionPool: `AWS::AppMesh::VirtualGatewayVirtualGatewayConnectionPool`?

  HealthCheck: `AWS::AppMesh::VirtualNodeHealthCheck`?

  PortMapping: `AWS::AppMesh::VirtualRouterPortMapping`

  TLS: `AWS::AppMesh::VirtualGatewayVirtualGatewayListenerTls`?
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayListenerTls` {
  Certificate: `AWS::AppMesh::VirtualGatewayVirtualGatewayListenerTlsCertificate`

  Mode: String

  Validation: `AWS::AppMesh::VirtualGatewayVirtualGatewayListenerTlsValidationContext`?
}

class `AWS::AppMesh::VirtualNodeListenerTlsAcmCertificate` {
  CertificateArn: String
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayListenerTlsCertificate` {
  ACM: `AWS::AppMesh::VirtualNodeListenerTlsAcmCertificate`?

  File: `AWS::AppMesh::VirtualNodeListenerTlsFileCertificate`?

  SDS: `AWS::AppMesh::VirtualNodeTlsValidationContextSdsTrust`?
}

class `AWS::AppMesh::VirtualNodeListenerTlsFileCertificate` {
  CertificateChain: String

  PrivateKey: String
}

class `AWS::AppMesh::VirtualNodeTlsValidationContextSdsTrust` {
  SecretName: String
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayListenerTlsValidationContext` {
  SubjectAlternativeNames: `AWS::AppMesh::VirtualGatewaySubjectAlternativeNames`?

  Trust: `AWS::AppMesh::VirtualGatewayVirtualGatewayListenerTlsValidationContextTrust`
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayListenerTlsValidationContextTrust` {
  File: `AWS::AppMesh::VirtualNodeTlsValidationContextFileTrust`?

  SDS: `AWS::AppMesh::VirtualNodeTlsValidationContextSdsTrust`?
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayLogging` {
  AccessLog: `AWS::AppMesh::VirtualGatewayVirtualGatewayAccessLog`?
}

class `AWS::AppMesh::VirtualRouterPortMapping` {
  Port: Number

  Protocol: String
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewaySpec` {
  BackendDefaults: `AWS::AppMesh::VirtualGatewayVirtualGatewayBackendDefaults`?

  Listeners: Listing<`AWS::AppMesh::VirtualGatewayVirtualGatewayListener`>

  Logging: `AWS::AppMesh::VirtualGatewayVirtualGatewayLogging`?
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayTlsValidationContext` {
  SubjectAlternativeNames: `AWS::AppMesh::VirtualGatewaySubjectAlternativeNames`?

  Trust: `AWS::AppMesh::VirtualGatewayVirtualGatewayTlsValidationContextTrust`
}

class `AWS::AppMesh::VirtualNodeTlsValidationContextAcmTrust` {
  CertificateAuthorityArns: Listing<String>
}

class `AWS::AppMesh::VirtualNodeTlsValidationContextFileTrust` {
  CertificateChain: String
}

class `AWS::AppMesh::VirtualGatewayVirtualGatewayTlsValidationContextTrust` {
  ACM: `AWS::AppMesh::VirtualNodeTlsValidationContextAcmTrust`?

  File: `AWS::AppMesh::VirtualNodeTlsValidationContextFileTrust`?

  SDS: `AWS::AppMesh::VirtualNodeTlsValidationContextSdsTrust`?
}

class `AWS::AppMesh::VirtualNode` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppMesh::VirtualNodeProperties`

  Type: "AWS::AppMesh::VirtualNode"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppMesh::VirtualNodeProperties` {
  MeshName: String

  MeshOwner: String?

  Spec: `AWS::AppMesh::VirtualNodeVirtualNodeSpec`

  Tags: Listing<Tag>?

  VirtualNodeName: String?
}

class `AWS::AppMesh::VirtualNodeAccessLog` {
  File: `AWS::AppMesh::VirtualNodeFileAccessLog`?
}

class `AWS::AppMesh::VirtualNodeAwsCloudMapServiceDiscovery` {
  Attributes: Listing<Tag>?

  IpPreference: String?

  NamespaceName: String

  ServiceName: String
}

class `AWS::AppMesh::VirtualNodeBackend` {
  VirtualService: `AWS::AppMesh::VirtualNodeVirtualServiceBackend`?
}

class `AWS::AppMesh::VirtualNodeBackendDefaults` {
  ClientPolicy: `AWS::AppMesh::VirtualNodeClientPolicy`?
}

class `AWS::AppMesh::VirtualNodeClientPolicy` {
  TLS: `AWS::AppMesh::VirtualNodeClientPolicyTls`?
}

class `AWS::AppMesh::VirtualNodeClientPolicyTls` {
  Certificate: `AWS::AppMesh::VirtualNodeClientTlsCertificate`?

  Enforce: Boolean?

  Ports: Listing<Number>?

  Validation: `AWS::AppMesh::VirtualNodeTlsValidationContext`
}

class `AWS::AppMesh::VirtualNodeClientTlsCertificate` {
  File: `AWS::AppMesh::VirtualNodeListenerTlsFileCertificate`?

  SDS: `AWS::AppMesh::VirtualNodeTlsValidationContextSdsTrust`?
}

class `AWS::AppMesh::VirtualNodeDnsServiceDiscovery` {
  Hostname: String

  IpPreference: String?

  ResponseType: String?
}

class `AWS::AppMesh::VirtualNodeFileAccessLog` {
  Format: `AWS::AppMesh::VirtualNodeLoggingFormat`?

  Path: String
}

class `AWS::AppMesh::VirtualNodeHttpTimeout` {
  Idle: `AWS::SecurityHub::AutomationRuleDateRange`?

  PerRequest: `AWS::SecurityHub::AutomationRuleDateRange`?
}

class `AWS::AppMesh::VirtualNodeListener` {
  ConnectionPool: `AWS::AppMesh::VirtualNodeVirtualNodeConnectionPool`?

  HealthCheck: `AWS::AppMesh::VirtualNodeHealthCheck`?

  OutlierDetection: `AWS::AppMesh::VirtualNodeOutlierDetection`?

  PortMapping: `AWS::AppMesh::VirtualRouterPortMapping`

  TLS: `AWS::AppMesh::VirtualNodeListenerTls`?

  Timeout: `AWS::AppMesh::VirtualNodeListenerTimeout`?
}

class `AWS::AppMesh::VirtualNodeListenerTimeout` {
  GRPC: `AWS::AppMesh::VirtualNodeHttpTimeout`?

  HTTP: `AWS::AppMesh::VirtualNodeHttpTimeout`?

  HTTP2: `AWS::AppMesh::VirtualNodeHttpTimeout`?

  TCP: `AWS::AppMesh::VirtualNodeTcpTimeout`?
}

class `AWS::AppMesh::VirtualNodeListenerTls` {
  Certificate: `AWS::AppMesh::VirtualNodeListenerTlsCertificate`

  Mode: String

  Validation: `AWS::AppMesh::VirtualNodeListenerTlsValidationContext`?
}

class `AWS::AppMesh::VirtualNodeListenerTlsCertificate` {
  ACM: `AWS::AppMesh::VirtualNodeListenerTlsAcmCertificate`?

  File: `AWS::AppMesh::VirtualNodeListenerTlsFileCertificate`?

  SDS: `AWS::AppMesh::VirtualNodeTlsValidationContextSdsTrust`?
}

class `AWS::AppMesh::VirtualNodeListenerTlsValidationContext` {
  SubjectAlternativeNames: `AWS::AppMesh::VirtualNodeSubjectAlternativeNames`?

  Trust: `AWS::AppMesh::VirtualNodeListenerTlsValidationContextTrust`
}

class `AWS::AppMesh::VirtualNodeListenerTlsValidationContextTrust` {
  File: `AWS::AppMesh::VirtualNodeTlsValidationContextFileTrust`?

  SDS: `AWS::AppMesh::VirtualNodeTlsValidationContextSdsTrust`?
}

class `AWS::AppMesh::VirtualNodeLogging` {
  AccessLog: `AWS::AppMesh::VirtualNodeAccessLog`?
}

class `AWS::AppMesh::VirtualNodeLoggingFormat` {
  Json: Listing<Tag>?

  Text: String?
}

class `AWS::AppMesh::VirtualNodeOutlierDetection` {
  BaseEjectionDuration: `AWS::SecurityHub::AutomationRuleDateRange`

  Interval: `AWS::SecurityHub::AutomationRuleDateRange`

  MaxEjectionPercent: Number

  MaxServerErrors: Number
}

class `AWS::AppMesh::VirtualNodeServiceDiscovery` {
  AWSCloudMap: `AWS::AppMesh::VirtualNodeAwsCloudMapServiceDiscovery`?

  DNS: `AWS::AppMesh::VirtualNodeDnsServiceDiscovery`?
}

class `AWS::AppMesh::VirtualNodeSubjectAlternativeNames` {
  Match: `AWS::AppMesh::VirtualNodeSubjectAlternativeNameMatchers`
}

class `AWS::AppMesh::VirtualNodeTcpTimeout` {
  Idle: `AWS::SecurityHub::AutomationRuleDateRange`?
}

class `AWS::AppMesh::VirtualNodeTlsValidationContext` {
  SubjectAlternativeNames: `AWS::AppMesh::VirtualNodeSubjectAlternativeNames`?

  Trust: `AWS::AppMesh::VirtualNodeTlsValidationContextTrust`
}

class `AWS::AppMesh::VirtualNodeTlsValidationContextTrust` {
  ACM: `AWS::AppMesh::VirtualNodeTlsValidationContextAcmTrust`?

  File: `AWS::AppMesh::VirtualNodeTlsValidationContextFileTrust`?

  SDS: `AWS::AppMesh::VirtualNodeTlsValidationContextSdsTrust`?
}

class `AWS::AppMesh::VirtualNodeVirtualNodeConnectionPool` {
  GRPC: `AWS::AppMesh::VirtualNodeVirtualNodeHttp2ConnectionPool`?

  HTTP: `AWS::AppMesh::VirtualNodeVirtualNodeHttpConnectionPool`?

  HTTP2: `AWS::AppMesh::VirtualNodeVirtualNodeHttp2ConnectionPool`?

  TCP: `AWS::AppMesh::VirtualNodeVirtualNodeTcpConnectionPool`?
}

class `AWS::AppMesh::VirtualNodeVirtualNodeSpec` {
  BackendDefaults: `AWS::AppMesh::VirtualNodeBackendDefaults`?

  Backends: Listing<`AWS::AppMesh::VirtualNodeBackend`>?

  Listeners: Listing<`AWS::AppMesh::VirtualNodeListener`>?

  Logging: `AWS::AppMesh::VirtualNodeLogging`?

  ServiceDiscovery: `AWS::AppMesh::VirtualNodeServiceDiscovery`?
}

class `AWS::AppMesh::VirtualNodeVirtualNodeTcpConnectionPool` {
  MaxConnections: Number
}

class `AWS::AppMesh::VirtualNodeVirtualServiceBackend` {
  ClientPolicy: `AWS::AppMesh::VirtualNodeClientPolicy`?

  VirtualServiceName: String
}

class `AWS::AppMesh::VirtualRouter` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppMesh::VirtualRouterProperties`

  Type: "AWS::AppMesh::VirtualRouter"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppMesh::VirtualRouterProperties` {
  MeshName: String

  MeshOwner: String?

  Spec: `AWS::AppMesh::VirtualRouterVirtualRouterSpec`

  Tags: Listing<Tag>?

  VirtualRouterName: String?
}

class `AWS::AppMesh::VirtualRouterVirtualRouterListener` {
  PortMapping: `AWS::AppMesh::VirtualRouterPortMapping`
}

class `AWS::AppMesh::VirtualRouterVirtualRouterSpec` {
  Listeners: Listing<`AWS::AppMesh::VirtualRouterVirtualRouterListener`>
}

class `AWS::AppMesh::VirtualService` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppMesh::VirtualServiceProperties`

  Type: "AWS::AppMesh::VirtualService"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppMesh::VirtualServiceProperties` {
  MeshName: String

  MeshOwner: String?

  Spec: `AWS::AppMesh::VirtualServiceVirtualServiceSpec`

  Tags: Listing<Tag>?

  VirtualServiceName: String
}

class `AWS::AppMesh::VirtualServiceVirtualNodeServiceProvider` {
  VirtualNodeName: String
}

class `AWS::AppMesh::VirtualServiceVirtualRouterServiceProvider` {
  VirtualRouterName: String
}

class `AWS::AppMesh::VirtualServiceVirtualServiceProvider` {
  VirtualNode: `AWS::AppMesh::VirtualServiceVirtualNodeServiceProvider`?

  VirtualRouter: `AWS::AppMesh::VirtualServiceVirtualRouterServiceProvider`?
}

class `AWS::AppMesh::VirtualServiceVirtualServiceSpec` {
  Provider: `AWS::AppMesh::VirtualServiceVirtualServiceProvider`?
}

class `AWS::AppRunner::AutoScalingConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppRunner::AutoScalingConfigurationProperties`?

  Type: "AWS::AppRunner::AutoScalingConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppRunner::AutoScalingConfigurationProperties` {
  AutoScalingConfigurationName: String?

  MaxConcurrency: Number?

  MaxSize: Number?

  MinSize: Number?

  Tags: Listing<Tag>?
}

class `AWS::AppRunner::ObservabilityConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppRunner::ObservabilityConfigurationProperties`?

  Type: "AWS::AppRunner::ObservabilityConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppRunner::ObservabilityConfigurationProperties` {
  ObservabilityConfigurationName: String?

  Tags: Listing<Tag>?

  TraceConfiguration: `AWS::AppRunner::ObservabilityConfigurationTraceConfiguration`?
}

class `AWS::AppRunner::ObservabilityConfigurationTraceConfiguration` {
  Vendor: String
}

class `AWS::AppRunner::Service` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppRunner::ServiceProperties`

  Type: "AWS::AppRunner::Service"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppRunner::ServiceProperties` {
  AutoScalingConfigurationArn: String?

  EncryptionConfiguration: `AWS::Athena::WorkGroupCustomerContentEncryptionConfiguration`?

  HealthCheckConfiguration: `AWS::AppRunner::ServiceHealthCheckConfiguration`?

  InstanceConfiguration: `AWS::AppRunner::ServiceInstanceConfiguration`?

  NetworkConfiguration: `AWS::AppRunner::ServiceNetworkConfiguration`?

  ObservabilityConfiguration: `AWS::AppRunner::ServiceServiceObservabilityConfiguration`?

  ServiceName: String?

  SourceConfiguration: `AWS::AppRunner::ServiceSourceConfiguration`

  Tags: Listing<Tag>?
}

class `AWS::AppRunner::ServiceAuthenticationConfiguration` {
  AccessRoleArn: String?

  ConnectionArn: String?
}

class `AWS::AppRunner::ServiceCodeConfiguration` {
  CodeConfigurationValues: `AWS::AppRunner::ServiceCodeConfigurationValues`?

  ConfigurationSource: String
}

class `AWS::AppRunner::ServiceCodeConfigurationValues` {
  BuildCommand: String?

  Port: String?

  Runtime: String

  RuntimeEnvironmentSecrets: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  RuntimeEnvironmentVariables: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  StartCommand: String?
}

class `AWS::AppRunner::ServiceCodeRepository` {
  CodeConfiguration: `AWS::AppRunner::ServiceCodeConfiguration`?

  RepositoryUrl: String

  SourceCodeVersion: `AWS::WAFRegional::IPSetIPSetDescriptor`

  SourceDirectory: String?
}

class `AWS::AppRunner::ServiceEgressConfiguration` {
  EgressType: String

  VpcConnectorArn: String?
}

class `AWS::Athena::WorkGroupCustomerContentEncryptionConfiguration` {
  KmsKey: String
}

class `AWS::AppRunner::ServiceHealthCheckConfiguration` {
  HealthyThreshold: Number?

  Interval: Number?

  Path: String?

  Protocol: String?

  Timeout: Number?

  UnhealthyThreshold: Number?
}

class `AWS::AppRunner::ServiceImageConfiguration` {
  Port: String?

  RuntimeEnvironmentSecrets: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  RuntimeEnvironmentVariables: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  StartCommand: String?
}

class `AWS::AppRunner::ServiceImageRepository` {
  ImageConfiguration: `AWS::AppRunner::ServiceImageConfiguration`?

  ImageIdentifier: String

  ImageRepositoryType: String
}

class `AWS::AppRunner::ServiceIngressConfiguration` {
  IsPubliclyAccessible: Boolean
}

class `AWS::AppRunner::ServiceInstanceConfiguration` {
  Cpu: String?

  InstanceRoleArn: String?

  Memory: String?
}

class `AWS::RDS::OptionGroupOptionSetting` {
  Name: String?

  Value: String?
}

class `AWS::AppRunner::ServiceNetworkConfiguration` {
  EgressConfiguration: `AWS::AppRunner::ServiceEgressConfiguration`?

  IngressConfiguration: `AWS::AppRunner::ServiceIngressConfiguration`?

  IpAddressType: String?
}

class `AWS::AppRunner::ServiceServiceObservabilityConfiguration` {
  ObservabilityConfigurationArn: String?

  ObservabilityEnabled: Boolean
}

class `AWS::WAFRegional::IPSetIPSetDescriptor` {
  Type: String

  Value: String
}

class `AWS::AppRunner::ServiceSourceConfiguration` {
  AuthenticationConfiguration: `AWS::AppRunner::ServiceAuthenticationConfiguration`?

  AutoDeploymentsEnabled: Boolean?

  CodeRepository: `AWS::AppRunner::ServiceCodeRepository`?

  ImageRepository: `AWS::AppRunner::ServiceImageRepository`?
}

class `AWS::AppRunner::VpcConnector` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppRunner::VpcConnectorProperties`

  Type: "AWS::AppRunner::VpcConnector"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppRunner::VpcConnectorProperties` {
  SecurityGroups: Listing<String>?

  Subnets: Listing<String>

  Tags: Listing<Tag>?

  VpcConnectorName: String?
}

class `AWS::AppRunner::VpcIngressConnection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppRunner::VpcIngressConnectionProperties`

  Type: "AWS::AppRunner::VpcIngressConnection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppRunner::VpcIngressConnectionProperties` {
  IngressVpcConfiguration: `AWS::AppRunner::VpcIngressConnectionIngressVpcConfiguration`

  ServiceArn: String

  Tags: Listing<Tag>?

  VpcIngressConnectionName: String?
}

class `AWS::AppRunner::VpcIngressConnectionIngressVpcConfiguration` {
  VpcEndpointId: String

  VpcId: String
}

class `AWS::AppStream::AppBlock` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppStream::AppBlockProperties`

  Type: "AWS::AppStream::AppBlock"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppStream::AppBlockProperties` {
  Description: String?

  DisplayName: String?

  Name: String

  PackagingType: String?

  PostSetupScriptDetails: `AWS::AppStream::AppBlockScriptDetails`?

  SetupScriptDetails: `AWS::AppStream::AppBlockScriptDetails`?

  SourceS3Location: `AWS::AppStream::AppBlockS3Location`

  Tags: Listing<Tag>?
}

class `AWS::AppStream::AppBlockS3Location` {
  S3Bucket: String

  S3Key: String?
}

class `AWS::AppStream::AppBlockScriptDetails` {
  ExecutableParameters: String?

  ExecutablePath: String

  ScriptS3Location: `AWS::AppStream::AppBlockS3Location`

  TimeoutInSeconds: Number
}

class `AWS::AppStream::AppBlockBuilder` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppStream::AppBlockBuilderProperties`

  Type: "AWS::AppStream::AppBlockBuilder"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppStream::AppBlockBuilderProperties` {
  AccessEndpoints: Listing<`AWS::AppStream::StackAccessEndpoint`>?

  AppBlockArns: Listing<String>?

  Description: String?

  DisplayName: String?

  EnableDefaultInternetAccess: Boolean?

  IamRoleArn: String?

  InstanceType: String

  Name: String

  Platform: String

  Tags: Listing<Tag>?

  VpcConfig: `AWS::OpenSearchService::DomainVPCOptions`
}

class `AWS::AppStream::StackAccessEndpoint` {
  EndpointType: String

  VpceId: String
}

class `AWS::OpenSearchService::DomainVPCOptions` {
  SecurityGroupIds: Listing<String>?

  SubnetIds: Listing<String>?
}

class `AWS::AppStream::Application` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppStream::ApplicationProperties`

  Type: "AWS::AppStream::Application"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppStream::ApplicationProperties` {
  AppBlockArn: String

  AttributesToDelete: Listing<String>?

  Description: String?

  DisplayName: String?

  IconS3Location: `AWS::ElasticBeanstalk::ApplicationVersionSourceBundle`

  InstanceFamilies: Listing<String>

  LaunchParameters: String?

  LaunchPath: String

  Name: String

  Platforms: Listing<String>

  Tags: Listing<Tag>?

  WorkingDirectory: String?
}

class `AWS::ElasticBeanstalk::ApplicationVersionSourceBundle` {
  S3Bucket: String

  S3Key: String
}

class `AWS::AppStream::ApplicationEntitlementAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppStream::ApplicationEntitlementAssociationProperties`

  Type: "AWS::AppStream::ApplicationEntitlementAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppStream::ApplicationEntitlementAssociationProperties` {
  ApplicationIdentifier: String

  EntitlementName: String

  StackName: String
}

class `AWS::AppStream::ApplicationFleetAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppStream::ApplicationFleetAssociationProperties`

  Type: "AWS::AppStream::ApplicationFleetAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppStream::ApplicationFleetAssociationProperties` {
  ApplicationArn: String

  FleetName: String
}

class `AWS::AppStream::DirectoryConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppStream::DirectoryConfigProperties`

  Type: "AWS::AppStream::DirectoryConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppStream::DirectoryConfigProperties` {
  CertificateBasedAuthProperties: `AWS::AppStream::DirectoryConfigCertificateBasedAuthProperties`?

  DirectoryName: String

  OrganizationalUnitDistinguishedNames: Listing<String>

  ServiceAccountCredentials: `AWS::AppStream::DirectoryConfigServiceAccountCredentials`
}

class `AWS::AppStream::DirectoryConfigCertificateBasedAuthProperties` {
  CertificateAuthorityArn: String?

  Status: String?
}

class `AWS::AppStream::DirectoryConfigServiceAccountCredentials` {
  AccountName: String

  AccountPassword: String
}

class `AWS::AppStream::Entitlement` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppStream::EntitlementProperties`

  Type: "AWS::AppStream::Entitlement"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppStream::EntitlementProperties` {
  AppVisibility: String

  Attributes: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>

  Description: String?

  Name: String

  StackName: String
}

class `AWS::AppStream::Fleet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppStream::FleetProperties`

  Type: "AWS::AppStream::Fleet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppStream::FleetProperties` {
  ComputeCapacity: `AWS::AppStream::FleetComputeCapacity`?

  Description: String?

  DisconnectTimeoutInSeconds: Number?

  DisplayName: String?

  DomainJoinInfo: `AWS::AppStream::ImageBuilderDomainJoinInfo`?

  EnableDefaultInternetAccess: Boolean?

  FleetType: String?

  IamRoleArn: String?

  IdleDisconnectTimeoutInSeconds: Number?

  ImageArn: String?

  ImageName: String?

  InstanceType: String

  MaxConcurrentSessions: Number?

  MaxSessionsPerInstance: Number?

  MaxUserDurationInSeconds: Number?

  Name: String

  Platform: String?

  SessionScriptS3Location: `AWS::ElasticBeanstalk::ApplicationVersionSourceBundle`?

  StreamView: String?

  Tags: Listing<Tag>?

  UsbDeviceFilterStrings: Listing<String>?

  VpcConfig: `AWS::OpenSearchService::DomainVPCOptions`?
}

class `AWS::AppStream::FleetComputeCapacity` {
  DesiredInstances: Number?

  DesiredSessions: Number?
}

class `AWS::AppStream::ImageBuilderDomainJoinInfo` {
  DirectoryName: String?

  OrganizationalUnitDistinguishedName: String?
}

class `AWS::AppStream::ImageBuilder` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppStream::ImageBuilderProperties`

  Type: "AWS::AppStream::ImageBuilder"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppStream::ImageBuilderProperties` {
  AccessEndpoints: Listing<`AWS::AppStream::StackAccessEndpoint`>?

  AppstreamAgentVersion: String?

  Description: String?

  DisplayName: String?

  DomainJoinInfo: `AWS::AppStream::ImageBuilderDomainJoinInfo`?

  EnableDefaultInternetAccess: Boolean?

  IamRoleArn: String?

  ImageArn: String?

  ImageName: String?

  InstanceType: String

  Name: String

  Tags: Listing<Tag>?

  VpcConfig: `AWS::OpenSearchService::DomainVPCOptions`?
}

class `AWS::AppStream::Stack` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppStream::StackProperties`?

  Type: "AWS::AppStream::Stack"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppStream::StackProperties` {
  AccessEndpoints: Listing<`AWS::AppStream::StackAccessEndpoint`>?

  ApplicationSettings: `AWS::AppStream::StackApplicationSettings`?

  AttributesToDelete: Listing<String>?

  DeleteStorageConnectors: Boolean?

  Description: String?

  DisplayName: String?

  EmbedHostDomains: Listing<String>?

  FeedbackURL: String?

  Name: String?

  RedirectURL: String?

  StorageConnectors: Listing<`AWS::AppStream::StackStorageConnector`>?

  StreamingExperienceSettings: `AWS::AppStream::StackStreamingExperienceSettings`?

  Tags: Listing<Tag>?

  UserSettings: Listing<`AWS::AppStream::StackUserSetting`>?
}

class `AWS::AppStream::StackApplicationSettings` {
  Enabled: Boolean

  SettingsGroup: String?
}

class `AWS::AppStream::StackStorageConnector` {
  ConnectorType: String

  Domains: Listing<String>?

  ResourceIdentifier: String?
}

class `AWS::AppStream::StackStreamingExperienceSettings` {
  PreferredProtocol: String?
}

class `AWS::AppStream::StackUserSetting` {
  Action: String

  MaximumLength: Number?

  Permission: String
}

class `AWS::AppStream::StackFleetAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppStream::StackFleetAssociationProperties`

  Type: "AWS::AppStream::StackFleetAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppStream::StackFleetAssociationProperties` {
  FleetName: String

  StackName: String
}

class `AWS::AppStream::StackUserAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppStream::StackUserAssociationProperties`

  Type: "AWS::AppStream::StackUserAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppStream::StackUserAssociationProperties` {
  AuthenticationType: String

  SendEmailNotification: Boolean?

  StackName: String

  UserName: String
}

class `AWS::AppStream::User` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppStream::UserProperties`

  Type: "AWS::AppStream::User"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppStream::UserProperties` {
  AuthenticationType: String

  FirstName: String?

  LastName: String?

  MessageAction: String?

  UserName: String
}

class `AWS::AppSync::ApiCache` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppSync::ApiCacheProperties`

  Type: "AWS::AppSync::ApiCache"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppSync::ApiCacheProperties` {
  ApiCachingBehavior: String

  ApiId: String

  AtRestEncryptionEnabled: Boolean?

  TransitEncryptionEnabled: Boolean?

  Ttl: Number

  Type: String
}

class `AWS::AppSync::ApiKey` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppSync::ApiKeyProperties`

  Type: "AWS::AppSync::ApiKey"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppSync::ApiKeyProperties` {
  ApiId: String

  ApiKeyId: String?

  Description: String?

  Expires: Number?
}

class `AWS::AppSync::DataSource` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppSync::DataSourceProperties`

  Type: "AWS::AppSync::DataSource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppSync::DataSourceProperties` {
  ApiId: String

  Description: String?

  DynamoDBConfig: `AWS::AppSync::DataSourceDynamoDBConfig`?

  ElasticsearchConfig: `AWS::AppSync::DataSourceOpenSearchServiceConfig`?

  EventBridgeConfig: `AWS::Events::EndpointEndpointEventBus`?

  HttpConfig: `AWS::AppSync::DataSourceHttpConfig`?

  LambdaConfig: `AWS::AppSync::DataSourceLambdaConfig`?

  Name: String

  OpenSearchServiceConfig: `AWS::AppSync::DataSourceOpenSearchServiceConfig`?

  RelationalDatabaseConfig: `AWS::AppSync::DataSourceRelationalDatabaseConfig`?

  ServiceRoleArn: String?

  Type: String
}

class `AWS::AppSync::DataSourceAuthorizationConfig` {
  AuthorizationType: String

  AwsIamConfig: `AWS::AppSync::DataSourceAwsIamConfig`?
}

class `AWS::AppSync::DataSourceAwsIamConfig` {
  SigningRegion: String?

  SigningServiceName: String?
}

class `AWS::AppSync::DataSourceDeltaSyncConfig` {
  BaseTableTTL: String

  DeltaSyncTableName: String

  DeltaSyncTableTTL: String
}

class `AWS::AppSync::DataSourceDynamoDBConfig` {
  AwsRegion: String

  DeltaSyncConfig: `AWS::AppSync::DataSourceDeltaSyncConfig`?

  TableName: String

  UseCallerCredentials: Boolean?

  Versioned: Boolean?
}

class `AWS::AppSync::DataSourceOpenSearchServiceConfig` {
  AwsRegion: String

  Endpoint: String
}

class `AWS::Events::EndpointEndpointEventBus` {
  EventBusArn: String
}

class `AWS::AppSync::DataSourceHttpConfig` {
  AuthorizationConfig: `AWS::AppSync::DataSourceAuthorizationConfig`?

  Endpoint: String
}

class `AWS::AppSync::DataSourceLambdaConfig` {
  LambdaFunctionArn: String
}

class `AWS::AppSync::DataSourceRdsHttpEndpointConfig` {
  AwsRegion: String

  AwsSecretStoreArn: String

  DatabaseName: String?

  DbClusterIdentifier: String

  Schema: String?
}

class `AWS::AppSync::DataSourceRelationalDatabaseConfig` {
  RdsHttpEndpointConfig: `AWS::AppSync::DataSourceRdsHttpEndpointConfig`?

  RelationalDatabaseSourceType: String
}

class `AWS::AppSync::DomainName` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppSync::DomainNameProperties`

  Type: "AWS::AppSync::DomainName"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppSync::DomainNameProperties` {
  CertificateArn: String

  Description: String?

  DomainName: String
}

class `AWS::AppSync::DomainNameApiAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppSync::DomainNameApiAssociationProperties`

  Type: "AWS::AppSync::DomainNameApiAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppSync::DomainNameApiAssociationProperties` {
  ApiId: String

  DomainName: String
}

class `AWS::AppSync::FunctionConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppSync::FunctionConfigurationProperties`

  Type: "AWS::AppSync::FunctionConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppSync::FunctionConfigurationProperties` {
  ApiId: String

  Code: String?

  CodeS3Location: String?

  DataSourceName: String

  Description: String?

  FunctionVersion: String?

  MaxBatchSize: Number?

  Name: String

  RequestMappingTemplate: String?

  RequestMappingTemplateS3Location: String?

  ResponseMappingTemplate: String?

  ResponseMappingTemplateS3Location: String?

  Runtime: `AWS::AppSync::ResolverAppSyncRuntime`?

  SyncConfig: `AWS::AppSync::FunctionConfigurationSyncConfig`?
}

class `AWS::AppSync::ResolverAppSyncRuntime` {
  Name: String

  RuntimeVersion: String
}

class `AWS::AppSync::ResolverLambdaConflictHandlerConfig` {
  LambdaConflictHandlerArn: String?
}

class `AWS::AppSync::FunctionConfigurationSyncConfig` {
  ConflictDetection: String

  ConflictHandler: String?

  LambdaConflictHandlerConfig: `AWS::AppSync::ResolverLambdaConflictHandlerConfig`?
}

class `AWS::AppSync::GraphQLApi` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppSync::GraphQLApiProperties`

  Type: "AWS::AppSync::GraphQLApi"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppSync::GraphQLApiProperties` {
  AdditionalAuthenticationProviders: Listing<`AWS::AppSync::GraphQLApiAdditionalAuthenticationProvider`>?

  ApiType: String?

  AuthenticationType: String

  IntrospectionConfig: String?

  LambdaAuthorizerConfig: `AWS::AppSync::GraphQLApiLambdaAuthorizerConfig`?

  LogConfig: `AWS::AppSync::GraphQLApiLogConfig`?

  MergedApiExecutionRoleArn: String?

  Name: String

  OpenIDConnectConfig: `AWS::AppSync::GraphQLApiOpenIDConnectConfig`?

  OwnerContact: String?

  QueryDepthLimit: Number?

  ResolverCountLimit: Number?

  Tags: Listing<Tag>?

  UserPoolConfig: `AWS::AppSync::GraphQLApiUserPoolConfig`?

  Visibility: String?

  XrayEnabled: Boolean?
}

class `AWS::AppSync::GraphQLApiAdditionalAuthenticationProvider` {
  AuthenticationType: String

  LambdaAuthorizerConfig: `AWS::AppSync::GraphQLApiLambdaAuthorizerConfig`?

  OpenIDConnectConfig: `AWS::AppSync::GraphQLApiOpenIDConnectConfig`?

  UserPoolConfig: `AWS::AppSync::GraphQLApiCognitoUserPoolConfig`?
}

class `AWS::AppSync::GraphQLApiCognitoUserPoolConfig` {
  AppIdClientRegex: String?

  AwsRegion: String?

  UserPoolId: String?
}

class `AWS::AppSync::GraphQLApiLambdaAuthorizerConfig` {
  AuthorizerResultTtlInSeconds: Number?

  AuthorizerUri: String?

  IdentityValidationExpression: String?
}

class `AWS::AppSync::GraphQLApiLogConfig` {
  CloudWatchLogsRoleArn: String?

  ExcludeVerboseContent: Boolean?

  FieldLogLevel: String?
}

class `AWS::AppSync::GraphQLApiOpenIDConnectConfig` {
  AuthTTL: Number?

  ClientId: String?

  IatTTL: Number?

  Issuer: String?
}

class `AWS::AppSync::GraphQLApiUserPoolConfig` {
  AppIdClientRegex: String?

  AwsRegion: String?

  DefaultAction: String?

  UserPoolId: String?
}

class `AWS::AppSync::GraphQLSchema` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppSync::GraphQLSchemaProperties`

  Type: "AWS::AppSync::GraphQLSchema"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppSync::GraphQLSchemaProperties` {
  ApiId: String

  Definition: String?

  DefinitionS3Location: String?
}

class `AWS::AppSync::Resolver` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppSync::ResolverProperties`

  Type: "AWS::AppSync::Resolver"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppSync::ResolverProperties` {
  ApiId: String

  CachingConfig: `AWS::AppSync::ResolverCachingConfig`?

  Code: String?

  CodeS3Location: String?

  DataSourceName: String?

  FieldName: String

  Kind: String?

  MaxBatchSize: Number?

  PipelineConfig: `AWS::AppSync::ResolverPipelineConfig`?

  RequestMappingTemplate: String?

  RequestMappingTemplateS3Location: String?

  ResponseMappingTemplate: String?

  ResponseMappingTemplateS3Location: String?

  Runtime: `AWS::AppSync::ResolverAppSyncRuntime`?

  SyncConfig: `AWS::AppSync::ResolverSyncConfig`?

  TypeName: String
}

class `AWS::AppSync::ResolverCachingConfig` {
  CachingKeys: Listing<String>?

  Ttl: Number
}

class `AWS::AppSync::ResolverPipelineConfig` {
  Functions: Listing<String>?
}

class `AWS::AppSync::ResolverSyncConfig` {
  ConflictDetection: String

  ConflictHandler: String?

  LambdaConflictHandlerConfig: `AWS::AppSync::ResolverLambdaConflictHandlerConfig`?
}

class `AWS::AppSync::SourceApiAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AppSync::SourceApiAssociationProperties`?

  Type: "AWS::AppSync::SourceApiAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AppSync::SourceApiAssociationProperties` {
  Description: String?

  MergedApiIdentifier: String?

  SourceApiAssociationConfig: `AWS::AppSync::SourceApiAssociationSourceApiAssociationConfig`?

  SourceApiIdentifier: String?
}

class `AWS::AppSync::SourceApiAssociationSourceApiAssociationConfig` {
  MergeType: String?
}

class `AWS::ApplicationAutoScaling::ScalableTarget` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApplicationAutoScaling::ScalableTargetProperties`

  Type: "AWS::ApplicationAutoScaling::ScalableTarget"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApplicationAutoScaling::ScalableTargetProperties` {
  MaxCapacity: Number

  MinCapacity: Number

  ResourceId: String

  RoleARN: String?

  ScalableDimension: String

  ScheduledActions: Listing<`AWS::ApplicationAutoScaling::ScalableTargetScheduledAction`>?

  ServiceNamespace: String

  SuspendedState: `AWS::ApplicationAutoScaling::ScalableTargetSuspendedState`?
}

class `AWS::RDS::DBClusterServerlessV2ScalingConfiguration` {
  MaxCapacity: Number?

  MinCapacity: Number?
}

class `AWS::ApplicationAutoScaling::ScalableTargetScheduledAction` {
  EndTime: String?

  ScalableTargetAction: `AWS::RDS::DBClusterServerlessV2ScalingConfiguration`?

  Schedule: String

  ScheduledActionName: String

  StartTime: String?

  Timezone: String?
}

class `AWS::ApplicationAutoScaling::ScalableTargetSuspendedState` {
  DynamicScalingInSuspended: Boolean?

  DynamicScalingOutSuspended: Boolean?

  ScheduledScalingSuspended: Boolean?
}

class `AWS::ApplicationAutoScaling::ScalingPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApplicationAutoScaling::ScalingPolicyProperties`

  Type: "AWS::ApplicationAutoScaling::ScalingPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApplicationAutoScaling::ScalingPolicyProperties` {
  PolicyName: String

  PolicyType: String

  ResourceId: String?

  ScalableDimension: String?

  ScalingTargetId: String?

  ServiceNamespace: String?

  StepScalingPolicyConfiguration: `AWS::ApplicationAutoScaling::ScalingPolicyStepScalingPolicyConfiguration`?

  TargetTrackingScalingPolicyConfiguration: `AWS::ApplicationAutoScaling::ScalingPolicyTargetTrackingScalingPolicyConfiguration`?
}

class `AWS::ApplicationAutoScaling::ScalingPolicyCustomizedMetricSpecification` {
  Dimensions: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  MetricName: String?

  Metrics: Listing<`AWS::ApplicationAutoScaling::ScalingPolicyTargetTrackingMetricDataQuery`>?

  Namespace: String?

  Statistic: String?

  Unit: String?
}

class `AWS::AutoScaling::ScalingPolicyPredictiveScalingPredefinedScalingMetric` {
  PredefinedMetricType: String

  ResourceLabel: String?
}

class `AWS::AutoScaling::ScalingPolicyStepAdjustment` {
  MetricIntervalLowerBound: Number?

  MetricIntervalUpperBound: Number?

  ScalingAdjustment: Number
}

class `AWS::ApplicationAutoScaling::ScalingPolicyStepScalingPolicyConfiguration` {
  AdjustmentType: String?

  Cooldown: Number?

  MetricAggregationType: String?

  MinAdjustmentMagnitude: Number?

  StepAdjustments: Listing<`AWS::AutoScaling::ScalingPolicyStepAdjustment`>?
}

class `AWS::ApplicationAutoScaling::ScalingPolicyTargetTrackingMetric` {
  Dimensions: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  MetricName: String?

  Namespace: String?
}

class `AWS::ApplicationAutoScaling::ScalingPolicyTargetTrackingMetricDataQuery` {
  Expression: String?

  Id: String?

  Label: String?

  MetricStat: `AWS::ApplicationAutoScaling::ScalingPolicyTargetTrackingMetricStat`?

  ReturnData: Boolean?
}

class `AWS::ApplicationAutoScaling::ScalingPolicyTargetTrackingMetricStat` {
  Metric: `AWS::ApplicationAutoScaling::ScalingPolicyTargetTrackingMetric`?

  Stat: String?

  Unit: String?
}

class `AWS::ApplicationAutoScaling::ScalingPolicyTargetTrackingScalingPolicyConfiguration` {
  CustomizedMetricSpecification: `AWS::ApplicationAutoScaling::ScalingPolicyCustomizedMetricSpecification`?

  DisableScaleIn: Boolean?

  PredefinedMetricSpecification: `AWS::AutoScaling::ScalingPolicyPredictiveScalingPredefinedScalingMetric`?

  ScaleInCooldown: Number?

  ScaleOutCooldown: Number?

  TargetValue: Number
}

class `AWS::ApplicationInsights::Application` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ApplicationInsights::ApplicationProperties`

  Type: "AWS::ApplicationInsights::Application"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ApplicationInsights::ApplicationProperties` {
  AutoConfigurationEnabled: Boolean?

  CWEMonitorEnabled: Boolean?

  ComponentMonitoringSettings: Listing<`AWS::ApplicationInsights::ApplicationComponentMonitoringSetting`>?

  CustomComponents: Listing<`AWS::ApplicationInsights::ApplicationCustomComponent`>?

  GroupingType: String?

  LogPatternSets: Listing<`AWS::ApplicationInsights::ApplicationLogPatternSet`>?

  OpsCenterEnabled: Boolean?

  OpsItemSNSTopicArn: String?

  ResourceGroupName: String

  Tags: Listing<Tag>?
}

class `AWS::ApplicationInsights::ApplicationAlarm` {
  AlarmName: String

  Severity: String?
}

class `AWS::ApplicationInsights::ApplicationAlarmMetric` {
  AlarmMetricName: String
}

class `AWS::ApplicationInsights::ApplicationComponentConfiguration` {
  ConfigurationDetails: `AWS::ApplicationInsights::ApplicationConfigurationDetails`?

  SubComponentTypeConfigurations: Listing<`AWS::ApplicationInsights::ApplicationSubComponentTypeConfiguration`>?
}

class `AWS::ApplicationInsights::ApplicationComponentMonitoringSetting` {
  ComponentARN: String?

  ComponentConfigurationMode: String

  ComponentName: String?

  CustomComponentConfiguration: `AWS::ApplicationInsights::ApplicationComponentConfiguration`?

  DefaultOverwriteComponentConfiguration: `AWS::ApplicationInsights::ApplicationComponentConfiguration`?

  Tier: String
}

class `AWS::ApplicationInsights::ApplicationConfigurationDetails` {
  AlarmMetrics: Listing<`AWS::ApplicationInsights::ApplicationAlarmMetric`>?

  Alarms: Listing<`AWS::ApplicationInsights::ApplicationAlarm`>?

  HAClusterPrometheusExporter: `AWS::ApplicationInsights::ApplicationHAClusterPrometheusExporter`?

  HANAPrometheusExporter: `AWS::ApplicationInsights::ApplicationHANAPrometheusExporter`?

  JMXPrometheusExporter: `AWS::ApplicationInsights::ApplicationJMXPrometheusExporter`?

  Logs: Listing<`AWS::ApplicationInsights::ApplicationLog`>?

  WindowsEvents: Listing<`AWS::ApplicationInsights::ApplicationWindowsEvent`>?
}

class `AWS::ApplicationInsights::ApplicationCustomComponent` {
  ComponentName: String

  ResourceList: Listing<String>
}

class `AWS::ApplicationInsights::ApplicationHAClusterPrometheusExporter` {
  PrometheusPort: String?
}

class `AWS::ApplicationInsights::ApplicationHANAPrometheusExporter` {
  AgreeToInstallHANADBClient: Boolean

  HANAPort: String

  HANASID: String

  HANASecretName: String

  PrometheusPort: String?
}

class `AWS::ApplicationInsights::ApplicationJMXPrometheusExporter` {
  HostPort: String?

  JMXURL: String?

  PrometheusPort: String?
}

class `AWS::ApplicationInsights::ApplicationLog` {
  Encoding: String?

  LogGroupName: String?

  LogPath: String?

  LogType: String

  PatternSet: String?
}

class `AWS::ApplicationInsights::ApplicationLogPattern` {
  Pattern: String

  PatternName: String

  Rank: Number
}

class `AWS::ApplicationInsights::ApplicationLogPatternSet` {
  LogPatterns: Listing<`AWS::ApplicationInsights::ApplicationLogPattern`>

  PatternSetName: String
}

class `AWS::ApplicationInsights::ApplicationSubComponentConfigurationDetails` {
  AlarmMetrics: Listing<`AWS::ApplicationInsights::ApplicationAlarmMetric`>?

  Logs: Listing<`AWS::ApplicationInsights::ApplicationLog`>?

  WindowsEvents: Listing<`AWS::ApplicationInsights::ApplicationWindowsEvent`>?
}

class `AWS::ApplicationInsights::ApplicationSubComponentTypeConfiguration` {
  SubComponentConfigurationDetails: `AWS::ApplicationInsights::ApplicationSubComponentConfigurationDetails`

  SubComponentType: String
}

class `AWS::ApplicationInsights::ApplicationWindowsEvent` {
  EventLevels: Listing<String>

  EventName: String

  LogGroupName: String

  PatternSet: String?
}

class `AWS::Athena::CapacityReservation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Athena::CapacityReservationProperties`

  Type: "AWS::Athena::CapacityReservation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Athena::CapacityReservationProperties` {
  CapacityAssignmentConfiguration: `AWS::Athena::CapacityReservationCapacityAssignmentConfiguration`?

  Name: String

  Tags: Listing<Tag>?

  TargetDpus: Number
}

class `AWS::Athena::CapacityReservationCapacityAssignment` {
  WorkgroupNames: Listing<String>
}

class `AWS::Athena::CapacityReservationCapacityAssignmentConfiguration` {
  CapacityAssignments: Listing<`AWS::Athena::CapacityReservationCapacityAssignment`>
}

class `AWS::Athena::DataCatalog` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Athena::DataCatalogProperties`

  Type: "AWS::Athena::DataCatalog"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Athena::DataCatalogProperties` {
  Description: String?

  Name: String

  Parameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::Athena::NamedQuery` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Athena::NamedQueryProperties`

  Type: "AWS::Athena::NamedQuery"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Athena::NamedQueryProperties` {
  Database: String

  Description: String?

  Name: String?

  QueryString: String

  WorkGroup: String?
}

class `AWS::Athena::PreparedStatement` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Athena::PreparedStatementProperties`

  Type: "AWS::Athena::PreparedStatement"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Athena::PreparedStatementProperties` {
  Description: String?

  QueryStatement: String

  StatementName: String

  WorkGroup: String
}

class `AWS::Athena::WorkGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Athena::WorkGroupProperties`

  Type: "AWS::Athena::WorkGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Athena::WorkGroupProperties` {
  Description: String?

  Name: String

  RecursiveDeleteOption: Boolean?

  State: String?

  Tags: Listing<Tag>?

  WorkGroupConfiguration: `AWS::Athena::WorkGroupWorkGroupConfiguration`?
}

class `AWS::Athena::WorkGroupAclConfiguration` {
  S3AclOption: String
}

class `AWS::Athena::WorkGroupEncryptionConfiguration` {
  EncryptionOption: String

  KmsKey: String?
}

class `AWS::Athena::WorkGroupEngineVersion` {
  EffectiveEngineVersion: String?

  SelectedEngineVersion: String?
}

class `AWS::Athena::WorkGroupResultConfiguration` {
  AclConfiguration: `AWS::Athena::WorkGroupAclConfiguration`?

  EncryptionConfiguration: `AWS::Athena::WorkGroupEncryptionConfiguration`?

  ExpectedBucketOwner: String?

  OutputLocation: String?
}

class `AWS::Athena::WorkGroupWorkGroupConfiguration` {
  AdditionalConfiguration: String?

  BytesScannedCutoffPerQuery: Number?

  CustomerContentEncryptionConfiguration: `AWS::Athena::WorkGroupCustomerContentEncryptionConfiguration`?

  EnforceWorkGroupConfiguration: Boolean?

  EngineVersion: `AWS::Athena::WorkGroupEngineVersion`?

  ExecutionRole: String?

  PublishCloudWatchMetricsEnabled: Boolean?

  RequesterPaysEnabled: Boolean?

  ResultConfiguration: `AWS::Athena::WorkGroupResultConfiguration`?
}

class `AWS::AuditManager::Assessment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AuditManager::AssessmentProperties`?

  Type: "AWS::AuditManager::Assessment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AuditManager::AssessmentProperties` {
  AssessmentReportsDestination: `AWS::AuditManager::AssessmentAssessmentReportsDestination`?

  AwsAccount: `AWS::AuditManager::AssessmentAWSAccount`?

  Delegations: Listing<`AWS::AuditManager::AssessmentDelegation`>?

  Description: String?

  FrameworkId: String?

  Name: String?

  Roles: Listing<`AWS::AuditManager::AssessmentRole`>?

  Scope: `AWS::AuditManager::AssessmentScope`?

  Status: String?

  Tags: Listing<Tag>?
}

class `AWS::AuditManager::AssessmentAWSAccount` {
  EmailAddress: String?

  Id: String?

  Name: String?
}

class `AWS::AuditManager::AssessmentAWSService` {
  ServiceName: String?
}

class `AWS::AuditManager::AssessmentAssessmentReportsDestination` {
  Destination: String?

  DestinationType: String?
}

class `AWS::AuditManager::AssessmentDelegation` {
  AssessmentId: String?

  AssessmentName: String?

  Comment: String?

  ControlSetId: String?

  CreatedBy: String?

  CreationTime: Number?

  Id: String?

  LastUpdated: Number?

  RoleArn: String?

  RoleType: String?

  Status: String?
}

class `AWS::AuditManager::AssessmentRole` {
  RoleArn: String?

  RoleType: String?
}

class `AWS::AuditManager::AssessmentScope` {
  AwsAccounts: Listing<`AWS::AuditManager::AssessmentAWSAccount`>?

  AwsServices: Listing<`AWS::AuditManager::AssessmentAWSService`>?
}

class `AWS::AutoScaling::AutoScalingGroup` {
  Condition: String?

  CreationPolicy: Dynamic?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AutoScaling::AutoScalingGroupProperties`

  Type: "AWS::AutoScaling::AutoScalingGroup"

  UpdatePolicy: Dynamic?

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AutoScaling::AutoScalingGroupProperties` {
  AutoScalingGroupName: String?

  AvailabilityZones: Listing<String>?

  CapacityRebalance: Boolean?

  Context: String?

  Cooldown: String?

  DefaultInstanceWarmup: Number?

  DesiredCapacity: String?

  DesiredCapacityType: String?

  HealthCheckGracePeriod: Number?

  HealthCheckType: String?

  InstanceId: String?

  InstanceMaintenancePolicy: `AWS::AutoScaling::AutoScalingGroupInstanceMaintenancePolicy`?

  LaunchConfigurationName: String?

  LaunchTemplate: `AWS::EC2::SpotFleetFleetLaunchTemplateSpecification`?

  LifecycleHookSpecificationList: Listing<`AWS::AutoScaling::AutoScalingGroupLifecycleHookSpecification`>?

  LoadBalancerNames: Listing<String>?

  MaxInstanceLifetime: Number?

  MaxSize: String

  MetricsCollection: Listing<`AWS::AutoScaling::AutoScalingGroupMetricsCollection`>?

  MinSize: String

  MixedInstancesPolicy: `AWS::AutoScaling::AutoScalingGroupMixedInstancesPolicy`?

  NewInstancesProtectedFromScaleIn: Boolean?

  NotificationConfigurations: Listing<`AWS::AutoScaling::AutoScalingGroupNotificationConfiguration`>?

  PlacementGroup: String?

  ServiceLinkedRoleARN: String?

  Tags: Listing<`AWS::AutoScaling::AutoScalingGroupTagProperty`>?

  TargetGroupARNs: Listing<String>?

  TerminationPolicies: Listing<String>?

  VPCZoneIdentifier: Listing<String>?
}

class `AWS::QuickSight::TemplateArcAxisDisplayRange` {
  Max: Number?

  Min: Number?
}

class `AWS::AutoScaling::AutoScalingGroupInstanceMaintenancePolicy` {
  MaxHealthyPercentage: Number?

  MinHealthyPercentage: Number?
}

class `AWS::AutoScaling::AutoScalingGroupInstanceRequirements` {
  AcceleratorCount: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  AcceleratorManufacturers: Listing<String>?

  AcceleratorNames: Listing<String>?

  AcceleratorTotalMemoryMiB: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  AcceleratorTypes: Listing<String>?

  AllowedInstanceTypes: Listing<String>?

  BareMetal: String?

  BaselineEbsBandwidthMbps: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  BurstablePerformance: String?

  CpuManufacturers: Listing<String>?

  ExcludedInstanceTypes: Listing<String>?

  InstanceGenerations: Listing<String>?

  LocalStorage: String?

  LocalStorageTypes: Listing<String>?

  MemoryGiBPerVCpu: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  MemoryMiB: `AWS::QuickSight::TemplateArcAxisDisplayRange`

  NetworkBandwidthGbps: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  NetworkInterfaceCount: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  OnDemandMaxPricePercentageOverLowestPrice: Number?

  RequireHibernateSupport: Boolean?

  SpotMaxPricePercentageOverLowestPrice: Number?

  TotalLocalStorageGB: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  VCpuCount: `AWS::QuickSight::TemplateArcAxisDisplayRange`
}

class `AWS::AutoScaling::AutoScalingGroupInstancesDistribution` {
  OnDemandAllocationStrategy: String?

  OnDemandBaseCapacity: Number?

  OnDemandPercentageAboveBaseCapacity: Number?

  SpotAllocationStrategy: String?

  SpotInstancePools: Number?

  SpotMaxPrice: String?
}

class `AWS::AutoScaling::AutoScalingGroupLaunchTemplate` {
  LaunchTemplateSpecification: `AWS::EC2::SpotFleetFleetLaunchTemplateSpecification`

  Overrides: Listing<`AWS::AutoScaling::AutoScalingGroupLaunchTemplateOverrides`>?
}

class `AWS::AutoScaling::AutoScalingGroupLaunchTemplateOverrides` {
  InstanceRequirements: `AWS::AutoScaling::AutoScalingGroupInstanceRequirements`?

  InstanceType: String?

  LaunchTemplateSpecification: `AWS::EC2::SpotFleetFleetLaunchTemplateSpecification`?

  WeightedCapacity: String?
}

class `AWS::EC2::SpotFleetFleetLaunchTemplateSpecification` {
  LaunchTemplateId: String?

  LaunchTemplateName: String?

  Version: String
}

class `AWS::AutoScaling::AutoScalingGroupLifecycleHookSpecification` {
  DefaultResult: String?

  HeartbeatTimeout: Number?

  LifecycleHookName: String

  LifecycleTransition: String

  NotificationMetadata: String?

  NotificationTargetARN: String?

  RoleARN: String?
}

class `AWS::AutoScaling::AutoScalingGroupMetricsCollection` {
  Granularity: String

  Metrics: Listing<String>?
}

class `AWS::AutoScaling::AutoScalingGroupMixedInstancesPolicy` {
  InstancesDistribution: `AWS::AutoScaling::AutoScalingGroupInstancesDistribution`?

  LaunchTemplate: `AWS::AutoScaling::AutoScalingGroupLaunchTemplate`
}

class `AWS::AutoScaling::AutoScalingGroupNotificationConfiguration` {
  NotificationTypes: Listing<String>?

  TopicARN: Listing<String>
}

class `AWS::AutoScaling::AutoScalingGroupTagProperty` {
  Key: String

  PropagateAtLaunch: Boolean

  Value: String
}

class `AWS::AutoScaling::LaunchConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AutoScaling::LaunchConfigurationProperties`

  Type: "AWS::AutoScaling::LaunchConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AutoScaling::LaunchConfigurationProperties` {
  AssociatePublicIpAddress: Boolean?

  BlockDeviceMappings: Listing<`AWS::AutoScaling::LaunchConfigurationBlockDeviceMapping`>?

  ClassicLinkVPCId: String?

  ClassicLinkVPCSecurityGroups: Listing<String>?

  EbsOptimized: Boolean?

  IamInstanceProfile: String?

  ImageId: String

  InstanceId: String?

  InstanceMonitoring: Boolean?

  InstanceType: String

  KernelId: String?

  KeyName: String?

  LaunchConfigurationName: String?

  MetadataOptions: `AWS::AutoScaling::LaunchConfigurationMetadataOptions`?

  PlacementTenancy: String?

  RamDiskId: String?

  SecurityGroups: Listing<String>?

  SpotPrice: String?

  UserData: String?
}

class `AWS::AutoScaling::LaunchConfigurationBlockDevice` {
  DeleteOnTermination: Boolean?

  Encrypted: Boolean?

  Iops: Number?

  SnapshotId: String?

  Throughput: Number?

  VolumeSize: Number?

  VolumeType: String?
}

class `AWS::AutoScaling::LaunchConfigurationBlockDeviceMapping` {
  DeviceName: String

  Ebs: `AWS::AutoScaling::LaunchConfigurationBlockDevice`?

  NoDevice: Boolean?

  VirtualName: String?
}

class `AWS::AutoScaling::LaunchConfigurationMetadataOptions` {
  HttpEndpoint: String?

  HttpPutResponseHopLimit: Number?

  HttpTokens: String?
}

class `AWS::AutoScaling::LifecycleHook` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AutoScaling::LifecycleHookProperties`

  Type: "AWS::AutoScaling::LifecycleHook"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AutoScaling::LifecycleHookProperties` {
  AutoScalingGroupName: String

  DefaultResult: String?

  HeartbeatTimeout: Number?

  LifecycleHookName: String?

  LifecycleTransition: String

  NotificationMetadata: String?

  NotificationTargetARN: String?

  RoleARN: String?
}

class `AWS::AutoScaling::ScalingPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AutoScaling::ScalingPolicyProperties`

  Type: "AWS::AutoScaling::ScalingPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AutoScaling::ScalingPolicyProperties` {
  AdjustmentType: String?

  AutoScalingGroupName: String

  Cooldown: String?

  EstimatedInstanceWarmup: Number?

  MetricAggregationType: String?

  MinAdjustmentMagnitude: Number?

  PolicyType: String?

  PredictiveScalingConfiguration: `AWS::AutoScaling::ScalingPolicyPredictiveScalingConfiguration`?

  ScalingAdjustment: Number?

  StepAdjustments: Listing<`AWS::AutoScaling::ScalingPolicyStepAdjustment`>?

  TargetTrackingConfiguration: `AWS::AutoScaling::ScalingPolicyTargetTrackingConfiguration`?
}

class `AWS::AutoScaling::ScalingPolicyCustomizedMetricSpecification` {
  Dimensions: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  MetricName: String

  Namespace: String

  Statistic: String

  Unit: String?
}

class `AWS::AutoScaling::ScalingPolicyMetric` {
  Dimensions: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  MetricName: String

  Namespace: String
}

class `AWS::AutoScaling::ScalingPolicyMetricDataQuery` {
  Expression: String?

  Id: String

  Label: String?

  MetricStat: `AWS::AutoScaling::ScalingPolicyMetricStat`?

  ReturnData: Boolean?
}

class `AWS::AutoScaling::ScalingPolicyMetricStat` {
  Metric: `AWS::AutoScaling::ScalingPolicyMetric`

  Stat: String

  Unit: String?
}

class `AWS::AutoScaling::ScalingPolicyPredictiveScalingConfiguration` {
  MaxCapacityBreachBehavior: String?

  MaxCapacityBuffer: Number?

  MetricSpecifications: Listing<`AWS::AutoScaling::ScalingPolicyPredictiveScalingMetricSpecification`>

  Mode: String?

  SchedulingBufferTime: Number?
}

class `AWS::AutoScaling::ScalingPolicyPredictiveScalingCustomizedScalingMetric` {
  MetricDataQueries: Listing<`AWS::AutoScaling::ScalingPolicyMetricDataQuery`>
}

class `AWS::AutoScaling::ScalingPolicyPredictiveScalingMetricSpecification` {
  CustomizedCapacityMetricSpecification: `AWS::AutoScaling::ScalingPolicyPredictiveScalingCustomizedScalingMetric`?

  CustomizedLoadMetricSpecification: `AWS::AutoScaling::ScalingPolicyPredictiveScalingCustomizedScalingMetric`?

  CustomizedScalingMetricSpecification: `AWS::AutoScaling::ScalingPolicyPredictiveScalingCustomizedScalingMetric`?

  PredefinedLoadMetricSpecification: `AWS::AutoScaling::ScalingPolicyPredictiveScalingPredefinedScalingMetric`?

  PredefinedMetricPairSpecification: `AWS::AutoScaling::ScalingPolicyPredictiveScalingPredefinedScalingMetric`?

  PredefinedScalingMetricSpecification: `AWS::AutoScaling::ScalingPolicyPredictiveScalingPredefinedScalingMetric`?

  TargetValue: Number
}

class `AWS::AutoScaling::ScalingPolicyTargetTrackingConfiguration` {
  CustomizedMetricSpecification: `AWS::AutoScaling::ScalingPolicyCustomizedMetricSpecification`?

  DisableScaleIn: Boolean?

  PredefinedMetricSpecification: `AWS::AutoScaling::ScalingPolicyPredictiveScalingPredefinedScalingMetric`?

  TargetValue: Number
}

class `AWS::AutoScaling::ScheduledAction` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AutoScaling::ScheduledActionProperties`

  Type: "AWS::AutoScaling::ScheduledAction"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AutoScaling::ScheduledActionProperties` {
  AutoScalingGroupName: String

  DesiredCapacity: Number?

  EndTime: String?

  MaxSize: Number?

  MinSize: Number?

  Recurrence: String?

  StartTime: String?

  TimeZone: String?
}

class `AWS::AutoScaling::WarmPool` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AutoScaling::WarmPoolProperties`

  Type: "AWS::AutoScaling::WarmPool"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AutoScaling::WarmPoolProperties` {
  AutoScalingGroupName: String

  InstanceReusePolicy: `AWS::AutoScaling::WarmPoolInstanceReusePolicy`?

  MaxGroupPreparedCapacity: Number?

  MinSize: Number?

  PoolState: String?
}

class `AWS::AutoScaling::WarmPoolInstanceReusePolicy` {
  ReuseOnScaleIn: Boolean?
}

class `AWS::AutoScalingPlans::ScalingPlan` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::AutoScalingPlans::ScalingPlanProperties`

  Type: "AWS::AutoScalingPlans::ScalingPlan"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::AutoScalingPlans::ScalingPlanProperties` {
  ApplicationSource: `AWS::AutoScalingPlans::ScalingPlanApplicationSource`

  ScalingInstructions: Listing<`AWS::AutoScalingPlans::ScalingPlanScalingInstruction`>
}

class `AWS::AutoScalingPlans::ScalingPlanApplicationSource` {
  CloudFormationStackARN: String?

  TagFilters: Listing<`AWS::AutoScalingPlans::ScalingPlanTagFilter`>?
}

class `AWS::AutoScalingPlans::ScalingPlanCustomizedScalingMetricSpecification` {
  Dimensions: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  MetricName: String

  Namespace: String

  Statistic: String

  Unit: String?
}

class `AWS::AutoScalingPlans::ScalingPlanPredefinedLoadMetricSpecification` {
  PredefinedLoadMetricType: String

  ResourceLabel: String?
}

class `AWS::AutoScalingPlans::ScalingPlanPredefinedScalingMetricSpecification` {
  PredefinedScalingMetricType: String

  ResourceLabel: String?
}

class `AWS::AutoScalingPlans::ScalingPlanScalingInstruction` {
  CustomizedLoadMetricSpecification: `AWS::AutoScalingPlans::ScalingPlanCustomizedScalingMetricSpecification`?

  DisableDynamicScaling: Boolean?

  MaxCapacity: Number

  MinCapacity: Number

  PredefinedLoadMetricSpecification: `AWS::AutoScalingPlans::ScalingPlanPredefinedLoadMetricSpecification`?

  PredictiveScalingMaxCapacityBehavior: String?

  PredictiveScalingMaxCapacityBuffer: Number?

  PredictiveScalingMode: String?

  ResourceId: String

  ScalableDimension: String

  ScalingPolicyUpdateBehavior: String?

  ScheduledActionBufferTime: Number?

  ServiceNamespace: String

  TargetTrackingConfigurations: Listing<`AWS::AutoScalingPlans::ScalingPlanTargetTrackingConfiguration`>
}

class `AWS::AutoScalingPlans::ScalingPlanTagFilter` {
  Key: String

  Values: Listing<String>?
}

class `AWS::AutoScalingPlans::ScalingPlanTargetTrackingConfiguration` {
  CustomizedScalingMetricSpecification: `AWS::AutoScalingPlans::ScalingPlanCustomizedScalingMetricSpecification`?

  DisableScaleIn: Boolean?

  EstimatedInstanceWarmup: Number?

  PredefinedScalingMetricSpecification: `AWS::AutoScalingPlans::ScalingPlanPredefinedScalingMetricSpecification`?

  ScaleInCooldown: Number?

  ScaleOutCooldown: Number?

  TargetValue: Number
}

class `AWS::B2BI::Capability` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::B2BI::CapabilityProperties`

  Type: "AWS::B2BI::Capability"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::B2BI::CapabilityProperties` {
  Configuration: `AWS::B2BI::CapabilityCapabilityConfiguration`

  InstructionsDocuments: Listing<`AWS::B2BI::CapabilityS3Location`>?

  Name: String

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::B2BI::CapabilityCapabilityConfiguration` {
  Edi: `AWS::B2BI::CapabilityEdiConfiguration`
}

class `AWS::B2BI::CapabilityEdiConfiguration` {
  InputLocation: `AWS::B2BI::CapabilityS3Location`

  OutputLocation: `AWS::B2BI::CapabilityS3Location`

  TransformerId: String

  Type: `AWS::B2BI::CapabilityEdiType`
}

class `AWS::B2BI::CapabilityEdiType` {
  X12Details: `AWS::B2BI::TransformerX12Details`
}

class `AWS::B2BI::CapabilityS3Location` {
  BucketName: String?

  Key: String?
}

class `AWS::B2BI::TransformerX12Details` {
  TransactionSet: String?

  Version: String?
}

class `AWS::B2BI::Partnership` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::B2BI::PartnershipProperties`

  Type: "AWS::B2BI::Partnership"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::B2BI::PartnershipProperties` {
  Capabilities: Listing<String>?

  Email: String

  Name: String

  Phone: String?

  ProfileId: String

  Tags: Listing<Tag>?
}

class `AWS::B2BI::Profile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::B2BI::ProfileProperties`

  Type: "AWS::B2BI::Profile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::B2BI::ProfileProperties` {
  BusinessName: String

  Email: String?

  Logging: String

  Name: String

  Phone: String

  Tags: Listing<Tag>?
}

class `AWS::B2BI::Transformer` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::B2BI::TransformerProperties`

  Type: "AWS::B2BI::Transformer"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::B2BI::TransformerProperties` {
  EdiType: `AWS::B2BI::TransformerEdiType`

  FileFormat: String

  MappingTemplate: String

  ModifiedAt: String?

  Name: String

  SampleDocument: String?

  Status: String

  Tags: Listing<Tag>?
}

class `AWS::B2BI::TransformerEdiType` {
  X12Details: `AWS::B2BI::TransformerX12Details`
}

class `AWS::Backup::BackupPlan` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Backup::BackupPlanProperties`

  Type: "AWS::Backup::BackupPlan"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Backup::BackupPlanProperties` {
  BackupPlan: `AWS::Backup::BackupPlanBackupPlanResourceType`

  BackupPlanTags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Backup::BackupPlanAdvancedBackupSettingResourceType` {
  BackupOptions: Dynamic

  ResourceType: String
}

class `AWS::Backup::BackupPlanBackupPlanResourceType` {
  AdvancedBackupSettings: Listing<`AWS::Backup::BackupPlanAdvancedBackupSettingResourceType`>?

  BackupPlanName: String

  BackupPlanRule: Listing<`AWS::Backup::BackupPlanBackupRuleResourceType`>
}

class `AWS::Backup::BackupPlanBackupRuleResourceType` {
  CompletionWindowMinutes: Number?

  CopyActions: Listing<`AWS::Backup::BackupPlanCopyActionResourceType`>?

  EnableContinuousBackup: Boolean?

  Lifecycle: `AWS::Backup::BackupPlanLifecycleResourceType`?

  RecoveryPointTags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  RuleName: String

  ScheduleExpression: String?

  ScheduleExpressionTimezone: String?

  StartWindowMinutes: Number?

  TargetBackupVault: String
}

class `AWS::Backup::BackupPlanCopyActionResourceType` {
  DestinationBackupVaultArn: String

  Lifecycle: `AWS::Backup::BackupPlanLifecycleResourceType`?
}

class `AWS::Backup::BackupPlanLifecycleResourceType` {
  DeleteAfterDays: Number?

  MoveToColdStorageAfterDays: Number?
}

class `AWS::Backup::BackupSelection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Backup::BackupSelectionProperties`

  Type: "AWS::Backup::BackupSelection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Backup::BackupSelectionProperties` {
  BackupPlanId: String

  BackupSelection: `AWS::Backup::BackupSelectionBackupSelectionResourceType`
}

class `AWS::Backup::BackupSelectionBackupSelectionResourceType` {
  Conditions: `AWS::Backup::BackupSelectionConditions`?

  IamRoleArn: String

  ListOfTags: Listing<`AWS::Backup::BackupSelectionConditionResourceType`>?

  NotResources: Listing<String>?

  Resources: Listing<String>?

  SelectionName: String
}

class `AWS::Backup::BackupSelectionConditionParameter` {
  ConditionKey: String?

  ConditionValue: String?
}

class `AWS::Backup::BackupSelectionConditionResourceType` {
  ConditionKey: String

  ConditionType: String

  ConditionValue: String
}

class `AWS::Backup::BackupSelectionConditions` {
  StringEquals: Listing<`AWS::Backup::BackupSelectionConditionParameter`>?

  StringLike: Listing<`AWS::Backup::BackupSelectionConditionParameter`>?

  StringNotEquals: Listing<`AWS::Backup::BackupSelectionConditionParameter`>?

  StringNotLike: Listing<`AWS::Backup::BackupSelectionConditionParameter`>?
}

class `AWS::Backup::BackupVault` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Backup::BackupVaultProperties`

  Type: "AWS::Backup::BackupVault"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Backup::BackupVaultProperties` {
  AccessPolicy: Dynamic?

  BackupVaultName: String

  BackupVaultTags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  EncryptionKeyArn: String?

  LockConfiguration: `AWS::Backup::BackupVaultLockConfigurationType`?

  Notifications: `AWS::Backup::BackupVaultNotificationObjectType`?
}

class `AWS::Backup::BackupVaultLockConfigurationType` {
  ChangeableForDays: Number?

  MaxRetentionDays: Number?

  MinRetentionDays: Number
}

class `AWS::Backup::BackupVaultNotificationObjectType` {
  BackupVaultEvents: Listing<String>

  SNSTopicArn: String
}

class `AWS::Backup::Framework` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Backup::FrameworkProperties`

  Type: "AWS::Backup::Framework"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Backup::FrameworkProperties` {
  FrameworkControls: Listing<`AWS::Backup::FrameworkFrameworkControl`>

  FrameworkDescription: String?

  FrameworkName: String?

  FrameworkTags: Listing<Tag>?
}

class `AWS::Redshift::ClusterParameterGroupParameter` {
  ParameterName: String

  ParameterValue: String
}

class `AWS::Backup::FrameworkControlScope` {
  ComplianceResourceIds: Listing<String>?

  ComplianceResourceTypes: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::Backup::FrameworkFrameworkControl` {
  ControlInputParameters: Listing<`AWS::Redshift::ClusterParameterGroupParameter`>?

  ControlName: String

  ControlScope: `AWS::Backup::FrameworkControlScope`?
}

class `AWS::Backup::ReportPlan` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Backup::ReportPlanProperties`

  Type: "AWS::Backup::ReportPlan"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Backup::ReportPlanProperties` {
  ReportDeliveryChannel: `AWS::Backup::ReportPlanReportDeliveryChannel`

  ReportPlanDescription: String?

  ReportPlanName: String?

  ReportPlanTags: Listing<Tag>?

  ReportSetting: `AWS::Backup::ReportPlanReportSetting`
}

class `AWS::Backup::ReportPlanReportDeliveryChannel` {
  Formats: Listing<String>?

  S3BucketName: String

  S3KeyPrefix: String?
}

class `AWS::Backup::ReportPlanReportSetting` {
  Accounts: Listing<String>?

  FrameworkArns: Listing<String>?

  OrganizationUnits: Listing<String>?

  Regions: Listing<String>?

  ReportTemplate: String
}

class `AWS::Backup::RestoreTestingPlan` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Backup::RestoreTestingPlanProperties`

  Type: "AWS::Backup::RestoreTestingPlan"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Backup::RestoreTestingPlanProperties` {
  RecoveryPointSelection: `AWS::Backup::RestoreTestingPlanRestoreTestingRecoveryPointSelection`

  RestoreTestingPlanName: String

  ScheduleExpression: String

  ScheduleExpressionTimezone: String?

  StartWindowHours: Number?

  Tags: Listing<Tag>?
}

class `AWS::Backup::RestoreTestingPlanRestoreTestingRecoveryPointSelection` {
  Algorithm: String

  ExcludeVaults: Listing<String>?

  IncludeVaults: Listing<String>

  RecoveryPointTypes: Listing<String>

  SelectionWindowDays: Number?
}

class `AWS::Backup::RestoreTestingSelection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Backup::RestoreTestingSelectionProperties`

  Type: "AWS::Backup::RestoreTestingSelection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Backup::RestoreTestingSelectionProperties` {
  IamRoleArn: String

  ProtectedResourceArns: Listing<String>?

  ProtectedResourceConditions: `AWS::Backup::RestoreTestingSelectionProtectedResourceConditions`?

  ProtectedResourceType: String

  RestoreMetadataOverrides: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  RestoreTestingPlanName: String

  RestoreTestingSelectionName: String

  ValidationWindowHours: Number?
}

class `AWS::Backup::RestoreTestingSelectionProtectedResourceConditions` {
  StringEquals: Listing<Tag>?

  StringNotEquals: Listing<Tag>?
}

class `AWS::BackupGateway::Hypervisor` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::BackupGateway::HypervisorProperties`?

  Type: "AWS::BackupGateway::Hypervisor"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::BackupGateway::HypervisorProperties` {
  Host: String?

  KmsKeyArn: String?

  LogGroupArn: String?

  Name: String?

  Password: String?

  Tags: Listing<Tag>?

  Username: String?
}

class `AWS::Batch::ComputeEnvironment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Batch::ComputeEnvironmentProperties`

  Type: "AWS::Batch::ComputeEnvironment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Batch::ComputeEnvironmentProperties` {
  ComputeEnvironmentName: String?

  ComputeResources: `AWS::Batch::ComputeEnvironmentComputeResources`?

  EksConfiguration: `AWS::Batch::ComputeEnvironmentEksConfiguration`?

  ReplaceComputeEnvironment: Boolean?

  ServiceRole: String?

  State: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Type: String

  UnmanagedvCpus: Number?

  UpdatePolicy: `AWS::Batch::ComputeEnvironmentUpdatePolicy`?
}

class `AWS::Batch::ComputeEnvironmentComputeResources` {
  AllocationStrategy: String?

  BidPercentage: Number?

  DesiredvCpus: Number?

  Ec2Configuration: Listing<`AWS::Batch::ComputeEnvironmentEc2ConfigurationObject`>?

  Ec2KeyPair: String?

  ImageId: String?

  InstanceRole: String?

  InstanceTypes: Listing<String>?

  LaunchTemplate: `AWS::GameLift::GameServerGroupLaunchTemplate`?

  MaxvCpus: Number

  MinvCpus: Number?

  PlacementGroup: String?

  SecurityGroupIds: Listing<String>?

  SpotIamFleetRole: String?

  Subnets: Listing<String>

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Type: String

  UpdateToLatestImageVersion: Boolean?
}

class `AWS::Batch::ComputeEnvironmentEc2ConfigurationObject` {
  ImageIdOverride: String?

  ImageKubernetesVersion: String?

  ImageType: String
}

class `AWS::Batch::ComputeEnvironmentEksConfiguration` {
  EksClusterArn: String

  KubernetesNamespace: String
}

class `AWS::GameLift::GameServerGroupLaunchTemplate` {
  LaunchTemplateId: String?

  LaunchTemplateName: String?

  Version: String?
}

class `AWS::Batch::ComputeEnvironmentUpdatePolicy` {
  JobExecutionTimeoutMinutes: Number?

  TerminateJobsOnUpdate: Boolean?
}

class `AWS::Batch::JobDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Batch::JobDefinitionProperties`

  Type: "AWS::Batch::JobDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Batch::JobDefinitionProperties` {
  ContainerProperties: `AWS::Batch::JobDefinitionContainerProperties`?

  EksProperties: `AWS::Batch::JobDefinitionEksProperties`?

  JobDefinitionName: String?

  NodeProperties: `AWS::Batch::JobDefinitionNodeProperties`?

  Parameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  PlatformCapabilities: Listing<String>?

  PropagateTags: Boolean?

  RetryStrategy: `AWS::Batch::JobDefinitionRetryStrategy`?

  SchedulingPriority: Number?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Timeout: `AWS::Batch::JobDefinitionJobTimeout`?

  Type: String
}

class `AWS::Batch::JobDefinitionContainerProperties` {
  Command: Listing<String>?

  Environment: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  EphemeralStorage: `AWS::Pipes::PipeEcsEphemeralStorage`?

  ExecutionRoleArn: String?

  FargatePlatformConfiguration: `AWS::Batch::JobDefinitionFargatePlatformConfiguration`?

  Image: String

  InstanceType: String?

  JobRoleArn: String?

  LinuxParameters: `AWS::Batch::JobDefinitionLinuxParameters`?

  LogConfiguration: `AWS::Batch::JobDefinitionLogConfiguration`?

  Memory: Number?

  MountPoints: Listing<`AWS::ECS::TaskDefinitionMountPoint`>?

  NetworkConfiguration: `AWS::Batch::JobDefinitionNetworkConfiguration`?

  Privileged: Boolean?

  ReadonlyRootFilesystem: Boolean?

  ResourceRequirements: Listing<`AWS::ECS::TaskDefinitionEnvironmentFile`>?

  RuntimePlatform: `AWS::ECS::TaskDefinitionRuntimePlatform`?

  Secrets: Listing<`AWS::ECS::TaskDefinitionSecret`>?

  Ulimits: Listing<`AWS::ECS::TaskDefinitionUlimit`>?

  User: String?

  Vcpus: Number?

  Volumes: Listing<`AWS::Batch::JobDefinitionVolume`>?
}

class `AWS::ECS::TaskDefinitionDevice` {
  ContainerPath: String?

  HostPath: String?

  Permissions: Listing<String>?
}

class `AWS::Batch::JobDefinitionEFSAuthorizationConfig` {
  AccessPointId: String?

  Iam: String?
}

class `AWS::Batch::JobDefinitionEFSVolumeConfiguration` {
  AuthorizationConfig: `AWS::Batch::JobDefinitionEFSAuthorizationConfig`?

  FileSystemId: String

  RootDirectory: String?

  TransitEncryption: String?

  TransitEncryptionPort: Number?
}

class `AWS::Batch::JobDefinitionEksContainer` {
  Args: Listing<String>?

  Command: Listing<String>?

  Env: Listing<`AWS::Batch::JobDefinitionEksContainerEnvironmentVariable`>?

  Image: String

  ImagePullPolicy: String?

  Name: String?

  Resources: `AWS::Batch::JobDefinitionEksContainerResourceRequirements`?

  SecurityContext: `AWS::Batch::JobDefinitionEksContainerSecurityContext`?

  VolumeMounts: Listing<`AWS::Batch::JobDefinitionEksContainerVolumeMount`>?
}

class `AWS::Batch::JobDefinitionEksContainerEnvironmentVariable` {
  Name: String

  Value: String?
}

class `AWS::Batch::JobDefinitionEksContainerResourceRequirements` {
  Limits: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Requests: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Batch::JobDefinitionEksContainerSecurityContext` {
  Privileged: Boolean?

  ReadOnlyRootFilesystem: Boolean?

  RunAsGroup: Number?

  RunAsNonRoot: Boolean?

  RunAsUser: Number?
}

class `AWS::Batch::JobDefinitionEksContainerVolumeMount` {
  MountPath: String?

  Name: String?

  ReadOnly: Boolean?
}

class `AWS::Batch::JobDefinitionEksEmptyDir` {
  Medium: String?

  SizeLimit: String?
}

class `AWS::QuickSight::TemplateEntity` {
  Path: String?
}

class `AWS::Batch::JobDefinitionEksMetadata` {
  Labels: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Batch::JobDefinitionEksPodProperties` {
  Containers: Listing<`AWS::Batch::JobDefinitionEksContainer`>?

  DnsPolicy: String?

  HostNetwork: Boolean?

  Metadata: `AWS::Batch::JobDefinitionEksMetadata`?

  ServiceAccountName: String?

  Volumes: Listing<`AWS::Batch::JobDefinitionEksVolume`>?
}

class `AWS::Batch::JobDefinitionEksProperties` {
  PodProperties: `AWS::Batch::JobDefinitionEksPodProperties`?
}

class `AWS::Batch::JobDefinitionEksSecret` {
  Optional: Boolean?

  SecretName: String
}

class `AWS::Batch::JobDefinitionEksVolume` {
  EmptyDir: `AWS::Batch::JobDefinitionEksEmptyDir`?

  HostPath: `AWS::QuickSight::TemplateEntity`?

  Name: String

  Secret: `AWS::Batch::JobDefinitionEksSecret`?
}

class `AWS::Pipes::PipeEcsEphemeralStorage` {
  SizeInGiB: Number
}

class `AWS::Batch::JobDefinitionEvaluateOnExit` {
  Action: String

  OnExitCode: String?

  OnReason: String?

  OnStatusReason: String?
}

class `AWS::Batch::JobDefinitionFargatePlatformConfiguration` {
  PlatformVersion: String?
}

class `AWS::ECS::TaskDefinitionHostVolumeProperties` {
  SourcePath: String?
}

class `AWS::Batch::JobDefinitionJobTimeout` {
  AttemptDurationSeconds: Number?
}

class `AWS::Batch::JobDefinitionLinuxParameters` {
  Devices: Listing<`AWS::ECS::TaskDefinitionDevice`>?

  InitProcessEnabled: Boolean?

  MaxSwap: Number?

  SharedMemorySize: Number?

  Swappiness: Number?

  Tmpfs: Listing<`AWS::Batch::JobDefinitionTmpfs`>?
}

class `AWS::Batch::JobDefinitionLogConfiguration` {
  LogDriver: String

  Options: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  SecretOptions: Listing<`AWS::ECS::TaskDefinitionSecret`>?
}

class `AWS::ECS::TaskDefinitionMountPoint` {
  ContainerPath: String?

  ReadOnly: Boolean?

  SourceVolume: String?
}

class `AWS::Batch::JobDefinitionNetworkConfiguration` {
  AssignPublicIp: String?
}

class `AWS::Batch::JobDefinitionNodeProperties` {
  MainNode: Number

  NodeRangeProperties: Listing<`AWS::Batch::JobDefinitionNodeRangeProperty`>

  NumNodes: Number
}

class `AWS::Batch::JobDefinitionNodeRangeProperty` {
  Container: `AWS::Batch::JobDefinitionContainerProperties`?

  TargetNodes: String
}

class `AWS::ECS::TaskDefinitionEnvironmentFile` {
  Type: String?

  Value: String?
}

class `AWS::Batch::JobDefinitionRetryStrategy` {
  Attempts: Number?

  EvaluateOnExit: Listing<`AWS::Batch::JobDefinitionEvaluateOnExit`>?
}

class `AWS::ECS::TaskDefinitionRuntimePlatform` {
  CpuArchitecture: String?

  OperatingSystemFamily: String?
}

class `AWS::ECS::TaskDefinitionSecret` {
  Name: String

  ValueFrom: String
}

class `AWS::Batch::JobDefinitionTmpfs` {
  ContainerPath: String

  MountOptions: Listing<String>?

  Size: Number
}

class `AWS::ECS::TaskDefinitionUlimit` {
  HardLimit: Number

  Name: String

  SoftLimit: Number
}

class `AWS::Batch::JobDefinitionVolume` {
  EfsVolumeConfiguration: `AWS::Batch::JobDefinitionEFSVolumeConfiguration`?

  Host: `AWS::ECS::TaskDefinitionHostVolumeProperties`?

  Name: String?
}

class `AWS::Batch::JobQueue` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Batch::JobQueueProperties`

  Type: "AWS::Batch::JobQueue"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Batch::JobQueueProperties` {
  ComputeEnvironmentOrder: Listing<`AWS::Batch::JobQueueComputeEnvironmentOrder`>

  JobQueueName: String?

  Priority: Number

  SchedulingPolicyArn: String?

  State: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Batch::JobQueueComputeEnvironmentOrder` {
  ComputeEnvironment: String

  Order: Number
}

class `AWS::Batch::SchedulingPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Batch::SchedulingPolicyProperties`?

  Type: "AWS::Batch::SchedulingPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Batch::SchedulingPolicyProperties` {
  FairsharePolicy: `AWS::Batch::SchedulingPolicyFairsharePolicy`?

  Name: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Batch::SchedulingPolicyFairsharePolicy` {
  ComputeReservation: Number?

  ShareDecaySeconds: Number?

  ShareDistribution: Listing<`AWS::Batch::SchedulingPolicyShareAttributes`>?
}

class `AWS::Batch::SchedulingPolicyShareAttributes` {
  ShareIdentifier: String?

  WeightFactor: Number?
}

class `AWS::BillingConductor::BillingGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::BillingConductor::BillingGroupProperties`

  Type: "AWS::BillingConductor::BillingGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::BillingConductor::BillingGroupProperties` {
  AccountGrouping: `AWS::BillingConductor::BillingGroupAccountGrouping`

  ComputationPreference: `AWS::BillingConductor::BillingGroupComputationPreference`

  Description: String?

  Name: String

  PrimaryAccountId: String

  Tags: Listing<Tag>?
}

class `AWS::BillingConductor::BillingGroupAccountGrouping` {
  AutoAssociate: Boolean?

  LinkedAccountIds: Listing<String>
}

class `AWS::BillingConductor::BillingGroupComputationPreference` {
  PricingPlanArn: String
}

class `AWS::BillingConductor::CustomLineItem` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::BillingConductor::CustomLineItemProperties`

  Type: "AWS::BillingConductor::CustomLineItem"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::BillingConductor::CustomLineItemProperties` {
  AccountId: String?

  BillingGroupArn: String

  BillingPeriodRange: `AWS::BillingConductor::CustomLineItemBillingPeriodRange`?

  CustomLineItemChargeDetails: `AWS::BillingConductor::CustomLineItemCustomLineItemChargeDetails`?

  Description: String?

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::BillingConductor::CustomLineItemBillingPeriodRange` {
  ExclusiveEndBillingPeriod: String?

  InclusiveStartBillingPeriod: String?
}

class `AWS::BillingConductor::CustomLineItemCustomLineItemChargeDetails` {
  Flat: `AWS::BillingConductor::CustomLineItemCustomLineItemFlatChargeDetails`?

  LineItemFilters: Listing<`AWS::BillingConductor::CustomLineItemLineItemFilter`>?

  Percentage: `AWS::BillingConductor::CustomLineItemCustomLineItemPercentageChargeDetails`?

  Type: String
}

class `AWS::BillingConductor::CustomLineItemCustomLineItemFlatChargeDetails` {
  ChargeValue: Number
}

class `AWS::BillingConductor::CustomLineItemCustomLineItemPercentageChargeDetails` {
  ChildAssociatedResources: Listing<String>?

  PercentageValue: Number
}

class `AWS::BillingConductor::CustomLineItemLineItemFilter` {
  Attribute: String

  MatchOption: String

  Values: Listing<String>
}

class `AWS::BillingConductor::PricingPlan` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::BillingConductor::PricingPlanProperties`

  Type: "AWS::BillingConductor::PricingPlan"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::BillingConductor::PricingPlanProperties` {
  Description: String?

  Name: String

  PricingRuleArns: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::BillingConductor::PricingRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::BillingConductor::PricingRuleProperties`

  Type: "AWS::BillingConductor::PricingRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::BillingConductor::PricingRuleProperties` {
  BillingEntity: String?

  Description: String?

  ModifierPercentage: Number?

  Name: String

  Operation: String?

  Scope: String

  Service: String?

  Tags: Listing<Tag>?

  Tiering: `AWS::BillingConductor::PricingRuleTiering`?

  Type: String

  UsageType: String?
}

class `AWS::BillingConductor::PricingRuleFreeTier` {
  Activated: Boolean
}

class `AWS::BillingConductor::PricingRuleTiering` {
  FreeTier: `AWS::BillingConductor::PricingRuleFreeTier`?
}

class `AWS::Budgets::Budget` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Budgets::BudgetProperties`

  Type: "AWS::Budgets::Budget"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Budgets::BudgetProperties` {
  Budget: `AWS::Budgets::BudgetBudgetData`

  NotificationsWithSubscribers: Listing<`AWS::Budgets::BudgetNotificationWithSubscribers`>?
}

class `AWS::Budgets::BudgetAutoAdjustData` {
  AutoAdjustType: String

  HistoricalOptions: `AWS::Budgets::BudgetHistoricalOptions`?
}

class `AWS::Budgets::BudgetBudgetData` {
  AutoAdjustData: `AWS::Budgets::BudgetAutoAdjustData`?

  BudgetLimit: `AWS::Budgets::BudgetSpend`?

  BudgetName: String?

  BudgetType: String

  CostFilters: Dynamic?

  CostTypes: `AWS::Budgets::BudgetCostTypes`?

  PlannedBudgetLimits: Dynamic?

  TimePeriod: `AWS::Budgets::BudgetTimePeriod`?

  TimeUnit: String
}

class `AWS::Budgets::BudgetCostTypes` {
  IncludeCredit: Boolean?

  IncludeDiscount: Boolean?

  IncludeOtherSubscription: Boolean?

  IncludeRecurring: Boolean?

  IncludeRefund: Boolean?

  IncludeSubscription: Boolean?

  IncludeSupport: Boolean?

  IncludeTax: Boolean?

  IncludeUpfront: Boolean?

  UseAmortized: Boolean?

  UseBlended: Boolean?
}

class `AWS::Budgets::BudgetHistoricalOptions` {
  BudgetAdjustmentPeriod: Number
}

class `AWS::Budgets::BudgetNotification` {
  ComparisonOperator: String

  NotificationType: String

  Threshold: Number

  ThresholdType: String?
}

class `AWS::Budgets::BudgetNotificationWithSubscribers` {
  Notification: `AWS::Budgets::BudgetNotification`

  Subscribers: Listing<`AWS::Budgets::BudgetSubscriber`>
}

class `AWS::Budgets::BudgetSpend` {
  Amount: Number

  Unit: String
}

class `AWS::Budgets::BudgetSubscriber` {
  Address: String

  SubscriptionType: String
}

class `AWS::Budgets::BudgetTimePeriod` {
  End: String?

  Start: String?
}

class `AWS::Budgets::BudgetsAction` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Budgets::BudgetsActionProperties`

  Type: "AWS::Budgets::BudgetsAction"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Budgets::BudgetsActionProperties` {
  ActionThreshold: `AWS::SageMaker::EndpointCapacitySize`

  ActionType: String

  ApprovalModel: String?

  BudgetName: String

  Definition: `AWS::Budgets::BudgetsActionDefinition`

  ExecutionRoleArn: String

  NotificationType: String

  Subscribers: Listing<`AWS::Budgets::BudgetsActionSubscriber`>
}

class `AWS::Budgets::BudgetsActionDefinition` {
  IamActionDefinition: `AWS::Budgets::BudgetsActionIamActionDefinition`?

  ScpActionDefinition: `AWS::Budgets::BudgetsActionScpActionDefinition`?

  SsmActionDefinition: `AWS::Budgets::BudgetsActionSsmActionDefinition`?
}

class `AWS::Budgets::BudgetsActionIamActionDefinition` {
  Groups: Listing<String>?

  PolicyArn: String

  Roles: Listing<String>?

  Users: Listing<String>?
}

class `AWS::Budgets::BudgetsActionScpActionDefinition` {
  PolicyId: String

  TargetIds: Listing<String>
}

class `AWS::Budgets::BudgetsActionSsmActionDefinition` {
  InstanceIds: Listing<String>

  Region: String

  Subtype: String
}

class `AWS::Budgets::BudgetsActionSubscriber` {
  Address: String

  Type: String
}

class `AWS::CE::AnomalyMonitor` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CE::AnomalyMonitorProperties`

  Type: "AWS::CE::AnomalyMonitor"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CE::AnomalyMonitorProperties` {
  MonitorDimension: String?

  MonitorName: String

  MonitorSpecification: String?

  MonitorType: String

  ResourceTags: Listing<Tag>?
}

class `AWS::CE::AnomalySubscription` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CE::AnomalySubscriptionProperties`

  Type: "AWS::CE::AnomalySubscription"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CE::AnomalySubscriptionProperties` {
  Frequency: String

  MonitorArnList: Listing<String>

  ResourceTags: Listing<Tag>?

  Subscribers: Listing<`AWS::CE::AnomalySubscriptionSubscriber`>

  SubscriptionName: String

  Threshold: Number?

  ThresholdExpression: String?
}

class `AWS::CE::AnomalySubscriptionSubscriber` {
  Address: String

  Status: String?

  Type: String
}

class `AWS::CE::CostCategory` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CE::CostCategoryProperties`

  Type: "AWS::CE::CostCategory"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CE::CostCategoryProperties` {
  DefaultValue: String?

  Name: String

  RuleVersion: String

  Rules: String

  SplitChargeRules: String?
}

class `AWS::CUR::ReportDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CUR::ReportDefinitionProperties`

  Type: "AWS::CUR::ReportDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CUR::ReportDefinitionProperties` {
  AdditionalArtifacts: Listing<String>?

  AdditionalSchemaElements: Listing<String>?

  BillingViewArn: String?

  Compression: String

  Format: String

  RefreshClosedReports: Boolean

  ReportName: String

  ReportVersioning: String

  S3Bucket: String

  S3Prefix: String

  S3Region: String

  TimeUnit: String
}

class `AWS::Cassandra::Keyspace` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cassandra::KeyspaceProperties`?

  Type: "AWS::Cassandra::Keyspace"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cassandra::KeyspaceProperties` {
  KeyspaceName: String?

  ReplicationSpecification: `AWS::Cassandra::KeyspaceReplicationSpecification`?

  Tags: Listing<Tag>?
}

class `AWS::Cassandra::KeyspaceReplicationSpecification` {
  RegionList: Listing<String>?

  ReplicationStrategy: String?
}

class `AWS::Cassandra::Table` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cassandra::TableProperties`

  Type: "AWS::Cassandra::Table"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cassandra::TableProperties` {
  BillingMode: `AWS::Cassandra::TableBillingMode`?

  ClientSideTimestampsEnabled: Boolean?

  ClusteringKeyColumns: Listing<`AWS::Cassandra::TableClusteringKeyColumn`>?

  DefaultTimeToLive: Number?

  EncryptionSpecification: `AWS::Cassandra::TableEncryptionSpecification`?

  KeyspaceName: String

  PartitionKeyColumns: Listing<`AWS::Cassandra::TableColumn`>

  PointInTimeRecoveryEnabled: Boolean?

  RegularColumns: Listing<`AWS::Cassandra::TableColumn`>?

  TableName: String?

  Tags: Listing<Tag>?
}

class `AWS::Cassandra::TableBillingMode` {
  Mode: String

  ProvisionedThroughput: `AWS::DynamoDB::TableProvisionedThroughput`?
}

class `AWS::Cassandra::TableClusteringKeyColumn` {
  Column: `AWS::Cassandra::TableColumn`

  OrderBy: String?
}

class `AWS::Cassandra::TableColumn` {
  ColumnName: String

  ColumnType: String
}

class `AWS::Cassandra::TableEncryptionSpecification` {
  EncryptionType: String

  KmsKeyIdentifier: String?
}

class `AWS::DynamoDB::TableProvisionedThroughput` {
  ReadCapacityUnits: Number

  WriteCapacityUnits: Number
}

class `AWS::CertificateManager::Account` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CertificateManager::AccountProperties`

  Type: "AWS::CertificateManager::Account"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CertificateManager::AccountProperties` {
  ExpiryEventsConfiguration: `AWS::CertificateManager::AccountExpiryEventsConfiguration`
}

class `AWS::CertificateManager::AccountExpiryEventsConfiguration` {
  DaysBeforeExpiry: Number?
}

class `AWS::CertificateManager::Certificate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CertificateManager::CertificateProperties`

  Type: "AWS::CertificateManager::Certificate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CertificateManager::CertificateProperties` {
  CertificateAuthorityArn: String?

  CertificateTransparencyLoggingPreference: String?

  DomainName: String

  DomainValidationOptions: Listing<`AWS::CertificateManager::CertificateDomainValidationOption`>?

  KeyAlgorithm: String?

  SubjectAlternativeNames: Listing<String>?

  Tags: Listing<Tag>?

  ValidationMethod: String?
}

class `AWS::CertificateManager::CertificateDomainValidationOption` {
  DomainName: String

  HostedZoneId: String?

  ValidationDomain: String?
}

class `AWS::Chatbot::MicrosoftTeamsChannelConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Chatbot::MicrosoftTeamsChannelConfigurationProperties`

  Type: "AWS::Chatbot::MicrosoftTeamsChannelConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Chatbot::MicrosoftTeamsChannelConfigurationProperties` {
  ConfigurationName: String

  GuardrailPolicies: Listing<String>?

  IamRoleArn: String

  LoggingLevel: String?

  SnsTopicArns: Listing<String>?

  TeamId: String

  TeamsChannelId: String

  TeamsTenantId: String

  UserRoleRequired: Boolean?
}

class `AWS::Chatbot::SlackChannelConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Chatbot::SlackChannelConfigurationProperties`

  Type: "AWS::Chatbot::SlackChannelConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Chatbot::SlackChannelConfigurationProperties` {
  ConfigurationName: String

  GuardrailPolicies: Listing<String>?

  IamRoleArn: String

  LoggingLevel: String?

  SlackChannelId: String

  SlackWorkspaceId: String

  SnsTopicArns: Listing<String>?

  UserRoleRequired: Boolean?
}

class `AWS::CleanRooms::AnalysisTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CleanRooms::AnalysisTemplateProperties`

  Type: "AWS::CleanRooms::AnalysisTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CleanRooms::AnalysisTemplateProperties` {
  AnalysisParameters: Listing<`AWS::CleanRooms::AnalysisTemplateAnalysisParameter`>?

  Description: String?

  Format: String

  MembershipIdentifier: String

  Name: String

  Source: `AWS::CleanRooms::AnalysisTemplateAnalysisSource`

  Tags: Listing<Tag>?
}

class `AWS::CleanRooms::AnalysisTemplateAnalysisParameter` {
  DefaultValue: String?

  Name: String

  Type: String
}

class `AWS::CleanRooms::AnalysisTemplateAnalysisSchema` {
  ReferencedTables: Listing<String>
}

class `AWS::CleanRooms::AnalysisTemplateAnalysisSource` {
  Text: String
}

class `AWS::CleanRooms::Collaboration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CleanRooms::CollaborationProperties`

  Type: "AWS::CleanRooms::Collaboration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CleanRooms::CollaborationProperties` {
  CreatorDisplayName: String

  CreatorMemberAbilities: Listing<String>

  CreatorPaymentConfiguration: `AWS::CleanRooms::CollaborationPaymentConfiguration`?

  DataEncryptionMetadata: `AWS::CleanRooms::CollaborationDataEncryptionMetadata`?

  Description: String

  Members: Listing<`AWS::CleanRooms::CollaborationMemberSpecification`>

  Name: String

  QueryLogStatus: String

  Tags: Listing<Tag>?
}

class `AWS::CleanRooms::CollaborationDataEncryptionMetadata` {
  AllowCleartext: Boolean

  AllowDuplicates: Boolean

  AllowJoinsOnColumnsWithDifferentNames: Boolean

  PreserveNulls: Boolean
}

class `AWS::CleanRooms::CollaborationMemberSpecification` {
  AccountId: String

  DisplayName: String

  MemberAbilities: Listing<String>

  PaymentConfiguration: `AWS::CleanRooms::CollaborationPaymentConfiguration`?
}

class `AWS::CleanRooms::CollaborationPaymentConfiguration` {
  QueryCompute: `AWS::CleanRooms::MembershipMembershipQueryComputePaymentConfig`
}

class `AWS::CleanRooms::MembershipMembershipQueryComputePaymentConfig` {
  IsResponsible: Boolean
}

class `AWS::CleanRooms::ConfiguredTable` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CleanRooms::ConfiguredTableProperties`

  Type: "AWS::CleanRooms::ConfiguredTable"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CleanRooms::ConfiguredTableProperties` {
  AllowedColumns: Listing<String>

  AnalysisMethod: String

  AnalysisRules: Listing<`AWS::CleanRooms::ConfiguredTableAnalysisRule`>?

  Description: String?

  Name: String

  TableReference: `AWS::CleanRooms::ConfiguredTableTableReference`

  Tags: Listing<Tag>?
}

class `AWS::CleanRooms::ConfiguredTableAggregateColumn` {
  ColumnNames: Listing<String>

  Function: String
}

class `AWS::CleanRooms::ConfiguredTableAggregationConstraint` {
  ColumnName: String

  Minimum: Number

  Type: String
}

class `AWS::CleanRooms::ConfiguredTableAnalysisRule` {
  Policy: `AWS::CleanRooms::ConfiguredTableConfiguredTableAnalysisRulePolicy`

  Type: String
}

class `AWS::CleanRooms::ConfiguredTableAnalysisRuleAggregation` {
  AggregateColumns: Listing<`AWS::CleanRooms::ConfiguredTableAggregateColumn`>

  AllowedJoinOperators: Listing<String>?

  DimensionColumns: Listing<String>

  JoinColumns: Listing<String>

  JoinRequired: String?

  OutputConstraints: Listing<`AWS::CleanRooms::ConfiguredTableAggregationConstraint`>

  ScalarFunctions: Listing<String>
}

class `AWS::CleanRooms::ConfiguredTableAnalysisRuleCustom` {
  AllowedAnalyses: Listing<String>

  AllowedAnalysisProviders: Listing<String>?
}

class `AWS::CleanRooms::ConfiguredTableAnalysisRuleList` {
  AllowedJoinOperators: Listing<String>?

  JoinColumns: Listing<String>

  ListColumns: Listing<String>
}

class `AWS::CleanRooms::ConfiguredTableConfiguredTableAnalysisRulePolicy` {
  V1: `AWS::CleanRooms::ConfiguredTableConfiguredTableAnalysisRulePolicyV1`
}

class `AWS::CleanRooms::ConfiguredTableConfiguredTableAnalysisRulePolicyV1` {
  Aggregation: `AWS::CleanRooms::ConfiguredTableAnalysisRuleAggregation`?

  Custom: `AWS::CleanRooms::ConfiguredTableAnalysisRuleCustom`?

  List: `AWS::CleanRooms::ConfiguredTableAnalysisRuleList`?
}

class `AWS::IoTAnalytics::DatasetGlueConfiguration` {
  DatabaseName: String

  TableName: String
}

class `AWS::CleanRooms::ConfiguredTableTableReference` {
  Glue: `AWS::IoTAnalytics::DatasetGlueConfiguration`
}

class `AWS::CleanRooms::ConfiguredTableAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CleanRooms::ConfiguredTableAssociationProperties`

  Type: "AWS::CleanRooms::ConfiguredTableAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CleanRooms::ConfiguredTableAssociationProperties` {
  ConfiguredTableIdentifier: String

  Description: String?

  MembershipIdentifier: String

  Name: String

  RoleArn: String

  Tags: Listing<Tag>?
}

class `AWS::CleanRooms::Membership` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CleanRooms::MembershipProperties`

  Type: "AWS::CleanRooms::Membership"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CleanRooms::MembershipProperties` {
  CollaborationIdentifier: String

  DefaultResultConfiguration: `AWS::CleanRooms::MembershipMembershipProtectedQueryResultConfiguration`?

  PaymentConfiguration: `AWS::CleanRooms::MembershipMembershipPaymentConfiguration`?

  QueryLogStatus: String

  Tags: Listing<Tag>?
}

class `AWS::CleanRooms::MembershipMembershipPaymentConfiguration` {
  QueryCompute: `AWS::CleanRooms::MembershipMembershipQueryComputePaymentConfig`
}

class `AWS::CleanRooms::MembershipMembershipProtectedQueryOutputConfiguration` {
  S3: `AWS::CleanRooms::MembershipProtectedQueryS3OutputConfiguration`
}

class `AWS::CleanRooms::MembershipMembershipProtectedQueryResultConfiguration` {
  OutputConfiguration: `AWS::CleanRooms::MembershipMembershipProtectedQueryOutputConfiguration`

  RoleArn: String?
}

class `AWS::CleanRooms::MembershipProtectedQueryS3OutputConfiguration` {
  Bucket: String

  KeyPrefix: String?

  ResultFormat: String
}

class `AWS::Cloud9::EnvironmentEC2` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cloud9::EnvironmentEC2Properties`

  Type: "AWS::Cloud9::EnvironmentEC2"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cloud9::EnvironmentEC2Properties` {
  AutomaticStopTimeMinutes: Number?

  ConnectionType: String?

  Description: String?

  ImageId: String

  InstanceType: String

  Name: String?

  OwnerArn: String?

  Repositories: Listing<`AWS::Cloud9::EnvironmentEC2Repository`>?

  SubnetId: String?

  Tags: Listing<Tag>?
}

class `AWS::Cloud9::EnvironmentEC2Repository` {
  PathComponent: String

  RepositoryUrl: String
}

class `AWS::CloudFormation::CustomResource` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::CustomResourceProperties`

  Type: "AWS::CloudFormation::CustomResource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::CustomResourceProperties` {
  ServiceToken: String
}

class `AWS::CloudFormation::HookDefaultVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::ResourceDefaultVersionProperties`?

  Type: "AWS::CloudFormation::HookDefaultVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::ResourceDefaultVersionProperties` {
  TypeName: String?

  TypeVersionArn: String?

  VersionId: String?
}

class `AWS::CloudFormation::HookTypeConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::HookTypeConfigProperties`

  Type: "AWS::CloudFormation::HookTypeConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::HookTypeConfigProperties` {
  Configuration: String

  ConfigurationAlias: String?

  TypeArn: String?

  TypeName: String?
}

class `AWS::CloudFormation::HookVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::HookVersionProperties`

  Type: "AWS::CloudFormation::HookVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::HookVersionProperties` {
  ExecutionRoleArn: String?

  LoggingConfig: `AWS::CloudFormation::TypeActivationLoggingConfig`?

  SchemaHandlerPackage: String

  TypeName: String
}

class `AWS::CloudFormation::TypeActivationLoggingConfig` {
  LogGroupName: String?

  LogRoleArn: String?
}

class `AWS::CloudFormation::Macro` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::MacroProperties`

  Type: "AWS::CloudFormation::Macro"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::MacroProperties` {
  Description: String?

  FunctionName: String

  LogGroupName: String?

  LogRoleARN: String?

  Name: String
}

class `AWS::CloudFormation::ModuleDefaultVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::ModuleDefaultVersionProperties`?

  Type: "AWS::CloudFormation::ModuleDefaultVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::ModuleDefaultVersionProperties` {
  Arn: String?

  ModuleName: String?

  VersionId: String?
}

class `AWS::CloudFormation::ModuleVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::ModuleVersionProperties`

  Type: "AWS::CloudFormation::ModuleVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::ModuleVersionProperties` {
  ModuleName: String

  ModulePackage: String
}

class `AWS::CloudFormation::PublicTypeVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::PublicTypeVersionProperties`?

  Type: "AWS::CloudFormation::PublicTypeVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::PublicTypeVersionProperties` {
  Arn: String?

  LogDeliveryBucket: String?

  PublicVersionNumber: String?

  Type: String?

  TypeName: String?
}

class `AWS::CloudFormation::Publisher` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::PublisherProperties`

  Type: "AWS::CloudFormation::Publisher"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::PublisherProperties` {
  AcceptTermsAndConditions: Boolean

  ConnectionArn: String?
}

class `AWS::CloudFormation::ResourceDefaultVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::ResourceDefaultVersionProperties`?

  Type: "AWS::CloudFormation::ResourceDefaultVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::ResourceVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::ResourceVersionProperties`

  Type: "AWS::CloudFormation::ResourceVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::ResourceVersionProperties` {
  ExecutionRoleArn: String?

  LoggingConfig: `AWS::CloudFormation::TypeActivationLoggingConfig`?

  SchemaHandlerPackage: String

  TypeName: String
}

class `AWS::CloudFormation::Stack` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::StackProperties`

  Type: "AWS::CloudFormation::Stack"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::StackProperties` {
  NotificationARNs: Listing<String>?

  Parameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Tags: Listing<Tag>?

  TemplateURL: String

  TimeoutInMinutes: Number?
}

class `AWS::CloudFormation::StackSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::StackSetProperties`

  Type: "AWS::CloudFormation::StackSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::StackSetProperties` {
  AdministrationRoleARN: String?

  AutoDeployment: `AWS::CloudFormation::StackSetAutoDeployment`?

  CallAs: String?

  Capabilities: Listing<String>?

  Description: String?

  ExecutionRoleName: String?

  ManagedExecution: `AWS::CloudFormation::StackSetManagedExecution`?

  OperationPreferences: `AWS::CloudFormation::StackSetOperationPreferences`?

  Parameters: Listing<`AWS::CloudFormation::StackSetParameter`>?

  PermissionModel: String

  StackInstancesGroup: Listing<`AWS::CloudFormation::StackSetStackInstances`>?

  StackSetName: String

  Tags: Listing<Tag>?

  TemplateBody: String?

  TemplateURL: String?
}

class `AWS::CloudFormation::StackSetAutoDeployment` {
  Enabled: Boolean?

  RetainStacksOnAccountRemoval: Boolean?
}

class `AWS::CloudFormation::StackSetDeploymentTargets` {
  AccountFilterType: String?

  Accounts: Listing<String>?

  AccountsUrl: String?

  OrganizationalUnitIds: Listing<String>?
}

class `AWS::CloudFormation::StackSetManagedExecution` {
  Active: Boolean?
}

class `AWS::CloudFormation::StackSetOperationPreferences` {
  FailureToleranceCount: Number?

  FailureTolerancePercentage: Number?

  MaxConcurrentCount: Number?

  MaxConcurrentPercentage: Number?

  RegionConcurrencyType: String?

  RegionOrder: Listing<String>?
}

class `AWS::CloudFormation::StackSetParameter` {
  ParameterKey: String

  ParameterValue: String
}

class `AWS::CloudFormation::StackSetStackInstances` {
  DeploymentTargets: `AWS::CloudFormation::StackSetDeploymentTargets`

  ParameterOverrides: Listing<`AWS::CloudFormation::StackSetParameter`>?

  Regions: Listing<String>
}

class `AWS::CloudFormation::TypeActivation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::TypeActivationProperties`?

  Type: "AWS::CloudFormation::TypeActivation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::TypeActivationProperties` {
  AutoUpdate: Boolean?

  ExecutionRoleArn: String?

  LoggingConfig: `AWS::CloudFormation::TypeActivationLoggingConfig`?

  MajorVersion: String?

  PublicTypeArn: String?

  PublisherId: String?

  Type: String?

  TypeName: String?

  TypeNameAlias: String?

  VersionBump: String?
}

class `AWS::CloudFormation::WaitCondition` {
  Condition: String?

  CreationPolicy: Dynamic?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFormation::WaitConditionProperties`?

  Type: "AWS::CloudFormation::WaitCondition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFormation::WaitConditionProperties` {
  Count: Number?

  Handle: String?

  Timeout: String?
}

class `AWS::CloudFormation::WaitConditionHandle` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Transfer::UserSshPublicKey`?

  Type: "AWS::CloudFormation::WaitConditionHandle"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Transfer::UserSshPublicKey` {

}

class `AWS::CloudFront::CachePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFront::CachePolicyProperties`

  Type: "AWS::CloudFront::CachePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFront::CachePolicyProperties` {
  CachePolicyConfig: `AWS::CloudFront::CachePolicyCachePolicyConfig`
}

class `AWS::CloudFront::CachePolicyCachePolicyConfig` {
  Comment: String?

  DefaultTTL: Number

  MaxTTL: Number

  MinTTL: Number

  Name: String

  ParametersInCacheKeyAndForwardedToOrigin: `AWS::CloudFront::CachePolicyParametersInCacheKeyAndForwardedToOrigin`
}

class `AWS::CloudFront::OriginRequestPolicyCookiesConfig` {
  CookieBehavior: String

  Cookies: Listing<String>?
}

class `AWS::CloudFront::OriginRequestPolicyHeadersConfig` {
  HeaderBehavior: String

  Headers: Listing<String>?
}

class `AWS::CloudFront::CachePolicyParametersInCacheKeyAndForwardedToOrigin` {
  CookiesConfig: `AWS::CloudFront::OriginRequestPolicyCookiesConfig`

  EnableAcceptEncodingBrotli: Boolean?

  EnableAcceptEncodingGzip: Boolean

  HeadersConfig: `AWS::CloudFront::OriginRequestPolicyHeadersConfig`

  QueryStringsConfig: `AWS::CloudFront::OriginRequestPolicyQueryStringsConfig`
}

class `AWS::CloudFront::OriginRequestPolicyQueryStringsConfig` {
  QueryStringBehavior: String

  QueryStrings: Listing<String>?
}

class `AWS::CloudFront::CloudFrontOriginAccessIdentity` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFront::CloudFrontOriginAccessIdentityProperties`

  Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFront::CloudFrontOriginAccessIdentityProperties` {
  CloudFrontOriginAccessIdentityConfig: `AWS::CloudFront::CloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig`
}

class `AWS::CloudFront::CloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfig` {
  Comment: String
}

class `AWS::CloudFront::ContinuousDeploymentPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFront::ContinuousDeploymentPolicyProperties`

  Type: "AWS::CloudFront::ContinuousDeploymentPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFront::ContinuousDeploymentPolicyProperties` {
  ContinuousDeploymentPolicyConfig: `AWS::CloudFront::ContinuousDeploymentPolicyContinuousDeploymentPolicyConfig`
}

class `AWS::CloudFront::ContinuousDeploymentPolicyContinuousDeploymentPolicyConfig` {
  Enabled: Boolean

  SingleHeaderPolicyConfig: `AWS::CloudFront::ContinuousDeploymentPolicySingleHeaderPolicyConfig`?

  SingleWeightPolicyConfig: `AWS::CloudFront::ContinuousDeploymentPolicySingleWeightPolicyConfig`?

  StagingDistributionDnsNames: Listing<String>

  TrafficConfig: `AWS::CloudFront::ContinuousDeploymentPolicyTrafficConfig`?

  Type: String?
}

class `AWS::CloudFront::ContinuousDeploymentPolicySessionStickinessConfig` {
  IdleTTL: Number

  MaximumTTL: Number
}

class `AWS::CloudFront::ContinuousDeploymentPolicySingleHeaderPolicyConfig` {
  Header: String

  Value: String
}

class `AWS::CloudFront::ContinuousDeploymentPolicySingleWeightPolicyConfig` {
  SessionStickinessConfig: `AWS::CloudFront::ContinuousDeploymentPolicySessionStickinessConfig`?

  Weight: Number
}

class `AWS::CloudFront::ContinuousDeploymentPolicyTrafficConfig` {
  SingleHeaderConfig: `AWS::CloudFront::ContinuousDeploymentPolicySingleHeaderPolicyConfig`?

  SingleWeightConfig: `AWS::CloudFront::ContinuousDeploymentPolicySingleWeightPolicyConfig`?

  Type: String
}

class `AWS::CloudFront::Distribution` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFront::DistributionProperties`

  Type: "AWS::CloudFront::Distribution"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFront::DistributionProperties` {
  DistributionConfig: `AWS::CloudFront::DistributionDistributionConfig`

  Tags: Listing<Tag>?
}

class `AWS::CloudFront::DistributionCacheBehavior` {
  AllowedMethods: Listing<String>?

  CachePolicyId: String?

  CachedMethods: Listing<String>?

  Compress: Boolean?

  DefaultTTL: Number?

  FieldLevelEncryptionId: String?

  ForwardedValues: `AWS::CloudFront::DistributionForwardedValues`?

  FunctionAssociations: Listing<`AWS::CloudFront::DistributionFunctionAssociation`>?

  LambdaFunctionAssociations: Listing<`AWS::CloudFront::DistributionLambdaFunctionAssociation`>?

  MaxTTL: Number?

  MinTTL: Number?

  OriginRequestPolicyId: String?

  PathPattern: String

  RealtimeLogConfigArn: String?

  ResponseHeadersPolicyId: String?

  SmoothStreaming: Boolean?

  TargetOriginId: String

  TrustedKeyGroups: Listing<String>?

  TrustedSigners: Listing<String>?

  ViewerProtocolPolicy: String
}

class `AWS::CloudFront::DistributionCookies` {
  Forward: String

  WhitelistedNames: Listing<String>?
}

class `AWS::CloudFront::DistributionCustomErrorResponse` {
  ErrorCachingMinTTL: Number?

  ErrorCode: Number

  ResponseCode: Number?

  ResponsePagePath: String?
}

class `AWS::CloudFront::DistributionCustomOriginConfig` {
  HTTPPort: Number?

  HTTPSPort: Number?

  OriginKeepaliveTimeout: Number?

  OriginProtocolPolicy: String

  OriginReadTimeout: Number?

  OriginSSLProtocols: Listing<String>?
}

class `AWS::CloudFront::DistributionDefaultCacheBehavior` {
  AllowedMethods: Listing<String>?

  CachePolicyId: String?

  CachedMethods: Listing<String>?

  Compress: Boolean?

  DefaultTTL: Number?

  FieldLevelEncryptionId: String?

  ForwardedValues: `AWS::CloudFront::DistributionForwardedValues`?

  FunctionAssociations: Listing<`AWS::CloudFront::DistributionFunctionAssociation`>?

  LambdaFunctionAssociations: Listing<`AWS::CloudFront::DistributionLambdaFunctionAssociation`>?

  MaxTTL: Number?

  MinTTL: Number?

  OriginRequestPolicyId: String?

  RealtimeLogConfigArn: String?

  ResponseHeadersPolicyId: String?

  SmoothStreaming: Boolean?

  TargetOriginId: String

  TrustedKeyGroups: Listing<String>?

  TrustedSigners: Listing<String>?

  ViewerProtocolPolicy: String
}

class `AWS::CloudFront::DistributionDistributionConfig` {
  Aliases: Listing<String>?

  CNAMEs: Listing<String>?

  CacheBehaviors: Listing<`AWS::CloudFront::DistributionCacheBehavior`>?

  Comment: String?

  ContinuousDeploymentPolicyId: String?

  CustomErrorResponses: Listing<`AWS::CloudFront::DistributionCustomErrorResponse`>?

  CustomOrigin: `AWS::CloudFront::DistributionLegacyCustomOrigin`?

  DefaultCacheBehavior: `AWS::CloudFront::DistributionDefaultCacheBehavior`

  DefaultRootObject: String?

  Enabled: Boolean

  HttpVersion: String?

  IPV6Enabled: Boolean?

  Logging: `AWS::CloudFront::DistributionLogging`?

  OriginGroups: `AWS::CloudFront::DistributionOriginGroups`?

  Origins: Listing<`AWS::CloudFront::DistributionOrigin`>?

  PriceClass: String?

  Restrictions: `AWS::CloudFront::DistributionRestrictions`?

  S3Origin: `AWS::CloudFront::DistributionLegacyS3Origin`?

  Staging: Boolean?

  ViewerCertificate: `AWS::CloudFront::DistributionViewerCertificate`?

  WebACLId: String?
}

class `AWS::CloudFront::DistributionForwardedValues` {
  Cookies: `AWS::CloudFront::DistributionCookies`?

  Headers: Listing<String>?

  QueryString: Boolean

  QueryStringCacheKeys: Listing<String>?
}

class `AWS::CloudFront::DistributionFunctionAssociation` {
  EventType: String?

  FunctionARN: String?
}

class `AWS::CloudFront::DistributionGeoRestriction` {
  Locations: Listing<String>?

  RestrictionType: String
}

class `AWS::CloudFront::DistributionLambdaFunctionAssociation` {
  EventType: String?

  IncludeBody: Boolean?

  LambdaFunctionARN: String?
}

class `AWS::CloudFront::DistributionLegacyCustomOrigin` {
  DNSName: String

  HTTPPort: Number?

  HTTPSPort: Number?

  OriginProtocolPolicy: String

  OriginSSLProtocols: Listing<String>
}

class `AWS::CloudFront::DistributionLegacyS3Origin` {
  DNSName: String

  OriginAccessIdentity: String?
}

class `AWS::CloudFront::DistributionLogging` {
  Bucket: String

  IncludeCookies: Boolean?

  Prefix: String?
}

class `AWS::CloudFront::DistributionOrigin` {
  ConnectionAttempts: Number?

  ConnectionTimeout: Number?

  CustomOriginConfig: `AWS::CloudFront::DistributionCustomOriginConfig`?

  DomainName: String

  Id: String

  OriginAccessControlId: String?

  OriginCustomHeaders: Listing<`AWS::SES::ReceiptRuleAddHeaderAction`>?

  OriginPath: String?

  OriginShield: `AWS::CloudFront::DistributionOriginShield`?

  S3OriginConfig: `AWS::CloudFront::DistributionS3OriginConfig`?
}

class `AWS::SES::ReceiptRuleAddHeaderAction` {
  HeaderName: String

  HeaderValue: String
}

class `AWS::CloudFront::DistributionOriginGroup` {
  FailoverCriteria: `AWS::CloudFront::DistributionOriginGroupFailoverCriteria`

  Id: String

  Members: `AWS::CloudFront::DistributionOriginGroupMembers`
}

class `AWS::CloudFront::DistributionOriginGroupFailoverCriteria` {
  StatusCodes: `AWS::CloudFront::DistributionStatusCodes`
}

class `AWS::CloudFront::DistributionOriginGroupMember` {
  OriginId: String
}

class `AWS::CloudFront::DistributionOriginGroupMembers` {
  Items: Listing<`AWS::CloudFront::DistributionOriginGroupMember`>

  Quantity: Number
}

class `AWS::CloudFront::DistributionOriginGroups` {
  Items: Listing<`AWS::CloudFront::DistributionOriginGroup`>?

  Quantity: Number
}

class `AWS::CloudFront::DistributionOriginShield` {
  Enabled: Boolean?

  OriginShieldRegion: String?
}

class `AWS::CloudFront::DistributionRestrictions` {
  GeoRestriction: `AWS::CloudFront::DistributionGeoRestriction`
}

class `AWS::CloudFront::DistributionS3OriginConfig` {
  OriginAccessIdentity: String?
}

class `AWS::CloudFront::DistributionStatusCodes` {
  Items: Listing<Number>

  Quantity: Number
}

class `AWS::CloudFront::DistributionViewerCertificate` {
  AcmCertificateArn: String?

  CloudFrontDefaultCertificate: Boolean?

  IamCertificateId: String?

  MinimumProtocolVersion: String?

  SslSupportMethod: String?
}

class `AWS::CloudFront::Function` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFront::FunctionProperties`

  Type: "AWS::CloudFront::Function"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFront::FunctionProperties` {
  AutoPublish: Boolean?

  FunctionCode: String

  FunctionConfig: `AWS::CloudFront::FunctionFunctionConfig`

  FunctionMetadata: `AWS::CloudFront::FunctionFunctionMetadata`?

  Name: String
}

class `AWS::CloudFront::FunctionFunctionConfig` {
  Comment: String

  KeyValueStoreAssociations: Listing<`AWS::CloudFront::FunctionKeyValueStoreAssociation`>?

  Runtime: String
}

class `AWS::CloudFront::FunctionFunctionMetadata` {
  FunctionARN: String?
}

class `AWS::CloudFront::FunctionKeyValueStoreAssociation` {
  KeyValueStoreARN: String
}

class `AWS::CloudFront::KeyGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFront::KeyGroupProperties`

  Type: "AWS::CloudFront::KeyGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFront::KeyGroupProperties` {
  KeyGroupConfig: `AWS::CloudFront::KeyGroupKeyGroupConfig`
}

class `AWS::CloudFront::KeyGroupKeyGroupConfig` {
  Comment: String?

  Items: Listing<String>

  Name: String
}

class `AWS::CloudFront::KeyValueStore` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFront::KeyValueStoreProperties`

  Type: "AWS::CloudFront::KeyValueStore"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFront::KeyValueStoreProperties` {
  Comment: String?

  ImportSource: `AWS::CloudFront::KeyValueStoreImportSource`?

  Name: String
}

class `AWS::CloudFront::KeyValueStoreImportSource` {
  SourceArn: String

  SourceType: String
}

class `AWS::CloudFront::MonitoringSubscription` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFront::MonitoringSubscriptionProperties`

  Type: "AWS::CloudFront::MonitoringSubscription"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFront::MonitoringSubscriptionProperties` {
  DistributionId: String

  MonitoringSubscription: `AWS::CloudFront::MonitoringSubscriptionMonitoringSubscription`
}

class `AWS::CloudFront::MonitoringSubscriptionMonitoringSubscription` {
  RealtimeMetricsSubscriptionConfig: `AWS::CloudFront::MonitoringSubscriptionRealtimeMetricsSubscriptionConfig`?
}

class `AWS::CloudFront::MonitoringSubscriptionRealtimeMetricsSubscriptionConfig` {
  RealtimeMetricsSubscriptionStatus: String
}

class `AWS::CloudFront::OriginAccessControl` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFront::OriginAccessControlProperties`

  Type: "AWS::CloudFront::OriginAccessControl"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFront::OriginAccessControlProperties` {
  OriginAccessControlConfig: `AWS::CloudFront::OriginAccessControlOriginAccessControlConfig`
}

class `AWS::CloudFront::OriginAccessControlOriginAccessControlConfig` {
  Description: String?

  Name: String

  OriginAccessControlOriginType: String

  SigningBehavior: String

  SigningProtocol: String
}

class `AWS::CloudFront::OriginRequestPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFront::OriginRequestPolicyProperties`

  Type: "AWS::CloudFront::OriginRequestPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFront::OriginRequestPolicyProperties` {
  OriginRequestPolicyConfig: `AWS::CloudFront::OriginRequestPolicyOriginRequestPolicyConfig`
}

class `AWS::CloudFront::OriginRequestPolicyOriginRequestPolicyConfig` {
  Comment: String?

  CookiesConfig: `AWS::CloudFront::OriginRequestPolicyCookiesConfig`

  HeadersConfig: `AWS::CloudFront::OriginRequestPolicyHeadersConfig`

  Name: String

  QueryStringsConfig: `AWS::CloudFront::OriginRequestPolicyQueryStringsConfig`
}

class `AWS::CloudFront::PublicKey` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFront::PublicKeyProperties`

  Type: "AWS::CloudFront::PublicKey"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFront::PublicKeyProperties` {
  PublicKeyConfig: `AWS::CloudFront::PublicKeyPublicKeyConfig`
}

class `AWS::CloudFront::PublicKeyPublicKeyConfig` {
  CallerReference: String

  Comment: String?

  EncodedKey: String

  Name: String
}

class `AWS::CloudFront::RealtimeLogConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFront::RealtimeLogConfigProperties`

  Type: "AWS::CloudFront::RealtimeLogConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFront::RealtimeLogConfigProperties` {
  EndPoints: Listing<`AWS::CloudFront::RealtimeLogConfigEndPoint`>

  Fields: Listing<String>

  Name: String

  SamplingRate: Number
}

class `AWS::CloudFront::RealtimeLogConfigEndPoint` {
  KinesisStreamConfig: `AWS::CloudFront::RealtimeLogConfigKinesisStreamConfig`

  StreamType: String
}

class `AWS::CloudFront::RealtimeLogConfigKinesisStreamConfig` {
  RoleArn: String

  StreamArn: String
}

class `AWS::CloudFront::ResponseHeadersPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFront::ResponseHeadersPolicyProperties`

  Type: "AWS::CloudFront::ResponseHeadersPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFront::ResponseHeadersPolicyProperties` {
  ResponseHeadersPolicyConfig: `AWS::CloudFront::ResponseHeadersPolicyResponseHeadersPolicyConfig`
}

class `AWS::CloudFront::ResponseHeadersPolicyAccessControlExposeHeaders` {
  Items: Listing<String>
}

class `AWS::CloudFront::ResponseHeadersPolicyContentSecurityPolicy` {
  ContentSecurityPolicy: String

  Override: Boolean
}

class `AWS::CloudFront::ResponseHeadersPolicyContentTypeOptions` {
  Override: Boolean
}

class `AWS::CloudFront::ResponseHeadersPolicyCorsConfig` {
  AccessControlAllowCredentials: Boolean

  AccessControlAllowHeaders: `AWS::CloudFront::ResponseHeadersPolicyAccessControlExposeHeaders`

  AccessControlAllowMethods: `AWS::CloudFront::ResponseHeadersPolicyAccessControlExposeHeaders`

  AccessControlAllowOrigins: `AWS::CloudFront::ResponseHeadersPolicyAccessControlExposeHeaders`

  AccessControlExposeHeaders: `AWS::CloudFront::ResponseHeadersPolicyAccessControlExposeHeaders`?

  AccessControlMaxAgeSec: Number?

  OriginOverride: Boolean
}

class `AWS::CloudFront::ResponseHeadersPolicyCustomHeader` {
  Header: String

  Override: Boolean

  Value: String
}

class `AWS::CloudFront::ResponseHeadersPolicyCustomHeadersConfig` {
  Items: Listing<`AWS::CloudFront::ResponseHeadersPolicyCustomHeader`>
}

class `AWS::CloudFront::ResponseHeadersPolicyFrameOptions` {
  FrameOption: String

  Override: Boolean
}

class `AWS::CloudFront::ResponseHeadersPolicyReferrerPolicy` {
  Override: Boolean

  ReferrerPolicy: String
}

class `AWS::CloudFront::ResponseHeadersPolicyRemoveHeader` {
  Header: String
}

class `AWS::CloudFront::ResponseHeadersPolicyRemoveHeadersConfig` {
  Items: Listing<`AWS::CloudFront::ResponseHeadersPolicyRemoveHeader`>
}

class `AWS::CloudFront::ResponseHeadersPolicyResponseHeadersPolicyConfig` {
  Comment: String?

  CorsConfig: `AWS::CloudFront::ResponseHeadersPolicyCorsConfig`?

  CustomHeadersConfig: `AWS::CloudFront::ResponseHeadersPolicyCustomHeadersConfig`?

  Name: String

  RemoveHeadersConfig: `AWS::CloudFront::ResponseHeadersPolicyRemoveHeadersConfig`?

  SecurityHeadersConfig: `AWS::CloudFront::ResponseHeadersPolicySecurityHeadersConfig`?

  ServerTimingHeadersConfig: `AWS::CloudFront::ResponseHeadersPolicyServerTimingHeadersConfig`?
}

class `AWS::CloudFront::ResponseHeadersPolicySecurityHeadersConfig` {
  ContentSecurityPolicy: `AWS::CloudFront::ResponseHeadersPolicyContentSecurityPolicy`?

  ContentTypeOptions: `AWS::CloudFront::ResponseHeadersPolicyContentTypeOptions`?

  FrameOptions: `AWS::CloudFront::ResponseHeadersPolicyFrameOptions`?

  ReferrerPolicy: `AWS::CloudFront::ResponseHeadersPolicyReferrerPolicy`?

  StrictTransportSecurity: `AWS::CloudFront::ResponseHeadersPolicyStrictTransportSecurity`?

  XSSProtection: `AWS::CloudFront::ResponseHeadersPolicyXSSProtection`?
}

class `AWS::CloudFront::ResponseHeadersPolicyServerTimingHeadersConfig` {
  Enabled: Boolean

  SamplingRate: Number?
}

class `AWS::CloudFront::ResponseHeadersPolicyStrictTransportSecurity` {
  AccessControlMaxAgeSec: Number

  IncludeSubdomains: Boolean?

  Override: Boolean

  Preload: Boolean?
}

class `AWS::CloudFront::ResponseHeadersPolicyXSSProtection` {
  ModeBlock: Boolean?

  Override: Boolean

  Protection: Boolean

  ReportUri: String?
}

class `AWS::CloudFront::StreamingDistribution` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudFront::StreamingDistributionProperties`

  Type: "AWS::CloudFront::StreamingDistribution"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudFront::StreamingDistributionProperties` {
  StreamingDistributionConfig: `AWS::CloudFront::StreamingDistributionStreamingDistributionConfig`

  Tags: Listing<Tag>
}

class `AWS::CloudFront::StreamingDistributionLogging` {
  Bucket: String

  Enabled: Boolean

  Prefix: String
}

class `AWS::CloudFront::StreamingDistributionS3Origin` {
  DomainName: String

  OriginAccessIdentity: String
}

class `AWS::CloudFront::StreamingDistributionStreamingDistributionConfig` {
  Aliases: Listing<String>?

  Comment: String

  Enabled: Boolean

  Logging: `AWS::CloudFront::StreamingDistributionLogging`?

  PriceClass: String?

  S3Origin: `AWS::CloudFront::StreamingDistributionS3Origin`

  TrustedSigners: `AWS::CloudFront::StreamingDistributionTrustedSigners`
}

class `AWS::CloudFront::StreamingDistributionTrustedSigners` {
  AwsAccountNumbers: Listing<String>?

  Enabled: Boolean
}

class `AWS::CloudTrail::Channel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudTrail::ChannelProperties`?

  Type: "AWS::CloudTrail::Channel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudTrail::ChannelProperties` {
  Destinations: Listing<`AWS::CloudTrail::ChannelDestination`>?

  Name: String?

  Source: String?

  Tags: Listing<Tag>?
}

class `AWS::CloudTrail::ChannelDestination` {
  Location: String

  Type: String
}

class `AWS::CloudTrail::EventDataStore` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudTrail::EventDataStoreProperties`?

  Type: "AWS::CloudTrail::EventDataStore"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudTrail::EventDataStoreProperties` {
  AdvancedEventSelectors: Listing<`AWS::CloudTrail::EventDataStoreAdvancedEventSelector`>?

  BillingMode: String?

  FederationEnabled: Boolean?

  FederationRoleArn: String?

  IngestionEnabled: Boolean?

  InsightSelectors: Listing<`AWS::CloudTrail::TrailInsightSelector`>?

  InsightsDestination: String?

  KmsKeyId: String?

  MultiRegionEnabled: Boolean?

  Name: String?

  OrganizationEnabled: Boolean?

  RetentionPeriod: Number?

  Tags: Listing<Tag>?

  TerminationProtectionEnabled: Boolean?
}

class `AWS::CloudTrail::EventDataStoreAdvancedEventSelector` {
  FieldSelectors: Listing<`AWS::CloudTrail::TrailAdvancedFieldSelector`>

  Name: String?
}

class `AWS::CloudTrail::TrailAdvancedFieldSelector` {
  EndsWith: Listing<String>?

  Equals: Listing<String>?

  Field: String

  NotEndsWith: Listing<String>?

  NotEquals: Listing<String>?

  NotStartsWith: Listing<String>?

  StartsWith: Listing<String>?
}

class `AWS::CloudTrail::TrailInsightSelector` {
  InsightType: String?
}

class `AWS::CloudTrail::ResourcePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudTrail::ResourcePolicyProperties`

  Type: "AWS::CloudTrail::ResourcePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudTrail::ResourcePolicyProperties` {
  ResourceArn: String

  ResourcePolicy: Dynamic
}

class `AWS::CloudTrail::Trail` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudTrail::TrailProperties`

  Type: "AWS::CloudTrail::Trail"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudTrail::TrailProperties` {
  AdvancedEventSelectors: Listing<`AWS::CloudTrail::TrailAdvancedEventSelector`>?

  CloudWatchLogsLogGroupArn: String?

  CloudWatchLogsRoleArn: String?

  EnableLogFileValidation: Boolean?

  EventSelectors: Listing<`AWS::CloudTrail::TrailEventSelector`>?

  IncludeGlobalServiceEvents: Boolean?

  InsightSelectors: Listing<`AWS::CloudTrail::TrailInsightSelector`>?

  IsLogging: Boolean

  IsMultiRegionTrail: Boolean?

  IsOrganizationTrail: Boolean?

  KMSKeyId: String?

  S3BucketName: String

  S3KeyPrefix: String?

  SnsTopicName: String?

  Tags: Listing<Tag>?

  TrailName: String?
}

class `AWS::CloudTrail::TrailAdvancedEventSelector` {
  FieldSelectors: Listing<`AWS::CloudTrail::TrailAdvancedFieldSelector`>

  Name: String?
}

class `AWS::CloudTrail::TrailDataResource` {
  Type: String

  Values: Listing<String>?
}

class `AWS::CloudTrail::TrailEventSelector` {
  DataResources: Listing<`AWS::CloudTrail::TrailDataResource`>?

  ExcludeManagementEventSources: Listing<String>?

  IncludeManagementEvents: Boolean?

  ReadWriteType: String?
}

class `AWS::CloudWatch::Alarm` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudWatch::AlarmProperties`

  Type: "AWS::CloudWatch::Alarm"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudWatch::AlarmProperties` {
  ActionsEnabled: Boolean?

  AlarmActions: Listing<String>?

  AlarmDescription: String?

  AlarmName: String?

  ComparisonOperator: String

  DatapointsToAlarm: Number?

  Dimensions: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  EvaluateLowSampleCountPercentile: String?

  EvaluationPeriods: Number

  ExtendedStatistic: String?

  InsufficientDataActions: Listing<String>?

  MetricName: String?

  Metrics: Listing<`AWS::CloudWatch::AlarmMetricDataQuery`>?

  Namespace: String?

  OKActions: Listing<String>?

  Period: Number?

  Statistic: String?

  Threshold: Number?

  ThresholdMetricId: String?

  TreatMissingData: String?

  Unit: String?
}

class `AWS::CloudWatch::AlarmMetric` {
  Dimensions: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  MetricName: String?

  Namespace: String?
}

class `AWS::CloudWatch::AlarmMetricDataQuery` {
  AccountId: String?

  Expression: String?

  Id: String

  Label: String?

  MetricStat: `AWS::CloudWatch::AlarmMetricStat`?

  Period: Number?

  ReturnData: Boolean?
}

class `AWS::CloudWatch::AlarmMetricStat` {
  Metric: `AWS::CloudWatch::AlarmMetric`

  Period: Number

  Stat: String

  Unit: String?
}

class `AWS::CloudWatch::AnomalyDetector` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudWatch::AnomalyDetectorProperties`?

  Type: "AWS::CloudWatch::AnomalyDetector"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudWatch::AnomalyDetectorProperties` {
  Configuration: `AWS::CloudWatch::AnomalyDetectorConfiguration`?

  Dimensions: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  MetricMathAnomalyDetector: `AWS::CloudWatch::AnomalyDetectorMetricMathAnomalyDetector`?

  MetricName: String?

  Namespace: String?

  SingleMetricAnomalyDetector: `AWS::CloudWatch::AnomalyDetectorSingleMetricAnomalyDetector`?

  Stat: String?
}

class `AWS::CloudWatch::AnomalyDetectorConfiguration` {
  ExcludedTimeRanges: Listing<`AWS::SSMContacts::RotationCoverageTime`>?

  MetricTimeZone: String?
}

class `AWS::CloudWatch::AnomalyDetectorMetric` {
  Dimensions: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  MetricName: String

  Namespace: String
}

class `AWS::CloudWatch::AnomalyDetectorMetricDataQuery` {
  AccountId: String?

  Expression: String?

  Id: String

  Label: String?

  MetricStat: `AWS::CloudWatch::AnomalyDetectorMetricStat`?

  Period: Number?

  ReturnData: Boolean?
}

class `AWS::CloudWatch::AnomalyDetectorMetricMathAnomalyDetector` {
  MetricDataQueries: Listing<`AWS::CloudWatch::AnomalyDetectorMetricDataQuery`>?
}

class `AWS::CloudWatch::AnomalyDetectorMetricStat` {
  Metric: `AWS::CloudWatch::AnomalyDetectorMetric`

  Period: Number

  Stat: String

  Unit: String?
}

class `AWS::SSMContacts::RotationCoverageTime` {
  EndTime: String

  StartTime: String
}

class `AWS::CloudWatch::AnomalyDetectorSingleMetricAnomalyDetector` {
  Dimensions: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  MetricName: String?

  Namespace: String?

  Stat: String?
}

class `AWS::CloudWatch::CompositeAlarm` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudWatch::CompositeAlarmProperties`

  Type: "AWS::CloudWatch::CompositeAlarm"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudWatch::CompositeAlarmProperties` {
  ActionsEnabled: Boolean?

  ActionsSuppressor: String?

  ActionsSuppressorExtensionPeriod: Number?

  ActionsSuppressorWaitPeriod: Number?

  AlarmActions: Listing<String>?

  AlarmDescription: String?

  AlarmName: String?

  AlarmRule: String

  InsufficientDataActions: Listing<String>?

  OKActions: Listing<String>?
}

class `AWS::CloudWatch::Dashboard` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudWatch::DashboardProperties`

  Type: "AWS::CloudWatch::Dashboard"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudWatch::DashboardProperties` {
  DashboardBody: String

  DashboardName: String?
}

class `AWS::CloudWatch::InsightRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudWatch::InsightRuleProperties`

  Type: "AWS::CloudWatch::InsightRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudWatch::InsightRuleProperties` {
  RuleBody: String

  RuleName: String

  RuleState: String

  Tags: `AWS::Transfer::UserSshPublicKey`?
}

class `AWS::CloudWatch::MetricStream` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CloudWatch::MetricStreamProperties`

  Type: "AWS::CloudWatch::MetricStream"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CloudWatch::MetricStreamProperties` {
  ExcludeFilters: Listing<`AWS::CloudWatch::MetricStreamMetricStreamFilter`>?

  FirehoseArn: String

  IncludeFilters: Listing<`AWS::CloudWatch::MetricStreamMetricStreamFilter`>?

  IncludeLinkedAccountsMetrics: Boolean?

  Name: String?

  OutputFormat: String

  RoleArn: String

  StatisticsConfigurations: Listing<`AWS::CloudWatch::MetricStreamMetricStreamStatisticsConfiguration`>?

  Tags: Listing<Tag>?
}

class `AWS::CloudWatch::MetricStreamMetricStreamFilter` {
  MetricNames: Listing<String>?

  Namespace: String
}

class `AWS::CloudWatch::MetricStreamMetricStreamStatisticsConfiguration` {
  AdditionalStatistics: Listing<String>

  IncludeMetrics: Listing<`AWS::CloudWatch::MetricStreamMetricStreamStatisticsMetric`>
}

class `AWS::CloudWatch::MetricStreamMetricStreamStatisticsMetric` {
  MetricName: String

  Namespace: String
}

class `AWS::CodeArtifact::Domain` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeArtifact::DomainProperties`

  Type: "AWS::CodeArtifact::Domain"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeArtifact::DomainProperties` {
  DomainName: String

  EncryptionKey: String?

  PermissionsPolicyDocument: Dynamic?

  Tags: Listing<Tag>?
}

class `AWS::CodeArtifact::Repository` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeArtifact::RepositoryProperties`

  Type: "AWS::CodeArtifact::Repository"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeArtifact::RepositoryProperties` {
  Description: String?

  DomainName: String

  DomainOwner: String?

  ExternalConnections: Listing<String>?

  PermissionsPolicyDocument: Dynamic?

  RepositoryName: String

  Tags: Listing<Tag>?

  Upstreams: Listing<String>?
}

class `AWS::CodeBuild::Project` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeBuild::ProjectProperties`

  Type: "AWS::CodeBuild::Project"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeBuild::ProjectProperties` {
  Artifacts: `AWS::CodeBuild::ProjectArtifacts`

  BadgeEnabled: Boolean?

  BuildBatchConfig: `AWS::CodeBuild::ProjectProjectBuildBatchConfig`?

  Cache: `AWS::CodeBuild::ProjectProjectCache`?

  ConcurrentBuildLimit: Number?

  Description: String?

  EncryptionKey: String?

  Environment: `AWS::CodeBuild::ProjectEnvironment`

  FileSystemLocations: Listing<`AWS::CodeBuild::ProjectProjectFileSystemLocation`>?

  LogsConfig: `AWS::CodeBuild::ProjectLogsConfig`?

  Name: String?

  QueuedTimeoutInMinutes: Number?

  ResourceAccessRole: String?

  SecondaryArtifacts: Listing<`AWS::CodeBuild::ProjectArtifacts`>?

  SecondarySourceVersions: Listing<`AWS::CodeBuild::ProjectProjectSourceVersion`>?

  SecondarySources: Listing<`AWS::CodeBuild::ProjectSource`>?

  ServiceRole: String

  Source: `AWS::CodeBuild::ProjectSource`

  SourceVersion: String?

  Tags: Listing<Tag>?

  TimeoutInMinutes: Number?

  Triggers: `AWS::CodeBuild::ProjectProjectTriggers`?

  Visibility: String?

  VpcConfig: `AWS::CodeBuild::ProjectVpcConfig`?
}

class `AWS::CodeBuild::ProjectArtifacts` {
  ArtifactIdentifier: String?

  EncryptionDisabled: Boolean?

  Location: String?

  Name: String?

  NamespaceType: String?

  OverrideArtifactName: Boolean?

  Packaging: String?

  Path: String?

  Type: String
}

class `AWS::CodeBuild::ProjectBatchRestrictions` {
  ComputeTypesAllowed: Listing<String>?

  MaximumBuildsAllowed: Number?
}

class `AWS::CodeBuild::ProjectBuildStatusConfig` {
  Context: String?

  TargetUrl: String?
}

class `AWS::CodeBuild::ProjectCloudWatchLogsConfig` {
  GroupName: String?

  Status: String

  StreamName: String?
}

class `AWS::CodeBuild::ProjectEnvironment` {
  Certificate: String?

  ComputeType: String?

  EnvironmentVariables: Listing<`AWS::CodeBuild::ProjectEnvironmentVariable`>?

  Image: String

  ImagePullCredentialsType: String?

  PrivilegedMode: Boolean?

  RegistryCredential: `AWS::CodeBuild::ProjectRegistryCredential`?

  Type: String?
}

class `AWS::CodeBuild::ProjectEnvironmentVariable` {
  Name: String

  Type: String?

  Value: String
}

class `AWS::CodeBuild::ProjectGitSubmodulesConfig` {
  FetchSubmodules: Boolean
}

class `AWS::CodeBuild::ProjectLogsConfig` {
  CloudWatchLogs: `AWS::CodeBuild::ProjectCloudWatchLogsConfig`?

  S3Logs: `AWS::CodeBuild::ProjectS3LogsConfig`?
}

class `AWS::CodeBuild::ProjectProjectBuildBatchConfig` {
  BatchReportMode: String?

  CombineArtifacts: Boolean?

  Restrictions: `AWS::CodeBuild::ProjectBatchRestrictions`?

  ServiceRole: String?

  TimeoutInMins: Number?
}

class `AWS::CodeBuild::ProjectProjectCache` {
  Location: String?

  Modes: Listing<String>?

  Type: String
}

class `AWS::CodeBuild::ProjectProjectFileSystemLocation` {
  Identifier: String

  Location: String

  MountOptions: String?

  MountPoint: String

  Type: String
}

class `AWS::CodeBuild::ProjectProjectFleet` {
  FleetArn: String?
}

class `AWS::CodeBuild::ProjectProjectSourceVersion` {
  SourceIdentifier: String

  SourceVersion: String?
}

class `AWS::CodeBuild::ProjectProjectTriggers` {
  BuildType: String?

  FilterGroups: Listing<`AWS::Transfer::UserSshPublicKey`>?

  Webhook: Boolean?
}

class `AWS::CodeBuild::ProjectRegistryCredential` {
  Credential: String

  CredentialProvider: String
}

class `AWS::CodeBuild::ProjectS3LogsConfig` {
  EncryptionDisabled: Boolean?

  Location: String?

  Status: String
}

class `AWS::CodeBuild::ProjectSource` {
  Auth: `AWS::CodeBuild::ProjectSourceAuth`?

  BuildSpec: String?

  BuildStatusConfig: `AWS::CodeBuild::ProjectBuildStatusConfig`?

  GitCloneDepth: Number?

  GitSubmodulesConfig: `AWS::CodeBuild::ProjectGitSubmodulesConfig`?

  InsecureSsl: Boolean?

  Location: String?

  ReportBuildStatus: Boolean?

  SourceIdentifier: String?

  Type: String
}

class `AWS::CodeBuild::ProjectSourceAuth` {
  Resource: String?

  Type: String
}

class `AWS::CodeBuild::ProjectVpcConfig` {
  SecurityGroupIds: Listing<String>?

  Subnets: Listing<String>?

  VpcId: String?
}

class `AWS::CodeBuild::ProjectWebhookFilter` {
  ExcludeMatchedPattern: Boolean?

  Pattern: String

  Type: String
}

class `AWS::CodeBuild::ReportGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeBuild::ReportGroupProperties`

  Type: "AWS::CodeBuild::ReportGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeBuild::ReportGroupProperties` {
  DeleteReports: Boolean?

  ExportConfig: `AWS::CodeBuild::ReportGroupReportExportConfig`

  Name: String?

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::CodeBuild::ReportGroupReportExportConfig` {
  ExportConfigType: String

  S3Destination: `AWS::CodeBuild::ReportGroupS3ReportExportConfig`?
}

class `AWS::CodeBuild::ReportGroupS3ReportExportConfig` {
  Bucket: String

  BucketOwner: String?

  EncryptionDisabled: Boolean?

  EncryptionKey: String?

  Packaging: String?

  Path: String?
}

class `AWS::CodeBuild::SourceCredential` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeBuild::SourceCredentialProperties`

  Type: "AWS::CodeBuild::SourceCredential"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeBuild::SourceCredentialProperties` {
  AuthType: String

  ServerType: String

  Token: String

  Username: String?
}

class `AWS::CodeCommit::Repository` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeCommit::RepositoryProperties`

  Type: "AWS::CodeCommit::Repository"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeCommit::RepositoryProperties` {
  Code: `AWS::CodeCommit::RepositoryCode`?

  KmsKeyId: String?

  RepositoryDescription: String?

  RepositoryName: String

  Tags: Listing<Tag>?

  Triggers: Listing<`AWS::CodeCommit::RepositoryRepositoryTrigger`>?
}

class `AWS::CodeCommit::RepositoryCode` {
  BranchName: String?

  S3: `AWS::CodeStar::GitHubRepositoryS3`
}

class `AWS::CodeCommit::RepositoryRepositoryTrigger` {
  Branches: Listing<String>?

  CustomData: String?

  DestinationArn: String

  Events: Listing<String>

  Name: String
}

class `AWS::CodeStar::GitHubRepositoryS3` {
  Bucket: String

  Key: String

  ObjectVersion: String?
}

class `AWS::CodeDeploy::Application` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeDeploy::ApplicationProperties`?

  Type: "AWS::CodeDeploy::Application"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeDeploy::ApplicationProperties` {
  ApplicationName: String?

  ComputePlatform: String?

  Tags: Listing<Tag>?
}

class `AWS::CodeDeploy::DeploymentConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeDeploy::DeploymentConfigProperties`?

  Type: "AWS::CodeDeploy::DeploymentConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeDeploy::DeploymentConfigProperties` {
  ComputePlatform: String?

  DeploymentConfigName: String?

  MinimumHealthyHosts: `AWS::SageMaker::EndpointCapacitySize`?

  TrafficRoutingConfig: `AWS::CodeDeploy::DeploymentConfigTrafficRoutingConfig`?

  ZonalConfig: `AWS::CodeDeploy::DeploymentConfigZonalConfig`?
}

class `AWS::CodeDeploy::DeploymentConfigTimeBasedCanary` {
  CanaryInterval: Number

  CanaryPercentage: Number
}

class `AWS::CodeDeploy::DeploymentConfigTimeBasedLinear` {
  LinearInterval: Number

  LinearPercentage: Number
}

class `AWS::CodeDeploy::DeploymentConfigTrafficRoutingConfig` {
  TimeBasedCanary: `AWS::CodeDeploy::DeploymentConfigTimeBasedCanary`?

  TimeBasedLinear: `AWS::CodeDeploy::DeploymentConfigTimeBasedLinear`?

  Type: String
}

class `AWS::CodeDeploy::DeploymentConfigZonalConfig` {
  FirstZoneMonitorDurationInSeconds: Number?

  MinimumHealthyHostsPerZone: `AWS::SageMaker::EndpointCapacitySize`?

  MonitorDurationInSeconds: Number?
}

class `AWS::CodeDeploy::DeploymentGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeDeploy::DeploymentGroupProperties`

  Type: "AWS::CodeDeploy::DeploymentGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeDeploy::DeploymentGroupProperties` {
  AlarmConfiguration: `AWS::CodeDeploy::DeploymentGroupAlarmConfiguration`?

  ApplicationName: String

  AutoRollbackConfiguration: `AWS::CodeDeploy::DeploymentGroupAutoRollbackConfiguration`?

  AutoScalingGroups: Listing<String>?

  BlueGreenDeploymentConfiguration: `AWS::CodeDeploy::DeploymentGroupBlueGreenDeploymentConfiguration`?

  Deployment: `AWS::CodeDeploy::DeploymentGroupDeployment`?

  DeploymentConfigName: String?

  DeploymentGroupName: String?

  DeploymentStyle: `AWS::CodeDeploy::DeploymentGroupDeploymentStyle`?

  ECSServices: Listing<`AWS::CodeDeploy::DeploymentGroupECSService`>?

  Ec2TagFilters: Listing<`AWS::Events::EventBusPolicyCondition`>?

  Ec2TagSet: `AWS::CodeDeploy::DeploymentGroupEC2TagSet`?

  LoadBalancerInfo: `AWS::CodeDeploy::DeploymentGroupLoadBalancerInfo`?

  OnPremisesInstanceTagFilters: Listing<`AWS::Events::EventBusPolicyCondition`>?

  OnPremisesTagSet: `AWS::CodeDeploy::DeploymentGroupOnPremisesTagSet`?

  OutdatedInstancesStrategy: String?

  ServiceRoleArn: String

  Tags: Listing<Tag>?

  TerminationHookEnabled: Boolean?

  TriggerConfigurations: Listing<`AWS::CodeDeploy::DeploymentGroupTriggerConfig`>?
}

class `AWS::WAFv2::RuleGroupLabelSummary` {
  Name: String?
}

class `AWS::CodeDeploy::DeploymentGroupAlarmConfiguration` {
  Alarms: Listing<`AWS::WAFv2::RuleGroupLabelSummary`>?

  Enabled: Boolean?

  IgnorePollAlarmFailure: Boolean?
}

class `AWS::CodeDeploy::DeploymentGroupAutoRollbackConfiguration` {
  Enabled: Boolean?

  Events: Listing<String>?
}

class `AWS::CodeDeploy::DeploymentGroupBlueGreenDeploymentConfiguration` {
  DeploymentReadyOption: `AWS::CodeDeploy::DeploymentGroupDeploymentReadyOption`?

  GreenFleetProvisioningOption: `AWS::NetworkFirewall::FirewallPolicyStatefulRuleGroupOverride`?

  TerminateBlueInstancesOnDeploymentSuccess: `AWS::CodeDeploy::DeploymentGroupBlueInstanceTerminationOption`?
}

class `AWS::CodeDeploy::DeploymentGroupBlueInstanceTerminationOption` {
  Action: String?

  TerminationWaitTimeInMinutes: Number?
}

class `AWS::CodeDeploy::DeploymentGroupDeployment` {
  Description: String?

  IgnoreApplicationStopFailures: Boolean?

  Revision: `AWS::CodeDeploy::DeploymentGroupRevisionLocation`
}

class `AWS::CodeDeploy::DeploymentGroupDeploymentReadyOption` {
  ActionOnTimeout: String?

  WaitTimeInMinutes: Number?
}

class `AWS::CodeDeploy::DeploymentGroupDeploymentStyle` {
  DeploymentOption: String?

  DeploymentType: String?
}

class `AWS::Events::EventBusPolicyCondition` {
  Key: String?

  Type: String?

  Value: String?
}

class `AWS::CodeDeploy::DeploymentGroupEC2TagSet` {
  Ec2TagSetList: Listing<`AWS::CodeDeploy::DeploymentGroupEC2TagSetListObject`>?
}

class `AWS::CodeDeploy::DeploymentGroupEC2TagSetListObject` {
  Ec2TagGroup: Listing<`AWS::Events::EventBusPolicyCondition`>?
}

class `AWS::CodeDeploy::DeploymentGroupECSService` {
  ClusterName: String

  ServiceName: String
}

class `AWS::CodeDeploy::DeploymentGroupGitHubLocation` {
  CommitId: String

  Repository: String
}

class `AWS::NetworkFirewall::FirewallPolicyStatefulRuleGroupOverride` {
  Action: String?
}

class `AWS::CodeDeploy::DeploymentGroupLoadBalancerInfo` {
  ElbInfoList: Listing<`AWS::WAFv2::RuleGroupLabelSummary`>?

  TargetGroupInfoList: Listing<`AWS::WAFv2::RuleGroupLabelSummary`>?

  TargetGroupPairInfoList: Listing<`AWS::CodeDeploy::DeploymentGroupTargetGroupPairInfo`>?
}

class `AWS::CodeDeploy::DeploymentGroupOnPremisesTagSet` {
  OnPremisesTagSetList: Listing<`AWS::CodeDeploy::DeploymentGroupOnPremisesTagSetListObject`>?
}

class `AWS::CodeDeploy::DeploymentGroupOnPremisesTagSetListObject` {
  OnPremisesTagGroup: Listing<`AWS::Events::EventBusPolicyCondition`>?
}

class `AWS::CodeDeploy::DeploymentGroupRevisionLocation` {
  GitHubLocation: `AWS::CodeDeploy::DeploymentGroupGitHubLocation`?

  RevisionType: String?

  S3Location: `AWS::CodeDeploy::DeploymentGroupS3Location`?
}

class `AWS::CodeDeploy::DeploymentGroupS3Location` {
  Bucket: String

  BundleType: String?

  ETag: String?

  Key: String

  Version: String?
}

class `AWS::CodeDeploy::DeploymentGroupTargetGroupPairInfo` {
  ProdTrafficRoute: `AWS::CodeDeploy::DeploymentGroupTrafficRoute`?

  TargetGroups: Listing<`AWS::WAFv2::RuleGroupLabelSummary`>?

  TestTrafficRoute: `AWS::CodeDeploy::DeploymentGroupTrafficRoute`?
}

class `AWS::CodeDeploy::DeploymentGroupTrafficRoute` {
  ListenerArns: Listing<String>?
}

class `AWS::CodeDeploy::DeploymentGroupTriggerConfig` {
  TriggerEvents: Listing<String>?

  TriggerName: String?

  TriggerTargetArn: String?
}

class `AWS::CodeGuruProfiler::ProfilingGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeGuruProfiler::ProfilingGroupProperties`

  Type: "AWS::CodeGuruProfiler::ProfilingGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeGuruProfiler::ProfilingGroupProperties` {
  AgentPermissions: `AWS::CodeGuruProfiler::ProfilingGroupAgentPermissions`?

  AnomalyDetectionNotificationConfiguration: Listing<`AWS::CodeGuruProfiler::ProfilingGroupChannel`>?

  ComputePlatform: String?

  ProfilingGroupName: String

  Tags: Listing<Tag>?
}

class `AWS::CodeGuruProfiler::ProfilingGroupAgentPermissions` {
  Principals: Listing<String>
}

class `AWS::CodeGuruProfiler::ProfilingGroupChannel` {
  channelId: String?

  channelUri: String
}

class `AWS::CodeGuruReviewer::RepositoryAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeGuruReviewer::RepositoryAssociationProperties`

  Type: "AWS::CodeGuruReviewer::RepositoryAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeGuruReviewer::RepositoryAssociationProperties` {
  BucketName: String?

  ConnectionArn: String?

  Name: String

  Owner: String?

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::CodePipeline::CustomActionType` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodePipeline::CustomActionTypeProperties`

  Type: "AWS::CodePipeline::CustomActionType"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodePipeline::CustomActionTypeProperties` {
  Category: String

  ConfigurationProperties: Listing<`AWS::CodePipeline::CustomActionTypeConfigurationProperties`>?

  InputArtifactDetails: `AWS::CodePipeline::CustomActionTypeArtifactDetails`

  OutputArtifactDetails: `AWS::CodePipeline::CustomActionTypeArtifactDetails`

  Provider: String

  Settings: `AWS::CodePipeline::CustomActionTypeSettings`?

  Tags: Listing<Tag>?

  Version: String
}

class `AWS::CodePipeline::CustomActionTypeArtifactDetails` {
  MaximumCount: Number

  MinimumCount: Number
}

class `AWS::CodePipeline::CustomActionTypeConfigurationProperties` {
  Description: String?

  Key: Boolean

  Name: String

  Queryable: Boolean?

  Required: Boolean

  Secret: Boolean

  Type: String?
}

class `AWS::CodePipeline::CustomActionTypeSettings` {
  EntityUrlTemplate: String?

  ExecutionUrlTemplate: String?

  RevisionUrlTemplate: String?

  ThirdPartyConfigurationUrl: String?
}

class `AWS::CodePipeline::Pipeline` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodePipeline::PipelineProperties`

  Type: "AWS::CodePipeline::Pipeline"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodePipeline::PipelineProperties` {
  ArtifactStore: `AWS::CodePipeline::PipelineArtifactStore`?

  ArtifactStores: Listing<`AWS::CodePipeline::PipelineArtifactStoreMap`>?

  DisableInboundStageTransitions: Listing<`AWS::CodePipeline::PipelineStageTransition`>?

  Name: String?

  PipelineType: String?

  RestartExecutionOnUpdate: Boolean?

  RoleArn: String

  Stages: Listing<`AWS::CodePipeline::PipelineStageDeclaration`>

  Tags: Listing<Tag>?

  Triggers: Listing<`AWS::CodePipeline::PipelinePipelineTriggerDeclaration`>?

  Variables: Listing<`AWS::CodePipeline::PipelineVariableDeclaration`>?
}

class `AWS::CodePipeline::PipelineActionDeclaration` {
  ActionTypeId: `AWS::CodePipeline::PipelineActionTypeId`

  Configuration: Dynamic?

  InputArtifacts: Listing<`AWS::WAFv2::WebACLSingleQueryArgument`>?

  Name: String

  Namespace: String?

  OutputArtifacts: Listing<`AWS::WAFv2::WebACLSingleQueryArgument`>?

  Region: String?

  RoleArn: String?

  RunOrder: Number?
}

class `AWS::CodePipeline::PipelineActionTypeId` {
  Category: String

  Owner: String

  Provider: String

  Version: String
}

class `AWS::CodePipeline::PipelineArtifactStore` {
  EncryptionKey: `AWS::CodePipeline::PipelineEncryptionKey`?

  Location: String

  Type: String
}

class `AWS::CodePipeline::PipelineArtifactStoreMap` {
  ArtifactStore: `AWS::CodePipeline::PipelineArtifactStore`

  Region: String
}

class `AWS::CodePipeline::PipelineEncryptionKey` {
  Id: String

  Type: String
}

class `AWS::CodePipeline::PipelineGitConfiguration` {
  Push: Listing<`AWS::CodePipeline::PipelineGitPushFilter`>?

  SourceActionName: String
}

class `AWS::CodePipeline::PipelineGitPushFilter` {
  Tags: `AWS::CodePipeline::PipelineGitTagFilterCriteria`?
}

class `AWS::CodePipeline::PipelineGitTagFilterCriteria` {
  Excludes: Listing<String>?

  Includes: Listing<String>?
}

class `AWS::WAFv2::WebACLSingleQueryArgument` {
  Name: String
}

class `AWS::CodePipeline::PipelinePipelineTriggerDeclaration` {
  GitConfiguration: `AWS::CodePipeline::PipelineGitConfiguration`?

  ProviderType: String
}

class `AWS::CodePipeline::PipelineStageDeclaration` {
  Actions: Listing<`AWS::CodePipeline::PipelineActionDeclaration`>

  Blockers: Listing<`AWS::IoTAnalytics::DatastoreColumn`>?

  Name: String
}

class `AWS::CodePipeline::PipelineStageTransition` {
  Reason: String

  StageName: String
}

class `AWS::CodePipeline::PipelineVariableDeclaration` {
  DefaultValue: String?

  Description: String?

  Name: String
}

class `AWS::CodePipeline::Webhook` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodePipeline::WebhookProperties`

  Type: "AWS::CodePipeline::Webhook"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodePipeline::WebhookProperties` {
  Authentication: String

  AuthenticationConfiguration: `AWS::CodePipeline::WebhookWebhookAuthConfiguration`

  Filters: Listing<`AWS::CodePipeline::WebhookWebhookFilterRule`>

  Name: String?

  RegisterWithThirdParty: Boolean?

  TargetAction: String

  TargetPipeline: String

  TargetPipelineVersion: Number
}

class `AWS::CodePipeline::WebhookWebhookAuthConfiguration` {
  AllowedIPRange: String?

  SecretToken: String?
}

class `AWS::CodePipeline::WebhookWebhookFilterRule` {
  JsonPath: String

  MatchEquals: String?
}

class `AWS::CodeStar::GitHubRepository` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeStar::GitHubRepositoryProperties`

  Type: "AWS::CodeStar::GitHubRepository"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeStar::GitHubRepositoryProperties` {
  Code: `AWS::CodeStar::GitHubRepositoryCode`?

  ConnectionArn: String?

  EnableIssues: Boolean?

  IsPrivate: Boolean?

  RepositoryAccessToken: String?

  RepositoryDescription: String?

  RepositoryName: String

  RepositoryOwner: String
}

class `AWS::CodeStar::GitHubRepositoryCode` {
  S3: `AWS::CodeStar::GitHubRepositoryS3`
}

class `AWS::CodeStarConnections::Connection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeStarConnections::ConnectionProperties`

  Type: "AWS::CodeStarConnections::Connection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeStarConnections::ConnectionProperties` {
  ConnectionName: String

  HostArn: String?

  ProviderType: String?

  Tags: Listing<Tag>?
}

class `AWS::CodeStarConnections::RepositoryLink` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeStarConnections::RepositoryLinkProperties`

  Type: "AWS::CodeStarConnections::RepositoryLink"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeStarConnections::RepositoryLinkProperties` {
  ConnectionArn: String

  EncryptionKeyArn: String?

  OwnerId: String

  RepositoryName: String

  Tags: Listing<Tag>?
}

class `AWS::CodeStarConnections::SyncConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeStarConnections::SyncConfigurationProperties`

  Type: "AWS::CodeStarConnections::SyncConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeStarConnections::SyncConfigurationProperties` {
  Branch: String

  ConfigFile: String

  RepositoryLinkId: String

  ResourceName: String

  RoleArn: String

  SyncType: String
}

class `AWS::CodeStarNotifications::NotificationRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CodeStarNotifications::NotificationRuleProperties`

  Type: "AWS::CodeStarNotifications::NotificationRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CodeStarNotifications::NotificationRuleProperties` {
  CreatedBy: String?

  DetailType: String

  EventTypeId: String?

  EventTypeIds: Listing<String>

  Name: String

  Resource: String

  Status: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  TargetAddress: String?

  Targets: Listing<`AWS::CodeStarNotifications::NotificationRuleTarget`>
}

class `AWS::CodeStarNotifications::NotificationRuleTarget` {
  TargetAddress: String

  TargetType: String
}

class `AWS::Cognito::IdentityPool` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cognito::IdentityPoolProperties`

  Type: "AWS::Cognito::IdentityPool"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cognito::IdentityPoolProperties` {
  AllowClassicFlow: Boolean?

  AllowUnauthenticatedIdentities: Boolean

  CognitoEvents: Dynamic?

  CognitoIdentityProviders: Listing<`AWS::Cognito::IdentityPoolCognitoIdentityProvider`>?

  CognitoStreams: `AWS::Cognito::IdentityPoolCognitoStreams`?

  DeveloperProviderName: String?

  IdentityPoolName: String?

  OpenIdConnectProviderARNs: Listing<String>?

  PushSync: `AWS::Cognito::IdentityPoolPushSync`?

  SamlProviderARNs: Listing<String>?

  SupportedLoginProviders: Dynamic?
}

class `AWS::Cognito::IdentityPoolCognitoIdentityProvider` {
  ClientId: String?

  ProviderName: String?

  ServerSideTokenCheck: Boolean?
}

class `AWS::Cognito::IdentityPoolCognitoStreams` {
  RoleArn: String?

  StreamName: String?

  StreamingStatus: String?
}

class `AWS::Cognito::IdentityPoolPushSync` {
  ApplicationArns: Listing<String>?

  RoleArn: String?
}

class `AWS::Cognito::IdentityPoolPrincipalTag` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cognito::IdentityPoolPrincipalTagProperties`

  Type: "AWS::Cognito::IdentityPoolPrincipalTag"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cognito::IdentityPoolPrincipalTagProperties` {
  IdentityPoolId: String

  IdentityProviderName: String

  PrincipalTags: Dynamic?

  UseDefaults: Boolean?
}

class `AWS::Cognito::IdentityPoolRoleAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cognito::IdentityPoolRoleAttachmentProperties`

  Type: "AWS::Cognito::IdentityPoolRoleAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cognito::IdentityPoolRoleAttachmentProperties` {
  IdentityPoolId: String

  RoleMappings: Dynamic?

  Roles: Dynamic?
}

class `AWS::Cognito::IdentityPoolRoleAttachmentMappingRule` {
  Claim: String

  MatchType: String

  RoleARN: String

  Value: String
}

class `AWS::Cognito::IdentityPoolRoleAttachmentRoleMapping` {
  AmbiguousRoleResolution: String?

  IdentityProvider: String?

  RulesConfiguration: `AWS::Cognito::IdentityPoolRoleAttachmentRulesConfigurationType`?

  Type: String
}

class `AWS::Cognito::IdentityPoolRoleAttachmentRulesConfigurationType` {
  Rules: Listing<`AWS::Cognito::IdentityPoolRoleAttachmentMappingRule`>
}

class `AWS::Cognito::LogDeliveryConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cognito::LogDeliveryConfigurationProperties`

  Type: "AWS::Cognito::LogDeliveryConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cognito::LogDeliveryConfigurationProperties` {
  LogConfigurations: Listing<`AWS::Cognito::LogDeliveryConfigurationLogConfiguration`>?

  UserPoolId: String
}

class `AWS::Cognito::LogDeliveryConfigurationLogConfiguration` {
  CloudWatchLogsConfiguration: `AWS::StepFunctions::StateMachineCloudWatchLogsLogGroup`?

  EventSource: String?

  LogLevel: String?
}

class `AWS::Cognito::UserPool` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cognito::UserPoolProperties`?

  Type: "AWS::Cognito::UserPool"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cognito::UserPoolProperties` {
  AccountRecoverySetting: `AWS::Cognito::UserPoolAccountRecoverySetting`?

  AdminCreateUserConfig: `AWS::Cognito::UserPoolAdminCreateUserConfig`?

  AliasAttributes: Listing<String>?

  AutoVerifiedAttributes: Listing<String>?

  DeletionProtection: String?

  DeviceConfiguration: `AWS::Cognito::UserPoolDeviceConfiguration`?

  EmailConfiguration: `AWS::Cognito::UserPoolEmailConfiguration`?

  EmailVerificationMessage: String?

  EmailVerificationSubject: String?

  EnabledMfas: Listing<String>?

  LambdaConfig: `AWS::Cognito::UserPoolLambdaConfig`?

  MfaConfiguration: String?

  Policies: `AWS::Cognito::UserPoolPolicies`?

  Schema: Listing<`AWS::Cognito::UserPoolSchemaAttribute`>?

  SmsAuthenticationMessage: String?

  SmsConfiguration: `AWS::Cognito::UserPoolSmsConfiguration`?

  SmsVerificationMessage: String?

  UserAttributeUpdateSettings: `AWS::Cognito::UserPoolUserAttributeUpdateSettings`?

  UserPoolAddOns: `AWS::Cognito::UserPoolUserPoolAddOns`?

  UserPoolName: String?

  UserPoolTags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  UsernameAttributes: Listing<String>?

  UsernameConfiguration: `AWS::Cognito::UserPoolUsernameConfiguration`?

  VerificationMessageTemplate: `AWS::Cognito::UserPoolVerificationMessageTemplate`?
}

class `AWS::Cognito::UserPoolAccountRecoverySetting` {
  RecoveryMechanisms: Listing<`AWS::Cognito::UserPoolRecoveryOption`>?
}

class `AWS::Cognito::UserPoolAdminCreateUserConfig` {
  AllowAdminCreateUserOnly: Boolean?

  InviteMessageTemplate: `AWS::Cognito::UserPoolInviteMessageTemplate`?

  UnusedAccountValidityDays: Number?
}

class `AWS::Cognito::UserPoolPreTokenGenerationConfig` {
  LambdaArn: String?

  LambdaVersion: String?
}

class `AWS::Cognito::UserPoolDeviceConfiguration` {
  ChallengeRequiredOnNewDevice: Boolean?

  DeviceOnlyRememberedOnUserPrompt: Boolean?
}

class `AWS::Cognito::UserPoolEmailConfiguration` {
  ConfigurationSet: String?

  EmailSendingAccount: String?

  From: String?

  ReplyToEmailAddress: String?

  SourceArn: String?
}

class `AWS::Cognito::UserPoolInviteMessageTemplate` {
  EmailMessage: String?

  EmailSubject: String?

  SMSMessage: String?
}

class `AWS::Cognito::UserPoolLambdaConfig` {
  CreateAuthChallenge: String?

  CustomEmailSender: `AWS::Cognito::UserPoolPreTokenGenerationConfig`?

  CustomMessage: String?

  CustomSMSSender: `AWS::Cognito::UserPoolPreTokenGenerationConfig`?

  DefineAuthChallenge: String?

  KMSKeyID: String?

  PostAuthentication: String?

  PostConfirmation: String?

  PreAuthentication: String?

  PreSignUp: String?

  PreTokenGeneration: String?

  PreTokenGenerationConfig: `AWS::Cognito::UserPoolPreTokenGenerationConfig`?

  UserMigration: String?

  VerifyAuthChallengeResponse: String?
}

class `AWS::Cognito::UserPoolNumberAttributeConstraints` {
  MaxValue: String?

  MinValue: String?
}

class `AWS::Cognito::UserPoolPasswordPolicy` {
  MinimumLength: Number?

  RequireLowercase: Boolean?

  RequireNumbers: Boolean?

  RequireSymbols: Boolean?

  RequireUppercase: Boolean?

  TemporaryPasswordValidityDays: Number?
}

class `AWS::Cognito::UserPoolPolicies` {
  PasswordPolicy: `AWS::Cognito::UserPoolPasswordPolicy`?
}

class `AWS::Cognito::UserPoolRecoveryOption` {
  Name: String?

  Priority: Number?
}

class `AWS::Cognito::UserPoolSchemaAttribute` {
  AttributeDataType: String?

  DeveloperOnlyAttribute: Boolean?

  Mutable: Boolean?

  Name: String?

  NumberAttributeConstraints: `AWS::Cognito::UserPoolNumberAttributeConstraints`?

  Required: Boolean?

  StringAttributeConstraints: `AWS::Cognito::UserPoolStringAttributeConstraints`?
}

class `AWS::Cognito::UserPoolSmsConfiguration` {
  ExternalId: String?

  SnsCallerArn: String?

  SnsRegion: String?
}

class `AWS::Cognito::UserPoolStringAttributeConstraints` {
  MaxLength: String?

  MinLength: String?
}

class `AWS::Cognito::UserPoolUserAttributeUpdateSettings` {
  AttributesRequireVerificationBeforeUpdate: Listing<String>
}

class `AWS::Cognito::UserPoolUserPoolAddOns` {
  AdvancedSecurityMode: String?
}

class `AWS::Cognito::UserPoolUsernameConfiguration` {
  CaseSensitive: Boolean?
}

class `AWS::Cognito::UserPoolVerificationMessageTemplate` {
  DefaultEmailOption: String?

  EmailMessage: String?

  EmailMessageByLink: String?

  EmailSubject: String?

  EmailSubjectByLink: String?

  SmsMessage: String?
}

class `AWS::Cognito::UserPoolClient` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cognito::UserPoolClientProperties`

  Type: "AWS::Cognito::UserPoolClient"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cognito::UserPoolClientProperties` {
  AccessTokenValidity: Number?

  AllowedOAuthFlows: Listing<String>?

  AllowedOAuthFlowsUserPoolClient: Boolean?

  AllowedOAuthScopes: Listing<String>?

  AnalyticsConfiguration: `AWS::Cognito::UserPoolClientAnalyticsConfiguration`?

  AuthSessionValidity: Number?

  CallbackURLs: Listing<String>?

  ClientName: String?

  DefaultRedirectURI: String?

  EnablePropagateAdditionalUserContextData: Boolean?

  EnableTokenRevocation: Boolean?

  ExplicitAuthFlows: Listing<String>?

  GenerateSecret: Boolean?

  IdTokenValidity: Number?

  LogoutURLs: Listing<String>?

  PreventUserExistenceErrors: String?

  ReadAttributes: Listing<String>?

  RefreshTokenValidity: Number?

  SupportedIdentityProviders: Listing<String>?

  TokenValidityUnits: `AWS::Cognito::UserPoolClientTokenValidityUnits`?

  UserPoolId: String

  WriteAttributes: Listing<String>?
}

class `AWS::Cognito::UserPoolClientAnalyticsConfiguration` {
  ApplicationArn: String?

  ApplicationId: String?

  ExternalId: String?

  RoleArn: String?

  UserDataShared: Boolean?
}

class `AWS::Cognito::UserPoolClientTokenValidityUnits` {
  AccessToken: String?

  IdToken: String?

  RefreshToken: String?
}

class `AWS::Cognito::UserPoolDomain` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cognito::UserPoolDomainProperties`

  Type: "AWS::Cognito::UserPoolDomain"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cognito::UserPoolDomainProperties` {
  CustomDomainConfig: `AWS::ElasticLoadBalancingV2::ListenerCertificateCertificate`?

  Domain: String

  UserPoolId: String
}

class `AWS::ElasticLoadBalancingV2::ListenerCertificateCertificate` {
  CertificateArn: String?
}

class `AWS::Cognito::UserPoolGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cognito::UserPoolGroupProperties`

  Type: "AWS::Cognito::UserPoolGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cognito::UserPoolGroupProperties` {
  Description: String?

  GroupName: String?

  Precedence: Number?

  RoleArn: String?

  UserPoolId: String
}

class `AWS::Cognito::UserPoolIdentityProvider` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cognito::UserPoolIdentityProviderProperties`

  Type: "AWS::Cognito::UserPoolIdentityProvider"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cognito::UserPoolIdentityProviderProperties` {
  AttributeMapping: Dynamic?

  IdpIdentifiers: Listing<String>?

  ProviderDetails: Dynamic?

  ProviderName: String

  ProviderType: String

  UserPoolId: String
}

class `AWS::Cognito::UserPoolResourceServer` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cognito::UserPoolResourceServerProperties`

  Type: "AWS::Cognito::UserPoolResourceServer"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cognito::UserPoolResourceServerProperties` {
  Identifier: String

  Name: String

  Scopes: Listing<`AWS::Cognito::UserPoolResourceServerResourceServerScopeType`>?

  UserPoolId: String
}

class `AWS::Cognito::UserPoolResourceServerResourceServerScopeType` {
  ScopeDescription: String

  ScopeName: String
}

class `AWS::Cognito::UserPoolRiskConfigurationAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cognito::UserPoolRiskConfigurationAttachmentProperties`

  Type: "AWS::Cognito::UserPoolRiskConfigurationAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cognito::UserPoolRiskConfigurationAttachmentProperties` {
  AccountTakeoverRiskConfiguration: `AWS::Cognito::UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType`?

  ClientId: String

  CompromisedCredentialsRiskConfiguration: `AWS::Cognito::UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType`?

  RiskExceptionConfiguration: `AWS::Cognito::UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType`?

  UserPoolId: String
}

class `AWS::Cognito::UserPoolRiskConfigurationAttachmentAccountTakeoverActionType` {
  EventAction: String

  Notify: Boolean
}

class `AWS::Cognito::UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType` {
  HighAction: `AWS::Cognito::UserPoolRiskConfigurationAttachmentAccountTakeoverActionType`?

  LowAction: `AWS::Cognito::UserPoolRiskConfigurationAttachmentAccountTakeoverActionType`?

  MediumAction: `AWS::Cognito::UserPoolRiskConfigurationAttachmentAccountTakeoverActionType`?
}

class `AWS::Cognito::UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType` {
  Actions: `AWS::Cognito::UserPoolRiskConfigurationAttachmentAccountTakeoverActionsType`

  NotifyConfiguration: `AWS::Cognito::UserPoolRiskConfigurationAttachmentNotifyConfigurationType`?
}

class `AWS::Cognito::UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType` {
  EventAction: String
}

class `AWS::Cognito::UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType` {
  Actions: `AWS::Cognito::UserPoolRiskConfigurationAttachmentCompromisedCredentialsActionsType`

  EventFilter: Listing<String>?
}

class `AWS::Cognito::UserPoolRiskConfigurationAttachmentNotifyConfigurationType` {
  BlockEmail: `AWS::Cognito::UserPoolRiskConfigurationAttachmentNotifyEmailType`?

  From: String?

  MfaEmail: `AWS::Cognito::UserPoolRiskConfigurationAttachmentNotifyEmailType`?

  NoActionEmail: `AWS::Cognito::UserPoolRiskConfigurationAttachmentNotifyEmailType`?

  ReplyTo: String?

  SourceArn: String
}

class `AWS::Cognito::UserPoolRiskConfigurationAttachmentNotifyEmailType` {
  HtmlBody: String?

  Subject: String

  TextBody: String?
}

class `AWS::Cognito::UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType` {
  BlockedIPRangeList: Listing<String>?

  SkippedIPRangeList: Listing<String>?
}

class `AWS::Cognito::UserPoolUICustomizationAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cognito::UserPoolUICustomizationAttachmentProperties`

  Type: "AWS::Cognito::UserPoolUICustomizationAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cognito::UserPoolUICustomizationAttachmentProperties` {
  CSS: String?

  ClientId: String

  UserPoolId: String
}

class `AWS::Cognito::UserPoolUser` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cognito::UserPoolUserProperties`

  Type: "AWS::Cognito::UserPoolUser"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cognito::UserPoolUserProperties` {
  ClientMetadata: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  DesiredDeliveryMediums: Listing<String>?

  ForceAliasCreation: Boolean?

  MessageAction: String?

  UserAttributes: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  UserPoolId: String

  Username: String?

  ValidationData: Listing<`AWS::RDS::OptionGroupOptionSetting`>?
}

class `AWS::Cognito::UserPoolUserToGroupAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Cognito::UserPoolUserToGroupAttachmentProperties`

  Type: "AWS::Cognito::UserPoolUserToGroupAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Cognito::UserPoolUserToGroupAttachmentProperties` {
  GroupName: String

  UserPoolId: String

  Username: String
}

class `AWS::Comprehend::DocumentClassifier` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Comprehend::DocumentClassifierProperties`

  Type: "AWS::Comprehend::DocumentClassifier"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Comprehend::DocumentClassifierProperties` {
  DataAccessRoleArn: String

  DocumentClassifierName: String

  InputDataConfig: `AWS::Comprehend::DocumentClassifierDocumentClassifierInputDataConfig`

  LanguageCode: String

  Mode: String?

  ModelKmsKeyId: String?

  ModelPolicy: String?

  OutputDataConfig: `AWS::Comprehend::DocumentClassifierDocumentClassifierOutputDataConfig`?

  Tags: Listing<Tag>?

  VersionName: String?

  VolumeKmsKeyId: String?

  VpcConfig: `AWS::SageMaker::MonitoringScheduleVpcConfig`?
}

class `AWS::Comprehend::DocumentClassifierAugmentedManifestsListItem` {
  AttributeNames: Listing<String>

  S3Uri: String

  Split: String?
}

class `AWS::Comprehend::DocumentClassifierDocumentClassifierDocuments` {
  S3Uri: String

  TestS3Uri: String?
}

class `AWS::Comprehend::DocumentClassifierDocumentClassifierInputDataConfig` {
  AugmentedManifests: Listing<`AWS::Comprehend::DocumentClassifierAugmentedManifestsListItem`>?

  DataFormat: String?

  DocumentReaderConfig: `AWS::Comprehend::DocumentClassifierDocumentReaderConfig`?

  DocumentType: String?

  Documents: `AWS::Comprehend::DocumentClassifierDocumentClassifierDocuments`?

  LabelDelimiter: String?

  S3Uri: String?

  TestS3Uri: String?
}

class `AWS::Comprehend::DocumentClassifierDocumentClassifierOutputDataConfig` {
  KmsKeyId: String?

  S3Uri: String?
}

class `AWS::Comprehend::DocumentClassifierDocumentReaderConfig` {
  DocumentReadAction: String

  DocumentReadMode: String?

  FeatureTypes: Listing<String>?
}

class `AWS::SageMaker::MonitoringScheduleVpcConfig` {
  SecurityGroupIds: Listing<String>

  Subnets: Listing<String>
}

class `AWS::Comprehend::Flywheel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Comprehend::FlywheelProperties`

  Type: "AWS::Comprehend::Flywheel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Comprehend::FlywheelProperties` {
  ActiveModelArn: String?

  DataAccessRoleArn: String

  DataLakeS3Uri: String

  DataSecurityConfig: `AWS::Comprehend::FlywheelDataSecurityConfig`?

  FlywheelName: String

  ModelType: String?

  Tags: Listing<Tag>?

  TaskConfig: `AWS::Comprehend::FlywheelTaskConfig`?
}

class `AWS::Comprehend::FlywheelDataSecurityConfig` {
  DataLakeKmsKeyId: String?

  ModelKmsKeyId: String?

  VolumeKmsKeyId: String?

  VpcConfig: `AWS::SageMaker::MonitoringScheduleVpcConfig`?
}

class `AWS::Comprehend::FlywheelDocumentClassificationConfig` {
  Labels: Listing<String>?

  Mode: String
}

class `AWS::Comprehend::FlywheelEntityRecognitionConfig` {
  EntityTypes: Listing<`AWS::WAFRegional::WebACLAction`>?
}

class `AWS::Comprehend::FlywheelTaskConfig` {
  DocumentClassificationConfig: `AWS::Comprehend::FlywheelDocumentClassificationConfig`?

  EntityRecognitionConfig: `AWS::Comprehend::FlywheelEntityRecognitionConfig`?

  LanguageCode: String
}

class `AWS::Config::AggregationAuthorization` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Config::AggregationAuthorizationProperties`

  Type: "AWS::Config::AggregationAuthorization"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Config::AggregationAuthorizationProperties` {
  AuthorizedAccountId: String

  AuthorizedAwsRegion: String

  Tags: Listing<Tag>?
}

class `AWS::Config::ConfigRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Config::ConfigRuleProperties`

  Type: "AWS::Config::ConfigRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Config::ConfigRuleProperties` {
  Compliance: `AWS::MSK::ClusterPublicAccess`?

  ConfigRuleName: String?

  Description: String?

  EvaluationModes: Listing<`AWS::Lambda::FunctionTracingConfig`>?

  InputParameters: Dynamic?

  MaximumExecutionFrequency: String?

  Scope: `AWS::Config::ConfigRuleScope`?

  Source: `AWS::Config::ConfigRuleSource`
}

class `AWS::MSK::ClusterPublicAccess` {
  Type: String?
}

class `AWS::Config::ConfigRuleCustomPolicyDetails` {
  EnableDebugLogDelivery: Boolean?

  PolicyRuntime: String?

  PolicyText: String?
}

class `AWS::Lambda::FunctionTracingConfig` {
  Mode: String?
}

class `AWS::Config::ConfigRuleScope` {
  ComplianceResourceId: String?

  ComplianceResourceTypes: Listing<String>?

  TagKey: String?

  TagValue: String?
}

class `AWS::Config::ConfigRuleSource` {
  CustomPolicyDetails: `AWS::Config::ConfigRuleCustomPolicyDetails`?

  Owner: String

  SourceDetails: Listing<`AWS::Config::ConfigRuleSourceDetail`>?

  SourceIdentifier: String?
}

class `AWS::Config::ConfigRuleSourceDetail` {
  EventSource: String

  MaximumExecutionFrequency: String?

  MessageType: String
}

class `AWS::Config::ConfigurationAggregator` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Config::ConfigurationAggregatorProperties`?

  Type: "AWS::Config::ConfigurationAggregator"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Config::ConfigurationAggregatorProperties` {
  AccountAggregationSources: Listing<`AWS::Config::ConfigurationAggregatorAccountAggregationSource`>?

  ConfigurationAggregatorName: String?

  OrganizationAggregationSource: `AWS::Config::ConfigurationAggregatorOrganizationAggregationSource`?

  Tags: Listing<Tag>?
}

class `AWS::Config::ConfigurationAggregatorAccountAggregationSource` {
  AccountIds: Listing<String>

  AllAwsRegions: Boolean?

  AwsRegions: Listing<String>?
}

class `AWS::Config::ConfigurationAggregatorOrganizationAggregationSource` {
  AllAwsRegions: Boolean?

  AwsRegions: Listing<String>?

  RoleArn: String
}

class `AWS::Config::ConfigurationRecorder` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Config::ConfigurationRecorderProperties`

  Type: "AWS::Config::ConfigurationRecorder"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Config::ConfigurationRecorderProperties` {
  Name: String?

  RecordingGroup: `AWS::Config::ConfigurationRecorderRecordingGroup`?

  RecordingMode: `AWS::Config::ConfigurationRecorderRecordingMode`?

  RoleARN: String
}

class `AWS::Config::ConfigurationRecorderExclusionByResourceTypes` {
  ResourceTypes: Listing<String>
}

class `AWS::Config::ConfigurationRecorderRecordingGroup` {
  AllSupported: Boolean?

  ExclusionByResourceTypes: `AWS::Config::ConfigurationRecorderExclusionByResourceTypes`?

  IncludeGlobalResourceTypes: Boolean?

  RecordingStrategy: `AWS::Config::ConfigurationRecorderRecordingStrategy`?

  ResourceTypes: Listing<String>?
}

class `AWS::Config::ConfigurationRecorderRecordingMode` {
  RecordingFrequency: String

  RecordingModeOverrides: Listing<`AWS::Config::ConfigurationRecorderRecordingModeOverride`>?
}

class `AWS::Config::ConfigurationRecorderRecordingModeOverride` {
  Description: String?

  RecordingFrequency: String

  ResourceTypes: Listing<String>
}

class `AWS::Config::ConfigurationRecorderRecordingStrategy` {
  UseOnly: String
}

class `AWS::Config::ConformancePack` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Config::ConformancePackProperties`

  Type: "AWS::Config::ConformancePack"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Config::ConformancePackProperties` {
  ConformancePackInputParameters: Listing<`AWS::Redshift::ClusterParameterGroupParameter`>?

  ConformancePackName: String

  DeliveryS3Bucket: String?

  DeliveryS3KeyPrefix: String?

  TemplateBody: String?

  TemplateS3Uri: String?

  TemplateSSMDocumentDetails: `AWS::Config::ConformancePackTemplateSSMDocumentDetails`?
}

class `AWS::Config::ConformancePackTemplateSSMDocumentDetails` {
  DocumentName: String?

  DocumentVersion: String?
}

class `AWS::Config::DeliveryChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Config::DeliveryChannelProperties`

  Type: "AWS::Config::DeliveryChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Config::DeliveryChannelProperties` {
  ConfigSnapshotDeliveryProperties: `AWS::Config::DeliveryChannelConfigSnapshotDeliveryProperties`?

  Name: String?

  S3BucketName: String

  S3KeyPrefix: String?

  S3KmsKeyArn: String?

  SnsTopicARN: String?
}

class `AWS::Config::DeliveryChannelConfigSnapshotDeliveryProperties` {
  DeliveryFrequency: String?
}

class `AWS::Config::OrganizationConfigRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Config::OrganizationConfigRuleProperties`

  Type: "AWS::Config::OrganizationConfigRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Config::OrganizationConfigRuleProperties` {
  ExcludedAccounts: Listing<String>?

  OrganizationConfigRuleName: String

  OrganizationCustomPolicyRuleMetadata: `AWS::Config::OrganizationConfigRuleOrganizationCustomPolicyRuleMetadata`?

  OrganizationCustomRuleMetadata: `AWS::Config::OrganizationConfigRuleOrganizationCustomRuleMetadata`?

  OrganizationManagedRuleMetadata: `AWS::Config::OrganizationConfigRuleOrganizationManagedRuleMetadata`?
}

class `AWS::Config::OrganizationConfigRuleOrganizationCustomPolicyRuleMetadata` {
  DebugLogDeliveryAccounts: Listing<String>?

  Description: String?

  InputParameters: String?

  MaximumExecutionFrequency: String?

  OrganizationConfigRuleTriggerTypes: Listing<String>?

  PolicyText: String

  ResourceIdScope: String?

  ResourceTypesScope: Listing<String>?

  Runtime: String

  TagKeyScope: String?

  TagValueScope: String?
}

class `AWS::Config::OrganizationConfigRuleOrganizationCustomRuleMetadata` {
  Description: String?

  InputParameters: String?

  LambdaFunctionArn: String

  MaximumExecutionFrequency: String?

  OrganizationConfigRuleTriggerTypes: Listing<String>

  ResourceIdScope: String?

  ResourceTypesScope: Listing<String>?

  TagKeyScope: String?

  TagValueScope: String?
}

class `AWS::Config::OrganizationConfigRuleOrganizationManagedRuleMetadata` {
  Description: String?

  InputParameters: String?

  MaximumExecutionFrequency: String?

  ResourceIdScope: String?

  ResourceTypesScope: Listing<String>?

  RuleIdentifier: String

  TagKeyScope: String?

  TagValueScope: String?
}

class `AWS::Config::OrganizationConformancePack` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Config::OrganizationConformancePackProperties`

  Type: "AWS::Config::OrganizationConformancePack"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Config::OrganizationConformancePackProperties` {
  ConformancePackInputParameters: Listing<`AWS::Redshift::ClusterParameterGroupParameter`>?

  DeliveryS3Bucket: String?

  DeliveryS3KeyPrefix: String?

  ExcludedAccounts: Listing<String>?

  OrganizationConformancePackName: String

  TemplateBody: String?

  TemplateS3Uri: String?
}

class `AWS::Config::RemediationConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Config::RemediationConfigurationProperties`

  Type: "AWS::Config::RemediationConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Config::RemediationConfigurationProperties` {
  Automatic: Boolean?

  ConfigRuleName: String

  ExecutionControls: `AWS::Config::RemediationConfigurationExecutionControls`?

  MaximumAutomaticAttempts: Number?

  Parameters: Dynamic?

  ResourceType: String?

  RetryAttemptSeconds: Number?

  TargetId: String

  TargetType: String

  TargetVersion: String?
}

class `AWS::Config::RemediationConfigurationExecutionControls` {
  SsmControls: `AWS::Config::RemediationConfigurationSsmControls`?
}

class `AWS::Config::RemediationConfigurationRemediationParameterValue` {
  ResourceValue: `AWS::Config::RemediationConfigurationResourceValue`?

  StaticValue: `AWS::QuickSight::TemplateFilterSelectableValues`?
}

class `AWS::Config::RemediationConfigurationSsmControls` {
  ConcurrentExecutionRatePercentage: Number?

  ErrorPercentage: Number?
}

class `AWS::QuickSight::TemplateFilterSelectableValues` {
  Values: Listing<String>?
}

class `AWS::Config::StoredQuery` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Config::StoredQueryProperties`

  Type: "AWS::Config::StoredQuery"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Config::StoredQueryProperties` {
  QueryDescription: String?

  QueryExpression: String

  QueryName: String

  Tags: Listing<Tag>?
}

class `AWS::Connect::ApprovedOrigin` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::ApprovedOriginProperties`

  Type: "AWS::Connect::ApprovedOrigin"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::ApprovedOriginProperties` {
  InstanceId: String

  Origin: String
}

class `AWS::Connect::ContactFlow` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::ContactFlowProperties`

  Type: "AWS::Connect::ContactFlow"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::ContactFlowProperties` {
  Content: String

  Description: String?

  InstanceArn: String

  Name: String

  State: String?

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::Connect::ContactFlowModule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::ContactFlowModuleProperties`

  Type: "AWS::Connect::ContactFlowModule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::ContactFlowModuleProperties` {
  Content: String

  Description: String?

  InstanceArn: String

  Name: String

  State: String?

  Tags: Listing<Tag>?
}

class `AWS::Connect::EvaluationForm` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::EvaluationFormProperties`

  Type: "AWS::Connect::EvaluationForm"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::EvaluationFormProperties` {
  Description: String?

  InstanceArn: String

  Items: Listing<`AWS::Connect::EvaluationFormEvaluationFormBaseItem`>

  ScoringStrategy: `AWS::Connect::EvaluationFormScoringStrategy`?

  Status: String

  Tags: Listing<Tag>?

  Title: String
}

class `AWS::Connect::EvaluationFormEvaluationFormBaseItem` {
  Section: `AWS::Connect::EvaluationFormEvaluationFormSection`
}

class `AWS::Connect::EvaluationFormEvaluationFormItem` {
  Question: `AWS::Connect::EvaluationFormEvaluationFormQuestion`?

  Section: `AWS::Connect::EvaluationFormEvaluationFormSection`?
}

class `AWS::Connect::EvaluationFormEvaluationFormNumericQuestionAutomation` {
  PropertyValue: `AWS::Connect::EvaluationFormNumericQuestionPropertyValueAutomation`
}

class `AWS::Connect::EvaluationFormEvaluationFormNumericQuestionOption` {
  AutomaticFail: Boolean?

  MaxValue: Number

  MinValue: Number

  Score: Number?
}

class `AWS::Connect::EvaluationFormEvaluationFormNumericQuestionProperties` {
  Automation: `AWS::Connect::EvaluationFormEvaluationFormNumericQuestionAutomation`?

  MaxValue: Number

  MinValue: Number

  Options: Listing<`AWS::Connect::EvaluationFormEvaluationFormNumericQuestionOption`>?
}

class `AWS::Connect::EvaluationFormEvaluationFormQuestion` {
  Instructions: String?

  NotApplicableEnabled: Boolean?

  QuestionType: String

  QuestionTypeProperties: `AWS::Connect::EvaluationFormEvaluationFormQuestionTypeProperties`?

  RefId: String

  Title: String

  Weight: Number?
}

class `AWS::Connect::EvaluationFormEvaluationFormQuestionTypeProperties` {
  Numeric: `AWS::Connect::EvaluationFormEvaluationFormNumericQuestionProperties`?

  SingleSelect: `AWS::Connect::EvaluationFormEvaluationFormSingleSelectQuestionProperties`?
}

class `AWS::Connect::EvaluationFormEvaluationFormSection` {
  Instructions: String?

  Items: Listing<`AWS::Connect::EvaluationFormEvaluationFormItem`>?

  RefId: String

  Title: String

  Weight: Number?
}

class `AWS::Connect::EvaluationFormEvaluationFormSingleSelectQuestionAutomation` {
  DefaultOptionRefId: String?

  Options: Listing<`AWS::Connect::EvaluationFormEvaluationFormSingleSelectQuestionAutomationOption`>
}

class `AWS::Connect::EvaluationFormEvaluationFormSingleSelectQuestionAutomationOption` {
  RuleCategory: `AWS::Connect::EvaluationFormSingleSelectQuestionRuleCategoryAutomation`
}

class `AWS::Connect::EvaluationFormEvaluationFormSingleSelectQuestionOption` {
  AutomaticFail: Boolean?

  RefId: String

  Score: Number?

  Text: String
}

class `AWS::Connect::EvaluationFormEvaluationFormSingleSelectQuestionProperties` {
  Automation: `AWS::Connect::EvaluationFormEvaluationFormSingleSelectQuestionAutomation`?

  DisplayAs: String?

  Options: Listing<`AWS::Connect::EvaluationFormEvaluationFormSingleSelectQuestionOption`>
}

class `AWS::Connect::EvaluationFormNumericQuestionPropertyValueAutomation` {
  Label: String
}

class `AWS::Connect::EvaluationFormScoringStrategy` {
  Mode: String

  Status: String
}

class `AWS::Connect::EvaluationFormSingleSelectQuestionRuleCategoryAutomation` {
  Category: String

  Condition: String

  OptionRefId: String
}

class `AWS::Connect::HoursOfOperation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::HoursOfOperationProperties`

  Type: "AWS::Connect::HoursOfOperation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::HoursOfOperationProperties` {
  Config: Listing<`AWS::Connect::HoursOfOperationHoursOfOperationConfig`>

  Description: String?

  InstanceArn: String

  Name: String

  Tags: Listing<Tag>?

  TimeZone: String
}

class `AWS::Connect::HoursOfOperationHoursOfOperationConfig` {
  Day: String

  EndTime: `AWS::OpenSearchService::DomainWindowStartTime`

  StartTime: `AWS::OpenSearchService::DomainWindowStartTime`
}

class `AWS::OpenSearchService::DomainWindowStartTime` {
  Hours: Number

  Minutes: Number
}

class `AWS::Connect::Instance` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::InstanceProperties`

  Type: "AWS::Connect::Instance"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::InstanceProperties` {
  Attributes: `AWS::Connect::InstanceAttributes`

  DirectoryId: String?

  IdentityManagementType: String

  InstanceAlias: String?

  Tags: Listing<Tag>?
}

class `AWS::Connect::InstanceAttributes` {
  AutoResolveBestVoices: Boolean?

  ContactLens: Boolean?

  ContactflowLogs: Boolean?

  EarlyMedia: Boolean?

  InboundCalls: Boolean

  OutboundCalls: Boolean

  UseCustomTTSVoices: Boolean?
}

class `AWS::Connect::InstanceStorageConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::InstanceStorageConfigProperties`

  Type: "AWS::Connect::InstanceStorageConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::InstanceStorageConfigProperties` {
  InstanceArn: String

  KinesisFirehoseConfig: `AWS::Connect::InstanceStorageConfigKinesisFirehoseConfig`?

  KinesisStreamConfig: `AWS::DynamoDB::TableKinesisStreamSpecification`?

  KinesisVideoStreamConfig: `AWS::Connect::InstanceStorageConfigKinesisVideoStreamConfig`?

  ResourceType: String

  S3Config: `AWS::Connect::InstanceStorageConfigS3Config`?

  StorageType: String
}

class `AWS::Kinesis::StreamStreamEncryption` {
  EncryptionType: String

  KeyId: String
}

class `AWS::Connect::InstanceStorageConfigKinesisFirehoseConfig` {
  FirehoseArn: String
}

class `AWS::DynamoDB::TableKinesisStreamSpecification` {
  StreamArn: String
}

class `AWS::Connect::InstanceStorageConfigKinesisVideoStreamConfig` {
  EncryptionConfig: `AWS::Kinesis::StreamStreamEncryption`

  Prefix: String

  RetentionPeriodHours: Number
}

class `AWS::Connect::InstanceStorageConfigS3Config` {
  BucketName: String

  BucketPrefix: String

  EncryptionConfig: `AWS::Kinesis::StreamStreamEncryption`?
}

class `AWS::Connect::IntegrationAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::IntegrationAssociationProperties`

  Type: "AWS::Connect::IntegrationAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::IntegrationAssociationProperties` {
  InstanceId: String

  IntegrationArn: String

  IntegrationType: String
}

class `AWS::Connect::PhoneNumber` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::PhoneNumberProperties`

  Type: "AWS::Connect::PhoneNumber"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::PhoneNumberProperties` {
  CountryCode: String?

  Description: String?

  Prefix: String?

  SourcePhoneNumberArn: String?

  Tags: Listing<Tag>?

  TargetArn: String

  Type: String?
}

class `AWS::Connect::PredefinedAttribute` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::PredefinedAttributeProperties`

  Type: "AWS::Connect::PredefinedAttribute"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::PredefinedAttributeProperties` {
  InstanceArn: String

  Name: String

  Values: `AWS::Connect::PredefinedAttributeValues`
}

class `AWS::Connect::PredefinedAttributeValues` {
  StringList: Listing<String>?
}

class `AWS::Connect::Prompt` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::PromptProperties`

  Type: "AWS::Connect::Prompt"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::PromptProperties` {
  Description: String?

  InstanceArn: String

  Name: String

  S3Uri: String?

  Tags: Listing<Tag>?
}

class `AWS::Connect::Queue` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::QueueProperties`

  Type: "AWS::Connect::Queue"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::QueueProperties` {
  Description: String?

  HoursOfOperationArn: String

  InstanceArn: String

  MaxContacts: Number?

  Name: String

  OutboundCallerConfig: `AWS::Connect::QueueOutboundCallerConfig`?

  QuickConnectArns: Listing<String>?

  Status: String?

  Tags: Listing<Tag>?
}

class `AWS::Connect::QueueOutboundCallerConfig` {
  OutboundCallerIdName: String?

  OutboundCallerIdNumberArn: String?

  OutboundFlowArn: String?
}

class `AWS::Connect::QuickConnect` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::QuickConnectProperties`

  Type: "AWS::Connect::QuickConnect"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::QuickConnectProperties` {
  Description: String?

  InstanceArn: String

  Name: String

  QuickConnectConfig: `AWS::Connect::QuickConnectQuickConnectConfig`

  Tags: Listing<Tag>?
}

class `AWS::Connect::QuickConnectPhoneNumberQuickConnectConfig` {
  PhoneNumber: String
}

class `AWS::Connect::QuickConnectQueueQuickConnectConfig` {
  ContactFlowArn: String

  QueueArn: String
}

class `AWS::Connect::QuickConnectQuickConnectConfig` {
  PhoneConfig: `AWS::Connect::QuickConnectPhoneNumberQuickConnectConfig`?

  QueueConfig: `AWS::Connect::QuickConnectQueueQuickConnectConfig`?

  QuickConnectType: String

  UserConfig: `AWS::Connect::QuickConnectUserQuickConnectConfig`?
}

class `AWS::Connect::QuickConnectUserQuickConnectConfig` {
  ContactFlowArn: String

  UserArn: String
}

class `AWS::Connect::RoutingProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::RoutingProfileProperties`

  Type: "AWS::Connect::RoutingProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::RoutingProfileProperties` {
  AgentAvailabilityTimer: String?

  DefaultOutboundQueueArn: String

  Description: String

  InstanceArn: String

  MediaConcurrencies: Listing<`AWS::Connect::RoutingProfileMediaConcurrency`>

  Name: String

  QueueConfigs: Listing<`AWS::Connect::RoutingProfileRoutingProfileQueueConfig`>?

  Tags: Listing<Tag>?
}

class `AWS::Connect::RoutingProfileCrossChannelBehavior` {
  BehaviorType: String
}

class `AWS::Connect::RoutingProfileMediaConcurrency` {
  Channel: String

  Concurrency: Number

  CrossChannelBehavior: `AWS::Connect::RoutingProfileCrossChannelBehavior`?
}

class `AWS::Connect::RoutingProfileRoutingProfileQueueConfig` {
  Delay: Number

  Priority: Number

  QueueReference: `AWS::Connect::RoutingProfileRoutingProfileQueueReference`
}

class `AWS::Connect::RoutingProfileRoutingProfileQueueReference` {
  Channel: String

  QueueArn: String
}

class `AWS::Connect::Rule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::RuleProperties`

  Type: "AWS::Connect::Rule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::RuleProperties` {
  Actions: `AWS::Connect::RuleActions`

  Function: String

  InstanceArn: String

  Name: String

  PublishStatus: String

  Tags: Listing<Tag>?

  TriggerEventSource: `AWS::Connect::RuleRuleTriggerEventSource`
}

class `AWS::Connect::RuleActions` {
  AssignContactCategoryActions: Listing<Dynamic>?

  EventBridgeActions: Listing<`AWS::WAFv2::WebACLSingleQueryArgument`>?

  SendNotificationActions: Listing<`AWS::Connect::RuleSendNotificationAction`>?

  TaskActions: Listing<`AWS::Connect::RuleTaskAction`>?
}

class `AWS::Connect::RuleNotificationRecipientType` {
  UserArns: Listing<String>?

  UserTags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Connect::RuleRuleTriggerEventSource` {
  EventSourceName: String

  IntegrationAssociationArn: String?
}

class `AWS::Connect::RuleSendNotificationAction` {
  Content: String

  ContentType: String

  DeliveryMethod: String

  Recipient: `AWS::Connect::RuleNotificationRecipientType`

  Subject: String?
}

class `AWS::Connect::RuleTaskAction` {
  ContactFlowArn: String

  Description: String?

  Name: String

  References: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::WAFRegional::IPSetIPSetDescriptor`>?
}

class `AWS::Connect::SecurityKey` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::SecurityKeyProperties`

  Type: "AWS::Connect::SecurityKey"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::SecurityKeyProperties` {
  InstanceId: String

  Key: String
}

class `AWS::Connect::SecurityProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::SecurityProfileProperties`

  Type: "AWS::Connect::SecurityProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::SecurityProfileProperties` {
  AllowedAccessControlTags: Listing<Tag>?

  Description: String?

  InstanceArn: String

  Permissions: Listing<String>?

  SecurityProfileName: String

  TagRestrictedResources: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::Connect::TaskTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::TaskTemplateProperties`

  Type: "AWS::Connect::TaskTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::TaskTemplateProperties` {
  ClientToken: String?

  Constraints: `AWS::Connect::TaskTemplateConstraints`?

  ContactFlowArn: String?

  Defaults: Listing<`AWS::Connect::TaskTemplateDefaultFieldValue`>?

  Description: String?

  Fields: Listing<`AWS::Connect::TaskTemplateField`>?

  InstanceArn: String

  Name: String?

  Status: String?

  Tags: Listing<Tag>?
}

class `AWS::Connect::TaskTemplateConstraints` {
  InvisibleFields: Listing<`AWS::Connect::TaskTemplateRequiredFieldInfo`>?

  ReadOnlyFields: Listing<`AWS::Connect::TaskTemplateRequiredFieldInfo`>?

  RequiredFields: Listing<`AWS::Connect::TaskTemplateRequiredFieldInfo`>?
}

class `AWS::Connect::TaskTemplateDefaultFieldValue` {
  DefaultValue: String

  Id: `AWS::WAFv2::WebACLSingleQueryArgument`
}

class `AWS::Connect::TaskTemplateField` {
  Description: String?

  Id: `AWS::WAFv2::WebACLSingleQueryArgument`

  SingleSelectOptions: Listing<String>?

  Type: String
}

class `AWS::Connect::TaskTemplateRequiredFieldInfo` {
  Id: `AWS::WAFv2::WebACLSingleQueryArgument`
}

class `AWS::Connect::TrafficDistributionGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::TrafficDistributionGroupProperties`

  Type: "AWS::Connect::TrafficDistributionGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::TrafficDistributionGroupProperties` {
  Description: String?

  InstanceArn: String

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::Connect::User` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::UserProperties`

  Type: "AWS::Connect::User"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::UserProperties` {
  DirectoryUserId: String?

  HierarchyGroupArn: String?

  IdentityInfo: `AWS::Connect::UserUserIdentityInfo`?

  InstanceArn: String

  Password: String?

  PhoneConfig: `AWS::Connect::UserUserPhoneConfig`

  RoutingProfileArn: String

  SecurityProfileArns: Listing<String>

  Tags: Listing<Tag>?

  UserProficiencies: Listing<`AWS::Connect::UserUserProficiency`>?

  Username: String
}

class `AWS::Connect::UserUserIdentityInfo` {
  Email: String?

  FirstName: String?

  LastName: String?

  Mobile: String?

  SecondaryEmail: String?
}

class `AWS::Connect::UserUserPhoneConfig` {
  AfterContactWorkTimeLimit: Number?

  AutoAccept: Boolean?

  DeskPhoneNumber: String?

  PhoneType: String
}

class `AWS::Connect::UserUserProficiency` {
  AttributeName: String

  AttributeValue: String

  Level: Number
}

class `AWS::Connect::UserHierarchyGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::UserHierarchyGroupProperties`

  Type: "AWS::Connect::UserHierarchyGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::UserHierarchyGroupProperties` {
  InstanceArn: String

  Name: String

  ParentGroupArn: String?

  Tags: Listing<Tag>?
}

class `AWS::Connect::View` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::ViewProperties`

  Type: "AWS::Connect::View"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::ViewProperties` {
  Actions: Listing<String>

  Description: String?

  InstanceArn: String

  Name: String

  Tags: Listing<Tag>?

  Template: Dynamic
}

class `AWS::Connect::ViewVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Connect::ViewVersionProperties`

  Type: "AWS::Connect::ViewVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Connect::ViewVersionProperties` {
  VersionDescription: String?

  ViewArn: String

  ViewContentSha256: String?
}

class `AWS::ConnectCampaigns::Campaign` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ConnectCampaigns::CampaignProperties`

  Type: "AWS::ConnectCampaigns::Campaign"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ConnectCampaigns::CampaignProperties` {
  ConnectInstanceArn: String

  DialerConfig: `AWS::ConnectCampaigns::CampaignDialerConfig`

  Name: String

  OutboundCallConfig: `AWS::ConnectCampaigns::CampaignOutboundCallConfig`

  Tags: Listing<Tag>?
}

class `AWS::ConnectCampaigns::CampaignAgentlessDialerConfig` {
  DialingCapacity: Number?
}

class `AWS::ConnectCampaigns::CampaignAnswerMachineDetectionConfig` {
  EnableAnswerMachineDetection: Boolean
}

class `AWS::ConnectCampaigns::CampaignDialerConfig` {
  AgentlessDialerConfig: `AWS::ConnectCampaigns::CampaignAgentlessDialerConfig`?

  PredictiveDialerConfig: `AWS::ConnectCampaigns::CampaignProgressiveDialerConfig`?

  ProgressiveDialerConfig: `AWS::ConnectCampaigns::CampaignProgressiveDialerConfig`?
}

class `AWS::ConnectCampaigns::CampaignOutboundCallConfig` {
  AnswerMachineDetectionConfig: `AWS::ConnectCampaigns::CampaignAnswerMachineDetectionConfig`?

  ConnectContactFlowArn: String

  ConnectQueueArn: String?

  ConnectSourcePhoneNumber: String?
}

class `AWS::ConnectCampaigns::CampaignProgressiveDialerConfig` {
  BandwidthAllocation: Number

  DialingCapacity: Number?
}

class `AWS::ControlTower::EnabledControl` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ControlTower::EnabledControlProperties`

  Type: "AWS::ControlTower::EnabledControl"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ControlTower::EnabledControlProperties` {
  ControlIdentifier: String

  Parameters: Listing<`AWS::ControlTower::EnabledControlEnabledControlParameter`>?

  TargetIdentifier: String
}

class `AWS::ControlTower::EnabledControlEnabledControlParameter` {
  Key: String

  Value: Dynamic
}

class `AWS::ControlTower::LandingZone` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ControlTower::LandingZoneProperties`

  Type: "AWS::ControlTower::LandingZone"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ControlTower::LandingZoneProperties` {
  Manifest: Dynamic

  Tags: Listing<Tag>?

  Version: String
}

class `AWS::CustomerProfiles::CalculatedAttributeDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CustomerProfiles::CalculatedAttributeDefinitionProperties`

  Type: "AWS::CustomerProfiles::CalculatedAttributeDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CustomerProfiles::CalculatedAttributeDefinitionProperties` {
  AttributeDetails: `AWS::CustomerProfiles::CalculatedAttributeDefinitionAttributeDetails`

  CalculatedAttributeName: String

  Conditions: `AWS::CustomerProfiles::CalculatedAttributeDefinitionConditions`?

  Description: String?

  DisplayName: String?

  DomainName: String

  Statistic: String

  Tags: Listing<Tag>?
}

class `AWS::CustomerProfiles::CalculatedAttributeDefinitionAttributeDetails` {
  Attributes: Listing<`AWS::WAFv2::WebACLSingleQueryArgument`>

  Expression: String
}

class `AWS::CustomerProfiles::CalculatedAttributeDefinitionConditions` {
  ObjectCount: Number?

  Range: `AWS::SecurityHub::AutomationRuleDateRange`?

  Threshold: `AWS::CustomerProfiles::CalculatedAttributeDefinitionThreshold`?
}

class `AWS::CustomerProfiles::CalculatedAttributeDefinitionThreshold` {
  Operator: String

  Value: String
}

class `AWS::CustomerProfiles::Domain` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CustomerProfiles::DomainProperties`

  Type: "AWS::CustomerProfiles::Domain"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CustomerProfiles::DomainProperties` {
  DeadLetterQueueUrl: String?

  DefaultEncryptionKey: String?

  DefaultExpirationDays: Number?

  DomainName: String

  Matching: `AWS::CustomerProfiles::DomainMatching`?

  RuleBasedMatching: `AWS::CustomerProfiles::DomainRuleBasedMatching`?

  Tags: Listing<Tag>?
}

class `AWS::CustomerProfiles::DomainAttributeTypesSelector` {
  Address: Listing<String>?

  AttributeMatchingModel: String

  EmailAddress: Listing<String>?

  PhoneNumber: Listing<String>?
}

class `AWS::CustomerProfiles::DomainAutoMerging` {
  ConflictResolution: `AWS::CustomerProfiles::DomainConflictResolution`?

  Consolidation: `AWS::CustomerProfiles::DomainConsolidation`?

  Enabled: Boolean

  MinAllowedConfidenceScoreForMerging: Number?
}

class `AWS::CustomerProfiles::DomainConflictResolution` {
  ConflictResolvingModel: String

  SourceName: String?
}

class `AWS::CustomerProfiles::DomainConsolidation` {
  MatchingAttributesList: Dynamic
}

class `AWS::CustomerProfiles::DomainDomainStats` {
  MeteringProfileCount: Number?

  ObjectCount: Number?

  ProfileCount: Number?

  TotalSize: Number?
}

class `AWS::CustomerProfiles::DomainExportingConfig` {
  S3Exporting: `AWS::CustomerProfiles::DomainS3ExportingConfig`?
}

class `AWS::CustomerProfiles::DomainJobSchedule` {
  DayOfTheWeek: String

  Time: String
}

class `AWS::CustomerProfiles::DomainMatching` {
  AutoMerging: `AWS::CustomerProfiles::DomainAutoMerging`?

  Enabled: Boolean

  ExportingConfig: `AWS::CustomerProfiles::DomainExportingConfig`?

  JobSchedule: `AWS::CustomerProfiles::DomainJobSchedule`?
}

class `AWS::CustomerProfiles::DomainMatchingRule` {
  Rule: Listing<String>
}

class `AWS::CustomerProfiles::DomainRuleBasedMatching` {
  AttributeTypesSelector: `AWS::CustomerProfiles::DomainAttributeTypesSelector`?

  ConflictResolution: `AWS::CustomerProfiles::DomainConflictResolution`?

  Enabled: Boolean

  ExportingConfig: `AWS::CustomerProfiles::DomainExportingConfig`?

  MatchingRules: Listing<`AWS::CustomerProfiles::DomainMatchingRule`>?

  MaxAllowedRuleLevelForMatching: Number?

  MaxAllowedRuleLevelForMerging: Number?

  Status: String?
}

class `AWS::CustomerProfiles::DomainS3ExportingConfig` {
  S3BucketName: String

  S3KeyName: String?
}

class `AWS::CustomerProfiles::EventStream` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CustomerProfiles::EventStreamProperties`

  Type: "AWS::CustomerProfiles::EventStream"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CustomerProfiles::EventStreamProperties` {
  DomainName: String

  EventStreamName: String

  Tags: Listing<Tag>?

  Uri: String
}

class `AWS::CustomerProfiles::EventStreamDestinationDetails` {
  Status: String

  Uri: String
}

class `AWS::CustomerProfiles::Integration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CustomerProfiles::IntegrationProperties`

  Type: "AWS::CustomerProfiles::Integration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CustomerProfiles::IntegrationProperties` {
  DomainName: String

  FlowDefinition: `AWS::CustomerProfiles::IntegrationFlowDefinition`?

  ObjectTypeName: String?

  ObjectTypeNames: Listing<Tag>?

  Tags: Listing<Tag>?

  Uri: String?
}

class `AWS::CustomerProfiles::IntegrationConnectorOperator` {
  Marketo: String?

  S3: String?

  Salesforce: String?

  ServiceNow: String?

  Zendesk: String?
}

class `AWS::CustomerProfiles::IntegrationFlowDefinition` {
  Description: String?

  FlowName: String

  KmsArn: String

  SourceFlowConfig: `AWS::CustomerProfiles::IntegrationSourceFlowConfig`

  Tasks: Listing<`AWS::CustomerProfiles::IntegrationTask`>

  TriggerConfig: `AWS::CustomerProfiles::IntegrationTriggerConfig`
}

class `AWS::CustomerProfiles::IntegrationS3SourceProperties` {
  BucketName: String

  BucketPrefix: String?
}

class `AWS::CustomerProfiles::IntegrationSalesforceSourceProperties` {
  EnableDynamicFieldUpdate: Boolean?

  IncludeDeletedRecords: Boolean?

  Object: String
}

class `AWS::CustomerProfiles::IntegrationScheduledTriggerProperties` {
  DataPullMode: String?

  FirstExecutionFrom: Number?

  ScheduleEndTime: Number?

  ScheduleExpression: String

  ScheduleOffset: Number?

  ScheduleStartTime: Number?

  Timezone: String?
}

class `AWS::CustomerProfiles::IntegrationSourceConnectorProperties` {
  Marketo: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?

  S3: `AWS::CustomerProfiles::IntegrationS3SourceProperties`?

  Salesforce: `AWS::CustomerProfiles::IntegrationSalesforceSourceProperties`?

  ServiceNow: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?

  Zendesk: `AWS::CustomerProfiles::IntegrationZendeskSourceProperties`?
}

class `AWS::CustomerProfiles::IntegrationSourceFlowConfig` {
  ConnectorProfileName: String?

  ConnectorType: String

  IncrementalPullConfig: `AWS::CustomerProfiles::IntegrationIncrementalPullConfig`?

  SourceConnectorProperties: `AWS::CustomerProfiles::IntegrationSourceConnectorProperties`
}

class `AWS::CustomerProfiles::IntegrationTask` {
  ConnectorOperator: `AWS::CustomerProfiles::IntegrationConnectorOperator`?

  DestinationField: String?

  SourceFields: Listing<String>

  TaskProperties: Listing<`AWS::CustomerProfiles::IntegrationTaskPropertiesMap`>?

  TaskType: String
}

class `AWS::CustomerProfiles::IntegrationTaskPropertiesMap` {
  OperatorPropertyKey: String

  Property: String
}

class `AWS::CustomerProfiles::IntegrationTriggerConfig` {
  TriggerProperties: `AWS::CustomerProfiles::IntegrationTriggerProperties`?

  TriggerType: String
}

class `AWS::CustomerProfiles::IntegrationTriggerProperties` {
  Scheduled: `AWS::CustomerProfiles::IntegrationScheduledTriggerProperties`?
}

class `AWS::CustomerProfiles::ObjectType` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::CustomerProfiles::ObjectTypeProperties`

  Type: "AWS::CustomerProfiles::ObjectType"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::CustomerProfiles::ObjectTypeProperties` {
  AllowProfileCreation: Boolean?

  Description: String?

  DomainName: String

  EncryptionKey: String?

  ExpirationDays: Number?

  Fields: Listing<`AWS::CustomerProfiles::ObjectTypeFieldMap`>?

  Keys: Listing<`AWS::CustomerProfiles::ObjectTypeKeyMap`>?

  ObjectTypeName: String?

  SourceLastUpdatedTimestampFormat: String?

  Tags: Listing<Tag>?

  TemplateId: String?
}

class `AWS::CustomerProfiles::ObjectTypeFieldMap` {
  Name: String?

  ObjectTypeField: `AWS::CustomerProfiles::ObjectTypeObjectTypeField`?
}

class `AWS::CustomerProfiles::ObjectTypeKeyMap` {
  Name: String?

  ObjectTypeKeyList: Listing<`AWS::CustomerProfiles::ObjectTypeObjectTypeKey`>?
}

class `AWS::CustomerProfiles::ObjectTypeObjectTypeField` {
  ContentType: String?

  Source: String?

  Target: String?
}

class `AWS::CustomerProfiles::ObjectTypeObjectTypeKey` {
  FieldNames: Listing<String>?

  StandardIdentifiers: Listing<String>?
}

class `AWS::DAX::Cluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DAX::ClusterProperties`

  Type: "AWS::DAX::Cluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DAX::ClusterProperties` {
  AvailabilityZones: Listing<String>?

  ClusterEndpointEncryptionType: String?

  ClusterName: String?

  Description: String?

  IAMRoleARN: String

  NodeType: String

  NotificationTopicARN: String?

  ParameterGroupName: String?

  PreferredMaintenanceWindow: String?

  ReplicationFactor: Number

  SSESpecification: `AWS::DAX::ClusterSSESpecification`?

  SecurityGroupIds: Listing<String>?

  SubnetGroupName: String?

  Tags: Dynamic?
}

class `AWS::DAX::ClusterSSESpecification` {
  SSEEnabled: Boolean?
}

class `AWS::DAX::ParameterGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DAX::ParameterGroupProperties`?

  Type: "AWS::DAX::ParameterGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DAX::ParameterGroupProperties` {
  Description: String?

  ParameterGroupName: String?

  ParameterNameValues: Dynamic?
}

class `AWS::DAX::SubnetGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DAX::SubnetGroupProperties`

  Type: "AWS::DAX::SubnetGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DAX::SubnetGroupProperties` {
  Description: String?

  SubnetGroupName: String?

  SubnetIds: Listing<String>
}

class `AWS::DLM::LifecyclePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DLM::LifecyclePolicyProperties`?

  Type: "AWS::DLM::LifecyclePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DLM::LifecyclePolicyProperties` {
  CopyTags: Boolean?

  CreateInterval: Number?

  CrossRegionCopyTargets: `AWS::Transfer::UserSshPublicKey`?

  DefaultPolicy: String?

  Description: String?

  Exclusions: `AWS::DLM::LifecyclePolicyExclusions`?

  ExecutionRoleArn: String?

  ExtendDeletion: Boolean?

  PolicyDetails: `AWS::DLM::LifecyclePolicyPolicyDetails`?

  RetainInterval: Number?

  State: String?

  Tags: Listing<Tag>?
}

class `AWS::DLM::LifecyclePolicyAction` {
  CrossRegionCopy: Listing<`AWS::DLM::LifecyclePolicyCrossRegionCopyAction`>

  Name: String
}

class `AWS::DLM::LifecyclePolicyArchiveRetainRule` {
  RetentionArchiveTier: `AWS::DLM::LifecyclePolicyRetentionArchiveTier`
}

class `AWS::DLM::LifecyclePolicyArchiveRule` {
  RetainRule: `AWS::DLM::LifecyclePolicyArchiveRetainRule`
}

class `AWS::DLM::LifecyclePolicyCreateRule` {
  CronExpression: String?

  Interval: Number?

  IntervalUnit: String?

  Location: String?

  Scripts: Listing<`AWS::DLM::LifecyclePolicyScript`>?

  Times: Listing<String>?
}

class `AWS::DLM::LifecyclePolicyCrossRegionCopyAction` {
  EncryptionConfiguration: `AWS::DLM::LifecyclePolicyEncryptionConfiguration`

  RetainRule: `AWS::DLM::LifecyclePolicyCrossRegionCopyRetainRule`?

  Target: String
}

class `AWS::DLM::LifecyclePolicyCrossRegionCopyRetainRule` {
  Interval: Number

  IntervalUnit: String
}

class `AWS::DLM::LifecyclePolicyCrossRegionCopyRule` {
  CmkArn: String?

  CopyTags: Boolean?

  DeprecateRule: `AWS::DLM::LifecyclePolicyCrossRegionCopyRetainRule`?

  Encrypted: Boolean

  RetainRule: `AWS::DLM::LifecyclePolicyCrossRegionCopyRetainRule`?

  Target: String?

  TargetRegion: String?
}

class `AWS::DLM::LifecyclePolicyCrossRegionCopyTarget` {
  TargetRegion: String?
}

class `AWS::DLM::LifecyclePolicyRetentionArchiveTier` {
  Count: Number?

  Interval: Number?

  IntervalUnit: String?
}

class `AWS::DLM::LifecyclePolicyEncryptionConfiguration` {
  CmkArn: String?

  Encrypted: Boolean
}

class `AWS::DLM::LifecyclePolicyEventParameters` {
  DescriptionRegex: String?

  EventType: String

  SnapshotOwner: Listing<String>
}

class `AWS::DLM::LifecyclePolicyEventSource` {
  Parameters: `AWS::DLM::LifecyclePolicyEventParameters`?

  Type: String
}

class `AWS::DLM::LifecyclePolicyExclusions` {
  ExcludeBootVolumes: Boolean?

  ExcludeTags: `AWS::Transfer::UserSshPublicKey`?

  ExcludeVolumeTypes: `AWS::Transfer::UserSshPublicKey`?
}

class `AWS::DLM::LifecyclePolicyFastRestoreRule` {
  AvailabilityZones: Listing<String>?

  Count: Number?

  Interval: Number?

  IntervalUnit: String?
}

class `AWS::DLM::LifecyclePolicyParameters` {
  ExcludeBootVolume: Boolean?

  ExcludeDataVolumeTags: Listing<Tag>?

  NoReboot: Boolean?
}

class `AWS::DLM::LifecyclePolicyPolicyDetails` {
  Actions: Listing<`AWS::DLM::LifecyclePolicyAction`>?

  CopyTags: Boolean?

  CreateInterval: Number?

  CrossRegionCopyTargets: `AWS::Transfer::UserSshPublicKey`?

  EventSource: `AWS::DLM::LifecyclePolicyEventSource`?

  Exclusions: `AWS::DLM::LifecyclePolicyExclusions`?

  ExtendDeletion: Boolean?

  Parameters: `AWS::DLM::LifecyclePolicyParameters`?

  PolicyLanguage: String?

  PolicyType: String?

  ResourceLocations: Listing<String>?

  ResourceType: String?

  ResourceTypes: Listing<String>?

  RetainInterval: Number?

  Schedules: Listing<`AWS::DLM::LifecyclePolicySchedule`>?

  TargetTags: Listing<Tag>?
}

class `AWS::DLM::LifecyclePolicySchedule` {
  ArchiveRule: `AWS::DLM::LifecyclePolicyArchiveRule`?

  CopyTags: Boolean?

  CreateRule: `AWS::DLM::LifecyclePolicyCreateRule`?

  CrossRegionCopyRules: Listing<`AWS::DLM::LifecyclePolicyCrossRegionCopyRule`>?

  DeprecateRule: `AWS::DLM::LifecyclePolicyRetentionArchiveTier`?

  FastRestoreRule: `AWS::DLM::LifecyclePolicyFastRestoreRule`?

  Name: String?

  RetainRule: `AWS::DLM::LifecyclePolicyRetentionArchiveTier`?

  ShareRules: Listing<`AWS::DLM::LifecyclePolicyShareRule`>?

  TagsToAdd: Listing<Tag>?

  VariableTags: Listing<Tag>?
}

class `AWS::DLM::LifecyclePolicyScript` {
  ExecuteOperationOnScriptFailure: Boolean?

  ExecutionHandler: String?

  ExecutionHandlerService: String?

  ExecutionTimeout: Number?

  MaximumRetryCount: Number?

  Stages: Listing<String>?
}

class `AWS::DLM::LifecyclePolicyShareRule` {
  TargetAccounts: Listing<String>?

  UnshareInterval: Number?

  UnshareIntervalUnit: String?
}

class `AWS::DMS::Certificate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DMS::CertificateProperties`?

  Type: "AWS::DMS::Certificate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DMS::CertificateProperties` {
  CertificateIdentifier: String?

  CertificatePem: String?

  CertificateWallet: String?
}

class `AWS::DMS::DataProvider` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DMS::DataProviderProperties`

  Type: "AWS::DMS::DataProvider"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DMS::DataProviderProperties` {
  DataProviderIdentifier: String?

  DataProviderName: String?

  Description: String?

  Engine: String

  ExactSettings: Boolean?

  Settings: `AWS::DMS::DataProviderSettings`?

  Tags: Listing<Tag>?
}

class `AWS::DMS::DataProviderPostgreSqlSettings` {
  CertificateArn: String?

  DatabaseName: String?

  Port: Number?

  ServerName: String?

  SslMode: String?
}

class `AWS::DMS::DataProviderMySqlSettings` {
  CertificateArn: String?

  Port: Number?

  ServerName: String?

  SslMode: String?
}

class `AWS::DMS::DataProviderOracleSettings` {
  AsmServer: String?

  CertificateArn: String?

  DatabaseName: String?

  Port: Number?

  SecretsManagerOracleAsmAccessRoleArn: String?

  SecretsManagerOracleAsmSecretId: String?

  SecretsManagerSecurityDbEncryptionAccessRoleArn: String?

  SecretsManagerSecurityDbEncryptionSecretId: String?

  ServerName: String?

  SslMode: String?
}

class `AWS::DMS::DataProviderSettings` {
  MicrosoftSqlServerSettings: `AWS::DMS::DataProviderPostgreSqlSettings`?

  MySqlSettings: `AWS::DMS::DataProviderMySqlSettings`?

  OracleSettings: `AWS::DMS::DataProviderOracleSettings`?

  PostgreSqlSettings: `AWS::DMS::DataProviderPostgreSqlSettings`?
}

class `AWS::DMS::Endpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DMS::EndpointProperties`

  Type: "AWS::DMS::Endpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DMS::EndpointProperties` {
  CertificateArn: String?

  DatabaseName: String?

  DocDbSettings: `AWS::DMS::EndpointDocDbSettings`?

  DynamoDbSettings: `AWS::DMS::EndpointDynamoDbSettings`?

  ElasticsearchSettings: `AWS::DMS::EndpointElasticsearchSettings`?

  EndpointIdentifier: String?

  EndpointType: String

  EngineName: String

  ExtraConnectionAttributes: String?

  GcpMySQLSettings: `AWS::DMS::EndpointGcpMySQLSettings`?

  IbmDb2Settings: `AWS::DMS::EndpointIbmDb2Settings`?

  KafkaSettings: `AWS::DMS::EndpointKafkaSettings`?

  KinesisSettings: `AWS::DMS::EndpointKinesisSettings`?

  KmsKeyId: String?

  MicrosoftSqlServerSettings: `AWS::DMS::EndpointMicrosoftSqlServerSettings`?

  MongoDbSettings: `AWS::DMS::EndpointMongoDbSettings`?

  MySqlSettings: `AWS::DMS::EndpointMySqlSettings`?

  NeptuneSettings: `AWS::DMS::EndpointNeptuneSettings`?

  OracleSettings: `AWS::DMS::EndpointOracleSettings`?

  Password: String?

  Port: Number?

  PostgreSqlSettings: `AWS::DMS::EndpointPostgreSqlSettings`?

  RedisSettings: `AWS::DMS::EndpointRedisSettings`?

  RedshiftSettings: `AWS::DMS::EndpointRedshiftSettings`?

  ResourceIdentifier: String?

  S3Settings: `AWS::DMS::EndpointS3Settings`?

  ServerName: String?

  SslMode: String?

  SybaseSettings: `AWS::DMS::EndpointSybaseSettings`?

  Tags: Listing<Tag>?

  Username: String?
}

class `AWS::DMS::EndpointDocDbSettings` {
  DocsToInvestigate: Number?

  ExtractDocId: Boolean?

  NestingLevel: String?

  SecretsManagerAccessRoleArn: String?

  SecretsManagerSecretId: String?
}

class `AWS::DMS::EndpointDynamoDbSettings` {
  ServiceAccessRoleArn: String?
}

class `AWS::DMS::EndpointElasticsearchSettings` {
  EndpointUri: String?

  ErrorRetryDuration: Number?

  FullLoadErrorPercentage: Number?

  ServiceAccessRoleArn: String?
}

class `AWS::DMS::EndpointGcpMySQLSettings` {
  AfterConnectScript: String?

  CleanSourceMetadataOnMismatch: Boolean?

  DatabaseName: String?

  EventsPollInterval: Number?

  MaxFileSize: Number?

  ParallelLoadThreads: Number?

  Password: String?

  Port: Number?

  SecretsManagerAccessRoleArn: String?

  SecretsManagerSecretId: String?

  ServerName: String?

  ServerTimezone: String?

  Username: String?
}

class `AWS::DMS::EndpointIbmDb2Settings` {
  CurrentLsn: String?

  KeepCsvFiles: Boolean?

  LoadTimeout: Number?

  MaxFileSize: Number?

  MaxKBytesPerRead: Number?

  SecretsManagerAccessRoleArn: String?

  SecretsManagerSecretId: String?

  SetDataCaptureChanges: Boolean?

  WriteBufferSize: Number?
}

class `AWS::DMS::EndpointKafkaSettings` {
  Broker: String?

  IncludeControlDetails: Boolean?

  IncludeNullAndEmpty: Boolean?

  IncludePartitionValue: Boolean?

  IncludeTableAlterOperations: Boolean?

  IncludeTransactionDetails: Boolean?

  MessageFormat: String?

  MessageMaxBytes: Number?

  NoHexPrefix: Boolean?

  PartitionIncludeSchemaTable: Boolean?

  SaslPassword: String?

  SaslUserName: String?

  SecurityProtocol: String?

  SslCaCertificateArn: String?

  SslClientCertificateArn: String?

  SslClientKeyArn: String?

  SslClientKeyPassword: String?

  Topic: String?
}

class `AWS::DMS::EndpointKinesisSettings` {
  IncludeControlDetails: Boolean?

  IncludeNullAndEmpty: Boolean?

  IncludePartitionValue: Boolean?

  IncludeTableAlterOperations: Boolean?

  IncludeTransactionDetails: Boolean?

  MessageFormat: String?

  NoHexPrefix: Boolean?

  PartitionIncludeSchemaTable: Boolean?

  ServiceAccessRoleArn: String?

  StreamArn: String?
}

class `AWS::DMS::EndpointMicrosoftSqlServerSettings` {
  BcpPacketSize: Number?

  ControlTablesFileGroup: String?

  DatabaseName: String?

  ForceLobLookup: Boolean?

  Password: String?

  Port: Number?

  QuerySingleAlwaysOnNode: Boolean?

  ReadBackupOnly: Boolean?

  SafeguardPolicy: String?

  SecretsManagerAccessRoleArn: String?

  SecretsManagerSecretId: String?

  ServerName: String?

  TlogAccessMode: String?

  TrimSpaceInChar: Boolean?

  UseBcpFullLoad: Boolean?

  UseThirdPartyBackupDevice: Boolean?

  Username: String?
}

class `AWS::DMS::EndpointMongoDbSettings` {
  AuthMechanism: String?

  AuthSource: String?

  AuthType: String?

  DatabaseName: String?

  DocsToInvestigate: String?

  ExtractDocId: String?

  NestingLevel: String?

  Password: String?

  Port: Number?

  SecretsManagerAccessRoleArn: String?

  SecretsManagerSecretId: String?

  ServerName: String?

  Username: String?
}

class `AWS::DMS::EndpointMySqlSettings` {
  AfterConnectScript: String?

  CleanSourceMetadataOnMismatch: Boolean?

  EventsPollInterval: Number?

  MaxFileSize: Number?

  ParallelLoadThreads: Number?

  SecretsManagerAccessRoleArn: String?

  SecretsManagerSecretId: String?

  ServerTimezone: String?

  TargetDbType: String?
}

class `AWS::DMS::EndpointNeptuneSettings` {
  ErrorRetryDuration: Number?

  IamAuthEnabled: Boolean?

  MaxFileSize: Number?

  MaxRetryCount: Number?

  S3BucketFolder: String?

  S3BucketName: String?

  ServiceAccessRoleArn: String?
}

class `AWS::DMS::EndpointOracleSettings` {
  AccessAlternateDirectly: Boolean?

  AddSupplementalLogging: Boolean?

  AdditionalArchivedLogDestId: Number?

  AllowSelectNestedTables: Boolean?

  ArchivedLogDestId: Number?

  ArchivedLogsOnly: Boolean?

  AsmPassword: String?

  AsmServer: String?

  AsmUser: String?

  CharLengthSemantics: String?

  DirectPathNoLog: Boolean?

  DirectPathParallelLoad: Boolean?

  EnableHomogenousTablespace: Boolean?

  ExtraArchivedLogDestIds: Listing<Number>?

  FailTasksOnLobTruncation: Boolean?

  NumberDatatypeScale: Number?

  OraclePathPrefix: String?

  ParallelAsmReadThreads: Number?

  ReadAheadBlocks: Number?

  ReadTableSpaceName: Boolean?

  ReplacePathPrefix: Boolean?

  RetryInterval: Number?

  SecretsManagerAccessRoleArn: String?

  SecretsManagerOracleAsmAccessRoleArn: String?

  SecretsManagerOracleAsmSecretId: String?

  SecretsManagerSecretId: String?

  SecurityDbEncryption: String?

  SecurityDbEncryptionName: String?

  SpatialDataOptionToGeoJsonFunctionName: String?

  StandbyDelayTime: Number?

  UseAlternateFolderForOnline: Boolean?

  UseBFile: Boolean?

  UseDirectPathFullLoad: Boolean?

  UseLogminerReader: Boolean?

  UsePathPrefix: String?
}

class `AWS::DMS::EndpointPostgreSqlSettings` {
  AfterConnectScript: String?

  BabelfishDatabaseName: String?

  CaptureDdls: Boolean?

  DatabaseMode: String?

  DdlArtifactsSchema: String?

  ExecuteTimeout: Number?

  FailTasksOnLobTruncation: Boolean?

  HeartbeatEnable: Boolean?

  HeartbeatFrequency: Number?

  HeartbeatSchema: String?

  MapBooleanAsBoolean: Boolean?

  MaxFileSize: Number?

  PluginName: String?

  SecretsManagerAccessRoleArn: String?

  SecretsManagerSecretId: String?

  SlotName: String?
}

class `AWS::DMS::EndpointRedisSettings` {
  AuthPassword: String?

  AuthType: String?

  AuthUserName: String?

  Port: Number?

  ServerName: String?

  SslCaCertificateArn: String?

  SslSecurityProtocol: String?
}

class `AWS::DMS::EndpointRedshiftSettings` {
  AcceptAnyDate: Boolean?

  AfterConnectScript: String?

  BucketFolder: String?

  BucketName: String?

  CaseSensitiveNames: Boolean?

  CompUpdate: Boolean?

  ConnectionTimeout: Number?

  DateFormat: String?

  EmptyAsNull: Boolean?

  EncryptionMode: String?

  ExplicitIds: Boolean?

  FileTransferUploadStreams: Number?

  LoadTimeout: Number?

  MapBooleanAsBoolean: Boolean?

  MaxFileSize: Number?

  RemoveQuotes: Boolean?

  ReplaceChars: String?

  ReplaceInvalidChars: String?

  SecretsManagerAccessRoleArn: String?

  SecretsManagerSecretId: String?

  ServerSideEncryptionKmsKeyId: String?

  ServiceAccessRoleArn: String?

  TimeFormat: String?

  TrimBlanks: Boolean?

  TruncateColumns: Boolean?

  WriteBufferSize: Number?
}

class `AWS::DMS::EndpointS3Settings` {
  AddColumnName: Boolean?

  AddTrailingPaddingCharacter: Boolean?

  BucketFolder: String?

  BucketName: String?

  CannedAclForObjects: String?

  CdcInsertsAndUpdates: Boolean?

  CdcInsertsOnly: Boolean?

  CdcMaxBatchInterval: Number?

  CdcMinFileSize: Number?

  CdcPath: String?

  CompressionType: String?

  CsvDelimiter: String?

  CsvNoSupValue: String?

  CsvNullValue: String?

  CsvRowDelimiter: String?

  DataFormat: String?

  DataPageSize: Number?

  DatePartitionDelimiter: String?

  DatePartitionEnabled: Boolean?

  DatePartitionSequence: String?

  DatePartitionTimezone: String?

  DictPageSizeLimit: Number?

  EnableStatistics: Boolean?

  EncodingType: String?

  EncryptionMode: String?

  ExpectedBucketOwner: String?

  ExternalTableDefinition: String?

  GlueCatalogGeneration: Boolean?

  IgnoreHeaderRows: Number?

  IncludeOpForFullLoad: Boolean?

  MaxFileSize: Number?

  ParquetTimestampInMillisecond: Boolean?

  ParquetVersion: String?

  PreserveTransactions: Boolean?

  Rfc4180: Boolean?

  RowGroupLength: Number?

  ServerSideEncryptionKmsKeyId: String?

  ServiceAccessRoleArn: String?

  TimestampColumnName: String?

  UseCsvNoSupValue: Boolean?

  UseTaskStartTimeForFullLoadTimestamp: Boolean?
}

class `AWS::DMS::EndpointSybaseSettings` {
  SecretsManagerAccessRoleArn: String?

  SecretsManagerSecretId: String?
}

class `AWS::DMS::EventSubscription` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::EventSubscriptionProperties`

  Type: "AWS::DMS::EventSubscription"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::EventSubscriptionProperties` {
  Enabled: Boolean?

  EventCategories: Listing<String>?

  SnsTopicArn: String

  SourceIds: Listing<String>?

  SourceType: String?

  SubscriptionName: String?

  Tags: Listing<Tag>?
}

class `AWS::DMS::InstanceProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DMS::InstanceProfileProperties`?

  Type: "AWS::DMS::InstanceProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DMS::InstanceProfileProperties` {
  AvailabilityZone: String?

  Description: String?

  InstanceProfileIdentifier: String?

  InstanceProfileName: String?

  KmsKeyArn: String?

  NetworkType: String?

  PubliclyAccessible: Boolean?

  SubnetGroupIdentifier: String?

  Tags: Listing<Tag>?

  VpcSecurityGroups: Listing<String>?
}

class `AWS::DMS::MigrationProject` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DMS::MigrationProjectProperties`?

  Type: "AWS::DMS::MigrationProject"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DMS::MigrationProjectProperties` {
  Description: String?

  InstanceProfileArn: String?

  InstanceProfileIdentifier: String?

  InstanceProfileName: String?

  MigrationProjectIdentifier: String?

  MigrationProjectName: String?

  SchemaConversionApplicationAttributes: `AWS::DMS::MigrationProjectSchemaConversionApplicationAttributes`?

  SourceDataProviderDescriptors: Listing<`AWS::DMS::MigrationProjectDataProviderDescriptor`>?

  Tags: Listing<Tag>?

  TargetDataProviderDescriptors: Listing<`AWS::DMS::MigrationProjectDataProviderDescriptor`>?

  TransformationRules: String?
}

class `AWS::DMS::MigrationProjectDataProviderDescriptor` {
  DataProviderArn: String?

  DataProviderIdentifier: String?

  DataProviderName: String?

  SecretsManagerAccessRoleArn: String?

  SecretsManagerSecretId: String?
}

class `AWS::DMS::MigrationProjectSchemaConversionApplicationAttributes` {
  S3BucketPath: String?

  S3BucketRoleArn: String?
}

class `AWS::DMS::ReplicationConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DMS::ReplicationConfigProperties`?

  Type: "AWS::DMS::ReplicationConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DMS::ReplicationConfigProperties` {
  ComputeConfig: `AWS::DMS::ReplicationConfigComputeConfig`?

  ReplicationConfigArn: String?

  ReplicationConfigIdentifier: String?

  ReplicationSettings: Dynamic?

  ReplicationType: String?

  ResourceIdentifier: String?

  SourceEndpointArn: String?

  SupplementalSettings: Dynamic?

  TableMappings: Dynamic?

  Tags: Listing<Tag>?

  TargetEndpointArn: String?
}

class `AWS::DMS::ReplicationConfigComputeConfig` {
  AvailabilityZone: String?

  DnsNameServers: String?

  KmsKeyId: String?

  MaxCapacityUnits: Number

  MinCapacityUnits: Number?

  MultiAZ: Boolean?

  PreferredMaintenanceWindow: String?

  ReplicationSubnetGroupId: String?

  VpcSecurityGroupIds: Listing<String>?
}

class `AWS::DMS::ReplicationInstance` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DMS::ReplicationInstanceProperties`

  Type: "AWS::DMS::ReplicationInstance"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DMS::ReplicationInstanceProperties` {
  AllocatedStorage: Number?

  AllowMajorVersionUpgrade: Boolean?

  AutoMinorVersionUpgrade: Boolean?

  AvailabilityZone: String?

  EngineVersion: String?

  KmsKeyId: String?

  MultiAZ: Boolean?

  PreferredMaintenanceWindow: String?

  PubliclyAccessible: Boolean?

  ReplicationInstanceClass: String

  ReplicationInstanceIdentifier: String?

  ReplicationSubnetGroupIdentifier: String?

  ResourceIdentifier: String?

  Tags: Listing<Tag>?

  VpcSecurityGroupIds: Listing<String>?
}

class `AWS::DMS::ReplicationSubnetGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DMS::ReplicationSubnetGroupProperties`

  Type: "AWS::DMS::ReplicationSubnetGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DMS::ReplicationSubnetGroupProperties` {
  ReplicationSubnetGroupDescription: String

  ReplicationSubnetGroupIdentifier: String?

  SubnetIds: Listing<String>

  Tags: Listing<Tag>?
}

class `AWS::DMS::ReplicationTask` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DMS::ReplicationTaskProperties`

  Type: "AWS::DMS::ReplicationTask"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DMS::ReplicationTaskProperties` {
  CdcStartPosition: String?

  CdcStartTime: Number?

  CdcStopPosition: String?

  MigrationType: String

  ReplicationInstanceArn: String

  ReplicationTaskIdentifier: String?

  ReplicationTaskSettings: String?

  ResourceIdentifier: String?

  SourceEndpointArn: String

  TableMappings: String

  Tags: Listing<Tag>?

  TargetEndpointArn: String

  TaskData: String?
}

class `AWS::DataBrew::Dataset` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataBrew::DatasetProperties`

  Type: "AWS::DataBrew::Dataset"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataBrew::DatasetProperties` {
  Format: String?

  FormatOptions: `AWS::DataBrew::DatasetFormatOptions`?

  Input: `AWS::DataBrew::DatasetInput`

  Name: String

  PathOptions: `AWS::DataBrew::DatasetPathOptions`?

  Tags: Listing<Tag>?
}

class `AWS::DataBrew::DatasetCsvOptions` {
  Delimiter: String?

  HeaderRow: Boolean?
}

class `AWS::DataBrew::DatasetDataCatalogInputDefinition` {
  CatalogId: String?

  DatabaseName: String?

  TableName: String?

  TempDirectory: `AWS::DataBrew::RecipeS3Location`?
}

class `AWS::DataBrew::DatasetDatabaseInputDefinition` {
  DatabaseTableName: String?

  GlueConnectionName: String

  QueryString: String?

  TempDirectory: `AWS::DataBrew::RecipeS3Location`?
}

class `AWS::DataBrew::DatasetDatasetParameter` {
  CreateColumn: Boolean?

  DatetimeOptions: `AWS::DataBrew::DatasetDatetimeOptions`?

  Filter: `AWS::DataBrew::DatasetFilterExpression`?

  Name: String

  Type: String
}

class `AWS::DataBrew::DatasetDatetimeOptions` {
  Format: String

  LocaleCode: String?

  TimezoneOffset: String?
}

class `AWS::DataBrew::DatasetExcelOptions` {
  HeaderRow: Boolean?

  SheetIndexes: Listing<Number>?

  SheetNames: Listing<String>?
}

class `AWS::DataBrew::DatasetFilesLimit` {
  MaxFiles: Number

  Order: String?

  OrderedBy: String?
}

class `AWS::DataBrew::DatasetFilterExpression` {
  Expression: String

  ValuesMap: Listing<`AWS::DataBrew::RulesetSubstitutionValue`>
}

class `AWS::DataBrew::RulesetSubstitutionValue` {
  Value: String

  ValueReference: String
}

class `AWS::DataBrew::DatasetFormatOptions` {
  Csv: `AWS::DataBrew::DatasetCsvOptions`?

  Excel: `AWS::DataBrew::DatasetExcelOptions`?

  Json: `AWS::DataBrew::DatasetJsonOptions`?
}

class `AWS::DataBrew::DatasetInput` {
  DataCatalogInputDefinition: `AWS::DataBrew::DatasetDataCatalogInputDefinition`?

  DatabaseInputDefinition: `AWS::DataBrew::DatasetDatabaseInputDefinition`?

  Metadata: `AWS::DataBrew::DatasetMetadata`?

  S3InputDefinition: `AWS::DataBrew::RecipeS3Location`?
}

class `AWS::DataBrew::DatasetJsonOptions` {
  MultiLine: Boolean?
}

class `AWS::DataBrew::DatasetMetadata` {
  SourceArn: String?
}

class `AWS::DataBrew::DatasetPathOptions` {
  FilesLimit: `AWS::DataBrew::DatasetFilesLimit`?

  LastModifiedDateCondition: `AWS::DataBrew::DatasetFilterExpression`?

  Parameters: Listing<`AWS::DataBrew::DatasetPathParameter`>?
}

class `AWS::DataBrew::DatasetPathParameter` {
  DatasetParameter: `AWS::DataBrew::DatasetDatasetParameter`

  PathParameterName: String
}

class `AWS::DataBrew::RecipeS3Location` {
  Bucket: String

  Key: String?
}

class `AWS::DataBrew::Job` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataBrew::JobProperties`

  Type: "AWS::DataBrew::Job"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataBrew::JobProperties` {
  DataCatalogOutputs: Listing<`AWS::DataBrew::JobDataCatalogOutput`>?

  DatabaseOutputs: Listing<`AWS::DataBrew::JobDatabaseOutput`>?

  DatasetName: String?

  EncryptionKeyArn: String?

  EncryptionMode: String?

  JobSample: `AWS::DataBrew::JobJobSample`?

  LogSubscription: String?

  MaxCapacity: Number?

  MaxRetries: Number?

  Name: String

  OutputLocation: `AWS::DataBrew::JobS3Location`?

  Outputs: Listing<`AWS::DataBrew::JobOutput`>?

  ProfileConfiguration: `AWS::DataBrew::JobProfileConfiguration`?

  ProjectName: String?

  Recipe: `AWS::RoboMaker::SimulationApplicationSimulationSoftwareSuite`?

  RoleArn: String

  Tags: Listing<Tag>?

  Timeout: Number?

  Type: String

  ValidationConfigurations: Listing<`AWS::DataBrew::JobValidationConfiguration`>?
}

class `AWS::DataBrew::JobAllowedStatistics` {
  Statistics: Listing<String>
}

class `AWS::DataBrew::RulesetColumnSelector` {
  Name: String?

  Regex: String?
}

class `AWS::DataBrew::JobColumnStatisticsConfiguration` {
  Selectors: Listing<`AWS::DataBrew::RulesetColumnSelector`>?

  Statistics: `AWS::DataBrew::JobStatisticsConfiguration`
}

class `AWS::DataBrew::JobCsvOutputOptions` {
  Delimiter: String?
}

class `AWS::DataBrew::JobDataCatalogOutput` {
  CatalogId: String?

  DatabaseName: String

  DatabaseOptions: `AWS::DataBrew::JobDatabaseTableOutputOptions`?

  Overwrite: Boolean?

  S3Options: `AWS::DataBrew::JobS3TableOutputOptions`?

  TableName: String
}

class `AWS::DataBrew::JobDatabaseOutput` {
  DatabaseOptions: `AWS::DataBrew::JobDatabaseTableOutputOptions`

  DatabaseOutputMode: String?

  GlueConnectionName: String
}

class `AWS::DataBrew::JobDatabaseTableOutputOptions` {
  TableName: String

  TempDirectory: `AWS::DataBrew::JobS3Location`?
}

class `AWS::DataBrew::JobEntityDetectorConfiguration` {
  AllowedStatistics: `AWS::DataBrew::JobAllowedStatistics`?

  EntityTypes: Listing<String>
}

class `AWS::DataBrew::JobJobSample` {
  Mode: String?

  Size: Number?
}

class `AWS::DataBrew::JobOutput` {
  CompressionFormat: String?

  Format: String?

  FormatOptions: `AWS::DataBrew::JobOutputFormatOptions`?

  Location: `AWS::DataBrew::JobS3Location`

  MaxOutputFiles: Number?

  Overwrite: Boolean?

  PartitionColumns: Listing<String>?
}

class `AWS::DataBrew::JobOutputFormatOptions` {
  Csv: `AWS::DataBrew::JobCsvOutputOptions`?
}

class `AWS::DataBrew::JobS3Location` {
  Bucket: String

  BucketOwner: String?

  Key: String?
}

class `AWS::DataBrew::JobProfileConfiguration` {
  ColumnStatisticsConfigurations: Listing<`AWS::DataBrew::JobColumnStatisticsConfiguration`>?

  DatasetStatisticsConfiguration: `AWS::DataBrew::JobStatisticsConfiguration`?

  EntityDetectorConfiguration: `AWS::DataBrew::JobEntityDetectorConfiguration`?

  ProfileColumns: Listing<`AWS::DataBrew::RulesetColumnSelector`>?
}

class `AWS::RoboMaker::SimulationApplicationSimulationSoftwareSuite` {
  Name: String

  Version: String?
}

class `AWS::DataBrew::JobS3TableOutputOptions` {
  Location: `AWS::DataBrew::JobS3Location`
}

class `AWS::DataBrew::JobStatisticOverride` {
  Parameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>

  Statistic: String
}

class `AWS::DataBrew::JobStatisticsConfiguration` {
  IncludedStatistics: Listing<String>?

  Overrides: Listing<`AWS::DataBrew::JobStatisticOverride`>?
}

class `AWS::DataBrew::JobValidationConfiguration` {
  RulesetArn: String

  ValidationMode: String?
}

class `AWS::DataBrew::Project` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataBrew::ProjectProperties`

  Type: "AWS::DataBrew::Project"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataBrew::ProjectProperties` {
  DatasetName: String

  Name: String

  RecipeName: String

  RoleArn: String

  Sample: `AWS::DataBrew::ProjectSample`?

  Tags: Listing<Tag>?
}

class `AWS::DataBrew::ProjectSample` {
  Size: Number?

  Type: String
}

class `AWS::DataBrew::Recipe` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataBrew::RecipeProperties`

  Type: "AWS::DataBrew::Recipe"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataBrew::RecipeProperties` {
  Description: String?

  Name: String

  Steps: Listing<`AWS::DataBrew::RecipeRecipeStep`>

  Tags: Listing<Tag>?
}

class `AWS::DataBrew::RecipeAction` {
  Operation: String

  Parameters: `AWS::DataBrew::RecipeRecipeParameters`?
}

class `AWS::DataBrew::RecipeConditionExpression` {
  Condition: String

  TargetColumn: String

  Value: String?
}

class `AWS::DataBrew::RecipeDataCatalogInputDefinition` {
  CatalogId: String?

  DatabaseName: String?

  TableName: String?

  TempDirectory: `AWS::DataBrew::RecipeS3Location`?
}

class `AWS::DataBrew::RecipeSecondaryInput` {
  DataCatalogInputDefinition: `AWS::DataBrew::RecipeDataCatalogInputDefinition`?

  S3InputDefinition: `AWS::DataBrew::RecipeS3Location`?
}

class `AWS::DataBrew::RecipeRecipeParameters` {
  AggregateFunction: String?

  Base: String?

  CaseStatement: String?

  CategoryMap: String?

  CharsToRemove: String?

  CollapseConsecutiveWhitespace: String?

  ColumnDataType: String?

  ColumnRange: String?

  Count: String?

  CustomCharacters: String?

  CustomStopWords: String?

  CustomValue: String?

  DatasetsColumns: String?

  DateAddValue: String?

  DateTimeFormat: String?

  DateTimeParameters: String?

  DeleteOtherRows: String?

  Delimiter: String?

  EndPattern: String?

  EndPosition: String?

  EndValue: String?

  ExpandContractions: String?

  Exponent: String?

  FalseString: String?

  GroupByAggFunctionOptions: String?

  GroupByColumns: String?

  HiddenColumns: String?

  IgnoreCase: String?

  IncludeInSplit: String?

  Input: `AWS::DataBrew::RecipeSecondaryInput`?

  Interval: String?

  IsText: String?

  JoinKeys: String?

  JoinType: String?

  LeftColumns: String?

  Limit: String?

  LowerBound: String?

  MapType: String?

  ModeType: String?

  MultiLine: Boolean?

  NumRows: String?

  NumRowsAfter: String?

  NumRowsBefore: String?

  OrderByColumn: String?

  OrderByColumns: String?

  Other: String?

  Pattern: String?

  PatternOption1: String?

  PatternOption2: String?

  PatternOptions: String?

  Period: String?

  Position: String?

  RemoveAllPunctuation: String?

  RemoveAllQuotes: String?

  RemoveAllWhitespace: String?

  RemoveCustomCharacters: String?

  RemoveCustomValue: String?

  RemoveLeadingAndTrailingPunctuation: String?

  RemoveLeadingAndTrailingQuotes: String?

  RemoveLeadingAndTrailingWhitespace: String?

  RemoveLetters: String?

  RemoveNumbers: String?

  RemoveSourceColumn: String?

  RemoveSpecialCharacters: String?

  RightColumns: String?

  SampleSize: String?

  SampleType: String?

  SecondInput: String?

  SecondaryInputs: Listing<`AWS::DataBrew::RecipeSecondaryInput`>?

  SheetIndexes: Listing<Number>?

  SheetNames: Listing<String>?

  SourceColumn: String?

  SourceColumn1: String?

  SourceColumn2: String?

  SourceColumns: String?

  StartColumnIndex: String?

  StartPattern: String?

  StartPosition: String?

  StartValue: String?

  StemmingMode: String?

  StepCount: String?

  StepIndex: String?

  StopWordsMode: String?

  Strategy: String?

  TargetColumn: String?

  TargetColumnNames: String?

  TargetDateFormat: String?

  TargetIndex: String?

  TimeZone: String?

  TokenizerPattern: String?

  TrueString: String?

  UdfLang: String?

  Units: String?

  UnpivotColumn: String?

  UpperBound: String?

  UseNewDataFrame: String?

  Value: String?

  Value1: String?

  Value2: String?

  ValueColumn: String?

  ViewFrame: String?
}

class `AWS::DataBrew::RecipeRecipeStep` {
  Action: `AWS::DataBrew::RecipeAction`

  ConditionExpressions: Listing<`AWS::DataBrew::RecipeConditionExpression`>?
}

class `AWS::DataBrew::Ruleset` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataBrew::RulesetProperties`

  Type: "AWS::DataBrew::Ruleset"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataBrew::RulesetProperties` {
  Description: String?

  Name: String

  Rules: Listing<`AWS::DataBrew::RulesetRule`>

  Tags: Listing<Tag>?

  TargetArn: String
}

class `AWS::DataBrew::RulesetRule` {
  CheckExpression: String

  ColumnSelectors: Listing<`AWS::DataBrew::RulesetColumnSelector`>?

  Disabled: Boolean?

  Name: String

  SubstitutionMap: Listing<`AWS::DataBrew::RulesetSubstitutionValue`>?

  Threshold: `AWS::DataBrew::RulesetThreshold`?
}

class `AWS::DataBrew::RulesetThreshold` {
  Type: String?

  Unit: String?

  Value: Number
}

class `AWS::DataBrew::Schedule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataBrew::ScheduleProperties`

  Type: "AWS::DataBrew::Schedule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataBrew::ScheduleProperties` {
  CronExpression: String

  JobNames: Listing<String>?

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::DataPipeline::Pipeline` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataPipeline::PipelineProperties`

  Type: "AWS::DataPipeline::Pipeline"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataPipeline::PipelineProperties` {
  Activate: Boolean?

  Description: String?

  Name: String

  ParameterObjects: Listing<`AWS::DataPipeline::PipelineParameterObject`>?

  ParameterValues: Listing<`AWS::DataPipeline::PipelineParameterValue`>?

  PipelineObjects: Listing<`AWS::DataPipeline::PipelinePipelineObject`>?

  PipelineTags: Listing<Tag>?
}

class `AWS::DataPipeline::PipelineField` {
  Key: String

  RefValue: String?

  StringValue: String?
}

class `AWS::DataPipeline::PipelineParameterAttribute` {
  Key: String

  StringValue: String
}

class `AWS::DataPipeline::PipelineParameterObject` {
  Attributes: Listing<`AWS::DataPipeline::PipelineParameterAttribute`>

  Id: String
}

class `AWS::DataPipeline::PipelineParameterValue` {
  Id: String

  StringValue: String
}

class `AWS::DataPipeline::PipelinePipelineObject` {
  Fields: Listing<`AWS::DataPipeline::PipelineField`>

  Id: String

  Name: String
}

class `AWS::DataSync::Agent` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataSync::AgentProperties`?

  Type: "AWS::DataSync::Agent"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataSync::AgentProperties` {
  ActivationKey: String?

  AgentName: String?

  SecurityGroupArns: Listing<String>?

  SubnetArns: Listing<String>?

  Tags: Listing<Tag>?

  VpcEndpointId: String?
}

class `AWS::DataSync::LocationAzureBlob` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataSync::LocationAzureBlobProperties`

  Type: "AWS::DataSync::LocationAzureBlob"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataSync::LocationAzureBlobProperties` {
  AgentArns: Listing<String>

  AzureAccessTier: String?

  AzureBlobAuthenticationType: String

  AzureBlobContainerUrl: String?

  AzureBlobSasConfiguration: `AWS::DataSync::LocationAzureBlobAzureBlobSasConfiguration`?

  AzureBlobType: String?

  Subdirectory: String?

  Tags: Listing<Tag>?
}

class `AWS::DataSync::LocationAzureBlobAzureBlobSasConfiguration` {
  AzureBlobSasToken: String
}

class `AWS::DataSync::LocationEFS` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataSync::LocationEFSProperties`

  Type: "AWS::DataSync::LocationEFS"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataSync::LocationEFSProperties` {
  AccessPointArn: String?

  Ec2Config: `AWS::DataSync::LocationEFSEc2Config`

  EfsFilesystemArn: String?

  FileSystemAccessRoleArn: String?

  InTransitEncryption: String?

  Subdirectory: String?

  Tags: Listing<Tag>?
}

class `AWS::DataSync::LocationEFSEc2Config` {
  SecurityGroupArns: Listing<String>

  SubnetArn: String
}

class `AWS::DataSync::LocationFSxLustre` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataSync::LocationFSxLustreProperties`

  Type: "AWS::DataSync::LocationFSxLustre"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataSync::LocationFSxLustreProperties` {
  FsxFilesystemArn: String?

  SecurityGroupArns: Listing<String>

  Subdirectory: String?

  Tags: Listing<Tag>?
}

class `AWS::DataSync::LocationFSxONTAP` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataSync::LocationFSxONTAPProperties`

  Type: "AWS::DataSync::LocationFSxONTAP"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataSync::LocationFSxONTAPProperties` {
  Protocol: `AWS::DataSync::LocationFSxONTAPProtocol`?

  SecurityGroupArns: Listing<String>

  StorageVirtualMachineArn: String

  Subdirectory: String?

  Tags: Listing<Tag>?
}

class `AWS::DataSync::LocationFSxONTAPNFS` {
  MountOptions: `AWS::DataSync::LocationSMBMountOptions`
}

class `AWS::DataSync::LocationSMBMountOptions` {
  Version: String?
}

class `AWS::DataSync::LocationFSxONTAPProtocol` {
  NFS: `AWS::DataSync::LocationFSxONTAPNFS`?

  SMB: `AWS::DataSync::LocationFSxONTAPSMB`?
}

class `AWS::DataSync::LocationFSxONTAPSMB` {
  Domain: String?

  MountOptions: `AWS::DataSync::LocationSMBMountOptions`

  Password: String

  User: String
}

class `AWS::DataSync::LocationFSxOpenZFS` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataSync::LocationFSxOpenZFSProperties`

  Type: "AWS::DataSync::LocationFSxOpenZFS"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataSync::LocationFSxOpenZFSProperties` {
  FsxFilesystemArn: String?

  Protocol: `AWS::DataSync::LocationFSxOpenZFSProtocol`

  SecurityGroupArns: Listing<String>

  Subdirectory: String?

  Tags: Listing<Tag>?
}

class `AWS::DataSync::LocationFSxOpenZFSNFS` {
  MountOptions: `AWS::DataSync::LocationSMBMountOptions`
}

class `AWS::DataSync::LocationFSxOpenZFSProtocol` {
  NFS: `AWS::DataSync::LocationFSxOpenZFSNFS`?
}

class `AWS::DataSync::LocationFSxWindows` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataSync::LocationFSxWindowsProperties`

  Type: "AWS::DataSync::LocationFSxWindows"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataSync::LocationFSxWindowsProperties` {
  Domain: String?

  FsxFilesystemArn: String?

  Password: String?

  SecurityGroupArns: Listing<String>

  Subdirectory: String?

  Tags: Listing<Tag>?

  User: String
}

class `AWS::DataSync::LocationHDFS` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataSync::LocationHDFSProperties`

  Type: "AWS::DataSync::LocationHDFS"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataSync::LocationHDFSProperties` {
  AgentArns: Listing<String>

  AuthenticationType: String

  BlockSize: Number?

  KerberosKeytab: String?

  KerberosKrb5Conf: String?

  KerberosPrincipal: String?

  KmsKeyProviderUri: String?

  NameNodes: Listing<`AWS::DataSync::LocationHDFSNameNode`>

  QopConfiguration: `AWS::DataSync::LocationHDFSQopConfiguration`?

  ReplicationFactor: Number?

  SimpleUser: String?

  Subdirectory: String?

  Tags: Listing<Tag>?
}

class `AWS::DataSync::LocationHDFSNameNode` {
  Hostname: String

  Port: Number
}

class `AWS::DataSync::LocationHDFSQopConfiguration` {
  DataTransferProtection: String?

  RpcProtection: String?
}

class `AWS::DataSync::LocationNFS` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataSync::LocationNFSProperties`

  Type: "AWS::DataSync::LocationNFS"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataSync::LocationNFSProperties` {
  MountOptions: `AWS::DataSync::LocationSMBMountOptions`?

  OnPremConfig: `AWS::DataSync::LocationNFSOnPremConfig`

  ServerHostname: String?

  Subdirectory: String?

  Tags: Listing<Tag>?
}

class `AWS::DataSync::LocationNFSOnPremConfig` {
  AgentArns: Listing<String>
}

class `AWS::DataSync::LocationObjectStorage` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataSync::LocationObjectStorageProperties`

  Type: "AWS::DataSync::LocationObjectStorage"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataSync::LocationObjectStorageProperties` {
  AccessKey: String?

  AgentArns: Listing<String>

  BucketName: String?

  SecretKey: String?

  ServerCertificate: String?

  ServerHostname: String?

  ServerPort: Number?

  ServerProtocol: String?

  Subdirectory: String?

  Tags: Listing<Tag>?
}

class `AWS::DataSync::LocationS3` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataSync::LocationS3Properties`

  Type: "AWS::DataSync::LocationS3"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataSync::LocationS3Properties` {
  S3BucketArn: String?

  S3Config: `AWS::DataSync::LocationS3S3Config`

  S3StorageClass: String?

  Subdirectory: String?

  Tags: Listing<Tag>?
}

class `AWS::DataSync::LocationS3S3Config` {
  BucketAccessRoleArn: String
}

class `AWS::DataSync::LocationSMB` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataSync::LocationSMBProperties`

  Type: "AWS::DataSync::LocationSMB"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataSync::LocationSMBProperties` {
  AgentArns: Listing<String>

  Domain: String?

  MountOptions: `AWS::DataSync::LocationSMBMountOptions`?

  Password: String?

  ServerHostname: String?

  Subdirectory: String?

  Tags: Listing<Tag>?

  User: String
}

class `AWS::DataSync::StorageSystem` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataSync::StorageSystemProperties`

  Type: "AWS::DataSync::StorageSystem"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataSync::StorageSystemProperties` {
  AgentArns: Listing<String>

  CloudWatchLogGroupArn: String?

  Name: String?

  ServerConfiguration: `AWS::DataSync::StorageSystemServerConfiguration`

  ServerCredentials: `AWS::Events::ConnectionBasicAuthParameters`?

  SystemType: String

  Tags: Listing<Tag>?
}

class `AWS::DataSync::StorageSystemServerConfiguration` {
  ServerHostname: String

  ServerPort: Number?
}

class `AWS::DataSync::Task` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DataSync::TaskProperties`

  Type: "AWS::DataSync::Task"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DataSync::TaskProperties` {
  CloudWatchLogGroupArn: String?

  DestinationLocationArn: String

  Excludes: Listing<`AWS::DataSync::TaskFilterRule`>?

  Includes: Listing<`AWS::DataSync::TaskFilterRule`>?

  Name: String?

  Options: `AWS::DataSync::TaskOptions`?

  Schedule: `AWS::Timestream::ScheduledQueryScheduleConfiguration`?

  SourceLocationArn: String

  Tags: Listing<Tag>?

  TaskReportConfig: `AWS::DataSync::TaskTaskReportConfig`?
}

class `AWS::DataSync::TaskVerified` {
  ReportLevel: String?
}

class `AWS::DataSync::TaskDestination` {
  S3: `AWS::DataSync::TaskS3`?
}

class `AWS::DataSync::TaskFilterRule` {
  FilterType: String?

  Value: String?
}

class `AWS::DataSync::TaskOptions` {
  Atime: String?

  BytesPerSecond: Number?

  Gid: String?

  LogLevel: String?

  Mtime: String?

  ObjectTags: String?

  OverwriteMode: String?

  PosixPermissions: String?

  PreserveDeletedFiles: String?

  PreserveDevices: String?

  SecurityDescriptorCopyFlags: String?

  TaskQueueing: String?

  TransferMode: String?

  Uid: String?

  VerifyMode: String?
}

class `AWS::DataSync::TaskOverrides` {
  Deleted: `AWS::DataSync::TaskVerified`?

  Skipped: `AWS::DataSync::TaskVerified`?

  Transferred: `AWS::DataSync::TaskVerified`?

  Verified: `AWS::DataSync::TaskVerified`?
}

class `AWS::DataSync::TaskS3` {
  BucketAccessRoleArn: String?

  S3BucketArn: String?

  Subdirectory: String?
}

class `AWS::DataSync::TaskTaskReportConfig` {
  Destination: `AWS::DataSync::TaskDestination`

  ObjectVersionIds: String?

  OutputType: String

  Overrides: `AWS::DataSync::TaskOverrides`?

  ReportLevel: String?
}

class `AWS::Timestream::ScheduledQueryScheduleConfiguration` {
  ScheduleExpression: String
}

class `AWS::Detective::Graph` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Detective::GraphProperties`?

  Type: "AWS::Detective::Graph"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Detective::GraphProperties` {
  AutoEnableMembers: Boolean?

  Tags: Listing<Tag>?
}

class `AWS::Detective::MemberInvitation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Detective::MemberInvitationProperties`

  Type: "AWS::Detective::MemberInvitation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Detective::MemberInvitationProperties` {
  DisableEmailNotification: Boolean?

  GraphArn: String

  MemberEmailAddress: String

  MemberId: String

  Message: String?
}

class `AWS::Detective::OrganizationAdmin` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Detective::OrganizationAdminProperties`

  Type: "AWS::Detective::OrganizationAdmin"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Detective::OrganizationAdminProperties` {
  AccountId: String
}

class `AWS::DevOpsGuru::LogAnomalyDetectionIntegration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Transfer::UserSshPublicKey`?

  Type: "AWS::DevOpsGuru::LogAnomalyDetectionIntegration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DevOpsGuru::NotificationChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DevOpsGuru::NotificationChannelProperties`

  Type: "AWS::DevOpsGuru::NotificationChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DevOpsGuru::NotificationChannelProperties` {
  Config: `AWS::DevOpsGuru::NotificationChannelNotificationChannelConfig`
}

class `AWS::DevOpsGuru::NotificationChannelNotificationChannelConfig` {
  Filters: `AWS::DevOpsGuru::NotificationChannelNotificationFilterConfig`?

  Sns: `AWS::DevOpsGuru::NotificationChannelSnsChannelConfig`?
}

class `AWS::DevOpsGuru::NotificationChannelNotificationFilterConfig` {
  MessageTypes: Listing<String>?

  Severities: Listing<String>?
}

class `AWS::DevOpsGuru::NotificationChannelSnsChannelConfig` {
  TopicArn: String?
}

class `AWS::DevOpsGuru::ResourceCollection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DevOpsGuru::ResourceCollectionProperties`

  Type: "AWS::DevOpsGuru::ResourceCollection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DevOpsGuru::ResourceCollectionProperties` {
  ResourceCollectionFilter: `AWS::DevOpsGuru::ResourceCollectionResourceCollectionFilter`
}

class `AWS::DevOpsGuru::ResourceCollectionCloudFormationCollectionFilter` {
  StackNames: Listing<String>?
}

class `AWS::DevOpsGuru::ResourceCollectionResourceCollectionFilter` {
  CloudFormation: `AWS::DevOpsGuru::ResourceCollectionCloudFormationCollectionFilter`?

  Tags: Listing<`AWS::DevOpsGuru::ResourceCollectionTagCollection`>?
}

class `AWS::DevOpsGuru::ResourceCollectionTagCollection` {
  AppBoundaryKey: String?

  TagValues: Listing<String>?
}

class `AWS::DirectoryService::MicrosoftAD` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DirectoryService::MicrosoftADProperties`

  Type: "AWS::DirectoryService::MicrosoftAD"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DirectoryService::MicrosoftADProperties` {
  CreateAlias: Boolean?

  Edition: String?

  EnableSso: Boolean?

  Name: String

  Password: String

  ShortName: String?

  VpcSettings: `AWS::DirectoryService::SimpleADVpcSettings`
}

class `AWS::DirectoryService::SimpleADVpcSettings` {
  SubnetIds: Listing<String>

  VpcId: String
}

class `AWS::DirectoryService::SimpleAD` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DirectoryService::SimpleADProperties`

  Type: "AWS::DirectoryService::SimpleAD"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DirectoryService::SimpleADProperties` {
  CreateAlias: Boolean?

  Description: String?

  EnableSso: Boolean?

  Name: String

  Password: String?

  ShortName: String?

  Size: String

  VpcSettings: `AWS::DirectoryService::SimpleADVpcSettings`
}

class `AWS::DocDB::DBCluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DocDB::DBClusterProperties`?

  Type: "AWS::DocDB::DBCluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DocDB::DBClusterProperties` {
  AvailabilityZones: Listing<String>?

  BackupRetentionPeriod: Number?

  CopyTagsToSnapshot: Boolean?

  DBClusterIdentifier: String?

  DBClusterParameterGroupName: String?

  DBSubnetGroupName: String?

  DeletionProtection: Boolean?

  EnableCloudwatchLogsExports: Listing<String>?

  EngineVersion: String?

  KmsKeyId: String?

  MasterUserPassword: String?

  MasterUsername: String?

  Port: Number?

  PreferredBackupWindow: String?

  PreferredMaintenanceWindow: String?

  RestoreToTime: String?

  RestoreType: String?

  SnapshotIdentifier: String?

  SourceDBClusterIdentifier: String?

  StorageEncrypted: Boolean?

  StorageType: String?

  Tags: Listing<Tag>?

  UseLatestRestorableTime: Boolean?

  VpcSecurityGroupIds: Listing<String>?
}

class `AWS::DocDB::DBClusterParameterGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Neptune::DBParameterGroupProperties`

  Type: "AWS::DocDB::DBClusterParameterGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Neptune::DBParameterGroupProperties` {
  Description: String

  Family: String

  Name: String?

  Parameters: Dynamic

  Tags: Listing<Tag>?
}

class `AWS::DocDB::DBInstance` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DocDB::DBInstanceProperties`

  Type: "AWS::DocDB::DBInstance"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DocDB::DBInstanceProperties` {
  AutoMinorVersionUpgrade: Boolean?

  AvailabilityZone: String?

  CACertificateIdentifier: String?

  CertificateRotationRestart: Boolean?

  DBClusterIdentifier: String

  DBInstanceClass: String

  DBInstanceIdentifier: String?

  EnablePerformanceInsights: Boolean?

  PreferredMaintenanceWindow: String?

  Tags: Listing<Tag>?
}

class `AWS::DocDB::DBSubnetGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::DBSubnetGroupProperties`

  Type: "AWS::DocDB::DBSubnetGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::DBSubnetGroupProperties` {
  DBSubnetGroupDescription: String

  DBSubnetGroupName: String?

  SubnetIds: Listing<String>

  Tags: Listing<Tag>?
}

class `AWS::DocDB::EventSubscription` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DocDB::EventSubscriptionProperties`

  Type: "AWS::DocDB::EventSubscription"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DocDB::EventSubscriptionProperties` {
  Enabled: Boolean?

  EventCategories: Listing<String>?

  SnsTopicArn: String

  SourceIds: Listing<String>?

  SourceType: String?

  SubscriptionName: String?
}

class `AWS::DocDBElastic::Cluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DocDBElastic::ClusterProperties`

  Type: "AWS::DocDBElastic::Cluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DocDBElastic::ClusterProperties` {
  AdminUserName: String

  AdminUserPassword: String?

  AuthType: String

  ClusterName: String

  KmsKeyId: String?

  PreferredMaintenanceWindow: String?

  ShardCapacity: Number

  ShardCount: Number

  SubnetIds: Listing<String>?

  Tags: Listing<Tag>?

  VpcSecurityGroupIds: Listing<String>?
}

class `AWS::DynamoDB::GlobalTable` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DynamoDB::GlobalTableProperties`

  Type: "AWS::DynamoDB::GlobalTable"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DynamoDB::GlobalTableProperties` {
  AttributeDefinitions: Listing<`AWS::DynamoDB::TableAttributeDefinition`>

  BillingMode: String?

  GlobalSecondaryIndexes: Listing<`AWS::DynamoDB::GlobalTableGlobalSecondaryIndex`>?

  KeySchema: Listing<`AWS::DynamoDB::TableKeySchema`>

  LocalSecondaryIndexes: Listing<`AWS::DynamoDB::GlobalTableLocalSecondaryIndex`>?

  Replicas: Listing<`AWS::DynamoDB::GlobalTableReplicaSpecification`>

  SSESpecification: `AWS::DynamoDB::GlobalTableSSESpecification`?

  StreamSpecification: `AWS::DynamoDB::TableStreamSpecification`?

  TableName: String?

  TimeToLiveSpecification: `AWS::DynamoDB::TableTimeToLiveSpecification`?

  WriteProvisionedThroughputSettings: `AWS::DynamoDB::GlobalTableWriteProvisionedThroughputSettings`?
}

class `AWS::DynamoDB::TableAttributeDefinition` {
  AttributeName: String

  AttributeType: String
}

class `AWS::DynamoDB::GlobalTableCapacityAutoScalingSettings` {
  MaxCapacity: Number

  MinCapacity: Number

  SeedCapacity: Number?

  TargetTrackingScalingPolicyConfiguration: `AWS::DynamoDB::GlobalTableTargetTrackingScalingPolicyConfiguration`
}

class `AWS::MSK::ServerlessClusterIam` {
  Enabled: Boolean
}

class `AWS::DynamoDB::GlobalTableGlobalSecondaryIndex` {
  IndexName: String

  KeySchema: Listing<`AWS::DynamoDB::TableKeySchema`>

  Projection: `AWS::DynamoDB::TableProjection`

  WriteProvisionedThroughputSettings: `AWS::DynamoDB::GlobalTableWriteProvisionedThroughputSettings`?
}

class `AWS::DynamoDB::TableKeySchema` {
  AttributeName: String

  KeyType: String
}

class `AWS::DynamoDB::GlobalTableLocalSecondaryIndex` {
  IndexName: String

  KeySchema: Listing<`AWS::DynamoDB::TableKeySchema`>

  Projection: `AWS::DynamoDB::TableProjection`
}

class `AWS::DynamoDB::TablePointInTimeRecoverySpecification` {
  PointInTimeRecoveryEnabled: Boolean?
}

class `AWS::DynamoDB::TableProjection` {
  NonKeyAttributes: Listing<String>?

  ProjectionType: String?
}

class `AWS::DynamoDB::GlobalTableReadProvisionedThroughputSettings` {
  ReadCapacityAutoScalingSettings: `AWS::DynamoDB::GlobalTableCapacityAutoScalingSettings`?

  ReadCapacityUnits: Number?
}

class `AWS::DynamoDB::GlobalTableReplicaGlobalSecondaryIndexSpecification` {
  ContributorInsightsSpecification: `AWS::MSK::ServerlessClusterIam`?

  IndexName: String

  ReadProvisionedThroughputSettings: `AWS::DynamoDB::GlobalTableReadProvisionedThroughputSettings`?
}

class `AWS::DynamoDB::GlobalTableReplicaSSESpecification` {
  KMSMasterKeyId: String
}

class `AWS::DynamoDB::GlobalTableReplicaSpecification` {
  ContributorInsightsSpecification: `AWS::MSK::ServerlessClusterIam`?

  DeletionProtectionEnabled: Boolean?

  GlobalSecondaryIndexes: Listing<`AWS::DynamoDB::GlobalTableReplicaGlobalSecondaryIndexSpecification`>?

  KinesisStreamSpecification: `AWS::DynamoDB::TableKinesisStreamSpecification`?

  PointInTimeRecoverySpecification: `AWS::DynamoDB::TablePointInTimeRecoverySpecification`?

  ReadProvisionedThroughputSettings: `AWS::DynamoDB::GlobalTableReadProvisionedThroughputSettings`?

  Region: String

  SSESpecification: `AWS::DynamoDB::GlobalTableReplicaSSESpecification`?

  TableClass: String?

  Tags: Listing<Tag>?
}

class `AWS::DynamoDB::GlobalTableSSESpecification` {
  SSEEnabled: Boolean

  SSEType: String?
}

class `AWS::DynamoDB::TableStreamSpecification` {
  StreamViewType: String
}

class `AWS::DynamoDB::GlobalTableTargetTrackingScalingPolicyConfiguration` {
  DisableScaleIn: Boolean?

  ScaleInCooldown: Number?

  ScaleOutCooldown: Number?

  TargetValue: Number
}

class `AWS::DynamoDB::TableTimeToLiveSpecification` {
  AttributeName: String?

  Enabled: Boolean
}

class `AWS::DynamoDB::GlobalTableWriteProvisionedThroughputSettings` {
  WriteCapacityAutoScalingSettings: `AWS::DynamoDB::GlobalTableCapacityAutoScalingSettings`?
}

class `AWS::DynamoDB::Table` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::DynamoDB::TableProperties`

  Type: "AWS::DynamoDB::Table"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::DynamoDB::TableProperties` {
  AttributeDefinitions: Listing<`AWS::DynamoDB::TableAttributeDefinition`>?

  BillingMode: String?

  ContributorInsightsSpecification: `AWS::MSK::ServerlessClusterIam`?

  DeletionProtectionEnabled: Boolean?

  GlobalSecondaryIndexes: Listing<`AWS::DynamoDB::TableGlobalSecondaryIndex`>?

  ImportSourceSpecification: `AWS::DynamoDB::TableImportSourceSpecification`?

  KeySchema: Listing<`AWS::DynamoDB::TableKeySchema`>

  KinesisStreamSpecification: `AWS::DynamoDB::TableKinesisStreamSpecification`?

  LocalSecondaryIndexes: Listing<`AWS::DynamoDB::TableLocalSecondaryIndex`>?

  PointInTimeRecoverySpecification: `AWS::DynamoDB::TablePointInTimeRecoverySpecification`?

  ProvisionedThroughput: `AWS::DynamoDB::TableProvisionedThroughput`?

  SSESpecification: `AWS::DynamoDB::TableSSESpecification`?

  StreamSpecification: `AWS::DynamoDB::TableStreamSpecification`?

  TableClass: String?

  TableName: String?

  Tags: Listing<Tag>?

  TimeToLiveSpecification: `AWS::DynamoDB::TableTimeToLiveSpecification`?
}

class `AWS::DynamoDB::TableCsv` {
  Delimiter: String?

  HeaderList: Listing<String>?
}

class `AWS::DynamoDB::TableGlobalSecondaryIndex` {
  ContributorInsightsSpecification: `AWS::MSK::ServerlessClusterIam`?

  IndexName: String

  KeySchema: Listing<`AWS::DynamoDB::TableKeySchema`>

  Projection: `AWS::DynamoDB::TableProjection`

  ProvisionedThroughput: `AWS::DynamoDB::TableProvisionedThroughput`?
}

class `AWS::DynamoDB::TableImportSourceSpecification` {
  InputCompressionType: String?

  InputFormat: String

  InputFormatOptions: `AWS::DynamoDB::TableInputFormatOptions`?

  S3BucketSource: `AWS::DynamoDB::TableS3BucketSource`
}

class `AWS::DynamoDB::TableInputFormatOptions` {
  Csv: `AWS::DynamoDB::TableCsv`?
}

class `AWS::DynamoDB::TableLocalSecondaryIndex` {
  IndexName: String

  KeySchema: Listing<`AWS::DynamoDB::TableKeySchema`>

  Projection: `AWS::DynamoDB::TableProjection`
}

class `AWS::DynamoDB::TableS3BucketSource` {
  S3Bucket: String

  S3BucketOwner: String?

  S3KeyPrefix: String?
}

class `AWS::DynamoDB::TableSSESpecification` {
  KMSMasterKeyId: String?

  SSEEnabled: Boolean

  SSEType: String?
}

class `AWS::EC2::CapacityReservation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::CapacityReservationProperties`

  Type: "AWS::EC2::CapacityReservation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::CapacityReservationProperties` {
  AvailabilityZone: String

  EbsOptimized: Boolean?

  EndDate: String?

  EndDateType: String?

  EphemeralStorage: Boolean?

  InstanceCount: Number

  InstanceMatchCriteria: String?

  InstancePlatform: String

  InstanceType: String

  OutPostArn: String?

  PlacementGroupArn: String?

  TagSpecifications: Listing<`AWS::EC2::SpotFleetSpotFleetTagSpecification`>?

  Tenancy: String?
}

class `AWS::EC2::SpotFleetSpotFleetTagSpecification` {
  ResourceType: String?

  Tags: Listing<Tag>?
}

class `AWS::EC2::CapacityReservationFleet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::CapacityReservationFleetProperties`?

  Type: "AWS::EC2::CapacityReservationFleet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::CapacityReservationFleetProperties` {
  AllocationStrategy: String?

  EndDate: String?

  InstanceMatchCriteria: String?

  InstanceTypeSpecifications: Listing<`AWS::EC2::CapacityReservationFleetInstanceTypeSpecification`>?

  NoRemoveEndDate: Boolean?

  RemoveEndDate: Boolean?

  TagSpecifications: Listing<`AWS::EC2::SpotFleetSpotFleetTagSpecification`>?

  Tenancy: String?

  TotalTargetCapacity: Number?
}

class `AWS::EC2::CapacityReservationFleetInstanceTypeSpecification` {
  AvailabilityZone: String?

  AvailabilityZoneId: String?

  EbsOptimized: Boolean?

  InstancePlatform: String?

  InstanceType: String?

  Priority: Number?

  Weight: Number?
}

class `AWS::EC2::CarrierGateway` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::RouteTableProperties`

  Type: "AWS::EC2::CarrierGateway"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::RouteTableProperties` {
  Tags: Listing<Tag>?

  VpcId: String
}

class `AWS::EC2::ClientVpnAuthorizationRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::ClientVpnAuthorizationRuleProperties`

  Type: "AWS::EC2::ClientVpnAuthorizationRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::ClientVpnAuthorizationRuleProperties` {
  AccessGroupId: String?

  AuthorizeAllGroups: Boolean?

  ClientVpnEndpointId: String

  Description: String?

  TargetNetworkCidr: String
}

class `AWS::EC2::ClientVpnEndpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::ClientVpnEndpointProperties`

  Type: "AWS::EC2::ClientVpnEndpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::ClientVpnEndpointProperties` {
  AuthenticationOptions: Listing<`AWS::EC2::ClientVpnEndpointClientAuthenticationRequest`>

  ClientCidrBlock: String

  ClientConnectOptions: `AWS::EC2::ClientVpnEndpointClientConnectOptions`?

  ClientLoginBannerOptions: `AWS::EC2::ClientVpnEndpointClientLoginBannerOptions`?

  ConnectionLogOptions: `AWS::EC2::ClientVpnEndpointConnectionLogOptions`

  Description: String?

  DnsServers: Listing<String>?

  SecurityGroupIds: Listing<String>?

  SelfServicePortal: String?

  ServerCertificateArn: String

  SessionTimeoutHours: Number?

  SplitTunnel: Boolean?

  TagSpecifications: Listing<`AWS::EC2::ClientVpnEndpointTagSpecification`>?

  TransportProtocol: String?

  VpcId: String?

  VpnPort: Number?
}

class `AWS::EC2::ClientVpnEndpointCertificateAuthenticationRequest` {
  ClientRootCertificateChainArn: String
}

class `AWS::EC2::ClientVpnEndpointClientAuthenticationRequest` {
  ActiveDirectory: `AWS::EC2::ClientVpnEndpointDirectoryServiceAuthenticationRequest`?

  FederatedAuthentication: `AWS::EC2::ClientVpnEndpointFederatedAuthenticationRequest`?

  MutualAuthentication: `AWS::EC2::ClientVpnEndpointCertificateAuthenticationRequest`?

  Type: String
}

class `AWS::EC2::ClientVpnEndpointClientConnectOptions` {
  Enabled: Boolean

  LambdaFunctionArn: String?
}

class `AWS::EC2::ClientVpnEndpointClientLoginBannerOptions` {
  BannerText: String?

  Enabled: Boolean
}

class `AWS::EC2::ClientVpnEndpointConnectionLogOptions` {
  CloudwatchLogGroup: String?

  CloudwatchLogStream: String?

  Enabled: Boolean
}

class `AWS::EC2::ClientVpnEndpointDirectoryServiceAuthenticationRequest` {
  DirectoryId: String
}

class `AWS::EC2::ClientVpnEndpointFederatedAuthenticationRequest` {
  SAMLProviderArn: String

  SelfServiceSAMLProviderArn: String?
}

class `AWS::EC2::ClientVpnEndpointTagSpecification` {
  ResourceType: String

  Tags: Listing<Tag>
}

class `AWS::EC2::ClientVpnRoute` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::ClientVpnRouteProperties`

  Type: "AWS::EC2::ClientVpnRoute"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::ClientVpnRouteProperties` {
  ClientVpnEndpointId: String

  Description: String?

  DestinationCidrBlock: String

  TargetVpcSubnetId: String
}

class `AWS::EC2::ClientVpnTargetNetworkAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::ClientVpnTargetNetworkAssociationProperties`

  Type: "AWS::EC2::ClientVpnTargetNetworkAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::ClientVpnTargetNetworkAssociationProperties` {
  ClientVpnEndpointId: String

  SubnetId: String
}

class `AWS::EC2::CustomerGateway` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::CustomerGatewayProperties`

  Type: "AWS::EC2::CustomerGateway"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::CustomerGatewayProperties` {
  BgpAsn: Number

  DeviceName: String?

  IpAddress: String

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::EC2::DHCPOptions` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::DHCPOptionsProperties`?

  Type: "AWS::EC2::DHCPOptions"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::DHCPOptionsProperties` {
  DomainName: String?

  DomainNameServers: Listing<String>?

  NetbiosNameServers: Listing<String>?

  NetbiosNodeType: Number?

  NtpServers: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::EC2::EC2Fleet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::EC2FleetProperties`

  Type: "AWS::EC2::EC2Fleet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::EC2FleetProperties` {
  Context: String?

  ExcessCapacityTerminationPolicy: String?

  LaunchTemplateConfigs: Listing<`AWS::EC2::EC2FleetFleetLaunchTemplateConfigRequest`>

  OnDemandOptions: `AWS::EC2::EC2FleetOnDemandOptionsRequest`?

  ReplaceUnhealthyInstances: Boolean?

  SpotOptions: `AWS::EC2::EC2FleetSpotOptionsRequest`?

  TagSpecifications: Listing<`AWS::EC2::SpotFleetSpotFleetTagSpecification`>?

  TargetCapacitySpecification: `AWS::EC2::EC2FleetTargetCapacitySpecificationRequest`

  TerminateInstancesWithExpiration: Boolean?

  Type: String?

  ValidFrom: String?

  ValidUntil: String?
}

class `AWS::EC2::SpotFleetSpotCapacityRebalance` {
  ReplacementStrategy: String?

  TerminationDelay: Number?
}

class `AWS::EC2::EC2FleetCapacityReservationOptionsRequest` {
  UsageStrategy: String?
}

class `AWS::EC2::EC2FleetFleetLaunchTemplateConfigRequest` {
  LaunchTemplateSpecification: `AWS::EC2::SpotFleetFleetLaunchTemplateSpecification`?

  Overrides: Listing<`AWS::EC2::EC2FleetFleetLaunchTemplateOverridesRequest`>?
}

class `AWS::EC2::EC2FleetFleetLaunchTemplateOverridesRequest` {
  AvailabilityZone: String?

  InstanceRequirements: `AWS::EC2::EC2FleetInstanceRequirementsRequest`?

  InstanceType: String?

  MaxPrice: String?

  Placement: `AWS::EC2::EC2FleetPlacement`?

  Priority: Number?

  SubnetId: String?

  WeightedCapacity: Number?
}

class `AWS::EC2::EC2FleetInstanceRequirementsRequest` {
  AcceleratorCount: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  AcceleratorManufacturers: Listing<String>?

  AcceleratorNames: Listing<String>?

  AcceleratorTotalMemoryMiB: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  AcceleratorTypes: Listing<String>?

  AllowedInstanceTypes: Listing<String>?

  BareMetal: String?

  BaselineEbsBandwidthMbps: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  BurstablePerformance: String?

  CpuManufacturers: Listing<String>?

  ExcludedInstanceTypes: Listing<String>?

  InstanceGenerations: Listing<String>?

  LocalStorage: String?

  LocalStorageTypes: Listing<String>?

  MemoryGiBPerVCpu: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  MemoryMiB: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  NetworkBandwidthGbps: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  NetworkInterfaceCount: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  OnDemandMaxPricePercentageOverLowestPrice: Number?

  RequireHibernateSupport: Boolean?

  SpotMaxPricePercentageOverLowestPrice: Number?

  TotalLocalStorageGB: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  VCpuCount: `AWS::QuickSight::TemplateArcAxisDisplayRange`?
}

class `AWS::EC2::EC2FleetMaintenanceStrategies` {
  CapacityRebalance: `AWS::EC2::SpotFleetSpotCapacityRebalance`?
}

class `AWS::EC2::EC2FleetOnDemandOptionsRequest` {
  AllocationStrategy: String?

  CapacityReservationOptions: `AWS::EC2::EC2FleetCapacityReservationOptionsRequest`?

  MaxTotalPrice: String?

  MinTargetCapacity: Number?

  SingleAvailabilityZone: Boolean?

  SingleInstanceType: Boolean?
}

class `AWS::EC2::EC2FleetPlacement` {
  Affinity: String?

  AvailabilityZone: String?

  GroupName: String?

  HostId: String?

  HostResourceGroupArn: String?

  PartitionNumber: Number?

  SpreadDomain: String?

  Tenancy: String?
}

class `AWS::EC2::EC2FleetSpotOptionsRequest` {
  AllocationStrategy: String?

  InstanceInterruptionBehavior: String?

  InstancePoolsToUseCount: Number?

  MaintenanceStrategies: `AWS::EC2::EC2FleetMaintenanceStrategies`?

  MaxTotalPrice: String?

  MinTargetCapacity: Number?

  SingleAvailabilityZone: Boolean?

  SingleInstanceType: Boolean?
}

class `AWS::EC2::EC2FleetTargetCapacitySpecificationRequest` {
  DefaultTargetCapacityType: String?

  OnDemandTargetCapacity: Number?

  SpotTargetCapacity: Number?

  TargetCapacityUnitType: String?

  TotalTargetCapacity: Number
}

class `AWS::EC2::EIP` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::EIPProperties`?

  Type: "AWS::EC2::EIP"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::EIPProperties` {
  Domain: String?

  InstanceId: String?

  NetworkBorderGroup: String?

  PublicIpv4Pool: String?

  Tags: Listing<Tag>?

  TransferAddress: String?
}

class `AWS::EC2::EIPAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::EIPAssociationProperties`?

  Type: "AWS::EC2::EIPAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::EIPAssociationProperties` {
  AllocationId: String?

  InstanceId: String?

  NetworkInterfaceId: String?

  PrivateIpAddress: String?
}

class `AWS::EC2::EgressOnlyInternetGateway` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::EgressOnlyInternetGatewayProperties`

  Type: "AWS::EC2::EgressOnlyInternetGateway"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::EgressOnlyInternetGatewayProperties` {
  VpcId: String
}

class `AWS::EC2::EnclaveCertificateIamRoleAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::EnclaveCertificateIamRoleAssociationProperties`

  Type: "AWS::EC2::EnclaveCertificateIamRoleAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::EnclaveCertificateIamRoleAssociationProperties` {
  CertificateArn: String

  RoleArn: String
}

class `AWS::EC2::FlowLog` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::FlowLogProperties`

  Type: "AWS::EC2::FlowLog"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::FlowLogProperties` {
  DeliverCrossAccountRole: String?

  DeliverLogsPermissionArn: String?

  DestinationOptions: `AWS::EC2::FlowLogDestinationOptions`?

  LogDestination: String?

  LogDestinationType: String?

  LogFormat: String?

  LogGroupName: String?

  MaxAggregationInterval: Number?

  ResourceId: String

  ResourceType: String

  Tags: Listing<Tag>?

  TrafficType: String?
}

class `AWS::EC2::FlowLogDestinationOptions` {
  FileFormat: String

  HiveCompatiblePartitions: Boolean

  PerHourPartition: Boolean
}

class `AWS::EC2::GatewayRouteTableAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::GatewayRouteTableAssociationProperties`

  Type: "AWS::EC2::GatewayRouteTableAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::GatewayRouteTableAssociationProperties` {
  GatewayId: String

  RouteTableId: String
}

class `AWS::EC2::Host` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::HostProperties`

  Type: "AWS::EC2::Host"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::HostProperties` {
  AssetId: String?

  AutoPlacement: String?

  AvailabilityZone: String

  HostMaintenance: String?

  HostRecovery: String?

  InstanceFamily: String?

  InstanceType: String?

  OutpostArn: String?
}

class `AWS::EC2::IPAM` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::IPAMProperties`?

  Type: "AWS::EC2::IPAM"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::IPAMProperties` {
  Description: String?

  OperatingRegions: Listing<`AWS::EC2::IPAMResourceDiscoveryIpamOperatingRegion`>?

  Tags: Listing<Tag>?

  Tier: String?
}

class `AWS::EC2::IPAMResourceDiscoveryIpamOperatingRegion` {
  RegionName: String
}

class `AWS::EC2::IPAMAllocation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::IPAMAllocationProperties`

  Type: "AWS::EC2::IPAMAllocation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::IPAMAllocationProperties` {
  Cidr: String?

  Description: String?

  IpamPoolId: String

  NetmaskLength: Number?
}

class `AWS::EC2::IPAMPool` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::IPAMPoolProperties`

  Type: "AWS::EC2::IPAMPool"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::IPAMPoolProperties` {
  AddressFamily: String

  AllocationDefaultNetmaskLength: Number?

  AllocationMaxNetmaskLength: Number?

  AllocationMinNetmaskLength: Number?

  AllocationResourceTags: Listing<Tag>?

  AutoImport: Boolean?

  AwsService: String?

  Description: String?

  IpamScopeId: String

  Locale: String?

  ProvisionedCidrs: Listing<`AWS::EC2::IPAMPoolProvisionedCidr`>?

  PublicIpSource: String?

  PubliclyAdvertisable: Boolean?

  SourceIpamPoolId: String?

  SourceResource: `AWS::EC2::IPAMPoolSourceResource`?

  Tags: Listing<Tag>?
}

class `AWS::EC2::IPAMPoolProvisionedCidr` {
  Cidr: String
}

class `AWS::EC2::IPAMPoolSourceResource` {
  ResourceId: String

  ResourceOwner: String

  ResourceRegion: String

  ResourceType: String
}

class `AWS::EC2::IPAMPoolCidr` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::IPAMPoolCidrProperties`

  Type: "AWS::EC2::IPAMPoolCidr"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::IPAMPoolCidrProperties` {
  Cidr: String?

  IpamPoolId: String

  NetmaskLength: Number?
}

class `AWS::EC2::IPAMResourceDiscovery` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::IPAMResourceDiscoveryProperties`?

  Type: "AWS::EC2::IPAMResourceDiscovery"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::IPAMResourceDiscoveryProperties` {
  Description: String?

  OperatingRegions: Listing<`AWS::EC2::IPAMResourceDiscoveryIpamOperatingRegion`>?

  Tags: Listing<Tag>?
}

class `AWS::EC2::IPAMResourceDiscoveryAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::IPAMResourceDiscoveryAssociationProperties`

  Type: "AWS::EC2::IPAMResourceDiscoveryAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::IPAMResourceDiscoveryAssociationProperties` {
  IpamId: String

  IpamResourceDiscoveryId: String

  Tags: Listing<Tag>?
}

class `AWS::EC2::IPAMScope` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::IPAMScopeProperties`

  Type: "AWS::EC2::IPAMScope"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::IPAMScopeProperties` {
  Description: String?

  IpamId: String

  Tags: Listing<Tag>?
}

class `AWS::EC2::Instance` {
  Condition: String?

  CreationPolicy: Dynamic?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::InstanceProperties`?

  Type: "AWS::EC2::Instance"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::InstanceProperties` {
  AdditionalInfo: String?

  Affinity: String?

  AvailabilityZone: String?

  BlockDeviceMappings: Listing<`AWS::EC2::InstanceBlockDeviceMapping`>?

  CpuOptions: `AWS::EC2::InstanceCpuOptions`?

  CreditSpecification: `AWS::EC2::InstanceCreditSpecification`?

  DisableApiTermination: Boolean?

  EbsOptimized: Boolean?

  ElasticGpuSpecifications: Listing<`AWS::WAFRegional::WebACLAction`>?

  ElasticInferenceAccelerators: Listing<`AWS::EC2::InstanceElasticInferenceAccelerator`>?

  EnclaveOptions: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  HibernationOptions: `AWS::EC2::LaunchTemplateHibernationOptions`?

  HostId: String?

  HostResourceGroupArn: String?

  IamInstanceProfile: String?

  ImageId: String?

  InstanceInitiatedShutdownBehavior: String?

  InstanceType: String?

  Ipv6AddressCount: Number?

  Ipv6Addresses: Listing<`AWS::EC2::SpotFleetInstanceIpv6Address`>?

  KernelId: String?

  KeyName: String?

  LaunchTemplate: `AWS::EC2::SpotFleetFleetLaunchTemplateSpecification`?

  LicenseSpecifications: Listing<`AWS::EC2::InstanceLicenseSpecification`>?

  Monitoring: Boolean?

  NetworkInterfaces: Listing<`AWS::EC2::InstanceNetworkInterface`>?

  PlacementGroupName: String?

  PrivateDnsNameOptions: `AWS::EC2::SubnetPrivateDnsNameOptionsOnLaunch`?

  PrivateIpAddress: String?

  PropagateTagsToVolumeOnCreation: Boolean?

  RamdiskId: String?

  SecurityGroupIds: Listing<String>?

  SecurityGroups: Listing<String>?

  SourceDestCheck: Boolean?

  SsmAssociations: Listing<`AWS::EC2::InstanceSsmAssociation`>?

  SubnetId: String?

  Tags: Listing<Tag>?

  Tenancy: String?

  UserData: String?

  Volumes: Listing<`AWS::EC2::InstanceVolume`>?
}

class `AWS::EMRServerless::ApplicationLogTypeMapKeyValuePair` {
  Key: String

  Value: Listing<String>
}

class `AWS::EC2::InstanceBlockDeviceMapping` {
  DeviceName: String

  Ebs: `AWS::EC2::InstanceEbs`?

  NoDevice: `AWS::Transfer::UserSshPublicKey`?

  VirtualName: String?
}

class `AWS::EC2::InstanceCpuOptions` {
  CoreCount: Number?

  ThreadsPerCore: Number?
}

class `AWS::EC2::InstanceCreditSpecification` {
  CPUCredits: String?
}

class `AWS::EC2::InstanceEbs` {
  DeleteOnTermination: Boolean?

  Encrypted: Boolean?

  Iops: Number?

  KmsKeyId: String?

  SnapshotId: String?

  VolumeSize: Number?

  VolumeType: String?
}

class `AWS::EC2::InstanceElasticInferenceAccelerator` {
  Count: Number?

  Type: String
}

class `AWS::StepFunctions::StateMachineTracingConfiguration` {
  Enabled: Boolean?
}

class `AWS::EC2::LaunchTemplateHibernationOptions` {
  Configured: Boolean?
}

class `AWS::EC2::SpotFleetInstanceIpv6Address` {
  Ipv6Address: String
}

class `AWS::EC2::InstanceLicenseSpecification` {
  LicenseConfigurationArn: String
}

class `AWS::EC2::InstanceNetworkInterface` {
  AssociateCarrierIpAddress: Boolean?

  AssociatePublicIpAddress: Boolean?

  DeleteOnTermination: Boolean?

  Description: String?

  DeviceIndex: String

  GroupSet: Listing<String>?

  Ipv6AddressCount: Number?

  Ipv6Addresses: Listing<`AWS::EC2::SpotFleetInstanceIpv6Address`>?

  NetworkInterfaceId: String?

  PrivateIpAddress: String?

  PrivateIpAddresses: Listing<`AWS::EC2::NetworkInterfacePrivateIpAddressSpecification`>?

  SecondaryPrivateIpAddressCount: Number?

  SubnetId: String?
}

class `AWS::EC2::SubnetPrivateDnsNameOptionsOnLaunch` {
  EnableResourceNameDnsAAAARecord: Boolean?

  EnableResourceNameDnsARecord: Boolean?

  HostnameType: String?
}

class `AWS::EC2::NetworkInterfacePrivateIpAddressSpecification` {
  Primary: Boolean

  PrivateIpAddress: String
}

class `AWS::EC2::InstanceSsmAssociation` {
  AssociationParameters: Listing<`AWS::EMRServerless::ApplicationLogTypeMapKeyValuePair`>?

  DocumentName: String
}

class `AWS::EC2::InstanceVolume` {
  Device: String

  VolumeId: String
}

class `AWS::EC2::InstanceConnectEndpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::InstanceConnectEndpointProperties`

  Type: "AWS::EC2::InstanceConnectEndpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::InstanceConnectEndpointProperties` {
  ClientToken: String?

  PreserveClientIp: Boolean?

  SecurityGroupIds: Listing<String>?

  SubnetId: String

  Tags: Listing<Tag>?
}

class `AWS::EC2::InternetGateway` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::InternetGatewayProperties`?

  Type: "AWS::EC2::InternetGateway"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::InternetGatewayProperties` {
  Tags: Listing<Tag>?
}

class `AWS::EC2::KeyPair` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::KeyPairProperties`

  Type: "AWS::EC2::KeyPair"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::KeyPairProperties` {
  KeyFormat: String?

  KeyName: String

  KeyType: String?

  PublicKeyMaterial: String?

  Tags: Listing<Tag>?
}

class `AWS::EC2::LaunchTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::LaunchTemplateProperties`

  Type: "AWS::EC2::LaunchTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::LaunchTemplateProperties` {
  LaunchTemplateData: `AWS::EC2::LaunchTemplateLaunchTemplateData`

  LaunchTemplateName: String?

  TagSpecifications: Listing<`AWS::EC2::SpotFleetSpotFleetTagSpecification`>?

  VersionDescription: String?
}

class `AWS::EC2::LaunchTemplateBlockDeviceMapping` {
  DeviceName: String?

  Ebs: `AWS::ImageBuilder::ImageRecipeEbsInstanceBlockDeviceSpecification`?

  NoDevice: String?

  VirtualName: String?
}

class `AWS::EC2::LaunchTemplateCapacityReservationSpecification` {
  CapacityReservationPreference: String?

  CapacityReservationTarget: `AWS::EC2::LaunchTemplateCapacityReservationTarget`?
}

class `AWS::EC2::LaunchTemplateCapacityReservationTarget` {
  CapacityReservationId: String?

  CapacityReservationResourceGroupArn: String?
}

class `AWS::EC2::NetworkInterfaceConnectionTrackingSpecification` {
  TcpEstablishedTimeout: Number?

  UdpStreamTimeout: Number?

  UdpTimeout: Number?
}

class `AWS::EC2::LaunchTemplateCpuOptions` {
  AmdSevSnp: String?

  CoreCount: Number?

  ThreadsPerCore: Number?
}

class `AWS::EC2::LaunchTemplateCreditSpecification` {
  CpuCredits: String?
}

class `AWS::ImageBuilder::ImageRecipeEbsInstanceBlockDeviceSpecification` {
  DeleteOnTermination: Boolean?

  Encrypted: Boolean?

  Iops: Number?

  KmsKeyId: String?

  SnapshotId: String?

  Throughput: Number?

  VolumeSize: Number?

  VolumeType: String?
}

class `AWS::EC2::LaunchTemplateEnaSrdSpecification` {
  EnaSrdEnabled: Boolean?

  EnaSrdUdpSpecification: `AWS::EC2::LaunchTemplateEnaSrdUdpSpecification`?
}

class `AWS::EC2::LaunchTemplateEnaSrdUdpSpecification` {
  EnaSrdUdpEnabled: Boolean?
}

class `AWS::Glue::SchemaRegistry` {
  Arn: String?

  Name: String?
}

class `AWS::EC2::LaunchTemplateInstanceMarketOptions` {
  MarketType: String?

  SpotOptions: `AWS::EC2::LaunchTemplateSpotOptions`?
}

class `AWS::EC2::LaunchTemplateInstanceRequirements` {
  AcceleratorCount: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  AcceleratorManufacturers: Listing<String>?

  AcceleratorNames: Listing<String>?

  AcceleratorTotalMemoryMiB: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  AcceleratorTypes: Listing<String>?

  AllowedInstanceTypes: Listing<String>?

  BareMetal: String?

  BaselineEbsBandwidthMbps: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  BurstablePerformance: String?

  CpuManufacturers: Listing<String>?

  ExcludedInstanceTypes: Listing<String>?

  InstanceGenerations: Listing<String>?

  LocalStorage: String?

  LocalStorageTypes: Listing<String>?

  MemoryGiBPerVCpu: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  MemoryMiB: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  NetworkBandwidthGbps: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  NetworkInterfaceCount: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  OnDemandMaxPricePercentageOverLowestPrice: Number?

  RequireHibernateSupport: Boolean?

  SpotMaxPricePercentageOverLowestPrice: Number?

  TotalLocalStorageGB: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  VCpuCount: `AWS::QuickSight::TemplateArcAxisDisplayRange`?
}

class `AWS::EC2::LaunchTemplateIpv4PrefixSpecification` {
  Ipv4Prefix: String?
}

class `AWS::EC2::LaunchTemplateIpv6Add` {
  Ipv6Address: String?
}

class `AWS::EC2::LaunchTemplateIpv6PrefixSpecification` {
  Ipv6Prefix: String?
}

class `AWS::EC2::LaunchTemplateLaunchTemplateData` {
  BlockDeviceMappings: Listing<`AWS::EC2::LaunchTemplateBlockDeviceMapping`>?

  CapacityReservationSpecification: `AWS::EC2::LaunchTemplateCapacityReservationSpecification`?

  CpuOptions: `AWS::EC2::LaunchTemplateCpuOptions`?

  CreditSpecification: `AWS::EC2::LaunchTemplateCreditSpecification`?

  DisableApiStop: Boolean?

  DisableApiTermination: Boolean?

  EbsOptimized: Boolean?

  ElasticGpuSpecifications: Listing<`AWS::MSK::ClusterPublicAccess`>?

  ElasticInferenceAccelerators: Listing<`AWS::EC2::LaunchTemplateLaunchTemplateElasticInferenceAccelerator`>?

  EnclaveOptions: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  HibernationOptions: `AWS::EC2::LaunchTemplateHibernationOptions`?

  IamInstanceProfile: `AWS::Glue::SchemaRegistry`?

  ImageId: String?

  InstanceInitiatedShutdownBehavior: String?

  InstanceMarketOptions: `AWS::EC2::LaunchTemplateInstanceMarketOptions`?

  InstanceRequirements: `AWS::EC2::LaunchTemplateInstanceRequirements`?

  InstanceType: String?

  KernelId: String?

  KeyName: String?

  LicenseSpecifications: Listing<`AWS::EC2::LaunchTemplateLicenseSpecification`>?

  MaintenanceOptions: `AWS::EC2::LaunchTemplateMaintenanceOptions`?

  MetadataOptions: `AWS::EC2::LaunchTemplateMetadataOptions`?

  Monitoring: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  NetworkInterfaces: Listing<`AWS::EC2::LaunchTemplateNetworkInterface`>?

  Placement: `AWS::EC2::LaunchTemplatePlacement`?

  PrivateDnsNameOptions: `AWS::EC2::SubnetPrivateDnsNameOptionsOnLaunch`?

  RamDiskId: String?

  SecurityGroupIds: Listing<String>?

  SecurityGroups: Listing<String>?

  TagSpecifications: Listing<`AWS::EC2::SpotFleetSpotFleetTagSpecification`>?

  UserData: String?
}

class `AWS::EC2::LaunchTemplateLaunchTemplateElasticInferenceAccelerator` {
  Count: Number?

  Type: String?
}

class `AWS::EC2::LaunchTemplateLicenseSpecification` {
  LicenseConfigurationArn: String?
}

class `AWS::EC2::LaunchTemplateMaintenanceOptions` {
  AutoRecovery: String?

  RebootMigration: String?
}

class `AWS::EC2::LaunchTemplateMetadataOptions` {
  HttpEndpoint: String?

  HttpProtocolIpv6: String?

  HttpPutResponseHopLimit: Number?

  HttpTokens: String?

  InstanceMetadataTags: String?
}

class `AWS::EC2::LaunchTemplateNetworkInterface` {
  AssociateCarrierIpAddress: Boolean?

  AssociatePublicIpAddress: Boolean?

  ConnectionTrackingSpecification: `AWS::EC2::NetworkInterfaceConnectionTrackingSpecification`?

  DeleteOnTermination: Boolean?

  Description: String?

  DeviceIndex: Number?

  EnaSrdSpecification: `AWS::EC2::LaunchTemplateEnaSrdSpecification`?

  Groups: Listing<String>?

  InterfaceType: String?

  Ipv4PrefixCount: Number?

  Ipv4Prefixes: Listing<`AWS::EC2::LaunchTemplateIpv4PrefixSpecification`>?

  Ipv6AddressCount: Number?

  Ipv6Addresses: Listing<`AWS::EC2::LaunchTemplateIpv6Add`>?

  Ipv6PrefixCount: Number?

  Ipv6Prefixes: Listing<`AWS::EC2::LaunchTemplateIpv6PrefixSpecification`>?

  NetworkCardIndex: Number?

  NetworkInterfaceId: String?

  PrimaryIpv6: Boolean?

  PrivateIpAddress: String?

  PrivateIpAddresses: Listing<`AWS::EC2::LaunchTemplatePrivateIpAdd`>?

  SecondaryPrivateIpAddressCount: Number?

  SubnetId: String?
}

class `AWS::EC2::LaunchTemplatePlacement` {
  Affinity: String?

  AvailabilityZone: String?

  GroupId: String?

  GroupName: String?

  HostId: String?

  HostResourceGroupArn: String?

  PartitionNumber: Number?

  SpreadDomain: String?

  Tenancy: String?
}

class `AWS::EC2::LaunchTemplatePrivateIpAdd` {
  Primary: Boolean?

  PrivateIpAddress: String?
}

class `AWS::EC2::LaunchTemplateSpotOptions` {
  BlockDurationMinutes: Number?

  InstanceInterruptionBehavior: String?

  MaxPrice: String?

  SpotInstanceType: String?

  ValidUntil: String?
}

class `AWS::EC2::LocalGatewayRoute` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::LocalGatewayRouteProperties`

  Type: "AWS::EC2::LocalGatewayRoute"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::LocalGatewayRouteProperties` {
  DestinationCidrBlock: String

  LocalGatewayRouteTableId: String

  LocalGatewayVirtualInterfaceGroupId: String?

  NetworkInterfaceId: String?
}

class `AWS::EC2::LocalGatewayRouteTable` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::LocalGatewayRouteTableProperties`

  Type: "AWS::EC2::LocalGatewayRouteTable"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::LocalGatewayRouteTableProperties` {
  LocalGatewayId: String

  Mode: String?

  Tags: Listing<Tag>?
}

class `AWS::EC2::LocalGatewayRouteTableVPCAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::LocalGatewayRouteTableVPCAssociationProperties`

  Type: "AWS::EC2::LocalGatewayRouteTableVPCAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::LocalGatewayRouteTableVPCAssociationProperties` {
  LocalGatewayRouteTableId: String

  Tags: Listing<Tag>?

  VpcId: String
}

class `AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociationProperties`

  Type: "AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociationProperties` {
  LocalGatewayRouteTableId: String

  LocalGatewayVirtualInterfaceGroupId: String

  Tags: Listing<Tag>?
}

class `AWS::EC2::NatGateway` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::NatGatewayProperties`

  Type: "AWS::EC2::NatGateway"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::NatGatewayProperties` {
  AllocationId: String?

  ConnectivityType: String?

  MaxDrainDurationSeconds: Number?

  PrivateIpAddress: String?

  SecondaryAllocationIds: Listing<String>?

  SecondaryPrivateIpAddressCount: Number?

  SecondaryPrivateIpAddresses: Listing<String>?

  SubnetId: String

  Tags: Listing<Tag>?
}

class `AWS::EC2::NetworkAcl` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::RouteTableProperties`

  Type: "AWS::EC2::NetworkAcl"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::NetworkAclEntry` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::NetworkAclEntryProperties`

  Type: "AWS::EC2::NetworkAclEntry"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::NetworkAclEntryProperties` {
  CidrBlock: String?

  Egress: Boolean?

  Icmp: `AWS::EC2::NetworkAclEntryIcmp`?

  Ipv6CidrBlock: String?

  NetworkAclId: String

  PortRange: `AWS::QuickSight::TemplatePercentVisibleRange`?

  Protocol: Number

  RuleAction: String

  RuleNumber: Number
}

class `AWS::EC2::NetworkAclEntryIcmp` {
  Code: Number?

  Type: Number?
}

class `AWS::QuickSight::TemplatePercentVisibleRange` {
  From: Number?

  To: Number?
}

class `AWS::EC2::NetworkInsightsAccessScope` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::NetworkInsightsAccessScopeProperties`?

  Type: "AWS::EC2::NetworkInsightsAccessScope"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::NetworkInsightsAccessScopeProperties` {
  ExcludePaths: Listing<`AWS::EC2::NetworkInsightsAccessScopeAccessScopePathRequest`>?

  MatchPaths: Listing<`AWS::EC2::NetworkInsightsAccessScopeAccessScopePathRequest`>?

  Tags: Listing<Tag>?
}

class `AWS::EC2::NetworkInsightsAccessScopeAccessScopePathRequest` {
  Destination: `AWS::EC2::NetworkInsightsAccessScopePathStatementRequest`?

  Source: `AWS::EC2::NetworkInsightsAccessScopePathStatementRequest`?

  ThroughResources: Listing<`AWS::EC2::NetworkInsightsAccessScopeThroughResourcesStatementRequest`>?
}

class `AWS::EC2::NetworkInsightsAccessScopePacketHeaderStatementRequest` {
  DestinationAddresses: Listing<String>?

  DestinationPorts: Listing<String>?

  DestinationPrefixLists: Listing<String>?

  Protocols: Listing<String>?

  SourceAddresses: Listing<String>?

  SourcePorts: Listing<String>?

  SourcePrefixLists: Listing<String>?
}

class `AWS::EC2::NetworkInsightsAccessScopePathStatementRequest` {
  PacketHeaderStatement: `AWS::EC2::NetworkInsightsAccessScopePacketHeaderStatementRequest`?

  ResourceStatement: `AWS::EC2::NetworkInsightsAccessScopeResourceStatementRequest`?
}

class `AWS::EC2::NetworkInsightsAccessScopeResourceStatementRequest` {
  ResourceTypes: Listing<String>?

  Resources: Listing<String>?
}

class `AWS::EC2::NetworkInsightsAccessScopeThroughResourcesStatementRequest` {
  ResourceStatement: `AWS::EC2::NetworkInsightsAccessScopeResourceStatementRequest`?
}

class `AWS::EC2::NetworkInsightsAccessScopeAnalysis` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::NetworkInsightsAccessScopeAnalysisProperties`

  Type: "AWS::EC2::NetworkInsightsAccessScopeAnalysis"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::NetworkInsightsAccessScopeAnalysisProperties` {
  NetworkInsightsAccessScopeId: String

  Tags: Listing<Tag>?
}

class `AWS::EC2::NetworkInsightsAnalysis` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::NetworkInsightsAnalysisProperties`

  Type: "AWS::EC2::NetworkInsightsAnalysis"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::NetworkInsightsAnalysisProperties` {
  AdditionalAccounts: Listing<String>?

  FilterInArns: Listing<String>?

  NetworkInsightsPathId: String

  Tags: Listing<Tag>?
}

class `AWS::EC2::NetworkInsightsAnalysisAdditionalDetail` {
  AdditionalDetailType: String?

  Component: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  LoadBalancers: Listing<`AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`>?

  ServiceName: String?
}

class `AWS::EC2::NetworkInsightsAnalysisAlternatePathHint` {
  ComponentArn: String?

  ComponentId: String?
}

class `AWS::EC2::NetworkInsightsAnalysisAnalysisAclRule` {
  Cidr: String?

  Egress: Boolean?

  PortRange: `AWS::QuickSight::TemplatePercentVisibleRange`?

  Protocol: String?

  RuleAction: String?

  RuleNumber: Number?
}

class `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent` {
  Arn: String?

  Id: String?
}

class `AWS::EC2::NetworkInsightsAnalysisAnalysisLoadBalancerListener` {
  InstancePort: Number?

  LoadBalancerPort: Number?
}

class `AWS::EC2::NetworkInsightsAnalysisAnalysisLoadBalancerTarget` {
  Address: String?

  AvailabilityZone: String?

  Instance: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  Port: Number?
}

class `AWS::EC2::NetworkInsightsAnalysisAnalysisPacketHeader` {
  DestinationAddresses: Listing<String>?

  DestinationPortRanges: Listing<`AWS::QuickSight::TemplatePercentVisibleRange`>?

  Protocol: String?

  SourceAddresses: Listing<String>?

  SourcePortRanges: Listing<`AWS::QuickSight::TemplatePercentVisibleRange`>?
}

class `AWS::EC2::NetworkInsightsAnalysisAnalysisRouteTableRoute` {
  NatGatewayId: String?

  NetworkInterfaceId: String?

  Origin: String?

  State: String?

  TransitGatewayId: String?

  VpcPeeringConnectionId: String?

  destinationCidr: String?

  destinationPrefixListId: String?

  egressOnlyInternetGatewayId: String?

  gatewayId: String?

  instanceId: String?
}

class `AWS::EC2::NetworkInsightsAnalysisAnalysisSecurityGroupRule` {
  Cidr: String?

  Direction: String?

  PortRange: `AWS::QuickSight::TemplatePercentVisibleRange`?

  PrefixListId: String?

  Protocol: String?

  SecurityGroupId: String?
}

class `AWS::EC2::NetworkInsightsAnalysisExplanation` {
  Acl: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  AclRule: `AWS::EC2::NetworkInsightsAnalysisAnalysisAclRule`?

  Address: String?

  Addresses: Listing<String>?

  AttachedTo: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  AvailabilityZones: Listing<String>?

  Cidrs: Listing<String>?

  ClassicLoadBalancerListener: `AWS::EC2::NetworkInsightsAnalysisAnalysisLoadBalancerListener`?

  Component: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  ComponentAccount: String?

  ComponentRegion: String?

  CustomerGateway: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  Destination: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  DestinationVpc: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  Direction: String?

  ElasticLoadBalancerListener: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  ExplanationCode: String?

  IngressRouteTable: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  InternetGateway: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  LoadBalancerArn: String?

  LoadBalancerListenerPort: Number?

  LoadBalancerTarget: `AWS::EC2::NetworkInsightsAnalysisAnalysisLoadBalancerTarget`?

  LoadBalancerTargetGroup: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  LoadBalancerTargetGroups: Listing<`AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`>?

  LoadBalancerTargetPort: Number?

  MissingComponent: String?

  NatGateway: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  NetworkInterface: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  PacketField: String?

  Port: Number?

  PortRanges: Listing<`AWS::QuickSight::TemplatePercentVisibleRange`>?

  PrefixList: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  Protocols: Listing<String>?

  RouteTable: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  RouteTableRoute: `AWS::EC2::NetworkInsightsAnalysisAnalysisRouteTableRoute`?

  SecurityGroup: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  SecurityGroupRule: `AWS::EC2::NetworkInsightsAnalysisAnalysisSecurityGroupRule`?

  SecurityGroups: Listing<`AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`>?

  SourceVpc: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  State: String?

  Subnet: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  SubnetRouteTable: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  TransitGateway: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  TransitGatewayAttachment: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  TransitGatewayRouteTable: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  TransitGatewayRouteTableRoute: `AWS::EC2::NetworkInsightsAnalysisTransitGatewayRouteTableRoute`?

  Vpc: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  VpcPeeringConnection: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  VpnConnection: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  VpnGateway: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  vpcEndpoint: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?
}

class `AWS::EC2::NetworkInsightsAnalysisPathComponent` {
  AclRule: `AWS::EC2::NetworkInsightsAnalysisAnalysisAclRule`?

  AdditionalDetails: Listing<`AWS::EC2::NetworkInsightsAnalysisAdditionalDetail`>?

  Component: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  DestinationVpc: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  ElasticLoadBalancerListener: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  Explanations: Listing<`AWS::EC2::NetworkInsightsAnalysisExplanation`>?

  InboundHeader: `AWS::EC2::NetworkInsightsAnalysisAnalysisPacketHeader`?

  OutboundHeader: `AWS::EC2::NetworkInsightsAnalysisAnalysisPacketHeader`?

  RouteTableRoute: `AWS::EC2::NetworkInsightsAnalysisAnalysisRouteTableRoute`?

  SecurityGroupRule: `AWS::EC2::NetworkInsightsAnalysisAnalysisSecurityGroupRule`?

  SequenceNumber: Number?

  ServiceName: String?

  SourceVpc: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  Subnet: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  TransitGateway: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?

  TransitGatewayRouteTableRoute: `AWS::EC2::NetworkInsightsAnalysisTransitGatewayRouteTableRoute`?

  Vpc: `AWS::EC2::NetworkInsightsAnalysisAnalysisComponent`?
}

class `AWS::EC2::NetworkInsightsAnalysisTransitGatewayRouteTableRoute` {
  AttachmentId: String?

  DestinationCidr: String?

  PrefixListId: String?

  ResourceId: String?

  ResourceType: String?

  RouteOrigin: String?

  State: String?
}

class `AWS::EC2::NetworkInsightsPath` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::NetworkInsightsPathProperties`

  Type: "AWS::EC2::NetworkInsightsPath"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::NetworkInsightsPathProperties` {
  Destination: String?

  DestinationIp: String?

  DestinationPort: Number?

  FilterAtDestination: `AWS::EC2::NetworkInsightsPathPathFilter`?

  FilterAtSource: `AWS::EC2::NetworkInsightsPathPathFilter`?

  Protocol: String

  Source: String

  SourceIp: String?

  Tags: Listing<Tag>?
}

class `AWS::EC2::NetworkInsightsPathFilterPortRange` {
  FromPort: Number?

  ToPort: Number?
}

class `AWS::EC2::NetworkInsightsPathPathFilter` {
  DestinationAddress: String?

  DestinationPortRange: `AWS::EC2::NetworkInsightsPathFilterPortRange`?

  SourceAddress: String?

  SourcePortRange: `AWS::EC2::NetworkInsightsPathFilterPortRange`?
}

class `AWS::EC2::NetworkInterface` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::NetworkInterfaceProperties`

  Type: "AWS::EC2::NetworkInterface"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::NetworkInterfaceProperties` {
  ConnectionTrackingSpecification: `AWS::EC2::NetworkInterfaceConnectionTrackingSpecification`?

  Description: String?

  GroupSet: Listing<String>?

  InterfaceType: String?

  Ipv4PrefixCount: Number?

  Ipv4Prefixes: Listing<`AWS::EC2::NetworkInterfaceIpv4PrefixSpecification`>?

  Ipv6AddressCount: Number?

  Ipv6Addresses: Listing<`AWS::EC2::SpotFleetInstanceIpv6Address`>?

  Ipv6PrefixCount: Number?

  Ipv6Prefixes: Listing<`AWS::EC2::NetworkInterfaceIpv6PrefixSpecification`>?

  PrivateIpAddress: String?

  PrivateIpAddresses: Listing<`AWS::EC2::NetworkInterfacePrivateIpAddressSpecification`>?

  SecondaryPrivateIpAddressCount: Number?

  SourceDestCheck: Boolean?

  SubnetId: String

  Tags: Listing<Tag>?
}

class `AWS::EC2::NetworkInterfaceIpv4PrefixSpecification` {
  Ipv4Prefix: String
}

class `AWS::EC2::NetworkInterfaceIpv6PrefixSpecification` {
  Ipv6Prefix: String
}

class `AWS::EC2::NetworkInterfaceAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::NetworkInterfaceAttachmentProperties`

  Type: "AWS::EC2::NetworkInterfaceAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::NetworkInterfaceAttachmentProperties` {
  DeleteOnTermination: Boolean?

  DeviceIndex: String

  InstanceId: String

  NetworkInterfaceId: String
}

class `AWS::EC2::NetworkInterfacePermission` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::NetworkInterfacePermissionProperties`

  Type: "AWS::EC2::NetworkInterfacePermission"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::NetworkInterfacePermissionProperties` {
  AwsAccountId: String

  NetworkInterfaceId: String

  Permission: String
}

class `AWS::EC2::NetworkPerformanceMetricSubscription` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::NetworkPerformanceMetricSubscriptionProperties`

  Type: "AWS::EC2::NetworkPerformanceMetricSubscription"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::NetworkPerformanceMetricSubscriptionProperties` {
  Destination: String

  Metric: String

  Source: String

  Statistic: String
}

class `AWS::EC2::PlacementGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::PlacementGroupProperties`?

  Type: "AWS::EC2::PlacementGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::PlacementGroupProperties` {
  PartitionCount: Number?

  SpreadLevel: String?

  Strategy: String?

  Tags: Listing<Tag>?
}

class `AWS::EC2::PrefixList` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::PrefixListProperties`

  Type: "AWS::EC2::PrefixList"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::PrefixListProperties` {
  AddressFamily: String

  Entries: Listing<`AWS::EC2::PrefixListEntry`>?

  MaxEntries: Number

  PrefixListName: String

  Tags: Listing<Tag>?
}

class `AWS::EC2::PrefixListEntry` {
  Cidr: String

  Description: String?
}

class `AWS::EC2::Route` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::RouteProperties`

  Type: "AWS::EC2::Route"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::RouteProperties` {
  CarrierGatewayId: String?

  CoreNetworkArn: String?

  DestinationCidrBlock: String?

  DestinationIpv6CidrBlock: String?

  DestinationPrefixListId: String?

  EgressOnlyInternetGatewayId: String?

  GatewayId: String?

  InstanceId: String?

  LocalGatewayId: String?

  NatGatewayId: String?

  NetworkInterfaceId: String?

  RouteTableId: String

  TransitGatewayId: String?

  VpcEndpointId: String?

  VpcPeeringConnectionId: String?
}

class `AWS::EC2::RouteTable` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::RouteTableProperties`

  Type: "AWS::EC2::RouteTable"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::SecurityGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::SecurityGroupProperties`

  Type: "AWS::EC2::SecurityGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::SecurityGroupProperties` {
  GroupDescription: String

  GroupName: String?

  SecurityGroupEgress: Listing<`AWS::EC2::SecurityGroupEgress`>?

  SecurityGroupIngress: Listing<`AWS::EC2::SecurityGroupIngress`>?

  Tags: Listing<Tag>?

  VpcId: String?
}

class `AWS::EC2::SecurityGroupEgress` {
  CidrIp: String?

  CidrIpv6: String?

  Description: String?

  DestinationPrefixListId: String?

  DestinationSecurityGroupId: String?

  FromPort: Number?

  IpProtocol: String

  ToPort: Number?
}

class `AWS::EC2::SecurityGroupIngress` {
  CidrIp: String?

  CidrIpv6: String?

  Description: String?

  FromPort: Number?

  IpProtocol: String

  SourcePrefixListId: String?

  SourceSecurityGroupId: String?

  SourceSecurityGroupName: String?

  SourceSecurityGroupOwnerId: String?

  ToPort: Number?
}

class `AWS::EC2::SecurityGroupEgress0` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::SecurityGroupEgressProperties`

  Type: "AWS::EC2::SecurityGroupEgress"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::SecurityGroupEgressProperties` {
  CidrIp: String?

  CidrIpv6: String?

  Description: String?

  DestinationPrefixListId: String?

  DestinationSecurityGroupId: String?

  FromPort: Number?

  GroupId: String

  IpProtocol: String

  ToPort: Number?
}

class `AWS::EC2::SecurityGroupIngress0` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::SecurityGroupIngressProperties`

  Type: "AWS::EC2::SecurityGroupIngress"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::SecurityGroupIngressProperties` {
  CidrIp: String?

  CidrIpv6: String?

  Description: String?

  FromPort: Number?

  GroupId: String?

  GroupName: String?

  IpProtocol: String

  SourcePrefixListId: String?

  SourceSecurityGroupId: String?

  SourceSecurityGroupName: String?

  SourceSecurityGroupOwnerId: String?

  ToPort: Number?
}

class `AWS::EC2::SnapshotBlockPublicAccess` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Events::EndpointReplicationConfig`

  Type: "AWS::EC2::SnapshotBlockPublicAccess"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Events::EndpointReplicationConfig` {
  State: String
}

class `AWS::EC2::SpotFleet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::SpotFleetProperties`

  Type: "AWS::EC2::SpotFleet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::SpotFleetProperties` {
  SpotFleetRequestConfigData: `AWS::EC2::SpotFleetSpotFleetRequestConfigData`
}

class `AWS::EC2::SpotFleetBlockDeviceMapping` {
  DeviceName: String

  Ebs: `AWS::EC2::SpotFleetEbsBlockDevice`?

  NoDevice: String?

  VirtualName: String?
}

class `AWS::EC2::SpotFleetClassicLoadBalancersConfig` {
  ClassicLoadBalancers: Listing<`AWS::WAFv2::WebACLSingleQueryArgument`>
}

class `AWS::EC2::SpotFleetEbsBlockDevice` {
  DeleteOnTermination: Boolean?

  Encrypted: Boolean?

  Iops: Number?

  SnapshotId: String?

  VolumeSize: Number?

  VolumeType: String?
}

class `AWS::EC2::SpotFleetGroupIdentifier` {
  GroupId: String
}

class `AWS::Scheduler::ScheduleDeadLetterConfig` {
  Arn: String?
}

class `AWS::EC2::SpotFleetInstanceNetworkInterfaceSpecification` {
  AssociatePublicIpAddress: Boolean?

  DeleteOnTermination: Boolean?

  Description: String?

  DeviceIndex: Number?

  Groups: Listing<String>?

  Ipv6AddressCount: Number?

  Ipv6Addresses: Listing<`AWS::EC2::SpotFleetInstanceIpv6Address`>?

  NetworkInterfaceId: String?

  PrivateIpAddresses: Listing<`AWS::EC2::SpotFleetPrivateIpAddressSpecification`>?

  SecondaryPrivateIpAddressCount: Number?

  SubnetId: String?
}

class `AWS::EC2::SpotFleetInstanceRequirementsRequest` {
  AcceleratorCount: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  AcceleratorManufacturers: Listing<String>?

  AcceleratorNames: Listing<String>?

  AcceleratorTotalMemoryMiB: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  AcceleratorTypes: Listing<String>?

  AllowedInstanceTypes: Listing<String>?

  BareMetal: String?

  BaselineEbsBandwidthMbps: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  BurstablePerformance: String?

  CpuManufacturers: Listing<String>?

  ExcludedInstanceTypes: Listing<String>?

  InstanceGenerations: Listing<String>?

  LocalStorage: String?

  LocalStorageTypes: Listing<String>?

  MemoryGiBPerVCpu: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  MemoryMiB: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  NetworkBandwidthGbps: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  NetworkInterfaceCount: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  OnDemandMaxPricePercentageOverLowestPrice: Number?

  RequireHibernateSupport: Boolean?

  SpotMaxPricePercentageOverLowestPrice: Number?

  TotalLocalStorageGB: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  VCpuCount: `AWS::QuickSight::TemplateArcAxisDisplayRange`?
}

class `AWS::EC2::SpotFleetLaunchTemplateConfig` {
  LaunchTemplateSpecification: `AWS::EC2::SpotFleetFleetLaunchTemplateSpecification`?

  Overrides: Listing<`AWS::EC2::SpotFleetLaunchTemplateOverrides`>?
}

class `AWS::EC2::SpotFleetLaunchTemplateOverrides` {
  AvailabilityZone: String?

  InstanceRequirements: `AWS::EC2::SpotFleetInstanceRequirementsRequest`?

  InstanceType: String?

  Priority: Number?

  SpotPrice: String?

  SubnetId: String?

  WeightedCapacity: Number?
}

class `AWS::EC2::SpotFleetLoadBalancersConfig` {
  ClassicLoadBalancersConfig: `AWS::EC2::SpotFleetClassicLoadBalancersConfig`?

  TargetGroupsConfig: `AWS::EC2::SpotFleetTargetGroupsConfig`?
}

class `AWS::EC2::SpotFleetPrivateIpAddressSpecification` {
  Primary: Boolean?

  PrivateIpAddress: String
}

class `AWS::EC2::SpotFleetSpotFleetLaunchSpecification` {
  BlockDeviceMappings: Listing<`AWS::EC2::SpotFleetBlockDeviceMapping`>?

  EbsOptimized: Boolean?

  IamInstanceProfile: `AWS::Scheduler::ScheduleDeadLetterConfig`?

  ImageId: String

  InstanceRequirements: `AWS::EC2::SpotFleetInstanceRequirementsRequest`?

  InstanceType: String?

  KernelId: String?

  KeyName: String?

  Monitoring: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  NetworkInterfaces: Listing<`AWS::EC2::SpotFleetInstanceNetworkInterfaceSpecification`>?

  Placement: `AWS::EC2::SpotFleetSpotPlacement`?

  RamdiskId: String?

  SecurityGroups: Listing<`AWS::EC2::SpotFleetGroupIdentifier`>?

  SpotPrice: String?

  SubnetId: String?

  TagSpecifications: Listing<`AWS::EC2::SpotFleetSpotFleetTagSpecification`>?

  UserData: String?

  WeightedCapacity: Number?
}

class `AWS::EC2::SpotFleetSpotFleetRequestConfigData` {
  AllocationStrategy: String?

  Context: String?

  ExcessCapacityTerminationPolicy: String?

  IamFleetRole: String

  InstanceInterruptionBehavior: String?

  InstancePoolsToUseCount: Number?

  LaunchSpecifications: Listing<`AWS::EC2::SpotFleetSpotFleetLaunchSpecification`>?

  LaunchTemplateConfigs: Listing<`AWS::EC2::SpotFleetLaunchTemplateConfig`>?

  LoadBalancersConfig: `AWS::EC2::SpotFleetLoadBalancersConfig`?

  OnDemandAllocationStrategy: String?

  OnDemandMaxTotalPrice: String?

  OnDemandTargetCapacity: Number?

  ReplaceUnhealthyInstances: Boolean?

  SpotMaintenanceStrategies: `AWS::EC2::SpotFleetSpotMaintenanceStrategies`?

  SpotMaxTotalPrice: String?

  SpotPrice: String?

  TagSpecifications: Listing<`AWS::EC2::SpotFleetSpotFleetTagSpecification`>?

  TargetCapacity: Number

  TargetCapacityUnitType: String?

  TerminateInstancesWithExpiration: Boolean?

  Type: String?

  ValidFrom: String?

  ValidUntil: String?
}

class `AWS::EC2::SpotFleetSpotMaintenanceStrategies` {
  CapacityRebalance: `AWS::EC2::SpotFleetSpotCapacityRebalance`?
}

class `AWS::EC2::SpotFleetSpotPlacement` {
  AvailabilityZone: String?

  GroupName: String?

  Tenancy: String?
}

class `AWS::S3::StorageLensAwsOrg` {
  Arn: String
}

class `AWS::EC2::SpotFleetTargetGroupsConfig` {
  TargetGroups: Listing<`AWS::S3::StorageLensAwsOrg`>
}

class `AWS::EC2::Subnet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::SubnetProperties`

  Type: "AWS::EC2::Subnet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::SubnetProperties` {
  AssignIpv6AddressOnCreation: Boolean?

  AvailabilityZone: String?

  AvailabilityZoneId: String?

  CidrBlock: String?

  EnableDns64: Boolean?

  Ipv4IpamPoolId: String?

  Ipv4NetmaskLength: Number?

  Ipv6CidrBlock: String?

  Ipv6CidrBlocks: Listing<String>?

  Ipv6IpamPoolId: String?

  Ipv6Native: Boolean?

  Ipv6NetmaskLength: Number?

  MapPublicIpOnLaunch: Boolean?

  OutpostArn: String?

  PrivateDnsNameOptionsOnLaunch: `AWS::EC2::SubnetPrivateDnsNameOptionsOnLaunch`?

  Tags: Listing<Tag>?

  VpcId: String
}

class `AWS::EC2::SubnetCidrBlock` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::SubnetCidrBlockProperties`

  Type: "AWS::EC2::SubnetCidrBlock"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::SubnetCidrBlockProperties` {
  Ipv6CidrBlock: String?

  Ipv6IpamPoolId: String?

  Ipv6NetmaskLength: Number?

  SubnetId: String
}

class `AWS::EC2::SubnetNetworkAclAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::SubnetNetworkAclAssociationProperties`

  Type: "AWS::EC2::SubnetNetworkAclAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::SubnetNetworkAclAssociationProperties` {
  NetworkAclId: String

  SubnetId: String
}

class `AWS::EC2::SubnetRouteTableAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::SubnetRouteTableAssociationProperties`

  Type: "AWS::EC2::SubnetRouteTableAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::SubnetRouteTableAssociationProperties` {
  RouteTableId: String

  SubnetId: String
}

class `AWS::EC2::TrafficMirrorFilter` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TrafficMirrorFilterProperties`?

  Type: "AWS::EC2::TrafficMirrorFilter"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TrafficMirrorFilterProperties` {
  Description: String?

  NetworkServices: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::EC2::TrafficMirrorFilterRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TrafficMirrorFilterRuleProperties`

  Type: "AWS::EC2::TrafficMirrorFilterRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TrafficMirrorFilterRuleProperties` {
  Description: String?

  DestinationCidrBlock: String

  DestinationPortRange: `AWS::NetworkFirewall::TLSInspectionConfigurationPortRange`?

  Protocol: Number?

  RuleAction: String

  RuleNumber: Number

  SourceCidrBlock: String

  SourcePortRange: `AWS::NetworkFirewall::TLSInspectionConfigurationPortRange`?

  TrafficDirection: String

  TrafficMirrorFilterId: String
}

class `AWS::NetworkFirewall::TLSInspectionConfigurationPortRange` {
  FromPort: Number

  ToPort: Number
}

class `AWS::EC2::TrafficMirrorSession` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TrafficMirrorSessionProperties`

  Type: "AWS::EC2::TrafficMirrorSession"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TrafficMirrorSessionProperties` {
  Description: String?

  NetworkInterfaceId: String

  PacketLength: Number?

  SessionNumber: Number

  Tags: Listing<Tag>?

  TrafficMirrorFilterId: String

  TrafficMirrorTargetId: String

  VirtualNetworkId: Number?
}

class `AWS::EC2::TrafficMirrorTarget` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TrafficMirrorTargetProperties`?

  Type: "AWS::EC2::TrafficMirrorTarget"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TrafficMirrorTargetProperties` {
  Description: String?

  GatewayLoadBalancerEndpointId: String?

  NetworkInterfaceId: String?

  NetworkLoadBalancerArn: String?

  Tags: Listing<Tag>?
}

class `AWS::EC2::TransitGateway` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TransitGatewayProperties`?

  Type: "AWS::EC2::TransitGateway"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TransitGatewayProperties` {
  AmazonSideAsn: Number?

  AssociationDefaultRouteTableId: String?

  AutoAcceptSharedAttachments: String?

  DefaultRouteTableAssociation: String?

  DefaultRouteTablePropagation: String?

  Description: String?

  DnsSupport: String?

  MulticastSupport: String?

  PropagationDefaultRouteTableId: String?

  Tags: Listing<Tag>?

  TransitGatewayCidrBlocks: Listing<String>?

  VpnEcmpSupport: String?
}

class `AWS::EC2::TransitGatewayAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TransitGatewayAttachmentProperties`

  Type: "AWS::EC2::TransitGatewayAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TransitGatewayAttachmentProperties` {
  Options: `AWS::EC2::TransitGatewayAttachmentOptions`?

  SubnetIds: Listing<String>

  Tags: Listing<Tag>?

  TransitGatewayId: String

  VpcId: String
}

class `AWS::EC2::TransitGatewayAttachmentOptions` {
  ApplianceModeSupport: String?

  DnsSupport: String?

  Ipv6Support: String?

  SecurityGroupReferencingSupport: String?
}

class `AWS::EC2::TransitGatewayConnect` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TransitGatewayConnectProperties`

  Type: "AWS::EC2::TransitGatewayConnect"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TransitGatewayConnectProperties` {
  Options: `AWS::NetworkManager::ConnectAttachmentConnectAttachmentOptions`

  Tags: Listing<Tag>?

  TransportTransitGatewayAttachmentId: String
}

class `AWS::NetworkManager::ConnectAttachmentConnectAttachmentOptions` {
  Protocol: String?
}

class `AWS::EC2::TransitGatewayMulticastDomain` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TransitGatewayMulticastDomainProperties`

  Type: "AWS::EC2::TransitGatewayMulticastDomain"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TransitGatewayMulticastDomainProperties` {
  Options: `AWS::EC2::TransitGatewayMulticastDomainOptions`?

  Tags: Listing<Tag>?

  TransitGatewayId: String
}

class `AWS::EC2::TransitGatewayMulticastDomainOptions` {
  AutoAcceptSharedAssociations: String?

  Igmpv2Support: String?

  StaticSourcesSupport: String?
}

class `AWS::EC2::TransitGatewayMulticastDomainAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TransitGatewayMulticastDomainAssociationProperties`

  Type: "AWS::EC2::TransitGatewayMulticastDomainAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TransitGatewayMulticastDomainAssociationProperties` {
  SubnetId: String

  TransitGatewayAttachmentId: String

  TransitGatewayMulticastDomainId: String
}

class `AWS::EC2::TransitGatewayMulticastGroupMember` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TransitGatewayMulticastGroupSourceProperties`

  Type: "AWS::EC2::TransitGatewayMulticastGroupMember"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TransitGatewayMulticastGroupSourceProperties` {
  GroupIpAddress: String

  NetworkInterfaceId: String

  TransitGatewayMulticastDomainId: String
}

class `AWS::EC2::TransitGatewayMulticastGroupSource` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TransitGatewayMulticastGroupSourceProperties`

  Type: "AWS::EC2::TransitGatewayMulticastGroupSource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TransitGatewayPeeringAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TransitGatewayPeeringAttachmentProperties`

  Type: "AWS::EC2::TransitGatewayPeeringAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TransitGatewayPeeringAttachmentProperties` {
  PeerAccountId: String

  PeerRegion: String

  PeerTransitGatewayId: String

  Tags: Listing<Tag>?

  TransitGatewayId: String
}

class `AWS::IoTTwinMaker::EntityError` {
  Code: String?

  Message: String?
}

class `AWS::EC2::TransitGatewayRoute` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TransitGatewayRouteProperties`

  Type: "AWS::EC2::TransitGatewayRoute"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TransitGatewayRouteProperties` {
  Blackhole: Boolean?

  DestinationCidrBlock: String?

  TransitGatewayAttachmentId: String?

  TransitGatewayRouteTableId: String
}

class `AWS::EC2::TransitGatewayRouteTable` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TransitGatewayRouteTableProperties`

  Type: "AWS::EC2::TransitGatewayRouteTable"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TransitGatewayRouteTableProperties` {
  Tags: Listing<Tag>?

  TransitGatewayId: String
}

class `AWS::EC2::TransitGatewayRouteTableAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TransitGatewayRouteTablePropagationProperties`

  Type: "AWS::EC2::TransitGatewayRouteTableAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TransitGatewayRouteTablePropagationProperties` {
  TransitGatewayAttachmentId: String

  TransitGatewayRouteTableId: String
}

class `AWS::EC2::TransitGatewayRouteTablePropagation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TransitGatewayRouteTablePropagationProperties`

  Type: "AWS::EC2::TransitGatewayRouteTablePropagation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TransitGatewayVpcAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::TransitGatewayVpcAttachmentProperties`

  Type: "AWS::EC2::TransitGatewayVpcAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::TransitGatewayVpcAttachmentProperties` {
  AddSubnetIds: Listing<String>?

  Options: `AWS::EC2::TransitGatewayVpcAttachmentOptions`?

  RemoveSubnetIds: Listing<String>?

  SubnetIds: Listing<String>

  Tags: Listing<Tag>?

  TransitGatewayId: String

  VpcId: String
}

class `AWS::EC2::TransitGatewayVpcAttachmentOptions` {
  ApplianceModeSupport: String?

  DnsSupport: String?

  Ipv6Support: String?
}

class `AWS::EC2::VPC` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VPCProperties`?

  Type: "AWS::EC2::VPC"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VPCProperties` {
  CidrBlock: String?

  EnableDnsHostnames: Boolean?

  EnableDnsSupport: Boolean?

  InstanceTenancy: String?

  Ipv4IpamPoolId: String?

  Ipv4NetmaskLength: Number?

  Tags: Listing<Tag>?
}

class `AWS::EC2::VPCCidrBlock` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VPCCidrBlockProperties`

  Type: "AWS::EC2::VPCCidrBlock"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VPCCidrBlockProperties` {
  AmazonProvidedIpv6CidrBlock: Boolean?

  CidrBlock: String?

  Ipv4IpamPoolId: String?

  Ipv4NetmaskLength: Number?

  Ipv6CidrBlock: String?

  Ipv6IpamPoolId: String?

  Ipv6NetmaskLength: Number?

  Ipv6Pool: String?

  VpcId: String
}

class `AWS::EC2::VPCDHCPOptionsAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VPCDHCPOptionsAssociationProperties`

  Type: "AWS::EC2::VPCDHCPOptionsAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VPCDHCPOptionsAssociationProperties` {
  DhcpOptionsId: String

  VpcId: String
}

class `AWS::EC2::VPCEndpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VPCEndpointProperties`

  Type: "AWS::EC2::VPCEndpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VPCEndpointProperties` {
  PolicyDocument: Dynamic?

  PrivateDnsEnabled: Boolean?

  RouteTableIds: Listing<String>?

  SecurityGroupIds: Listing<String>?

  ServiceName: String

  SubnetIds: Listing<String>?

  VpcEndpointType: String?

  VpcId: String
}

class `AWS::EC2::VPCEndpointConnectionNotification` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VPCEndpointConnectionNotificationProperties`

  Type: "AWS::EC2::VPCEndpointConnectionNotification"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VPCEndpointConnectionNotificationProperties` {
  ConnectionEvents: Listing<String>

  ConnectionNotificationArn: String

  ServiceId: String?

  VPCEndpointId: String?
}

class `AWS::EC2::VPCEndpointService` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VPCEndpointServiceProperties`?

  Type: "AWS::EC2::VPCEndpointService"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VPCEndpointServiceProperties` {
  AcceptanceRequired: Boolean?

  ContributorInsightsEnabled: Boolean?

  GatewayLoadBalancerArns: Listing<String>?

  NetworkLoadBalancerArns: Listing<String>?

  PayerResponsibility: String?
}

class `AWS::EC2::VPCEndpointServicePermissions` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VPCEndpointServicePermissionsProperties`

  Type: "AWS::EC2::VPCEndpointServicePermissions"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VPCEndpointServicePermissionsProperties` {
  AllowedPrincipals: Listing<String>?

  ServiceId: String
}

class `AWS::EC2::VPCGatewayAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VPCGatewayAttachmentProperties`

  Type: "AWS::EC2::VPCGatewayAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VPCGatewayAttachmentProperties` {
  InternetGatewayId: String?

  VpcId: String

  VpnGatewayId: String?
}

class `AWS::EC2::VPCPeeringConnection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VPCPeeringConnectionProperties`

  Type: "AWS::EC2::VPCPeeringConnection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VPCPeeringConnectionProperties` {
  PeerOwnerId: String?

  PeerRegion: String?

  PeerRoleArn: String?

  PeerVpcId: String

  Tags: Listing<Tag>?

  VpcId: String
}

class `AWS::EC2::VPNConnection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VPNConnectionProperties`

  Type: "AWS::EC2::VPNConnection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VPNConnectionProperties` {
  CustomerGatewayId: String

  StaticRoutesOnly: Boolean?

  Tags: Listing<Tag>?

  TransitGatewayId: String?

  Type: String

  VpnGatewayId: String?

  VpnTunnelOptionsSpecifications: Listing<`AWS::EC2::VPNConnectionVpnTunnelOptionsSpecification`>?
}

class `AWS::EC2::VPNConnectionVpnTunnelOptionsSpecification` {
  PreSharedKey: String?

  TunnelInsideCidr: String?
}

class `AWS::EC2::VPNConnectionRoute` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VPNConnectionRouteProperties`

  Type: "AWS::EC2::VPNConnectionRoute"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VPNConnectionRouteProperties` {
  DestinationCidrBlock: String

  VpnConnectionId: String
}

class `AWS::EC2::VPNGateway` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VPNGatewayProperties`

  Type: "AWS::EC2::VPNGateway"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VPNGatewayProperties` {
  AmazonSideAsn: Number?

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::EC2::VPNGatewayRoutePropagation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VPNGatewayRoutePropagationProperties`

  Type: "AWS::EC2::VPNGatewayRoutePropagation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VPNGatewayRoutePropagationProperties` {
  RouteTableIds: Listing<String>

  VpnGatewayId: String
}

class `AWS::EC2::VerifiedAccessEndpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VerifiedAccessEndpointProperties`

  Type: "AWS::EC2::VerifiedAccessEndpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VerifiedAccessEndpointProperties` {
  ApplicationDomain: String

  AttachmentType: String

  Description: String?

  DomainCertificateArn: String

  EndpointDomainPrefix: String

  EndpointType: String

  LoadBalancerOptions: `AWS::EC2::VerifiedAccessEndpointLoadBalancerOptions`?

  NetworkInterfaceOptions: `AWS::EC2::VerifiedAccessEndpointNetworkInterfaceOptions`?

  PolicyDocument: String?

  PolicyEnabled: Boolean?

  SecurityGroupIds: Listing<String>?

  SseSpecification: `AWS::EC2::VerifiedAccessTrustProviderSseSpecification`?

  Tags: Listing<Tag>?

  VerifiedAccessGroupId: String
}

class `AWS::EC2::VerifiedAccessEndpointLoadBalancerOptions` {
  LoadBalancerArn: String?

  Port: Number?

  Protocol: String?

  SubnetIds: Listing<String>?
}

class `AWS::EC2::VerifiedAccessEndpointNetworkInterfaceOptions` {
  NetworkInterfaceId: String?

  Port: Number?

  Protocol: String?
}

class `AWS::EC2::VerifiedAccessTrustProviderSseSpecification` {
  CustomerManagedKeyEnabled: Boolean?

  KmsKeyArn: String?
}

class `AWS::EC2::VerifiedAccessGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VerifiedAccessGroupProperties`

  Type: "AWS::EC2::VerifiedAccessGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VerifiedAccessGroupProperties` {
  Description: String?

  PolicyDocument: String?

  PolicyEnabled: Boolean?

  SseSpecification: `AWS::EC2::VerifiedAccessTrustProviderSseSpecification`?

  Tags: Listing<Tag>?

  VerifiedAccessInstanceId: String
}

class `AWS::EC2::VerifiedAccessInstance` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VerifiedAccessInstanceProperties`?

  Type: "AWS::EC2::VerifiedAccessInstance"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VerifiedAccessInstanceProperties` {
  Description: String?

  FipsEnabled: Boolean?

  LoggingConfigurations: `AWS::EC2::VerifiedAccessInstanceVerifiedAccessLogs`?

  Tags: Listing<Tag>?

  VerifiedAccessTrustProviderIds: Listing<String>?

  VerifiedAccessTrustProviders: Listing<`AWS::EC2::VerifiedAccessInstanceVerifiedAccessTrustProvider`>?
}

class `AWS::EC2::VerifiedAccessInstanceCloudWatchLogs` {
  Enabled: Boolean?

  LogGroup: String?
}

class `AWS::EC2::VerifiedAccessInstanceKinesisDataFirehose` {
  DeliveryStream: String?

  Enabled: Boolean?
}

class `AWS::EC2::VerifiedAccessInstanceS3` {
  BucketName: String?

  BucketOwner: String?

  Enabled: Boolean?

  Prefix: String?
}

class `AWS::EC2::VerifiedAccessInstanceVerifiedAccessLogs` {
  CloudWatchLogs: `AWS::EC2::VerifiedAccessInstanceCloudWatchLogs`?

  IncludeTrustContext: Boolean?

  KinesisDataFirehose: `AWS::EC2::VerifiedAccessInstanceKinesisDataFirehose`?

  LogVersion: String?

  S3: `AWS::EC2::VerifiedAccessInstanceS3`?
}

class `AWS::EC2::VerifiedAccessInstanceVerifiedAccessTrustProvider` {
  Description: String?

  DeviceTrustProviderType: String?

  TrustProviderType: String?

  UserTrustProviderType: String?

  VerifiedAccessTrustProviderId: String?
}

class `AWS::EC2::VerifiedAccessTrustProvider` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VerifiedAccessTrustProviderProperties`

  Type: "AWS::EC2::VerifiedAccessTrustProvider"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VerifiedAccessTrustProviderProperties` {
  Description: String?

  DeviceOptions: `AWS::EC2::VerifiedAccessTrustProviderDeviceOptions`?

  DeviceTrustProviderType: String?

  OidcOptions: `AWS::EC2::VerifiedAccessTrustProviderOidcOptions`?

  PolicyReferenceName: String

  SseSpecification: `AWS::EC2::VerifiedAccessTrustProviderSseSpecification`?

  Tags: Listing<Tag>?

  TrustProviderType: String

  UserTrustProviderType: String?
}

class `AWS::EC2::VerifiedAccessTrustProviderDeviceOptions` {
  PublicSigningKeyUrl: String?

  TenantId: String?
}

class `AWS::EC2::VerifiedAccessTrustProviderOidcOptions` {
  AuthorizationEndpoint: String?

  ClientId: String?

  ClientSecret: String?

  Issuer: String?

  Scope: String?

  TokenEndpoint: String?

  UserInfoEndpoint: String?
}

class `AWS::EC2::Volume` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VolumeProperties`

  Type: "AWS::EC2::Volume"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VolumeProperties` {
  AutoEnableIO: Boolean?

  AvailabilityZone: String

  Encrypted: Boolean?

  Iops: Number?

  KmsKeyId: String?

  MultiAttachEnabled: Boolean?

  OutpostArn: String?

  Size: Number?

  SnapshotId: String?

  Tags: Listing<Tag>?

  Throughput: Number?

  VolumeType: String?
}

class `AWS::EC2::VolumeAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EC2::VolumeAttachmentProperties`

  Type: "AWS::EC2::VolumeAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EC2::VolumeAttachmentProperties` {
  Device: String?

  InstanceId: String

  VolumeId: String
}

class `AWS::ECR::PublicRepository` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ECR::PublicRepositoryProperties`?

  Type: "AWS::ECR::PublicRepository"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ECR::PublicRepositoryProperties` {
  RepositoryCatalogData: `AWS::ECR::PublicRepositoryRepositoryCatalogData`?

  RepositoryName: String?

  RepositoryPolicyText: Dynamic?

  Tags: Listing<Tag>?
}

class `AWS::ECR::PublicRepositoryRepositoryCatalogData` {
  AboutText: String?

  Architectures: Listing<String>?

  OperatingSystems: Listing<String>?

  RepositoryDescription: String?

  UsageText: String?
}

class `AWS::ECR::PullThroughCacheRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ECR::PullThroughCacheRuleProperties`?

  Type: "AWS::ECR::PullThroughCacheRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ECR::PullThroughCacheRuleProperties` {
  CredentialArn: String?

  EcrRepositoryPrefix: String?

  UpstreamRegistry: String?

  UpstreamRegistryUrl: String?
}

class `AWS::ECR::RegistryPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ECR::RegistryPolicyProperties`

  Type: "AWS::ECR::RegistryPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ECR::RegistryPolicyProperties` {
  PolicyText: Dynamic
}

class `AWS::ECR::ReplicationConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ECR::ReplicationConfigurationProperties`

  Type: "AWS::ECR::ReplicationConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ECR::ReplicationConfigurationProperties` {
  ReplicationConfiguration: `AWS::ECR::ReplicationConfigurationReplicationConfiguration`
}

class `AWS::ECR::ReplicationConfigurationReplicationConfiguration` {
  Rules: Listing<`AWS::ECR::ReplicationConfigurationReplicationRule`>
}

class `AWS::ECR::ReplicationConfigurationReplicationDestination` {
  Region: String

  RegistryId: String
}

class `AWS::ECR::ReplicationConfigurationReplicationRule` {
  Destinations: Listing<`AWS::ECR::ReplicationConfigurationReplicationDestination`>

  RepositoryFilters: Listing<`AWS::ECR::ReplicationConfigurationRepositoryFilter`>?
}

class `AWS::ECR::ReplicationConfigurationRepositoryFilter` {
  Filter: String

  FilterType: String
}

class `AWS::ECR::Repository` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ECR::RepositoryProperties`?

  Type: "AWS::ECR::Repository"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ECR::RepositoryProperties` {
  EmptyOnDelete: Boolean?

  EncryptionConfiguration: `AWS::ECR::RepositoryEncryptionConfiguration`?

  ImageScanningConfiguration: `AWS::ECR::RepositoryImageScanningConfiguration`?

  ImageTagMutability: String?

  LifecyclePolicy: `AWS::ECR::RepositoryLifecyclePolicy`?

  RepositoryName: String?

  RepositoryPolicyText: Dynamic?

  Tags: Listing<Tag>?
}

class `AWS::ECR::RepositoryEncryptionConfiguration` {
  EncryptionType: String

  KmsKey: String?
}

class `AWS::ECR::RepositoryImageScanningConfiguration` {
  ScanOnPush: Boolean?
}

class `AWS::ECR::RepositoryLifecyclePolicy` {
  LifecyclePolicyText: String?

  RegistryId: String?
}

class `AWS::ECS::CapacityProvider` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ECS::CapacityProviderProperties`

  Type: "AWS::ECS::CapacityProvider"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ECS::CapacityProviderProperties` {
  AutoScalingGroupProvider: `AWS::ECS::CapacityProviderAutoScalingGroupProvider`

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::ECS::CapacityProviderAutoScalingGroupProvider` {
  AutoScalingGroupArn: String

  ManagedDraining: String?

  ManagedScaling: `AWS::ECS::CapacityProviderManagedScaling`?

  ManagedTerminationProtection: String?
}

class `AWS::ECS::CapacityProviderManagedScaling` {
  InstanceWarmupPeriod: Number?

  MaximumScalingStepSize: Number?

  MinimumScalingStepSize: Number?

  Status: String?

  TargetCapacity: Number?
}

class `AWS::ECS::Cluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ECS::ClusterProperties`?

  Type: "AWS::ECS::Cluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ECS::ClusterProperties` {
  CapacityProviders: Listing<String>?

  ClusterName: String?

  ClusterSettings: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  Configuration: `AWS::ECS::ClusterClusterConfiguration`?

  DefaultCapacityProviderStrategy: Listing<`AWS::ECS::ServiceCapacityProviderStrategyItem`>?

  ServiceConnectDefaults: `AWS::ECS::ClusterServiceConnectDefaults`?

  Tags: Listing<Tag>?
}

class `AWS::ECS::ServiceCapacityProviderStrategyItem` {
  Base: Number?

  CapacityProvider: String?

  Weight: Number?
}

class `AWS::ECS::ClusterClusterConfiguration` {
  ExecuteCommandConfiguration: `AWS::ECS::ClusterExecuteCommandConfiguration`?
}

class `AWS::ECS::ClusterExecuteCommandConfiguration` {
  KmsKeyId: String?

  LogConfiguration: `AWS::ECS::ClusterExecuteCommandLogConfiguration`?

  Logging: String?
}

class `AWS::ECS::ClusterExecuteCommandLogConfiguration` {
  CloudWatchEncryptionEnabled: Boolean?

  CloudWatchLogGroupName: String?

  S3BucketName: String?

  S3EncryptionEnabled: Boolean?

  S3KeyPrefix: String?
}

class `AWS::ECS::ClusterServiceConnectDefaults` {
  Namespace: String?
}

class `AWS::ECS::ClusterCapacityProviderAssociations` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ECS::ClusterCapacityProviderAssociationsProperties`

  Type: "AWS::ECS::ClusterCapacityProviderAssociations"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ECS::ClusterCapacityProviderAssociationsProperties` {
  CapacityProviders: Listing<String>

  Cluster: String

  DefaultCapacityProviderStrategy: Listing<`AWS::Scheduler::ScheduleCapacityProviderStrategyItem`>
}

class `AWS::Scheduler::ScheduleCapacityProviderStrategyItem` {
  Base: Number?

  CapacityProvider: String

  Weight: Number?
}

class `AWS::ECS::PrimaryTaskSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ECS::PrimaryTaskSetProperties`

  Type: "AWS::ECS::PrimaryTaskSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ECS::PrimaryTaskSetProperties` {
  Cluster: String

  Service: String

  TaskSetId: String
}

class `AWS::ECS::Service` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ECS::ServiceProperties`?

  Type: "AWS::ECS::Service"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ECS::ServiceProperties` {
  CapacityProviderStrategy: Listing<`AWS::ECS::ServiceCapacityProviderStrategyItem`>?

  Cluster: String?

  DeploymentConfiguration: `AWS::ECS::ServiceDeploymentConfiguration`?

  DeploymentController: `AWS::MSK::ClusterPublicAccess`?

  DesiredCount: Number?

  EnableECSManagedTags: Boolean?

  EnableExecuteCommand: Boolean?

  HealthCheckGracePeriodSeconds: Number?

  LaunchType: String?

  LoadBalancers: Listing<`AWS::ECS::ServiceLoadBalancer`>?

  NetworkConfiguration: `AWS::ECS::ServiceNetworkConfiguration`?

  PlacementConstraints: Listing<`AWS::ECS::TaskDefinitionTaskDefinitionPlacementConstraint`>?

  PlacementStrategies: Listing<`AWS::ECS::ServicePlacementStrategy`>?

  PlatformVersion: String?

  PropagateTags: String?

  Role: String?

  SchedulingStrategy: String?

  ServiceConnectConfiguration: `AWS::ECS::ServiceServiceConnectConfiguration`?

  ServiceName: String?

  ServiceRegistries: Listing<`AWS::ECS::TaskSetServiceRegistry`>?

  Tags: Listing<Tag>?

  TaskDefinition: String?

  VolumeConfigurations: Listing<`AWS::ECS::ServiceServiceVolumeConfiguration`>?
}

class `AWS::ECS::ServiceAwsVpcConfiguration` {
  AssignPublicIp: String?

  SecurityGroups: Listing<String>?

  Subnets: Listing<String>?
}

class `AWS::ECS::ServiceDeploymentAlarms` {
  AlarmNames: Listing<String>

  Enable: Boolean

  Rollback: Boolean
}

class `AWS::ECS::ServiceDeploymentCircuitBreaker` {
  Enable: Boolean

  Rollback: Boolean
}

class `AWS::ECS::ServiceDeploymentConfiguration` {
  Alarms: `AWS::ECS::ServiceDeploymentAlarms`?

  DeploymentCircuitBreaker: `AWS::ECS::ServiceDeploymentCircuitBreaker`?

  MaximumPercent: Number?

  MinimumHealthyPercent: Number?
}

class `AWS::ECS::ServiceEBSTagSpecification` {
  PropagateTags: String?

  ResourceType: String

  Tags: Listing<Tag>?
}

class `AWS::ECS::ServiceLoadBalancer` {
  ContainerName: String?

  ContainerPort: Number?

  LoadBalancerName: String?

  TargetGroupArn: String?
}

class `AWS::ECS::ServiceLogConfiguration` {
  LogDriver: String?

  Options: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  SecretOptions: Listing<`AWS::ECS::TaskDefinitionSecret`>?
}

class `AWS::ECS::ServiceNetworkConfiguration` {
  AwsvpcConfiguration: `AWS::ECS::ServiceAwsVpcConfiguration`?
}

class `AWS::ECS::TaskDefinitionTaskDefinitionPlacementConstraint` {
  Expression: String?

  Type: String
}

class `AWS::ECS::ServicePlacementStrategy` {
  Field: String?

  Type: String
}

class `AWS::ECS::ServiceServiceConnectClientAlias` {
  DnsName: String?

  Port: Number
}

class `AWS::ECS::ServiceServiceConnectConfiguration` {
  Enabled: Boolean

  LogConfiguration: `AWS::ECS::ServiceLogConfiguration`?

  Namespace: String?

  Services: Listing<`AWS::ECS::ServiceServiceConnectService`>?
}

class `AWS::ECS::ServiceServiceConnectService` {
  ClientAliases: Listing<`AWS::ECS::ServiceServiceConnectClientAlias`>?

  DiscoveryName: String?

  IngressPortOverride: Number?

  PortName: String
}

class `AWS::ECS::ServiceServiceManagedEBSVolumeConfiguration` {
  Encrypted: Boolean?

  FilesystemType: String?

  Iops: Number?

  KmsKeyId: String?

  RoleArn: String

  SizeInGiB: Number?

  SnapshotId: String?

  TagSpecifications: Listing<`AWS::ECS::ServiceEBSTagSpecification`>?

  Throughput: Number?

  VolumeType: String?
}

class `AWS::ECS::TaskSetServiceRegistry` {
  ContainerName: String?

  ContainerPort: Number?

  Port: Number?

  RegistryArn: String?
}

class `AWS::ECS::ServiceServiceVolumeConfiguration` {
  ManagedEBSVolume: `AWS::ECS::ServiceServiceManagedEBSVolumeConfiguration`?

  Name: String
}

class `AWS::ECS::TaskDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ECS::TaskDefinitionProperties`?

  Type: "AWS::ECS::TaskDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ECS::TaskDefinitionProperties` {
  ContainerDefinitions: Listing<`AWS::ECS::TaskDefinitionContainerDefinition`>?

  Cpu: String?

  EphemeralStorage: `AWS::ECS::TaskDefinitionEphemeralStorage`?

  ExecutionRoleArn: String?

  Family: String?

  InferenceAccelerators: Listing<`AWS::Pipes::PipeEcsInferenceAcceleratorOverride`>?

  IpcMode: String?

  Memory: String?

  NetworkMode: String?

  PidMode: String?

  PlacementConstraints: Listing<`AWS::ECS::TaskDefinitionTaskDefinitionPlacementConstraint`>?

  ProxyConfiguration: `AWS::ECS::TaskDefinitionProxyConfiguration`?

  RequiresCompatibilities: Listing<String>?

  RuntimePlatform: `AWS::ECS::TaskDefinitionRuntimePlatform`?

  Tags: Listing<Tag>?

  TaskRoleArn: String?

  Volumes: Listing<`AWS::ECS::TaskDefinitionVolume`>?
}

class `AWS::ECS::TaskDefinitionAuthorizationConfig` {
  AccessPointId: String?

  IAM: String?
}

class `AWS::ECS::TaskDefinitionContainerDefinition` {
  Command: Listing<String>?

  Cpu: Number?

  DependsOn: Listing<`AWS::ECS::TaskDefinitionContainerDependency`>?

  DisableNetworking: Boolean?

  DnsSearchDomains: Listing<String>?

  DnsServers: Listing<String>?

  DockerLabels: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  DockerSecurityOptions: Listing<String>?

  EntryPoint: Listing<String>?

  Environment: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  EnvironmentFiles: Listing<`AWS::ECS::TaskDefinitionEnvironmentFile`>?

  Essential: Boolean?

  ExtraHosts: Listing<`AWS::ECS::TaskDefinitionHostEntry`>?

  FirelensConfiguration: `AWS::ECS::TaskDefinitionFirelensConfiguration`?

  HealthCheck: `AWS::ECS::TaskDefinitionHealthCheck`?

  Hostname: String?

  Image: String

  Interactive: Boolean?

  Links: Listing<String>?

  LinuxParameters: `AWS::ECS::TaskDefinitionLinuxParameters`?

  LogConfiguration: `AWS::ECS::TaskDefinitionLogConfiguration`?

  Memory: Number?

  MemoryReservation: Number?

  MountPoints: Listing<`AWS::ECS::TaskDefinitionMountPoint`>?

  Name: String

  PortMappings: Listing<`AWS::ECS::TaskDefinitionPortMapping`>?

  Privileged: Boolean?

  PseudoTerminal: Boolean?

  ReadonlyRootFilesystem: Boolean?

  RepositoryCredentials: `AWS::ECS::TaskDefinitionRepositoryCredentials`?

  ResourceRequirements: Listing<`AWS::WAFRegional::IPSetIPSetDescriptor`>?

  Secrets: Listing<`AWS::ECS::TaskDefinitionSecret`>?

  StartTimeout: Number?

  StopTimeout: Number?

  SystemControls: Listing<`AWS::ECS::TaskDefinitionSystemControl`>?

  Ulimits: Listing<`AWS::ECS::TaskDefinitionUlimit`>?

  User: String?

  VolumesFrom: Listing<`AWS::ECS::TaskDefinitionVolumeFrom`>?

  WorkingDirectory: String?
}

class `AWS::ECS::TaskDefinitionContainerDependency` {
  Condition: String?

  ContainerName: String?
}

class `AWS::ECS::TaskDefinitionDockerVolumeConfiguration` {
  Autoprovision: Boolean?

  Driver: String?

  DriverOpts: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Labels: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Scope: String?
}

class `AWS::ECS::TaskDefinitionEFSVolumeConfiguration` {
  AuthorizationConfig: `AWS::ECS::TaskDefinitionAuthorizationConfig`?

  FilesystemId: String

  RootDirectory: String?

  TransitEncryption: String?

  TransitEncryptionPort: Number?
}

class `AWS::ECS::TaskDefinitionEphemeralStorage` {
  SizeInGiB: Number?
}

class `AWS::ECS::TaskDefinitionFirelensConfiguration` {
  Options: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Type: String?
}

class `AWS::ECS::TaskDefinitionHealthCheck` {
  Command: Listing<String>?

  Interval: Number?

  Retries: Number?

  StartPeriod: Number?

  Timeout: Number?
}

class `AWS::ECS::TaskDefinitionHostEntry` {
  Hostname: String?

  IpAddress: String?
}

class `AWS::Pipes::PipeEcsInferenceAcceleratorOverride` {
  DeviceName: String?

  DeviceType: String?
}

class `AWS::ECS::TaskDefinitionKernelCapabilities` {
  Add: Listing<String>?

  Drop: Listing<String>?
}

class `AWS::ECS::TaskDefinitionLinuxParameters` {
  Capabilities: `AWS::ECS::TaskDefinitionKernelCapabilities`?

  Devices: Listing<`AWS::ECS::TaskDefinitionDevice`>?

  InitProcessEnabled: Boolean?

  MaxSwap: Number?

  SharedMemorySize: Number?

  Swappiness: Number?

  Tmpfs: Listing<`AWS::ECS::TaskDefinitionTmpfs`>?
}

class `AWS::ECS::TaskDefinitionLogConfiguration` {
  LogDriver: String

  Options: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  SecretOptions: Listing<`AWS::ECS::TaskDefinitionSecret`>?
}

class `AWS::ECS::TaskDefinitionPortMapping` {
  AppProtocol: String?

  ContainerPort: Number?

  ContainerPortRange: String?

  HostPort: Number?

  Name: String?

  Protocol: String?
}

class `AWS::ECS::TaskDefinitionProxyConfiguration` {
  ContainerName: String

  ProxyConfigurationProperties: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  Type: String?
}

class `AWS::ECS::TaskDefinitionRepositoryCredentials` {
  CredentialsParameter: String?
}

class `AWS::ECS::TaskDefinitionSystemControl` {
  Namespace: String?

  Value: String?
}

class `AWS::ECS::TaskDefinitionTmpfs` {
  ContainerPath: String?

  MountOptions: Listing<String>?

  Size: Number
}

class `AWS::ECS::TaskDefinitionVolume` {
  ConfiguredAtLaunch: Boolean?

  DockerVolumeConfiguration: `AWS::ECS::TaskDefinitionDockerVolumeConfiguration`?

  EFSVolumeConfiguration: `AWS::ECS::TaskDefinitionEFSVolumeConfiguration`?

  Host: `AWS::ECS::TaskDefinitionHostVolumeProperties`?

  Name: String?
}

class `AWS::ECS::TaskDefinitionVolumeFrom` {
  ReadOnly: Boolean?

  SourceContainer: String?
}

class `AWS::ECS::TaskSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ECS::TaskSetProperties`

  Type: "AWS::ECS::TaskSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ECS::TaskSetProperties` {
  Cluster: String

  ExternalId: String?

  LaunchType: String?

  LoadBalancers: Listing<`AWS::ECS::TaskSetLoadBalancer`>?

  NetworkConfiguration: `AWS::ECS::TaskSetNetworkConfiguration`?

  PlatformVersion: String?

  Scale: `AWS::ECS::TaskSetScale`?

  Service: String

  ServiceRegistries: Listing<`AWS::ECS::TaskSetServiceRegistry`>?

  TaskDefinition: String
}

class `AWS::Scheduler::ScheduleAwsVpcConfiguration` {
  AssignPublicIp: String?

  SecurityGroups: Listing<String>?

  Subnets: Listing<String>
}

class `AWS::ECS::TaskSetLoadBalancer` {
  ContainerName: String?

  ContainerPort: Number?

  TargetGroupArn: String?
}

class `AWS::ECS::TaskSetNetworkConfiguration` {
  AwsVpcConfiguration: `AWS::Scheduler::ScheduleAwsVpcConfiguration`?
}

class `AWS::ECS::TaskSetScale` {
  Unit: String?

  Value: Number?
}

class `AWS::EFS::AccessPoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EFS::AccessPointProperties`

  Type: "AWS::EFS::AccessPoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EFS::AccessPointProperties` {
  AccessPointTags: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?

  ClientToken: String?

  FileSystemId: String

  PosixUser: `AWS::EFS::AccessPointPosixUser`?

  RootDirectory: `AWS::EFS::AccessPointRootDirectory`?
}

class `AWS::EFS::AccessPointCreationInfo` {
  OwnerGid: String

  OwnerUid: String

  Permissions: String
}

class `AWS::EFS::AccessPointPosixUser` {
  Gid: String

  SecondaryGids: Listing<String>?

  Uid: String
}

class `AWS::EFS::AccessPointRootDirectory` {
  CreationInfo: `AWS::EFS::AccessPointCreationInfo`?

  Path: String?
}

class `AWS::EFS::FileSystem` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EFS::FileSystemProperties`?

  Type: "AWS::EFS::FileSystem"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EFS::FileSystemProperties` {
  AvailabilityZoneName: String?

  BackupPolicy: `AWS::SecurityHub::AutomationRuleWorkflowUpdate`?

  BypassPolicyLockoutSafetyCheck: Boolean?

  Encrypted: Boolean?

  FileSystemPolicy: Dynamic?

  FileSystemProtection: `AWS::EFS::FileSystemFileSystemProtection`?

  FileSystemTags: Listing<Tag>?

  KmsKeyId: String?

  LifecyclePolicies: Listing<`AWS::EFS::FileSystemLifecyclePolicy`>?

  PerformanceMode: String?

  ProvisionedThroughputInMibps: Number?

  ReplicationConfiguration: `AWS::EFS::FileSystemReplicationConfiguration`?

  ThroughputMode: String?
}

class `AWS::SecurityHub::AutomationRuleWorkflowUpdate` {
  Status: String
}

class `AWS::EFS::FileSystemFileSystemProtection` {
  ReplicationOverwriteProtection: String?
}

class `AWS::EFS::FileSystemLifecyclePolicy` {
  TransitionToArchive: String?

  TransitionToIA: String?

  TransitionToPrimaryStorageClass: String?
}

class `AWS::EFS::FileSystemReplicationConfiguration` {
  Destinations: Listing<`AWS::EFS::FileSystemReplicationDestination`>?
}

class `AWS::EFS::FileSystemReplicationDestination` {
  AvailabilityZoneName: String?

  FileSystemId: String?

  KmsKeyId: String?

  Region: String?
}

class `AWS::EFS::MountTarget` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EFS::MountTargetProperties`

  Type: "AWS::EFS::MountTarget"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EFS::MountTargetProperties` {
  FileSystemId: String

  IpAddress: String?

  SecurityGroups: Listing<String>

  SubnetId: String
}

class `AWS::EKS::AccessEntry` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EKS::AccessEntryProperties`

  Type: "AWS::EKS::AccessEntry"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EKS::AccessEntryProperties` {
  AccessPolicies: Listing<`AWS::EKS::AccessEntryAccessPolicy`>?

  ClusterName: String

  KubernetesGroups: Listing<String>?

  PrincipalArn: String

  Tags: Listing<Tag>?

  Type: String?

  Username: String?
}

class `AWS::EKS::AccessEntryAccessPolicy` {
  AccessScope: `AWS::EKS::AccessEntryAccessScope`

  PolicyArn: String
}

class `AWS::EKS::AccessEntryAccessScope` {
  Namespaces: Listing<String>?

  Type: String
}

class `AWS::EKS::Addon` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EKS::AddonProperties`

  Type: "AWS::EKS::Addon"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EKS::AddonProperties` {
  AddonName: String

  AddonVersion: String?

  ClusterName: String

  ConfigurationValues: String?

  PreserveOnDelete: Boolean?

  ResolveConflicts: String?

  ServiceAccountRoleArn: String?

  Tags: Listing<Tag>?
}

class `AWS::EKS::Cluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EKS::ClusterProperties`

  Type: "AWS::EKS::Cluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EKS::ClusterProperties` {
  AccessConfig: `AWS::EKS::ClusterAccessConfig`?

  EncryptionConfig: Listing<`AWS::EKS::ClusterEncryptionConfig`>?

  KubernetesNetworkConfig: `AWS::EKS::ClusterKubernetesNetworkConfig`?

  Logging: `AWS::EKS::ClusterLogging`?

  Name: String?

  OutpostConfig: `AWS::EKS::ClusterOutpostConfig`?

  ResourcesVpcConfig: `AWS::EKS::ClusterResourcesVpcConfig`

  RoleArn: String

  Tags: Listing<Tag>?

  Version: String?
}

class `AWS::EKS::ClusterAccessConfig` {
  AuthenticationMode: String?

  BootstrapClusterCreatorAdminPermissions: Boolean?
}

class `AWS::EKS::ClusterClusterLogging` {
  EnabledTypes: Listing<`AWS::MSK::ClusterPublicAccess`>?
}

class `AWS::EKS::ClusterControlPlanePlacement` {
  GroupName: String?
}

class `AWS::EKS::ClusterEncryptionConfig` {
  Provider: `AWS::EKS::ClusterProvider`?

  Resources: Listing<String>?
}

class `AWS::EKS::ClusterKubernetesNetworkConfig` {
  IpFamily: String?

  ServiceIpv4Cidr: String?

  ServiceIpv6Cidr: String?
}

class `AWS::EKS::ClusterLogging` {
  ClusterLogging: `AWS::EKS::ClusterClusterLogging`?
}

class `AWS::EKS::ClusterOutpostConfig` {
  ControlPlaneInstanceType: String

  ControlPlanePlacement: `AWS::EKS::ClusterControlPlanePlacement`?

  OutpostArns: Listing<String>
}

class `AWS::EKS::ClusterProvider` {
  KeyArn: String?
}

class `AWS::EKS::ClusterResourcesVpcConfig` {
  EndpointPrivateAccess: Boolean?

  EndpointPublicAccess: Boolean?

  PublicAccessCidrs: Listing<String>?

  SecurityGroupIds: Listing<String>?

  SubnetIds: Listing<String>
}

class `AWS::EKS::FargateProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EKS::FargateProfileProperties`

  Type: "AWS::EKS::FargateProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EKS::FargateProfileProperties` {
  ClusterName: String

  FargateProfileName: String?

  PodExecutionRoleArn: String

  Selectors: Listing<`AWS::EKS::FargateProfileSelector`>

  Subnets: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::EKS::FargateProfileSelector` {
  Labels: Listing<Tag>?

  Namespace: String
}

class `AWS::EKS::IdentityProviderConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EKS::IdentityProviderConfigProperties`

  Type: "AWS::EKS::IdentityProviderConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EKS::IdentityProviderConfigProperties` {
  ClusterName: String

  IdentityProviderConfigName: String?

  Oidc: `AWS::EKS::IdentityProviderConfigOidcIdentityProviderConfig`?

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::EKS::IdentityProviderConfigOidcIdentityProviderConfig` {
  ClientId: String

  GroupsClaim: String?

  GroupsPrefix: String?

  IssuerUrl: String

  RequiredClaims: Listing<Tag>?

  UsernameClaim: String?

  UsernamePrefix: String?
}

class `AWS::EKS::Nodegroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EKS::NodegroupProperties`

  Type: "AWS::EKS::Nodegroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EKS::NodegroupProperties` {
  AmiType: String?

  CapacityType: String?

  ClusterName: String

  DiskSize: Number?

  ForceUpdateEnabled: Boolean?

  InstanceTypes: Listing<String>?

  Labels: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  LaunchTemplate: `AWS::EKS::NodegroupLaunchTemplateSpecification`?

  NodeRole: String

  NodegroupName: String?

  ReleaseVersion: String?

  RemoteAccess: `AWS::EKS::NodegroupRemoteAccess`?

  ScalingConfig: `AWS::EKS::NodegroupScalingConfig`?

  Subnets: Listing<String>

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Taints: Listing<`AWS::EKS::NodegroupTaint`>?

  UpdateConfig: `AWS::EKS::NodegroupUpdateConfig`?

  Version: String?
}

class `AWS::EKS::NodegroupLaunchTemplateSpecification` {
  Id: String?

  Name: String?

  Version: String?
}

class `AWS::EKS::NodegroupRemoteAccess` {
  Ec2SshKey: String

  SourceSecurityGroups: Listing<String>?
}

class `AWS::EKS::NodegroupScalingConfig` {
  DesiredSize: Number?

  MaxSize: Number?

  MinSize: Number?
}

class `AWS::EKS::NodegroupTaint` {
  Effect: String?

  Key: String?

  Value: String?
}

class `AWS::EKS::NodegroupUpdateConfig` {
  MaxUnavailable: Number?

  MaxUnavailablePercentage: Number?
}

class `AWS::EKS::PodIdentityAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EKS::PodIdentityAssociationProperties`

  Type: "AWS::EKS::PodIdentityAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EKS::PodIdentityAssociationProperties` {
  ClusterName: String

  Namespace: String

  RoleArn: String

  ServiceAccount: String

  Tags: Listing<Tag>?
}

class `AWS::EMR::Cluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EMR::ClusterProperties`

  Type: "AWS::EMR::Cluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EMR::ClusterProperties` {
  AdditionalInfo: Dynamic?

  Applications: Listing<`AWS::EMR::ClusterApplication`>?

  AutoScalingRole: String?

  AutoTerminationPolicy: `AWS::EMR::ClusterAutoTerminationPolicy`?

  BootstrapActions: Listing<`AWS::EMR::ClusterBootstrapActionConfig`>?

  Configurations: Listing<`AWS::EMR::ClusterConfiguration`>?

  CustomAmiId: String?

  EbsRootVolumeIops: Number?

  EbsRootVolumeSize: Number?

  EbsRootVolumeThroughput: Number?

  Instances: `AWS::EMR::ClusterJobFlowInstancesConfig`

  JobFlowRole: String

  KerberosAttributes: `AWS::EMR::ClusterKerberosAttributes`?

  LogEncryptionKmsKeyId: String?

  LogUri: String?

  ManagedScalingPolicy: `AWS::EMR::ClusterManagedScalingPolicy`?

  Name: String

  OSReleaseLabel: String?

  PlacementGroupConfigs: Listing<`AWS::EMR::ClusterPlacementGroupConfig`>?

  ReleaseLabel: String?

  ScaleDownBehavior: String?

  SecurityConfiguration: String?

  ServiceRole: String

  StepConcurrencyLevel: Number?

  Steps: Listing<`AWS::EMR::ClusterStepConfig`>?

  Tags: Listing<Tag>?

  VisibleToAllUsers: Boolean?
}

class `AWS::EMR::ClusterApplication` {
  AdditionalInfo: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Args: Listing<String>?

  Name: String?

  Version: String?
}

class `AWS::EMR::ClusterAutoScalingPolicy` {
  Constraints: `AWS::Neptune::DBClusterServerlessScalingConfiguration`

  Rules: Listing<`AWS::EMR::ClusterScalingRule`>
}

class `AWS::EMR::ClusterAutoTerminationPolicy` {
  IdleTimeout: Number?
}

class `AWS::EMR::ClusterBootstrapActionConfig` {
  Name: String

  ScriptBootstrapAction: `AWS::EMR::ClusterScriptBootstrapActionConfig`
}

class `AWS::EMR::ClusterCloudWatchAlarmDefinition` {
  ComparisonOperator: String

  Dimensions: Listing<Tag>?

  EvaluationPeriods: Number?

  MetricName: String

  Namespace: String?

  Period: Number

  Statistic: String?

  Threshold: Number

  Unit: String?
}

class `AWS::EMR::ClusterComputeLimits` {
  MaximumCapacityUnits: Number

  MaximumCoreCapacityUnits: Number?

  MaximumOnDemandCapacityUnits: Number?

  MinimumCapacityUnits: Number

  UnitType: String
}

class `AWS::EMR::ClusterConfiguration` {
  Classification: String?

  ConfigurationProperties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Configurations: Listing<`AWS::EMR::ClusterConfiguration`>?
}

class `AWS::EMR::ClusterEbsBlockDeviceConfig` {
  VolumeSpecification: `AWS::EMR::InstanceGroupConfigVolumeSpecification`

  VolumesPerInstance: Number?
}

class `AWS::EMR::ClusterEbsConfiguration` {
  EbsBlockDeviceConfigs: Listing<`AWS::EMR::ClusterEbsBlockDeviceConfig`>?

  EbsOptimized: Boolean?
}

class `AWS::EMR::ClusterHadoopJarStepConfig` {
  Args: Listing<String>?

  Jar: String

  MainClass: String?

  StepProperties: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?
}

class `AWS::EMR::ClusterInstanceFleetConfig` {
  InstanceTypeConfigs: Listing<`AWS::EMR::ClusterInstanceTypeConfig`>?

  LaunchSpecifications: `AWS::EMR::ClusterInstanceFleetProvisioningSpecifications`?

  Name: String?

  TargetOnDemandCapacity: Number?

  TargetSpotCapacity: Number?
}

class `AWS::EMR::ClusterInstanceFleetProvisioningSpecifications` {
  OnDemandSpecification: `AWS::EMR::InstanceFleetConfigOnDemandProvisioningSpecification`?

  SpotSpecification: `AWS::EMR::InstanceFleetConfigSpotProvisioningSpecification`?
}

class `AWS::EMR::ClusterInstanceGroupConfig` {
  AutoScalingPolicy: `AWS::EMR::ClusterAutoScalingPolicy`?

  BidPrice: String?

  Configurations: Listing<`AWS::EMR::ClusterConfiguration`>?

  CustomAmiId: String?

  EbsConfiguration: `AWS::EMR::ClusterEbsConfiguration`?

  InstanceCount: Number

  InstanceType: String

  Market: String?

  Name: String?
}

class `AWS::EMR::ClusterInstanceTypeConfig` {
  BidPrice: String?

  BidPriceAsPercentageOfOnDemandPrice: Number?

  Configurations: Listing<`AWS::EMR::ClusterConfiguration`>?

  CustomAmiId: String?

  EbsConfiguration: `AWS::EMR::ClusterEbsConfiguration`?

  InstanceType: String

  WeightedCapacity: Number?
}

class `AWS::EMR::ClusterJobFlowInstancesConfig` {
  AdditionalMasterSecurityGroups: Listing<String>?

  AdditionalSlaveSecurityGroups: Listing<String>?

  CoreInstanceFleet: `AWS::EMR::ClusterInstanceFleetConfig`?

  CoreInstanceGroup: `AWS::EMR::ClusterInstanceGroupConfig`?

  Ec2KeyName: String?

  Ec2SubnetId: String?

  Ec2SubnetIds: Listing<String>?

  EmrManagedMasterSecurityGroup: String?

  EmrManagedSlaveSecurityGroup: String?

  HadoopVersion: String?

  KeepJobFlowAliveWhenNoSteps: Boolean?

  MasterInstanceFleet: `AWS::EMR::ClusterInstanceFleetConfig`?

  MasterInstanceGroup: `AWS::EMR::ClusterInstanceGroupConfig`?

  Placement: `AWS::EMR::ClusterPlacementType`?

  ServiceAccessSecurityGroup: String?

  TaskInstanceFleets: Listing<`AWS::EMR::ClusterInstanceFleetConfig`>?

  TaskInstanceGroups: Listing<`AWS::EMR::ClusterInstanceGroupConfig`>?

  TerminationProtected: Boolean?
}

class `AWS::EMR::ClusterKerberosAttributes` {
  ADDomainJoinPassword: String?

  ADDomainJoinUser: String?

  CrossRealmTrustPrincipalPassword: String?

  KdcAdminPassword: String

  Realm: String
}

class `AWS::EMR::ClusterManagedScalingPolicy` {
  ComputeLimits: `AWS::EMR::ClusterComputeLimits`?
}

class `AWS::EMR::InstanceFleetConfigOnDemandProvisioningSpecification` {
  AllocationStrategy: String
}

class `AWS::EMR::ClusterPlacementGroupConfig` {
  InstanceRole: String

  PlacementStrategy: String?
}

class `AWS::EMR::ClusterPlacementType` {
  AvailabilityZone: String
}

class `AWS::EMR::ClusterScalingAction` {
  Market: String?

  SimpleScalingPolicyConfiguration: `AWS::EMR::InstanceGroupConfigSimpleScalingPolicyConfiguration`
}

class `AWS::Neptune::DBClusterServerlessScalingConfiguration` {
  MaxCapacity: Number

  MinCapacity: Number
}

class `AWS::EMR::ClusterScalingRule` {
  Action: `AWS::EMR::ClusterScalingAction`

  Description: String?

  Name: String

  Trigger: `AWS::EMR::ClusterScalingTrigger`
}

class `AWS::EMR::ClusterScalingTrigger` {
  CloudWatchAlarmDefinition: `AWS::EMR::ClusterCloudWatchAlarmDefinition`
}

class `AWS::EMR::ClusterScriptBootstrapActionConfig` {
  Args: Listing<String>?

  Path: String
}

class `AWS::EMR::InstanceGroupConfigSimpleScalingPolicyConfiguration` {
  AdjustmentType: String?

  CoolDown: Number?

  ScalingAdjustment: Number
}

class `AWS::EMR::InstanceFleetConfigSpotProvisioningSpecification` {
  AllocationStrategy: String?

  BlockDurationMinutes: Number?

  TimeoutAction: String

  TimeoutDurationMinutes: Number
}

class `AWS::EMR::ClusterStepConfig` {
  ActionOnFailure: String?

  HadoopJarStep: `AWS::EMR::ClusterHadoopJarStepConfig`

  Name: String
}

class `AWS::EMR::InstanceGroupConfigVolumeSpecification` {
  Iops: Number?

  SizeInGB: Number

  Throughput: Number?

  VolumeType: String
}

class `AWS::EMR::InstanceFleetConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EMR::InstanceFleetConfigProperties`

  Type: "AWS::EMR::InstanceFleetConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EMR::InstanceFleetConfigProperties` {
  ClusterId: String

  InstanceFleetType: String

  InstanceTypeConfigs: Listing<`AWS::EMR::InstanceFleetConfigInstanceTypeConfig`>?

  LaunchSpecifications: `AWS::EMR::InstanceFleetConfigInstanceFleetProvisioningSpecifications`?

  Name: String?

  TargetOnDemandCapacity: Number?

  TargetSpotCapacity: Number?
}

class `AWS::EMR::InstanceFleetConfigConfiguration` {
  Classification: String?

  ConfigurationProperties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Configurations: Listing<`AWS::EMR::InstanceFleetConfigConfiguration`>?
}

class `AWS::EMR::InstanceFleetConfigEbsBlockDeviceConfig` {
  VolumeSpecification: `AWS::EMR::InstanceGroupConfigVolumeSpecification`

  VolumesPerInstance: Number?
}

class `AWS::EMR::InstanceFleetConfigEbsConfiguration` {
  EbsBlockDeviceConfigs: Listing<`AWS::EMR::InstanceFleetConfigEbsBlockDeviceConfig`>?

  EbsOptimized: Boolean?
}

class `AWS::EMR::InstanceFleetConfigInstanceFleetProvisioningSpecifications` {
  OnDemandSpecification: `AWS::EMR::InstanceFleetConfigOnDemandProvisioningSpecification`?

  SpotSpecification: `AWS::EMR::InstanceFleetConfigSpotProvisioningSpecification`?
}

class `AWS::EMR::InstanceFleetConfigInstanceTypeConfig` {
  BidPrice: String?

  BidPriceAsPercentageOfOnDemandPrice: Number?

  Configurations: Listing<`AWS::EMR::InstanceFleetConfigConfiguration`>?

  CustomAmiId: String?

  EbsConfiguration: `AWS::EMR::InstanceFleetConfigEbsConfiguration`?

  InstanceType: String

  WeightedCapacity: Number?
}

class `AWS::EMR::InstanceGroupConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EMR::InstanceGroupConfigProperties`

  Type: "AWS::EMR::InstanceGroupConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EMR::InstanceGroupConfigProperties` {
  AutoScalingPolicy: `AWS::EMR::InstanceGroupConfigAutoScalingPolicy`?

  BidPrice: String?

  Configurations: Listing<`AWS::EMR::InstanceGroupConfigConfiguration`>?

  CustomAmiId: String?

  EbsConfiguration: `AWS::EMR::InstanceGroupConfigEbsConfiguration`?

  InstanceCount: Number

  InstanceRole: String

  InstanceType: String

  JobFlowId: String

  Market: String?

  Name: String?
}

class `AWS::EMR::InstanceGroupConfigAutoScalingPolicy` {
  Constraints: `AWS::Neptune::DBClusterServerlessScalingConfiguration`

  Rules: Listing<`AWS::EMR::InstanceGroupConfigScalingRule`>
}

class `AWS::EMR::InstanceGroupConfigCloudWatchAlarmDefinition` {
  ComparisonOperator: String

  Dimensions: Listing<Tag>?

  EvaluationPeriods: Number?

  MetricName: String

  Namespace: String?

  Period: Number

  Statistic: String?

  Threshold: Number

  Unit: String?
}

class `AWS::EMR::InstanceGroupConfigConfiguration` {
  Classification: String?

  ConfigurationProperties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Configurations: Listing<`AWS::EMR::InstanceGroupConfigConfiguration`>?
}

class `AWS::EMR::InstanceGroupConfigEbsBlockDeviceConfig` {
  VolumeSpecification: `AWS::EMR::InstanceGroupConfigVolumeSpecification`

  VolumesPerInstance: Number?
}

class `AWS::EMR::InstanceGroupConfigEbsConfiguration` {
  EbsBlockDeviceConfigs: Listing<`AWS::EMR::InstanceGroupConfigEbsBlockDeviceConfig`>?

  EbsOptimized: Boolean?
}

class `AWS::EMR::InstanceGroupConfigScalingAction` {
  Market: String?

  SimpleScalingPolicyConfiguration: `AWS::EMR::InstanceGroupConfigSimpleScalingPolicyConfiguration`
}

class `AWS::EMR::InstanceGroupConfigScalingRule` {
  Action: `AWS::EMR::InstanceGroupConfigScalingAction`

  Description: String?

  Name: String

  Trigger: `AWS::EMR::InstanceGroupConfigScalingTrigger`
}

class `AWS::EMR::InstanceGroupConfigScalingTrigger` {
  CloudWatchAlarmDefinition: `AWS::EMR::InstanceGroupConfigCloudWatchAlarmDefinition`
}

class `AWS::EMR::SecurityConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EMR::SecurityConfigurationProperties`

  Type: "AWS::EMR::SecurityConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EMR::SecurityConfigurationProperties` {
  Name: String?

  SecurityConfiguration: Dynamic
}

class `AWS::EMR::Step` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EMR::StepProperties`

  Type: "AWS::EMR::Step"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EMR::StepProperties` {
  ActionOnFailure: String

  HadoopJarStep: `AWS::EMR::StepHadoopJarStepConfig`

  JobFlowId: String

  Name: String
}

class `AWS::EMR::StepHadoopJarStepConfig` {
  Args: Listing<String>?

  Jar: String

  MainClass: String?

  StepProperties: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?
}

class `AWS::EMR::Studio` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EMR::StudioProperties`

  Type: "AWS::EMR::Studio"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EMR::StudioProperties` {
  AuthMode: String

  DefaultS3Location: String

  Description: String?

  EncryptionKeyArn: String?

  EngineSecurityGroupId: String

  IdcInstanceArn: String?

  IdcUserAssignment: String?

  IdpAuthUrl: String?

  IdpRelayStateParameterName: String?

  Name: String

  ServiceRole: String

  SubnetIds: Listing<String>

  Tags: Listing<Tag>?

  TrustedIdentityPropagationEnabled: Boolean?

  UserRole: String?

  VpcId: String

  WorkspaceSecurityGroupId: String
}

class `AWS::EMR::StudioSessionMapping` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EMR::StudioSessionMappingProperties`

  Type: "AWS::EMR::StudioSessionMapping"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EMR::StudioSessionMappingProperties` {
  IdentityName: String

  IdentityType: String

  SessionPolicyArn: String

  StudioId: String
}

class `AWS::EMR::WALWorkspace` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EMR::WALWorkspaceProperties`?

  Type: "AWS::EMR::WALWorkspace"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EMR::WALWorkspaceProperties` {
  Tags: Listing<Tag>?

  WALWorkspaceName: String?
}

class `AWS::EMRContainers::VirtualCluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EMRContainers::VirtualClusterProperties`

  Type: "AWS::EMRContainers::VirtualCluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EMRContainers::VirtualClusterProperties` {
  ContainerProvider: `AWS::EMRContainers::VirtualClusterContainerProvider`

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::EMRContainers::VirtualClusterContainerInfo` {
  EksInfo: `AWS::WAFv2::WebACLRateLimitLabelNamespace`
}

class `AWS::EMRContainers::VirtualClusterContainerProvider` {
  Id: String

  Info: `AWS::EMRContainers::VirtualClusterContainerInfo`

  Type: String
}

class `AWS::WAFv2::WebACLRateLimitLabelNamespace` {
  Namespace: String
}

class `AWS::EMRServerless::Application` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EMRServerless::ApplicationProperties`

  Type: "AWS::EMRServerless::Application"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EMRServerless::ApplicationProperties` {
  Architecture: String?

  AutoStartConfiguration: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  AutoStopConfiguration: `AWS::EMRServerless::ApplicationAutoStopConfiguration`?

  ImageConfiguration: `AWS::EMRServerless::ApplicationImageConfigurationInput`?

  InitialCapacity: Listing<`AWS::EMRServerless::ApplicationInitialCapacityConfigKeyValuePair`>?

  MaximumCapacity: `AWS::EMRServerless::ApplicationWorkerConfiguration`?

  MonitoringConfiguration: `AWS::EMRServerless::ApplicationMonitoringConfiguration`?

  Name: String?

  NetworkConfiguration: `AWS::OpenSearchService::DomainVPCOptions`?

  ReleaseLabel: String

  RuntimeConfiguration: Listing<`AWS::EMRServerless::ApplicationConfigurationObject`>?

  Tags: Listing<Tag>?

  Type: String

  WorkerTypeSpecifications: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::EMRServerless::ApplicationWorkerTypeSpecificationInput`>?
}

class `AWS::EMRServerless::ApplicationAutoStopConfiguration` {
  Enabled: Boolean?

  IdleTimeoutMinutes: Number?
}

class `AWS::EMRServerless::ApplicationCloudWatchLoggingConfiguration` {
  Enabled: Boolean?

  EncryptionKeyArn: String?

  LogGroupName: String?

  LogStreamNamePrefix: String?

  LogTypeMap: Listing<`AWS::EMRServerless::ApplicationLogTypeMapKeyValuePair`>?
}

class `AWS::EMRServerless::ApplicationConfigurationObject` {
  Classification: String

  Configurations: Listing<`AWS::EMRServerless::ApplicationConfigurationObject`>?

  Properties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::EMRServerless::ApplicationImageConfigurationInput` {
  ImageUri: String?
}

class `AWS::EMRServerless::ApplicationInitialCapacityConfig` {
  WorkerConfiguration: `AWS::EMRServerless::ApplicationWorkerConfiguration`

  WorkerCount: Number
}

class `AWS::EMRServerless::ApplicationInitialCapacityConfigKeyValuePair` {
  Key: String

  Value: `AWS::EMRServerless::ApplicationInitialCapacityConfig`
}

class `AWS::EMRServerless::ApplicationManagedPersistenceMonitoringConfiguration` {
  Enabled: Boolean?

  EncryptionKeyArn: String?
}

class `AWS::EMRServerless::ApplicationWorkerConfiguration` {
  Cpu: String

  Disk: String?

  Memory: String
}

class `AWS::EMRServerless::ApplicationMonitoringConfiguration` {
  CloudWatchLoggingConfiguration: `AWS::EMRServerless::ApplicationCloudWatchLoggingConfiguration`?

  ManagedPersistenceMonitoringConfiguration: `AWS::EMRServerless::ApplicationManagedPersistenceMonitoringConfiguration`?

  S3MonitoringConfiguration: `AWS::EMRServerless::ApplicationS3MonitoringConfiguration`?
}

class `AWS::EMRServerless::ApplicationS3MonitoringConfiguration` {
  EncryptionKeyArn: String?

  LogUri: String?
}

class `AWS::EMRServerless::ApplicationWorkerTypeSpecificationInput` {
  ImageConfiguration: `AWS::EMRServerless::ApplicationImageConfigurationInput`?
}

class `AWS::ElastiCache::CacheCluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElastiCache::CacheClusterProperties`

  Type: "AWS::ElastiCache::CacheCluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElastiCache::CacheClusterProperties` {
  AZMode: String?

  AutoMinorVersionUpgrade: Boolean?

  CacheNodeType: String

  CacheParameterGroupName: String?

  CacheSecurityGroupNames: Listing<String>?

  CacheSubnetGroupName: String?

  ClusterName: String?

  Engine: String

  EngineVersion: String?

  IpDiscovery: String?

  LogDeliveryConfigurations: Listing<`AWS::ElastiCache::CacheClusterLogDeliveryConfigurationRequest`>?

  NetworkType: String?

  NotificationTopicArn: String?

  NumCacheNodes: Number

  Port: Number?

  PreferredAvailabilityZone: String?

  PreferredAvailabilityZones: Listing<String>?

  PreferredMaintenanceWindow: String?

  SnapshotArns: Listing<String>?

  SnapshotName: String?

  SnapshotRetentionLimit: Number?

  SnapshotWindow: String?

  Tags: Listing<Tag>?

  TransitEncryptionEnabled: Boolean?

  VpcSecurityGroupIds: Listing<String>?
}

class `AWS::OSIS::PipelineCloudWatchLogDestination` {
  LogGroup: String
}

class `AWS::ElastiCache::CacheClusterDestinationDetails` {
  CloudWatchLogsDetails: `AWS::OSIS::PipelineCloudWatchLogDestination`?

  KinesisFirehoseDetails: `AWS::ElastiCache::ReplicationGroupKinesisFirehoseDestinationDetails`?
}

class `AWS::ElastiCache::ReplicationGroupKinesisFirehoseDestinationDetails` {
  DeliveryStream: String
}

class `AWS::ElastiCache::CacheClusterLogDeliveryConfigurationRequest` {
  DestinationDetails: `AWS::ElastiCache::CacheClusterDestinationDetails`

  DestinationType: String

  LogFormat: String

  LogType: String
}

class `AWS::ElastiCache::GlobalReplicationGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElastiCache::GlobalReplicationGroupProperties`

  Type: "AWS::ElastiCache::GlobalReplicationGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElastiCache::GlobalReplicationGroupProperties` {
  AutomaticFailoverEnabled: Boolean?

  CacheNodeType: String?

  CacheParameterGroupName: String?

  EngineVersion: String?

  GlobalNodeGroupCount: Number?

  GlobalReplicationGroupDescription: String?

  GlobalReplicationGroupIdSuffix: String?

  Members: Listing<`AWS::ElastiCache::GlobalReplicationGroupGlobalReplicationGroupMember`>

  RegionalConfigurations: Listing<`AWS::ElastiCache::GlobalReplicationGroupRegionalConfiguration`>?
}

class `AWS::ElastiCache::GlobalReplicationGroupGlobalReplicationGroupMember` {
  ReplicationGroupId: String?

  ReplicationGroupRegion: String?

  Role: String?
}

class `AWS::ElastiCache::GlobalReplicationGroupRegionalConfiguration` {
  ReplicationGroupId: String?

  ReplicationGroupRegion: String?

  ReshardingConfigurations: Listing<`AWS::ElastiCache::GlobalReplicationGroupReshardingConfiguration`>?
}

class `AWS::ElastiCache::GlobalReplicationGroupReshardingConfiguration` {
  NodeGroupId: String?

  PreferredAvailabilityZones: Listing<String>?
}

class `AWS::ElastiCache::ParameterGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElastiCache::ParameterGroupProperties`

  Type: "AWS::ElastiCache::ParameterGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElastiCache::ParameterGroupProperties` {
  CacheParameterGroupFamily: String

  Description: String

  Properties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Tags: Listing<Tag>?
}

class `AWS::ElastiCache::ReplicationGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElastiCache::ReplicationGroupProperties`

  Type: "AWS::ElastiCache::ReplicationGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElastiCache::ReplicationGroupProperties` {
  AtRestEncryptionEnabled: Boolean?

  AuthToken: String?

  AutoMinorVersionUpgrade: Boolean?

  AutomaticFailoverEnabled: Boolean?

  CacheNodeType: String?

  CacheParameterGroupName: String?

  CacheSecurityGroupNames: Listing<String>?

  CacheSubnetGroupName: String?

  ClusterMode: String?

  DataTieringEnabled: Boolean?

  Engine: String?

  EngineVersion: String?

  GlobalReplicationGroupId: String?

  IpDiscovery: String?

  KmsKeyId: String?

  LogDeliveryConfigurations: Listing<`AWS::ElastiCache::ReplicationGroupLogDeliveryConfigurationRequest`>?

  MultiAZEnabled: Boolean?

  NetworkType: String?

  NodeGroupConfiguration: Listing<`AWS::ElastiCache::ReplicationGroupNodeGroupConfiguration`>?

  NotificationTopicArn: String?

  NumCacheClusters: Number?

  NumNodeGroups: Number?

  Port: Number?

  PreferredCacheClusterAZs: Listing<String>?

  PreferredMaintenanceWindow: String?

  PrimaryClusterId: String?

  ReplicasPerNodeGroup: Number?

  ReplicationGroupDescription: String

  ReplicationGroupId: String?

  SecurityGroupIds: Listing<String>?

  SnapshotArns: Listing<String>?

  SnapshotName: String?

  SnapshotRetentionLimit: Number?

  SnapshotWindow: String?

  SnapshottingClusterId: String?

  Tags: Listing<Tag>?

  TransitEncryptionEnabled: Boolean?

  TransitEncryptionMode: String?

  UserGroupIds: Listing<String>?
}

class `AWS::ElastiCache::ReplicationGroupDestinationDetails` {
  CloudWatchLogsDetails: `AWS::OSIS::PipelineCloudWatchLogDestination`?

  KinesisFirehoseDetails: `AWS::ElastiCache::ReplicationGroupKinesisFirehoseDestinationDetails`?
}

class `AWS::ElastiCache::ReplicationGroupLogDeliveryConfigurationRequest` {
  DestinationDetails: `AWS::ElastiCache::ReplicationGroupDestinationDetails`

  DestinationType: String

  LogFormat: String

  LogType: String
}

class `AWS::ElastiCache::ReplicationGroupNodeGroupConfiguration` {
  NodeGroupId: String?

  PrimaryAvailabilityZone: String?

  ReplicaAvailabilityZones: Listing<String>?

  ReplicaCount: Number?

  Slots: String?
}

class `AWS::ElastiCache::SecurityGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Redshift::ClusterSecurityGroupProperties`

  Type: "AWS::ElastiCache::SecurityGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Redshift::ClusterSecurityGroupProperties` {
  Description: String

  Tags: Listing<Tag>?
}

class `AWS::ElastiCache::SecurityGroupIngress` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElastiCache::SecurityGroupIngressProperties`

  Type: "AWS::ElastiCache::SecurityGroupIngress"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElastiCache::SecurityGroupIngressProperties` {
  CacheSecurityGroupName: String

  EC2SecurityGroupName: String

  EC2SecurityGroupOwnerId: String?
}

class `AWS::ElastiCache::ServerlessCache` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElastiCache::ServerlessCacheProperties`

  Type: "AWS::ElastiCache::ServerlessCache"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElastiCache::ServerlessCacheProperties` {
  CacheUsageLimits: `AWS::ElastiCache::ServerlessCacheCacheUsageLimits`?

  DailySnapshotTime: String?

  Description: String?

  Endpoint: `AWS::MemoryDB::ClusterEndpoint`?

  Engine: String

  FinalSnapshotName: String?

  KmsKeyId: String?

  MajorEngineVersion: String?

  ReaderEndpoint: `AWS::MemoryDB::ClusterEndpoint`?

  SecurityGroupIds: Listing<String>?

  ServerlessCacheName: String

  SnapshotArnsToRestore: Listing<String>?

  SnapshotRetentionLimit: Number?

  SubnetIds: Listing<String>?

  Tags: Listing<Tag>?

  UserGroupId: String?
}

class `AWS::ElastiCache::ServerlessCacheCacheUsageLimits` {
  DataStorage: `AWS::ElastiCache::ServerlessCacheDataStorage`?

  ECPUPerSecond: `AWS::ElastiCache::ServerlessCacheECPUPerSecond`?
}

class `AWS::ElastiCache::ServerlessCacheDataStorage` {
  Maximum: Number

  Unit: String
}

class `AWS::ElastiCache::ServerlessCacheECPUPerSecond` {
  Maximum: Number
}

class `AWS::MemoryDB::ClusterEndpoint` {
  Address: String?

  Port: Number?
}

class `AWS::ElastiCache::SubnetGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElastiCache::SubnetGroupProperties`

  Type: "AWS::ElastiCache::SubnetGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElastiCache::SubnetGroupProperties` {
  CacheSubnetGroupName: String?

  Description: String

  SubnetIds: Listing<String>

  Tags: Listing<Tag>?
}

class `AWS::ElastiCache::User` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElastiCache::UserProperties`

  Type: "AWS::ElastiCache::User"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElastiCache::UserProperties` {
  AccessString: String?

  AuthenticationMode: `AWS::ElastiCache::UserAuthenticationMode`?

  Engine: String

  NoPasswordRequired: Boolean?

  Passwords: Listing<String>?

  Tags: Listing<Tag>?

  UserId: String

  UserName: String
}

class `AWS::ElastiCache::UserAuthenticationMode` {
  Passwords: Listing<String>?

  Type: String
}

class `AWS::ElastiCache::UserGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElastiCache::UserGroupProperties`

  Type: "AWS::ElastiCache::UserGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElastiCache::UserGroupProperties` {
  Engine: String

  Tags: Listing<Tag>?

  UserGroupId: String

  UserIds: Listing<String>
}

class `AWS::ElasticBeanstalk::Application` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElasticBeanstalk::ApplicationProperties`?

  Type: "AWS::ElasticBeanstalk::Application"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElasticBeanstalk::ApplicationProperties` {
  ApplicationName: String?

  Description: String?

  ResourceLifecycleConfig: `AWS::ElasticBeanstalk::ApplicationApplicationResourceLifecycleConfig`?
}

class `AWS::ElasticBeanstalk::ApplicationApplicationResourceLifecycleConfig` {
  ServiceRole: String?

  VersionLifecycleConfig: `AWS::ElasticBeanstalk::ApplicationApplicationVersionLifecycleConfig`?
}

class `AWS::ElasticBeanstalk::ApplicationApplicationVersionLifecycleConfig` {
  MaxAgeRule: `AWS::ElasticBeanstalk::ApplicationMaxAgeRule`?

  MaxCountRule: `AWS::ElasticBeanstalk::ApplicationMaxCountRule`?
}

class `AWS::ElasticBeanstalk::ApplicationMaxAgeRule` {
  DeleteSourceFromS3: Boolean?

  Enabled: Boolean?

  MaxAgeInDays: Number?
}

class `AWS::ElasticBeanstalk::ApplicationMaxCountRule` {
  DeleteSourceFromS3: Boolean?

  Enabled: Boolean?

  MaxCount: Number?
}

class `AWS::ElasticBeanstalk::ApplicationVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElasticBeanstalk::ApplicationVersionProperties`

  Type: "AWS::ElasticBeanstalk::ApplicationVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElasticBeanstalk::ApplicationVersionProperties` {
  ApplicationName: String

  Description: String?

  SourceBundle: `AWS::ElasticBeanstalk::ApplicationVersionSourceBundle`
}

class `AWS::ElasticBeanstalk::ConfigurationTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElasticBeanstalk::ConfigurationTemplateProperties`

  Type: "AWS::ElasticBeanstalk::ConfigurationTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElasticBeanstalk::ConfigurationTemplateProperties` {
  ApplicationName: String

  Description: String?

  EnvironmentId: String?

  OptionSettings: Listing<`AWS::ElasticBeanstalk::EnvironmentOptionSetting`>?

  PlatformArn: String?

  SolutionStackName: String?

  SourceConfiguration: `AWS::ElasticBeanstalk::ConfigurationTemplateSourceConfiguration`?
}

class `AWS::ElasticBeanstalk::EnvironmentOptionSetting` {
  Namespace: String

  OptionName: String

  ResourceName: String?

  Value: String?
}

class `AWS::ElasticBeanstalk::ConfigurationTemplateSourceConfiguration` {
  ApplicationName: String

  TemplateName: String
}

class `AWS::ElasticBeanstalk::Environment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElasticBeanstalk::EnvironmentProperties`

  Type: "AWS::ElasticBeanstalk::Environment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElasticBeanstalk::EnvironmentProperties` {
  ApplicationName: String

  CNAMEPrefix: String?

  Description: String?

  EnvironmentName: String?

  OperationsRole: String?

  OptionSettings: Listing<`AWS::ElasticBeanstalk::EnvironmentOptionSetting`>?

  PlatformArn: String?

  SolutionStackName: String?

  Tags: Listing<Tag>?

  TemplateName: String?

  Tier: `AWS::ElasticBeanstalk::EnvironmentTier`?

  VersionLabel: String?
}

class `AWS::ElasticBeanstalk::EnvironmentTier` {
  Name: String?

  Type: String?

  Version: String?
}

class `AWS::ElasticLoadBalancing::LoadBalancer` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElasticLoadBalancing::LoadBalancerProperties`

  Type: "AWS::ElasticLoadBalancing::LoadBalancer"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElasticLoadBalancing::LoadBalancerProperties` {
  AccessLoggingPolicy: `AWS::ElasticLoadBalancing::LoadBalancerAccessLoggingPolicy`?

  AppCookieStickinessPolicy: Listing<`AWS::ElasticLoadBalancing::LoadBalancerAppCookieStickinessPolicy`>?

  AvailabilityZones: Listing<String>?

  ConnectionDrainingPolicy: `AWS::ElasticLoadBalancing::LoadBalancerConnectionDrainingPolicy`?

  ConnectionSettings: `AWS::ElasticLoadBalancing::LoadBalancerConnectionSettings`?

  CrossZone: Boolean?

  HealthCheck: `AWS::ElasticLoadBalancing::LoadBalancerHealthCheck`?

  Instances: Listing<String>?

  LBCookieStickinessPolicy: Listing<`AWS::ElasticLoadBalancing::LoadBalancerLBCookieStickinessPolicy`>?

  Listeners: Listing<`AWS::ElasticLoadBalancing::LoadBalancerListeners`>

  LoadBalancerName: String?

  Policies: Listing<`AWS::ElasticLoadBalancing::LoadBalancerPolicies`>?

  Scheme: String?

  SecurityGroups: Listing<String>?

  Subnets: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::ElasticLoadBalancing::LoadBalancerAccessLoggingPolicy` {
  EmitInterval: Number?

  Enabled: Boolean

  S3BucketName: String

  S3BucketPrefix: String?
}

class `AWS::ElasticLoadBalancing::LoadBalancerAppCookieStickinessPolicy` {
  CookieName: String

  PolicyName: String
}

class `AWS::ElasticLoadBalancing::LoadBalancerConnectionDrainingPolicy` {
  Enabled: Boolean

  Timeout: Number?
}

class `AWS::ElasticLoadBalancing::LoadBalancerConnectionSettings` {
  IdleTimeout: Number
}

class `AWS::ElasticLoadBalancing::LoadBalancerHealthCheck` {
  HealthyThreshold: String

  Interval: String

  Target: String

  Timeout: String

  UnhealthyThreshold: String
}

class `AWS::ElasticLoadBalancing::LoadBalancerLBCookieStickinessPolicy` {
  CookieExpirationPeriod: String?

  PolicyName: String?
}

class `AWS::ElasticLoadBalancing::LoadBalancerListeners` {
  InstancePort: String

  InstanceProtocol: String?

  LoadBalancerPort: String

  PolicyNames: Listing<String>?

  Protocol: String

  SSLCertificateId: String?
}

class `AWS::ElasticLoadBalancing::LoadBalancerPolicies` {
  Attributes: Listing<Dynamic>

  InstancePorts: Listing<String>?

  LoadBalancerPorts: Listing<String>?

  PolicyName: String

  PolicyType: String
}

class `AWS::ElasticLoadBalancingV2::Listener` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElasticLoadBalancingV2::ListenerProperties`

  Type: "AWS::ElasticLoadBalancingV2::Listener"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElasticLoadBalancingV2::ListenerProperties` {
  AlpnPolicy: Listing<String>?

  Certificates: Listing<`AWS::ElasticLoadBalancingV2::ListenerCertificateCertificate`>?

  DefaultActions: Listing<`AWS::ElasticLoadBalancingV2::ListenerAction`>

  LoadBalancerArn: String

  MutualAuthentication: `AWS::ElasticLoadBalancingV2::ListenerMutualAuthentication`?

  Port: Number?

  Protocol: String?

  SslPolicy: String?
}

class `AWS::ElasticLoadBalancingV2::ListenerAction` {
  AuthenticateCognitoConfig: `AWS::ElasticLoadBalancingV2::ListenerAuthenticateCognitoConfig`?

  AuthenticateOidcConfig: `AWS::ElasticLoadBalancingV2::ListenerAuthenticateOidcConfig`?

  FixedResponseConfig: `AWS::ElasticLoadBalancingV2::ListenerRuleFixedResponseConfig`?

  ForwardConfig: `AWS::ElasticLoadBalancingV2::ListenerForwardConfig`?

  Order: Number?

  RedirectConfig: `AWS::ElasticLoadBalancingV2::ListenerRuleRedirectConfig`?

  TargetGroupArn: String?

  Type: String
}

class `AWS::ElasticLoadBalancingV2::ListenerAuthenticateCognitoConfig` {
  AuthenticationRequestExtraParams: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  OnUnauthenticatedRequest: String?

  Scope: String?

  SessionCookieName: String?

  SessionTimeout: String?

  UserPoolArn: String

  UserPoolClientId: String

  UserPoolDomain: String
}

class `AWS::ElasticLoadBalancingV2::ListenerAuthenticateOidcConfig` {
  AuthenticationRequestExtraParams: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  AuthorizationEndpoint: String

  ClientId: String

  ClientSecret: String?

  Issuer: String

  OnUnauthenticatedRequest: String?

  Scope: String?

  SessionCookieName: String?

  SessionTimeout: String?

  TokenEndpoint: String

  UseExistingClientSecret: Boolean?

  UserInfoEndpoint: String
}

class `AWS::ElasticLoadBalancingV2::ListenerRuleFixedResponseConfig` {
  ContentType: String?

  MessageBody: String?

  StatusCode: String
}

class `AWS::ElasticLoadBalancingV2::ListenerForwardConfig` {
  TargetGroupStickinessConfig: `AWS::ElasticLoadBalancingV2::ListenerRuleTargetGroupStickinessConfig`?

  TargetGroups: Listing<`AWS::ElasticLoadBalancingV2::ListenerRuleTargetGroupTuple`>?
}

class `AWS::ElasticLoadBalancingV2::ListenerMutualAuthentication` {
  IgnoreClientCertificateExpiry: Boolean?

  Mode: String?

  TrustStoreArn: String?
}

class `AWS::ElasticLoadBalancingV2::ListenerRuleRedirectConfig` {
  Host: String?

  Path: String?

  Port: String?

  Protocol: String?

  Query: String?

  StatusCode: String
}

class `AWS::ElasticLoadBalancingV2::ListenerRuleTargetGroupStickinessConfig` {
  DurationSeconds: Number?

  Enabled: Boolean?
}

class `AWS::ElasticLoadBalancingV2::ListenerRuleTargetGroupTuple` {
  TargetGroupArn: String?

  Weight: Number?
}

class `AWS::ElasticLoadBalancingV2::ListenerCertificate0` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElasticLoadBalancingV2::ListenerCertificateProperties`

  Type: "AWS::ElasticLoadBalancingV2::ListenerCertificate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElasticLoadBalancingV2::ListenerCertificateProperties` {
  Certificates: Listing<`AWS::ElasticLoadBalancingV2::ListenerCertificateCertificate`>

  ListenerArn: String
}

class `AWS::ElasticLoadBalancingV2::ListenerRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElasticLoadBalancingV2::ListenerRuleProperties`

  Type: "AWS::ElasticLoadBalancingV2::ListenerRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElasticLoadBalancingV2::ListenerRuleProperties` {
  Actions: Listing<`AWS::ElasticLoadBalancingV2::ListenerRuleAction`>

  Conditions: Listing<`AWS::ElasticLoadBalancingV2::ListenerRuleRuleCondition`>

  ListenerArn: String?

  Priority: Number
}

class `AWS::ElasticLoadBalancingV2::ListenerRuleAction` {
  AuthenticateCognitoConfig: `AWS::ElasticLoadBalancingV2::ListenerRuleAuthenticateCognitoConfig`?

  AuthenticateOidcConfig: `AWS::ElasticLoadBalancingV2::ListenerRuleAuthenticateOidcConfig`?

  FixedResponseConfig: `AWS::ElasticLoadBalancingV2::ListenerRuleFixedResponseConfig`?

  ForwardConfig: `AWS::ElasticLoadBalancingV2::ListenerRuleForwardConfig`?

  Order: Number?

  RedirectConfig: `AWS::ElasticLoadBalancingV2::ListenerRuleRedirectConfig`?

  TargetGroupArn: String?

  Type: String
}

class `AWS::ElasticLoadBalancingV2::ListenerRuleAuthenticateCognitoConfig` {
  AuthenticationRequestExtraParams: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  OnUnauthenticatedRequest: String?

  Scope: String?

  SessionCookieName: String?

  SessionTimeout: Number?

  UserPoolArn: String

  UserPoolClientId: String

  UserPoolDomain: String
}

class `AWS::ElasticLoadBalancingV2::ListenerRuleAuthenticateOidcConfig` {
  AuthenticationRequestExtraParams: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  AuthorizationEndpoint: String

  ClientId: String

  ClientSecret: String?

  Issuer: String

  OnUnauthenticatedRequest: String?

  Scope: String?

  SessionCookieName: String?

  SessionTimeout: Number?

  TokenEndpoint: String

  UseExistingClientSecret: Boolean?

  UserInfoEndpoint: String
}

class `AWS::ElasticLoadBalancingV2::ListenerRuleForwardConfig` {
  TargetGroupStickinessConfig: `AWS::ElasticLoadBalancingV2::ListenerRuleTargetGroupStickinessConfig`?

  TargetGroups: Listing<`AWS::ElasticLoadBalancingV2::ListenerRuleTargetGroupTuple`>?
}

class `AWS::ElasticLoadBalancingV2::ListenerRuleHttpHeaderConfig` {
  HttpHeaderName: String?

  Values: Listing<String>?
}

class `AWS::ElasticLoadBalancingV2::ListenerRuleQueryStringConfig` {
  Values: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?
}

class `AWS::ElasticLoadBalancingV2::ListenerRuleRuleCondition` {
  Field: String?

  HostHeaderConfig: `AWS::QuickSight::TemplateFilterSelectableValues`?

  HttpHeaderConfig: `AWS::ElasticLoadBalancingV2::ListenerRuleHttpHeaderConfig`?

  HttpRequestMethodConfig: `AWS::QuickSight::TemplateFilterSelectableValues`?

  PathPatternConfig: `AWS::QuickSight::TemplateFilterSelectableValues`?

  QueryStringConfig: `AWS::ElasticLoadBalancingV2::ListenerRuleQueryStringConfig`?

  SourceIpConfig: `AWS::QuickSight::TemplateFilterSelectableValues`?

  Values: Listing<String>?
}

class `AWS::ElasticLoadBalancingV2::LoadBalancer` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElasticLoadBalancingV2::LoadBalancerProperties`?

  Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElasticLoadBalancingV2::LoadBalancerProperties` {
  IpAddressType: String?

  LoadBalancerAttributes: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?

  Name: String?

  Scheme: String?

  SecurityGroups: Listing<String>?

  SubnetMappings: Listing<`AWS::ElasticLoadBalancingV2::LoadBalancerSubnetMapping`>?

  Subnets: Listing<String>?

  Tags: Listing<Tag>?

  Type: String?
}

class `AWS::ElasticLoadBalancingV2::LoadBalancerSubnetMapping` {
  AllocationId: String?

  IPv6Address: String?

  PrivateIPv4Address: String?

  SubnetId: String
}

class `AWS::ElasticLoadBalancingV2::TargetGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElasticLoadBalancingV2::TargetGroupProperties`?

  Type: "AWS::ElasticLoadBalancingV2::TargetGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElasticLoadBalancingV2::TargetGroupProperties` {
  HealthCheckEnabled: Boolean?

  HealthCheckIntervalSeconds: Number?

  HealthCheckPath: String?

  HealthCheckPort: String?

  HealthCheckProtocol: String?

  HealthCheckTimeoutSeconds: Number?

  HealthyThresholdCount: Number?

  IpAddressType: String?

  Matcher: `AWS::ElasticLoadBalancingV2::TargetGroupMatcher`?

  Name: String?

  Port: Number?

  Protocol: String?

  ProtocolVersion: String?

  Tags: Listing<Tag>?

  TargetGroupAttributes: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?

  TargetType: String?

  Targets: Listing<`AWS::ElasticLoadBalancingV2::TargetGroupTargetDescription`>?

  UnhealthyThresholdCount: Number?

  VpcId: String?
}

class `AWS::ElasticLoadBalancingV2::TargetGroupMatcher` {
  GrpcCode: String?

  HttpCode: String?
}

class `AWS::ElasticLoadBalancingV2::TargetGroupTargetDescription` {
  AvailabilityZone: String?

  Id: String

  Port: Number?
}

class `AWS::ElasticLoadBalancingV2::TrustStore` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElasticLoadBalancingV2::TrustStoreProperties`?

  Type: "AWS::ElasticLoadBalancingV2::TrustStore"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElasticLoadBalancingV2::TrustStoreProperties` {
  CaCertificatesBundleS3Bucket: String?

  CaCertificatesBundleS3Key: String?

  CaCertificatesBundleS3ObjectVersion: String?

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::ElasticLoadBalancingV2::TrustStoreRevocation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ElasticLoadBalancingV2::TrustStoreRevocationProperties`?

  Type: "AWS::ElasticLoadBalancingV2::TrustStoreRevocation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ElasticLoadBalancingV2::TrustStoreRevocationProperties` {
  RevocationContents: Listing<`AWS::ElasticLoadBalancingV2::TrustStoreRevocationRevocationContent`>?

  TrustStoreArn: String?
}

class `AWS::ElasticLoadBalancingV2::TrustStoreRevocationRevocationContent` {
  RevocationType: String?

  S3Bucket: String?

  S3Key: String?

  S3ObjectVersion: String?
}

class `AWS::ElasticLoadBalancingV2::TrustStoreRevocationTrustStoreRevocation` {
  NumberOfRevokedEntries: Number?

  RevocationId: String?

  RevocationType: String?

  TrustStoreArn: String?
}

class `AWS::Elasticsearch::Domain` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Elasticsearch::DomainProperties`?

  Type: "AWS::Elasticsearch::Domain"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Elasticsearch::DomainProperties` {
  AccessPolicies: Dynamic?

  AdvancedOptions: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  AdvancedSecurityOptions: `AWS::Elasticsearch::DomainAdvancedSecurityOptionsInput`?

  CognitoOptions: `AWS::OpenSearchService::DomainCognitoOptions`?

  DomainEndpointOptions: `AWS::OpenSearchService::DomainDomainEndpointOptions`?

  DomainName: String?

  EBSOptions: `AWS::Elasticsearch::DomainEBSOptions`?

  ElasticsearchClusterConfig: `AWS::Elasticsearch::DomainElasticsearchClusterConfig`?

  ElasticsearchVersion: String?

  EncryptionAtRestOptions: `AWS::OpenSearchService::DomainEncryptionAtRestOptions`?

  LogPublishingOptions: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::OpenSearchService::DomainLogPublishingOption`>?

  NodeToNodeEncryptionOptions: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  SnapshotOptions: `AWS::OpenSearchService::DomainSnapshotOptions`?

  Tags: Listing<Tag>?

  VPCOptions: `AWS::OpenSearchService::DomainVPCOptions`?
}

class `AWS::Elasticsearch::DomainAdvancedSecurityOptionsInput` {
  AnonymousAuthEnabled: Boolean?

  Enabled: Boolean?

  InternalUserDatabaseEnabled: Boolean?

  MasterUserOptions: `AWS::OpenSearchService::DomainMasterUserOptions`?
}

class `AWS::OpenSearchService::DomainCognitoOptions` {
  Enabled: Boolean?

  IdentityPoolId: String?

  RoleArn: String?

  UserPoolId: String?
}

class `AWS::OpenSearchService::DomainDomainEndpointOptions` {
  CustomEndpoint: String?

  CustomEndpointCertificateArn: String?

  CustomEndpointEnabled: Boolean?

  EnforceHTTPS: Boolean?

  TLSSecurityPolicy: String?
}

class `AWS::Elasticsearch::DomainEBSOptions` {
  EBSEnabled: Boolean?

  Iops: Number?

  VolumeSize: Number?

  VolumeType: String?
}

class `AWS::Elasticsearch::DomainElasticsearchClusterConfig` {
  ColdStorageOptions: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  DedicatedMasterCount: Number?

  DedicatedMasterEnabled: Boolean?

  DedicatedMasterType: String?

  InstanceCount: Number?

  InstanceType: String?

  WarmCount: Number?

  WarmEnabled: Boolean?

  WarmType: String?

  ZoneAwarenessConfig: `AWS::OpenSearchService::DomainZoneAwarenessConfig`?

  ZoneAwarenessEnabled: Boolean?
}

class `AWS::OpenSearchService::DomainEncryptionAtRestOptions` {
  Enabled: Boolean?

  KmsKeyId: String?
}

class `AWS::OpenSearchService::DomainLogPublishingOption` {
  CloudWatchLogsLogGroupArn: String?

  Enabled: Boolean?
}

class `AWS::OpenSearchService::DomainMasterUserOptions` {
  MasterUserARN: String?

  MasterUserName: String?

  MasterUserPassword: String?
}

class `AWS::OpenSearchService::DomainSnapshotOptions` {
  AutomatedSnapshotStartHour: Number?
}

class `AWS::OpenSearchService::DomainZoneAwarenessConfig` {
  AvailabilityZoneCount: Number?
}

class `AWS::EntityResolution::IdMappingWorkflow` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EntityResolution::IdMappingWorkflowProperties`

  Type: "AWS::EntityResolution::IdMappingWorkflow"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EntityResolution::IdMappingWorkflowProperties` {
  Description: String?

  IdMappingTechniques: `AWS::EntityResolution::IdMappingWorkflowIdMappingTechniques`

  InputSourceConfig: Listing<`AWS::EntityResolution::IdMappingWorkflowIdMappingWorkflowInputSource`>

  OutputSourceConfig: Listing<`AWS::EntityResolution::IdMappingWorkflowIdMappingWorkflowOutputSource`>

  RoleArn: String

  Tags: Listing<Tag>?

  WorkflowName: String
}

class `AWS::EntityResolution::IdMappingWorkflowIdMappingTechniques` {
  IdMappingType: String?

  ProviderProperties: `AWS::EntityResolution::IdMappingWorkflowProviderProperties`?
}

class `AWS::EntityResolution::IdMappingWorkflowIdMappingWorkflowInputSource` {
  InputSourceARN: String

  SchemaArn: String
}

class `AWS::EntityResolution::IdMappingWorkflowIdMappingWorkflowOutputSource` {
  KMSArn: String?

  OutputS3Path: String
}

class `AWS::EntityResolution::MatchingWorkflowIntermediateSourceConfiguration` {
  IntermediateS3Path: String
}

class `AWS::EntityResolution::IdMappingWorkflowProviderProperties` {
  IntermediateSourceConfiguration: `AWS::EntityResolution::MatchingWorkflowIntermediateSourceConfiguration`?

  ProviderConfiguration: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ProviderServiceArn: String
}

class `AWS::EntityResolution::MatchingWorkflow` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EntityResolution::MatchingWorkflowProperties`

  Type: "AWS::EntityResolution::MatchingWorkflow"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EntityResolution::MatchingWorkflowProperties` {
  Description: String?

  InputSourceConfig: Listing<`AWS::EntityResolution::MatchingWorkflowInputSource`>

  OutputSourceConfig: Listing<`AWS::EntityResolution::MatchingWorkflowOutputSource`>

  ResolutionTechniques: `AWS::EntityResolution::MatchingWorkflowResolutionTechniques`

  RoleArn: String

  Tags: Listing<Tag>?

  WorkflowName: String
}

class `AWS::EntityResolution::MatchingWorkflowInputSource` {
  ApplyNormalization: Boolean?

  InputSourceARN: String

  SchemaArn: String
}

class `AWS::EntityResolution::MatchingWorkflowOutputAttribute` {
  Hashed: Boolean?

  Name: String
}

class `AWS::EntityResolution::MatchingWorkflowOutputSource` {
  ApplyNormalization: Boolean?

  KMSArn: String?

  Output: Listing<`AWS::EntityResolution::MatchingWorkflowOutputAttribute`>

  OutputS3Path: String
}

class `AWS::EntityResolution::MatchingWorkflowProviderProperties` {
  IntermediateSourceConfiguration: `AWS::EntityResolution::MatchingWorkflowIntermediateSourceConfiguration`?

  ProviderConfiguration: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ProviderServiceArn: String
}

class `AWS::EntityResolution::MatchingWorkflowResolutionTechniques` {
  ProviderProperties: `AWS::EntityResolution::MatchingWorkflowProviderProperties`?

  ResolutionType: String?

  RuleBasedProperties: `AWS::EntityResolution::MatchingWorkflowRuleBasedProperties`?
}

class `AWS::EntityResolution::MatchingWorkflowRule` {
  MatchingKeys: Listing<String>

  RuleName: String
}

class `AWS::EntityResolution::MatchingWorkflowRuleBasedProperties` {
  AttributeMatchingModel: String

  Rules: Listing<`AWS::EntityResolution::MatchingWorkflowRule`>
}

class `AWS::EntityResolution::SchemaMapping` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EntityResolution::SchemaMappingProperties`

  Type: "AWS::EntityResolution::SchemaMapping"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EntityResolution::SchemaMappingProperties` {
  Description: String?

  MappedInputFields: Listing<`AWS::EntityResolution::SchemaMappingSchemaInputAttribute`>

  SchemaName: String

  Tags: Listing<Tag>?
}

class `AWS::EntityResolution::SchemaMappingSchemaInputAttribute` {
  FieldName: String

  GroupName: String?

  MatchKey: String?

  SubType: String?

  Type: String
}

class `AWS::EventSchemas::Discoverer` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EventSchemas::DiscovererProperties`

  Type: "AWS::EventSchemas::Discoverer"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EventSchemas::DiscovererProperties` {
  CrossAccount: Boolean?

  Description: String?

  SourceArn: String

  Tags: Listing<Tag>?
}

class `AWS::EventSchemas::Registry` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EventSchemas::RegistryProperties`?

  Type: "AWS::EventSchemas::Registry"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EventSchemas::RegistryProperties` {
  Description: String?

  RegistryName: String?

  Tags: Listing<Tag>?
}

class `AWS::EventSchemas::RegistryPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EventSchemas::RegistryPolicyProperties`

  Type: "AWS::EventSchemas::RegistryPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EventSchemas::RegistryPolicyProperties` {
  Policy: Dynamic

  RegistryName: String

  RevisionId: String?
}

class `AWS::EventSchemas::Schema` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::EventSchemas::SchemaProperties`

  Type: "AWS::EventSchemas::Schema"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::EventSchemas::SchemaProperties` {
  Content: String

  Description: String?

  RegistryName: String

  SchemaName: String?

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::Events::ApiDestination` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Events::ApiDestinationProperties`

  Type: "AWS::Events::ApiDestination"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Events::ApiDestinationProperties` {
  ConnectionArn: String

  Description: String?

  HttpMethod: String

  InvocationEndpoint: String

  InvocationRateLimitPerSecond: Number?

  Name: String?
}

class `AWS::Events::Archive` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Events::ArchiveProperties`

  Type: "AWS::Events::Archive"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Events::ArchiveProperties` {
  ArchiveName: String?

  Description: String?

  EventPattern: Dynamic?

  RetentionDays: Number?

  SourceArn: String
}

class `AWS::Events::Connection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Events::ConnectionProperties`?

  Type: "AWS::Events::Connection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Events::ConnectionProperties` {
  AuthParameters: `AWS::Events::ConnectionAuthParameters`?

  AuthorizationType: String?

  Description: String?

  Name: String?
}

class `AWS::Events::ConnectionApiKeyAuthParameters` {
  ApiKeyName: String

  ApiKeyValue: String
}

class `AWS::Events::ConnectionAuthParameters` {
  ApiKeyAuthParameters: `AWS::Events::ConnectionApiKeyAuthParameters`?

  BasicAuthParameters: `AWS::Events::ConnectionBasicAuthParameters`?

  InvocationHttpParameters: `AWS::Events::ConnectionConnectionHttpParameters`?

  OAuthParameters: `AWS::Events::ConnectionOAuthParameters`?
}

class `AWS::Events::ConnectionClientParameters` {
  ClientID: String

  ClientSecret: String
}

class `AWS::Events::ConnectionConnectionHttpParameters` {
  BodyParameters: Listing<`AWS::Events::ConnectionParameter`>?

  HeaderParameters: Listing<`AWS::Events::ConnectionParameter`>?

  QueryStringParameters: Listing<`AWS::Events::ConnectionParameter`>?
}

class `AWS::Events::ConnectionOAuthParameters` {
  AuthorizationEndpoint: String

  ClientParameters: `AWS::Events::ConnectionClientParameters`

  HttpMethod: String

  OAuthHttpParameters: `AWS::Events::ConnectionConnectionHttpParameters`?
}

class `AWS::Events::ConnectionParameter` {
  IsValueSecret: Boolean?

  Key: String

  Value: String
}

class `AWS::Events::Endpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Events::EndpointProperties`

  Type: "AWS::Events::Endpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Events::EndpointProperties` {
  Description: String?

  EventBuses: Listing<`AWS::Events::EndpointEndpointEventBus`>

  Name: String?

  ReplicationConfig: `AWS::Events::EndpointReplicationConfig`?

  RoleArn: String?

  RoutingConfig: `AWS::Events::EndpointRoutingConfig`
}

class `AWS::Events::EndpointFailoverConfig` {
  Primary: `AWS::Events::EndpointPrimary`

  Secondary: `AWS::Events::EndpointSecondary`
}

class `AWS::Events::EndpointPrimary` {
  HealthCheck: String
}

class `AWS::Events::EndpointRoutingConfig` {
  FailoverConfig: `AWS::Events::EndpointFailoverConfig`
}

class `AWS::Events::EndpointSecondary` {
  Route: String
}

class `AWS::Events::EventBus` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Events::EventBusProperties`

  Type: "AWS::Events::EventBus"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Events::EventBusProperties` {
  EventSourceName: String?

  Name: String

  Policy: Dynamic?

  Tags: Listing<Tag>?
}

class `AWS::Events::EventBusPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Events::EventBusPolicyProperties`

  Type: "AWS::Events::EventBusPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Events::EventBusPolicyProperties` {
  Action: String?

  Condition: `AWS::Events::EventBusPolicyCondition`?

  EventBusName: String?

  Principal: String?

  Statement: Dynamic?

  StatementId: String
}

class `AWS::Events::Rule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Events::RuleProperties`?

  Type: "AWS::Events::Rule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Events::RuleProperties` {
  Description: String?

  EventBusName: String?

  EventPattern: Dynamic?

  Name: String?

  RoleArn: String?

  ScheduleExpression: String?

  State: String?

  Targets: Listing<`AWS::Events::RuleTarget`>?
}

class `AWS::Events::RuleAppSyncParameters` {
  GraphQLOperation: String
}

class `AWS::Pipes::PipeBatchArrayProperties` {
  Size: Number?
}

class `AWS::Events::RuleBatchParameters` {
  ArrayProperties: `AWS::Pipes::PipeBatchArrayProperties`?

  JobDefinition: String

  JobName: String

  RetryStrategy: `AWS::Pipes::PipeBatchRetryStrategy`?
}

class `AWS::Pipes::PipeBatchRetryStrategy` {
  Attempts: Number?
}

class `AWS::Events::RuleEcsParameters` {
  CapacityProviderStrategy: Listing<`AWS::Scheduler::ScheduleCapacityProviderStrategyItem`>?

  EnableECSManagedTags: Boolean?

  EnableExecuteCommand: Boolean?

  Group: String?

  LaunchType: String?

  NetworkConfiguration: `AWS::Events::RuleNetworkConfiguration`?

  PlacementConstraints: Listing<`AWS::Scheduler::SchedulePlacementConstraint`>?

  PlacementStrategies: Listing<`AWS::Scheduler::SchedulePlacementStrategy`>?

  PlatformVersion: String?

  PropagateTags: String?

  ReferenceId: String?

  TagList: Listing<Tag>?

  TaskCount: Number?

  TaskDefinitionArn: String
}

class `AWS::Pipes::PipePipeTargetHttpParameters` {
  HeaderParameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  PathParameterValues: Listing<String>?

  QueryStringParameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Events::RuleInputTransformer` {
  InputPathsMap: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  InputTemplate: String
}

class `AWS::Events::RuleKinesisParameters` {
  PartitionKeyPath: String
}

class `AWS::Events::RuleNetworkConfiguration` {
  AwsVpcConfiguration: `AWS::Scheduler::ScheduleAwsVpcConfiguration`?
}

class `AWS::Scheduler::SchedulePlacementConstraint` {
  Expression: String?

  Type: String?
}

class `AWS::Scheduler::SchedulePlacementStrategy` {
  Field: String?

  Type: String?
}

class `AWS::Events::RuleRedshiftDataParameters` {
  Database: String

  DbUser: String?

  SecretManagerArn: String?

  Sql: String?

  Sqls: Listing<String>?

  StatementName: String?

  WithEvent: Boolean?
}

class `AWS::Scheduler::ScheduleRetryPolicy` {
  MaximumEventAgeInSeconds: Number?

  MaximumRetryAttempts: Number?
}

class `AWS::Events::RuleRunCommandParameters` {
  RunCommandTargets: Listing<`AWS::SSMIncidents::ResponsePlanSsmParameter`>
}

class `AWS::SSMIncidents::ResponsePlanSsmParameter` {
  Key: String

  Values: Listing<String>
}

class `AWS::Events::RuleSageMakerPipelineParameters` {
  PipelineParameterList: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?
}

class `AWS::Events::RuleSqsParameters` {
  MessageGroupId: String
}

class `AWS::Events::RuleTarget` {
  AppSyncParameters: `AWS::Events::RuleAppSyncParameters`?

  Arn: String

  BatchParameters: `AWS::Events::RuleBatchParameters`?

  DeadLetterConfig: `AWS::Scheduler::ScheduleDeadLetterConfig`?

  EcsParameters: `AWS::Events::RuleEcsParameters`?

  HttpParameters: `AWS::Pipes::PipePipeTargetHttpParameters`?

  Id: String

  Input: String?

  InputPath: String?

  InputTransformer: `AWS::Events::RuleInputTransformer`?

  KinesisParameters: `AWS::Events::RuleKinesisParameters`?

  RedshiftDataParameters: `AWS::Events::RuleRedshiftDataParameters`?

  RetryPolicy: `AWS::Scheduler::ScheduleRetryPolicy`?

  RoleArn: String?

  RunCommandParameters: `AWS::Events::RuleRunCommandParameters`?

  SageMakerPipelineParameters: `AWS::Events::RuleSageMakerPipelineParameters`?

  SqsParameters: `AWS::Events::RuleSqsParameters`?
}

class `AWS::Evidently::Experiment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Evidently::ExperimentProperties`

  Type: "AWS::Evidently::Experiment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Evidently::ExperimentProperties` {
  Description: String?

  MetricGoals: Listing<`AWS::Evidently::ExperimentMetricGoalObject`>

  Name: String

  OnlineAbConfig: `AWS::Evidently::ExperimentOnlineAbConfigObject`

  Project: String

  RandomizationSalt: String?

  RemoveSegment: Boolean?

  RunningStatus: `AWS::Evidently::ExperimentRunningStatusObject`?

  SamplingRate: Number?

  Segment: String?

  Tags: Listing<Tag>?

  Treatments: Listing<`AWS::Evidently::ExperimentTreatmentObject`>
}

class `AWS::Evidently::ExperimentMetricGoalObject` {
  DesiredChange: String

  EntityIdKey: String

  EventPattern: String?

  MetricName: String

  UnitLabel: String?

  ValueKey: String
}

class `AWS::Evidently::ExperimentOnlineAbConfigObject` {
  ControlTreatmentName: String?

  TreatmentWeights: Listing<`AWS::Evidently::ExperimentTreatmentToWeight`>?
}

class `AWS::Evidently::ExperimentRunningStatusObject` {
  AnalysisCompleteTime: String?

  DesiredState: String?

  Reason: String?

  Status: String
}

class `AWS::Evidently::ExperimentTreatmentObject` {
  Description: String?

  Feature: String

  TreatmentName: String

  Variation: String
}

class `AWS::Evidently::ExperimentTreatmentToWeight` {
  SplitWeight: Number

  Treatment: String
}

class `AWS::Evidently::Feature` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Evidently::FeatureProperties`

  Type: "AWS::Evidently::Feature"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Evidently::FeatureProperties` {
  DefaultVariation: String?

  Description: String?

  EntityOverrides: Listing<`AWS::Evidently::FeatureEntityOverride`>?

  EvaluationStrategy: String?

  Name: String

  Project: String

  Tags: Listing<Tag>?

  Variations: Listing<`AWS::Evidently::FeatureVariationObject`>
}

class `AWS::Evidently::FeatureEntityOverride` {
  EntityId: String?

  Variation: String?
}

class `AWS::Evidently::FeatureVariationObject` {
  BooleanValue: Boolean?

  DoubleValue: Number?

  LongValue: Number?

  StringValue: String?

  VariationName: String
}

class `AWS::Evidently::Launch` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Evidently::LaunchProperties`

  Type: "AWS::Evidently::Launch"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Evidently::LaunchProperties` {
  Description: String?

  ExecutionStatus: `AWS::Evidently::LaunchExecutionStatusObject`?

  Groups: Listing<`AWS::Evidently::LaunchLaunchGroupObject`>

  MetricMonitors: Listing<`AWS::Evidently::LaunchMetricDefinitionObject`>?

  Name: String

  Project: String

  RandomizationSalt: String?

  ScheduledSplitsConfig: Listing<`AWS::Evidently::LaunchStepConfig`>

  Tags: Listing<Tag>?
}

class `AWS::Evidently::LaunchExecutionStatusObject` {
  DesiredState: String?

  Reason: String?

  Status: String
}

class `AWS::Evidently::LaunchGroupToWeight` {
  GroupName: String

  SplitWeight: Number
}

class `AWS::Evidently::LaunchLaunchGroupObject` {
  Description: String?

  Feature: String

  GroupName: String

  Variation: String
}

class `AWS::Evidently::LaunchMetricDefinitionObject` {
  EntityIdKey: String

  EventPattern: String?

  MetricName: String

  UnitLabel: String?

  ValueKey: String
}

class `AWS::Evidently::LaunchSegmentOverride` {
  EvaluationOrder: Number

  Segment: String

  Weights: Listing<`AWS::Evidently::LaunchGroupToWeight`>
}

class `AWS::Evidently::LaunchStepConfig` {
  GroupWeights: Listing<`AWS::Evidently::LaunchGroupToWeight`>

  SegmentOverrides: Listing<`AWS::Evidently::LaunchSegmentOverride`>?

  StartTime: String
}

class `AWS::Evidently::Project` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Evidently::ProjectProperties`

  Type: "AWS::Evidently::Project"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Evidently::ProjectProperties` {
  AppConfigResource: `AWS::Evidently::ProjectAppConfigResourceObject`?

  DataDelivery: `AWS::Evidently::ProjectDataDeliveryObject`?

  Description: String?

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::Evidently::ProjectAppConfigResourceObject` {
  ApplicationId: String

  EnvironmentId: String
}

class `AWS::Evidently::ProjectDataDeliveryObject` {
  LogGroup: String?

  S3: `AWS::FIS::ExperimentTemplateS3Configuration`?
}

class `AWS::FIS::ExperimentTemplateS3Configuration` {
  BucketName: String

  Prefix: String?
}

class `AWS::Evidently::Segment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Evidently::SegmentProperties`

  Type: "AWS::Evidently::Segment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Evidently::SegmentProperties` {
  Description: String?

  Name: String

  Pattern: String?

  Tags: Listing<Tag>?
}

class `AWS::FIS::ExperimentTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FIS::ExperimentTemplateProperties`

  Type: "AWS::FIS::ExperimentTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FIS::ExperimentTemplateProperties` {
  Actions: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::FIS::ExperimentTemplateExperimentTemplateAction`>?

  Description: String

  ExperimentOptions: `AWS::FIS::ExperimentTemplateExperimentTemplateExperimentOptions`?

  LogConfiguration: `AWS::FIS::ExperimentTemplateExperimentTemplateLogConfiguration`?

  RoleArn: String

  StopConditions: Listing<`AWS::FIS::ExperimentTemplateExperimentTemplateStopCondition`>

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>

  Targets: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::FIS::ExperimentTemplateExperimentTemplateTarget`>
}

class `AWS::FIS::ExperimentTemplateCloudWatchLogsConfiguration` {
  LogGroupArn: String
}

class `AWS::FIS::ExperimentTemplateExperimentTemplateAction` {
  ActionId: String

  Description: String?

  Parameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  StartAfter: Listing<String>?

  Targets: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::FIS::ExperimentTemplateExperimentTemplateExperimentOptions` {
  AccountTargeting: String?

  EmptyTargetResolutionMode: String?
}

class `AWS::FIS::ExperimentTemplateExperimentTemplateLogConfiguration` {
  CloudWatchLogsConfiguration: `AWS::FIS::ExperimentTemplateCloudWatchLogsConfiguration`?

  LogSchemaVersion: Number

  S3Configuration: `AWS::FIS::ExperimentTemplateS3Configuration`?
}

class `AWS::FIS::ExperimentTemplateExperimentTemplateStopCondition` {
  Source: String

  Value: String?
}

class `AWS::FIS::ExperimentTemplateExperimentTemplateTarget` {
  Filters: Listing<`AWS::FIS::ExperimentTemplateExperimentTemplateTargetFilter`>?

  Parameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ResourceArns: Listing<String>?

  ResourceTags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ResourceType: String

  SelectionMode: String
}

class `AWS::FIS::ExperimentTemplateExperimentTemplateTargetFilter` {
  Path: String

  Values: Listing<String>
}

class `AWS::FIS::TargetAccountConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FIS::TargetAccountConfigurationProperties`

  Type: "AWS::FIS::TargetAccountConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FIS::TargetAccountConfigurationProperties` {
  AccountId: String

  Description: String?

  ExperimentTemplateId: String

  RoleArn: String
}

class `AWS::FMS::NotificationChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FMS::NotificationChannelProperties`

  Type: "AWS::FMS::NotificationChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FMS::NotificationChannelProperties` {
  SnsRoleName: String

  SnsTopicArn: String
}

class `AWS::FMS::Policy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FMS::PolicyProperties`

  Type: "AWS::FMS::Policy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FMS::PolicyProperties` {
  DeleteAllPolicyResources: Boolean?

  ExcludeMap: `AWS::FMS::PolicyIEMap`?

  ExcludeResourceTags: Boolean

  IncludeMap: `AWS::FMS::PolicyIEMap`?

  PolicyDescription: String?

  PolicyName: String

  RemediationEnabled: Boolean

  ResourceSetIds: Listing<String>?

  ResourceTags: Listing<`AWS::Lex::BotSessionAttribute`>?

  ResourceType: String?

  ResourceTypeList: Listing<String>?

  ResourcesCleanUp: Boolean?

  SecurityServicePolicyData: `AWS::FMS::PolicySecurityServicePolicyData`

  Tags: Listing<Tag>?
}

class `AWS::FMS::PolicyIEMap` {
  ACCOUNT: Listing<String>?

  ORGUNIT: Listing<String>?
}

class `AWS::FMS::PolicyThirdPartyFirewallPolicy` {
  FirewallDeploymentModel: String
}

class `AWS::FMS::PolicyPolicyOption` {
  NetworkFirewallPolicy: `AWS::FMS::PolicyThirdPartyFirewallPolicy`?

  ThirdPartyFirewallPolicy: `AWS::FMS::PolicyThirdPartyFirewallPolicy`?
}

class `AWS::Lex::BotSessionAttribute` {
  Key: String

  Value: String?
}

class `AWS::FMS::PolicySecurityServicePolicyData` {
  ManagedServiceData: String?

  PolicyOption: `AWS::FMS::PolicyPolicyOption`?

  Type: String
}

class `AWS::FMS::ResourceSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FMS::ResourceSetProperties`

  Type: "AWS::FMS::ResourceSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FMS::ResourceSetProperties` {
  Description: String?

  Name: String

  ResourceTypeList: Listing<String>

  Resources: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::FSx::DataRepositoryAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FSx::DataRepositoryAssociationProperties`

  Type: "AWS::FSx::DataRepositoryAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FSx::DataRepositoryAssociationProperties` {
  BatchImportMetaDataOnCreate: Boolean?

  DataRepositoryPath: String

  FileSystemId: String

  FileSystemPath: String

  ImportedFileChunkSize: Number?

  S3: `AWS::FSx::DataRepositoryAssociationS3`?

  Tags: Listing<Tag>?
}

class `AWS::FSx::DataRepositoryAssociationAutoImportPolicy` {
  Events: Listing<String>
}

class `AWS::FSx::DataRepositoryAssociationS3` {
  AutoExportPolicy: `AWS::FSx::DataRepositoryAssociationAutoImportPolicy`?

  AutoImportPolicy: `AWS::FSx::DataRepositoryAssociationAutoImportPolicy`?
}

class `AWS::FSx::FileSystem` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FSx::FileSystemProperties`

  Type: "AWS::FSx::FileSystem"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FSx::FileSystemProperties` {
  BackupId: String?

  FileSystemType: String

  FileSystemTypeVersion: String?

  KmsKeyId: String?

  LustreConfiguration: `AWS::FSx::FileSystemLustreConfiguration`?

  OntapConfiguration: `AWS::FSx::FileSystemOntapConfiguration`?

  OpenZFSConfiguration: `AWS::FSx::FileSystemOpenZFSConfiguration`?

  SecurityGroupIds: Listing<String>?

  StorageCapacity: Number?

  StorageType: String?

  SubnetIds: Listing<String>

  Tags: Listing<Tag>?

  WindowsConfiguration: `AWS::FSx::FileSystemWindowsConfiguration`?
}

class `AWS::FSx::FileSystemAuditLogConfiguration` {
  AuditLogDestination: String?

  FileAccessAuditLogLevel: String

  FileShareAccessAuditLogLevel: String
}

class `AWS::FSx::FileSystemClientConfigurations` {
  Clients: String?

  Options: Listing<String>?
}

class `AWS::FSx::FileSystemDiskIopsConfiguration` {
  Iops: Number?

  Mode: String?
}

class `AWS::FSx::FileSystemLustreConfiguration` {
  AutoImportPolicy: String?

  AutomaticBackupRetentionDays: Number?

  CopyTagsToBackups: Boolean?

  DailyAutomaticBackupStartTime: String?

  DataCompressionType: String?

  DeploymentType: String?

  DriveCacheType: String?

  ExportPath: String?

  ImportPath: String?

  ImportedFileChunkSize: Number?

  PerUnitStorageThroughput: Number?

  WeeklyMaintenanceStartTime: String?
}

class `AWS::FSx::FileSystemNfsExports` {
  ClientConfigurations: Listing<`AWS::FSx::FileSystemClientConfigurations`>?
}

class `AWS::FSx::FileSystemOntapConfiguration` {
  AutomaticBackupRetentionDays: Number?

  DailyAutomaticBackupStartTime: String?

  DeploymentType: String

  DiskIopsConfiguration: `AWS::FSx::FileSystemDiskIopsConfiguration`?

  EndpointIpAddressRange: String?

  FsxAdminPassword: String?

  HAPairs: Number?

  PreferredSubnetId: String?

  RouteTableIds: Listing<String>?

  ThroughputCapacity: Number?

  ThroughputCapacityPerHAPair: Number?

  WeeklyMaintenanceStartTime: String?
}

class `AWS::FSx::FileSystemOpenZFSConfiguration` {
  AutomaticBackupRetentionDays: Number?

  CopyTagsToBackups: Boolean?

  CopyTagsToVolumes: Boolean?

  DailyAutomaticBackupStartTime: String?

  DeploymentType: String

  DiskIopsConfiguration: `AWS::FSx::FileSystemDiskIopsConfiguration`?

  EndpointIpAddressRange: String?

  Options: Listing<String>?

  PreferredSubnetId: String?

  RootVolumeConfiguration: `AWS::FSx::FileSystemRootVolumeConfiguration`?

  RouteTableIds: Listing<String>?

  ThroughputCapacity: Number?

  WeeklyMaintenanceStartTime: String?
}

class `AWS::FSx::FileSystemRootVolumeConfiguration` {
  CopyTagsToSnapshots: Boolean?

  DataCompressionType: String?

  NfsExports: Listing<`AWS::FSx::FileSystemNfsExports`>?

  ReadOnly: Boolean?

  RecordSizeKiB: Number?

  UserAndGroupQuotas: Listing<`AWS::FSx::FileSystemUserAndGroupQuotas`>?
}

class `AWS::FSx::StorageVirtualMachineSelfManagedActiveDirectoryConfiguration` {
  DnsIps: Listing<String>?

  DomainName: String?

  FileSystemAdministratorsGroup: String?

  OrganizationalUnitDistinguishedName: String?

  Password: String?

  UserName: String?
}

class `AWS::FSx::FileSystemUserAndGroupQuotas` {
  Id: Number?

  StorageCapacityQuotaGiB: Number?

  Type: String?
}

class `AWS::FSx::FileSystemWindowsConfiguration` {
  ActiveDirectoryId: String?

  Aliases: Listing<String>?

  AuditLogConfiguration: `AWS::FSx::FileSystemAuditLogConfiguration`?

  AutomaticBackupRetentionDays: Number?

  CopyTagsToBackups: Boolean?

  DailyAutomaticBackupStartTime: String?

  DeploymentType: String?

  DiskIopsConfiguration: `AWS::FSx::FileSystemDiskIopsConfiguration`?

  PreferredSubnetId: String?

  SelfManagedActiveDirectoryConfiguration: `AWS::FSx::StorageVirtualMachineSelfManagedActiveDirectoryConfiguration`?

  ThroughputCapacity: Number

  WeeklyMaintenanceStartTime: String?
}

class `AWS::FSx::Snapshot` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FSx::SnapshotProperties`

  Type: "AWS::FSx::Snapshot"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FSx::SnapshotProperties` {
  Name: String

  Tags: Listing<Tag>?

  VolumeId: String
}

class `AWS::FSx::StorageVirtualMachine` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FSx::StorageVirtualMachineProperties`

  Type: "AWS::FSx::StorageVirtualMachine"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FSx::StorageVirtualMachineProperties` {
  ActiveDirectoryConfiguration: `AWS::FSx::StorageVirtualMachineActiveDirectoryConfiguration`?

  FileSystemId: String

  Name: String

  RootVolumeSecurityStyle: String?

  SvmAdminPassword: String?

  Tags: Listing<Tag>?
}

class `AWS::FSx::StorageVirtualMachineActiveDirectoryConfiguration` {
  NetBiosName: String?

  SelfManagedActiveDirectoryConfiguration: `AWS::FSx::StorageVirtualMachineSelfManagedActiveDirectoryConfiguration`?
}

class `AWS::FSx::Volume` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FSx::VolumeProperties`

  Type: "AWS::FSx::Volume"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FSx::VolumeProperties` {
  BackupId: String?

  Name: String

  OntapConfiguration: `AWS::FSx::VolumeOntapConfiguration`?

  OpenZFSConfiguration: `AWS::FSx::VolumeOpenZFSConfiguration`?

  Tags: Listing<Tag>?

  VolumeType: String?
}

class `AWS::FSx::VolumeAggregateConfiguration` {
  Aggregates: Listing<String>?

  ConstituentsPerAggregate: Number?
}

class `AWS::FSx::VolumeRetentionPeriod` {
  Type: String

  Value: Number?
}

class `AWS::FSx::VolumeClientConfigurations` {
  Clients: String

  Options: Listing<String>
}

class `AWS::FSx::VolumeNfsExports` {
  ClientConfigurations: Listing<`AWS::FSx::VolumeClientConfigurations`>
}

class `AWS::FSx::VolumeOntapConfiguration` {
  AggregateConfiguration: `AWS::FSx::VolumeAggregateConfiguration`?

  CopyTagsToBackups: String?

  JunctionPath: String?

  OntapVolumeType: String?

  SecurityStyle: String?

  SizeInBytes: String?

  SizeInMegabytes: String?

  SnaplockConfiguration: `AWS::FSx::VolumeSnaplockConfiguration`?

  SnapshotPolicy: String?

  StorageEfficiencyEnabled: String?

  StorageVirtualMachineId: String

  TieringPolicy: `AWS::FSx::VolumeTieringPolicy`?

  VolumeStyle: String?
}

class `AWS::FSx::VolumeOpenZFSConfiguration` {
  CopyTagsToSnapshots: Boolean?

  DataCompressionType: String?

  NfsExports: Listing<`AWS::FSx::VolumeNfsExports`>?

  Options: Listing<String>?

  OriginSnapshot: `AWS::FSx::VolumeOriginSnapshot`?

  ParentVolumeId: String

  ReadOnly: Boolean?

  RecordSizeKiB: Number?

  StorageCapacityQuotaGiB: Number?

  StorageCapacityReservationGiB: Number?

  UserAndGroupQuotas: Listing<`AWS::FSx::VolumeUserAndGroupQuotas`>?
}

class `AWS::FSx::VolumeOriginSnapshot` {
  CopyStrategy: String

  SnapshotARN: String
}

class `AWS::FSx::VolumeSnaplockConfiguration` {
  AuditLogVolume: String?

  AutocommitPeriod: `AWS::FSx::VolumeRetentionPeriod`?

  PrivilegedDelete: String?

  RetentionPeriod: `AWS::FSx::VolumeSnaplockRetentionPeriod`?

  SnaplockType: String

  VolumeAppendModeEnabled: String?
}

class `AWS::FSx::VolumeSnaplockRetentionPeriod` {
  DefaultRetention: `AWS::FSx::VolumeRetentionPeriod`

  MaximumRetention: `AWS::FSx::VolumeRetentionPeriod`

  MinimumRetention: `AWS::FSx::VolumeRetentionPeriod`
}

class `AWS::FSx::VolumeTieringPolicy` {
  CoolingPeriod: Number?

  Name: String?
}

class `AWS::FSx::VolumeUserAndGroupQuotas` {
  Id: Number

  StorageCapacityQuotaGiB: Number

  Type: String
}

class `AWS::FinSpace::Environment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FinSpace::EnvironmentProperties`

  Type: "AWS::FinSpace::Environment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FinSpace::EnvironmentProperties` {
  Description: String?

  FederationMode: String?

  FederationParameters: `AWS::FinSpace::EnvironmentFederationParameters`?

  KmsKeyId: String?

  Name: String

  SuperuserParameters: `AWS::FinSpace::EnvironmentSuperuserParameters`?

  Tags: Listing<Tag>?
}

class `AWS::FinSpace::EnvironmentFederationParameters` {
  ApplicationCallBackURL: String?

  AttributeMap: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?

  FederationProviderName: String?

  FederationURN: String?

  SamlMetadataDocument: String?

  SamlMetadataURL: String?
}

class `AWS::FinSpace::EnvironmentSuperuserParameters` {
  EmailAddress: String?

  FirstName: String?

  LastName: String?
}

class `AWS::Forecast::Dataset` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Forecast::DatasetProperties`

  Type: "AWS::Forecast::Dataset"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Forecast::DatasetProperties` {
  DataFrequency: String?

  DatasetName: String

  DatasetType: String

  Domain: String

  EncryptionConfig: `AWS::Forecast::DatasetEncryptionConfig`?

  Schema: `AWS::Forecast::DatasetSchema`

  Tags: Listing<Tag>?
}

class `AWS::Forecast::DatasetAttributesItems` {
  AttributeName: String?

  AttributeType: String?
}

class `AWS::Forecast::DatasetEncryptionConfig` {
  KmsKeyArn: String?

  RoleArn: String?
}

class `AWS::Forecast::DatasetSchema` {
  Attributes: Listing<`AWS::Forecast::DatasetAttributesItems`>?
}

class `AWS::Forecast::DatasetGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Forecast::DatasetGroupProperties`

  Type: "AWS::Forecast::DatasetGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Forecast::DatasetGroupProperties` {
  DatasetArns: Listing<String>?

  DatasetGroupName: String

  Domain: String

  Tags: Listing<Tag>?
}

class `AWS::FraudDetector::Detector` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FraudDetector::DetectorProperties`

  Type: "AWS::FraudDetector::Detector"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FraudDetector::DetectorProperties` {
  AssociatedModels: Listing<`AWS::Scheduler::ScheduleDeadLetterConfig`>?

  Description: String?

  DetectorId: String

  DetectorVersionStatus: String?

  EventType: `AWS::FraudDetector::DetectorEventType`

  RuleExecutionMode: String?

  Rules: Listing<`AWS::FraudDetector::DetectorRule`>

  Tags: Listing<Tag>?
}

class `AWS::FraudDetector::EventTypeLabel` {
  Arn: String?

  CreatedTime: String?

  Description: String?

  Inline: Boolean?

  LastUpdatedTime: String?

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::FraudDetector::DetectorEventType` {
  Arn: String?

  CreatedTime: String?

  Description: String?

  EntityTypes: Listing<`AWS::FraudDetector::EventTypeLabel`>?

  EventVariables: Listing<`AWS::FraudDetector::EventTypeEventVariable`>?

  Inline: Boolean?

  Labels: Listing<`AWS::FraudDetector::EventTypeLabel`>?

  LastUpdatedTime: String?

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::FraudDetector::EventTypeEventVariable` {
  Arn: String?

  CreatedTime: String?

  DataSource: String?

  DataType: String?

  DefaultValue: String?

  Description: String?

  Inline: Boolean?

  LastUpdatedTime: String?

  Name: String?

  Tags: Listing<Tag>?

  VariableType: String?
}

class `AWS::FraudDetector::DetectorRule` {
  Arn: String?

  CreatedTime: String?

  Description: String?

  DetectorId: String?

  Expression: String?

  Language: String?

  LastUpdatedTime: String?

  Outcomes: Listing<`AWS::FraudDetector::EventTypeLabel`>?

  RuleId: String?

  RuleVersion: String?

  Tags: Listing<Tag>?
}

class `AWS::FraudDetector::EntityType` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceDiscovery::HttpNamespaceProperties`

  Type: "AWS::FraudDetector::EntityType"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceDiscovery::HttpNamespaceProperties` {
  Description: String?

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::FraudDetector::EventType` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FraudDetector::EventTypeProperties`

  Type: "AWS::FraudDetector::EventType"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FraudDetector::EventTypeProperties` {
  Description: String?

  EntityTypes: Listing<`AWS::FraudDetector::EventTypeLabel`>

  EventVariables: Listing<`AWS::FraudDetector::EventTypeEventVariable`>

  Labels: Listing<`AWS::FraudDetector::EventTypeLabel`>

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::FraudDetector::Label` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceDiscovery::HttpNamespaceProperties`

  Type: "AWS::FraudDetector::Label"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FraudDetector::List` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FraudDetector::ListProperties`

  Type: "AWS::FraudDetector::List"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FraudDetector::ListProperties` {
  Description: String?

  Elements: Listing<String>?

  Name: String

  Tags: Listing<Tag>?

  VariableType: String?
}

class `AWS::FraudDetector::Outcome` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceDiscovery::HttpNamespaceProperties`

  Type: "AWS::FraudDetector::Outcome"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FraudDetector::Variable` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::FraudDetector::VariableProperties`

  Type: "AWS::FraudDetector::Variable"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::FraudDetector::VariableProperties` {
  DataSource: String

  DataType: String

  DefaultValue: String

  Description: String?

  Name: String

  Tags: Listing<Tag>?

  VariableType: String?
}

class `AWS::GameLift::Alias` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GameLift::AliasProperties`

  Type: "AWS::GameLift::Alias"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GameLift::AliasProperties` {
  Description: String?

  Name: String

  RoutingStrategy: `AWS::GameLift::AliasRoutingStrategy`
}

class `AWS::GameLift::AliasRoutingStrategy` {
  FleetId: String?

  Message: String?

  Type: String
}

class `AWS::GameLift::Build` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GameLift::BuildProperties`?

  Type: "AWS::GameLift::Build"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GameLift::BuildProperties` {
  Name: String?

  OperatingSystem: String?

  ServerSdkVersion: String?

  StorageLocation: `AWS::GameLift::ScriptS3Location`?

  Version: String?
}

class `AWS::GameLift::ScriptS3Location` {
  Bucket: String

  Key: String

  ObjectVersion: String?

  RoleArn: String
}

class `AWS::GameLift::Fleet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GameLift::FleetProperties`

  Type: "AWS::GameLift::Fleet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GameLift::FleetProperties` {
  AnywhereConfiguration: `AWS::GameLift::FleetAnywhereConfiguration`?

  ApplyCapacity: String?

  BuildId: String?

  CertificateConfiguration: `AWS::GameLift::FleetCertificateConfiguration`?

  ComputeType: String?

  Description: String?

  DesiredEC2Instances: Number?

  EC2InboundPermissions: Listing<`AWS::GameLift::FleetIpPermission`>?

  EC2InstanceType: String?

  FleetType: String?

  InstanceRoleARN: String?

  InstanceRoleCredentialsProvider: String?

  Locations: Listing<`AWS::GameLift::FleetLocationConfiguration`>?

  MaxSize: Number?

  MetricGroups: Listing<String>?

  MinSize: Number?

  Name: String

  NewGameSessionProtectionPolicy: String?

  PeerVpcAwsAccountId: String?

  PeerVpcId: String?

  ResourceCreationLimitPolicy: `AWS::GameLift::FleetResourceCreationLimitPolicy`?

  RuntimeConfiguration: `AWS::GameLift::FleetRuntimeConfiguration`?

  ScalingPolicies: Listing<`AWS::GameLift::FleetScalingPolicy`>?

  ScriptId: String?
}

class `AWS::GameLift::FleetAnywhereConfiguration` {
  Cost: String
}

class `AWS::GameLift::FleetCertificateConfiguration` {
  CertificateType: String
}

class `AWS::GameLift::FleetIpPermission` {
  FromPort: Number

  IpRange: String

  Protocol: String

  ToPort: Number
}

class `AWS::GameLift::FleetLocationCapacity` {
  DesiredEC2Instances: Number

  MaxSize: Number

  MinSize: Number
}

class `AWS::GameLift::FleetLocationConfiguration` {
  Location: String

  LocationCapacity: `AWS::GameLift::FleetLocationCapacity`?
}

class `AWS::GameLift::FleetResourceCreationLimitPolicy` {
  NewGameSessionsPerCreator: Number?

  PolicyPeriodInMinutes: Number?
}

class `AWS::GameLift::FleetRuntimeConfiguration` {
  GameSessionActivationTimeoutSeconds: Number?

  MaxConcurrentGameSessionActivations: Number?

  ServerProcesses: Listing<`AWS::GameLift::FleetServerProcess`>?
}

class `AWS::GameLift::FleetScalingPolicy` {
  ComparisonOperator: String?

  EvaluationPeriods: Number?

  Location: String?

  MetricName: String

  Name: String

  PolicyType: String?

  ScalingAdjustment: Number?

  ScalingAdjustmentType: String?

  Status: String?

  TargetConfiguration: `AWS::GameLift::GameServerGroupTargetTrackingConfiguration`?

  Threshold: Number?

  UpdateStatus: String?
}

class `AWS::GameLift::FleetServerProcess` {
  ConcurrentExecutions: Number

  LaunchPath: String

  Parameters: String?
}

class `AWS::GameLift::GameServerGroupTargetTrackingConfiguration` {
  TargetValue: Number
}

class `AWS::GameLift::GameServerGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GameLift::GameServerGroupProperties`

  Type: "AWS::GameLift::GameServerGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GameLift::GameServerGroupProperties` {
  AutoScalingPolicy: `AWS::GameLift::GameServerGroupAutoScalingPolicy`?

  BalancingStrategy: String?

  DeleteOption: String?

  GameServerGroupName: String

  GameServerProtectionPolicy: String?

  InstanceDefinitions: Listing<`AWS::GameLift::GameServerGroupInstanceDefinition`>

  LaunchTemplate: `AWS::GameLift::GameServerGroupLaunchTemplate`?

  MaxSize: Number?

  MinSize: Number?

  RoleArn: String

  Tags: Listing<Tag>?

  VpcSubnets: Listing<String>?
}

class `AWS::GameLift::GameServerGroupAutoScalingPolicy` {
  EstimatedInstanceWarmup: Number?

  TargetTrackingConfiguration: `AWS::GameLift::GameServerGroupTargetTrackingConfiguration`
}

class `AWS::GameLift::GameServerGroupInstanceDefinition` {
  InstanceType: String

  WeightedCapacity: String?
}

class `AWS::GameLift::GameSessionQueue` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GameLift::GameSessionQueueProperties`

  Type: "AWS::GameLift::GameSessionQueue"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GameLift::GameSessionQueueProperties` {
  CustomEventData: String?

  Destinations: Listing<`AWS::GameLift::GameSessionQueueGameSessionQueueDestination`>?

  FilterConfiguration: `AWS::GameLift::GameSessionQueueFilterConfiguration`?

  Name: String

  NotificationTarget: String?

  PlayerLatencyPolicies: Listing<`AWS::GameLift::GameSessionQueuePlayerLatencyPolicy`>?

  PriorityConfiguration: `AWS::GameLift::GameSessionQueuePriorityConfiguration`?

  Tags: Listing<Tag>?

  TimeoutInSeconds: Number?
}

class `AWS::GameLift::GameSessionQueueFilterConfiguration` {
  AllowedLocations: Listing<String>?
}

class `AWS::GameLift::GameSessionQueueGameSessionQueueDestination` {
  DestinationArn: String?
}

class `AWS::GameLift::GameSessionQueuePlayerLatencyPolicy` {
  MaximumIndividualPlayerLatencyMilliseconds: Number?

  PolicyDurationSeconds: Number?
}

class `AWS::GameLift::GameSessionQueuePriorityConfiguration` {
  LocationOrder: Listing<String>?

  PriorityOrder: Listing<String>?
}

class `AWS::GameLift::Location` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GameLift::LocationProperties`

  Type: "AWS::GameLift::Location"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GameLift::LocationProperties` {
  LocationName: String

  Tags: Listing<Tag>?
}

class `AWS::GameLift::MatchmakingConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GameLift::MatchmakingConfigurationProperties`

  Type: "AWS::GameLift::MatchmakingConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GameLift::MatchmakingConfigurationProperties` {
  AcceptanceRequired: Boolean

  AcceptanceTimeoutSeconds: Number?

  AdditionalPlayerCount: Number?

  BackfillMode: String?

  CreationTime: String?

  CustomEventData: String?

  Description: String?

  FlexMatchMode: String?

  GameProperties: Listing<Tag>?

  GameSessionData: String?

  GameSessionQueueArns: Listing<String>?

  Name: String

  NotificationTarget: String?

  RequestTimeoutSeconds: Number

  RuleSetArn: String?

  RuleSetName: String

  Tags: Listing<Tag>?
}

class `AWS::GameLift::MatchmakingRuleSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GameLift::MatchmakingRuleSetProperties`

  Type: "AWS::GameLift::MatchmakingRuleSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GameLift::MatchmakingRuleSetProperties` {
  Name: String

  RuleSetBody: String

  Tags: Listing<Tag>?
}

class `AWS::GameLift::Script` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GameLift::ScriptProperties`

  Type: "AWS::GameLift::Script"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GameLift::ScriptProperties` {
  Name: String?

  StorageLocation: `AWS::GameLift::ScriptS3Location`

  Tags: Listing<Tag>?

  Version: String?
}

class `AWS::GlobalAccelerator::Accelerator` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GlobalAccelerator::AcceleratorProperties`

  Type: "AWS::GlobalAccelerator::Accelerator"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GlobalAccelerator::AcceleratorProperties` {
  Enabled: Boolean?

  IpAddressType: String?

  IpAddresses: Listing<String>?

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::GlobalAccelerator::EndpointGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GlobalAccelerator::EndpointGroupProperties`

  Type: "AWS::GlobalAccelerator::EndpointGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GlobalAccelerator::EndpointGroupProperties` {
  EndpointConfigurations: Listing<`AWS::GlobalAccelerator::EndpointGroupEndpointConfiguration`>?

  EndpointGroupRegion: String

  HealthCheckIntervalSeconds: Number?

  HealthCheckPath: String?

  HealthCheckPort: Number?

  HealthCheckProtocol: String?

  ListenerArn: String

  PortOverrides: Listing<`AWS::GlobalAccelerator::EndpointGroupPortOverride`>?

  ThresholdCount: Number?

  TrafficDialPercentage: Number?
}

class `AWS::GlobalAccelerator::EndpointGroupEndpointConfiguration` {
  AttachmentArn: String?

  ClientIPPreservationEnabled: Boolean?

  EndpointId: String

  Weight: Number?
}

class `AWS::GlobalAccelerator::EndpointGroupPortOverride` {
  EndpointPort: Number

  ListenerPort: Number
}

class `AWS::GlobalAccelerator::Listener` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GlobalAccelerator::ListenerProperties`

  Type: "AWS::GlobalAccelerator::Listener"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GlobalAccelerator::ListenerProperties` {
  AcceleratorArn: String

  ClientAffinity: String?

  PortRanges: Listing<`AWS::NetworkFirewall::TLSInspectionConfigurationPortRange`>

  Protocol: String
}

class `AWS::Glue::Classifier` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::ClassifierProperties`?

  Type: "AWS::Glue::Classifier"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::ClassifierProperties` {
  CsvClassifier: `AWS::Glue::ClassifierCsvClassifier`?

  GrokClassifier: `AWS::Glue::ClassifierGrokClassifier`?

  JsonClassifier: `AWS::Glue::ClassifierJsonClassifier`?

  XMLClassifier: `AWS::Glue::ClassifierXMLClassifier`?
}

class `AWS::Glue::ClassifierCsvClassifier` {
  AllowSingleColumn: Boolean?

  ContainsCustomDatatype: Listing<String>?

  ContainsHeader: String?

  CustomDatatypeConfigured: Boolean?

  Delimiter: String?

  DisableValueTrimming: Boolean?

  Header: Listing<String>?

  Name: String?

  QuoteSymbol: String?
}

class `AWS::Glue::ClassifierGrokClassifier` {
  Classification: String

  CustomPatterns: String?

  GrokPattern: String

  Name: String?
}

class `AWS::Glue::ClassifierJsonClassifier` {
  JsonPath: String

  Name: String?
}

class `AWS::Glue::ClassifierXMLClassifier` {
  Classification: String

  Name: String?

  RowTag: String
}

class `AWS::Glue::Connection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::ConnectionProperties`

  Type: "AWS::Glue::Connection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::ConnectionProperties` {
  CatalogId: String

  ConnectionInput: `AWS::Glue::ConnectionConnectionInput`
}

class `AWS::Glue::ConnectionConnectionInput` {
  ConnectionProperties: Dynamic?

  ConnectionType: String

  Description: String?

  MatchCriteria: Listing<String>?

  Name: String?

  PhysicalConnectionRequirements: `AWS::Glue::ConnectionPhysicalConnectionRequirements`?
}

class `AWS::Glue::ConnectionPhysicalConnectionRequirements` {
  AvailabilityZone: String?

  SecurityGroupIdList: Listing<String>?

  SubnetId: String?
}

class `AWS::Glue::Crawler` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::CrawlerProperties`

  Type: "AWS::Glue::Crawler"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::CrawlerProperties` {
  Classifiers: Listing<String>?

  Configuration: String?

  CrawlerSecurityConfiguration: String?

  DatabaseName: String?

  Description: String?

  Name: String?

  RecrawlPolicy: `AWS::Glue::CrawlerRecrawlPolicy`?

  Role: String

  Schedule: `AWS::Glue::CrawlerSchedule`?

  SchemaChangePolicy: `AWS::Glue::CrawlerSchemaChangePolicy`?

  TablePrefix: String?

  Tags: Dynamic?

  Targets: `AWS::Glue::CrawlerTargets`
}

class `AWS::Glue::CrawlerCatalogTarget` {
  ConnectionName: String?

  DatabaseName: String?

  DlqEventQueueArn: String?

  EventQueueArn: String?

  Tables: Listing<String>?
}

class `AWS::Glue::CrawlerDeltaTarget` {
  ConnectionName: String?

  CreateNativeDeltaTable: Boolean?

  DeltaTables: Listing<String>?

  WriteManifest: Boolean?
}

class `AWS::Glue::CrawlerIcebergTarget` {
  ConnectionName: String?

  Exclusions: Listing<String>?

  MaximumTraversalDepth: Number?

  Paths: Listing<String>?
}

class `AWS::Glue::CrawlerJdbcTarget` {
  ConnectionName: String?

  Exclusions: Listing<String>?

  Path: String?
}

class `AWS::Glue::CrawlerMongoDBTarget` {
  ConnectionName: String?

  Path: String?
}

class `AWS::Glue::CrawlerRecrawlPolicy` {
  RecrawlBehavior: String?
}

class `AWS::Glue::CrawlerS3Target` {
  ConnectionName: String?

  DlqEventQueueArn: String?

  EventQueueArn: String?

  Exclusions: Listing<String>?

  Path: String?

  SampleSize: Number?
}

class `AWS::Glue::CrawlerSchedule` {
  ScheduleExpression: String?
}

class `AWS::Glue::CrawlerSchemaChangePolicy` {
  DeleteBehavior: String?

  UpdateBehavior: String?
}

class `AWS::Glue::CrawlerTargets` {
  CatalogTargets: Listing<`AWS::Glue::CrawlerCatalogTarget`>?

  DeltaTargets: Listing<`AWS::Glue::CrawlerDeltaTarget`>?

  DynamoDBTargets: Listing<`AWS::QuickSight::TemplateEntity`>?

  IcebergTargets: Listing<`AWS::Glue::CrawlerIcebergTarget`>?

  JdbcTargets: Listing<`AWS::Glue::CrawlerJdbcTarget`>?

  MongoDBTargets: Listing<`AWS::Glue::CrawlerMongoDBTarget`>?

  S3Targets: Listing<`AWS::Glue::CrawlerS3Target`>?
}

class `AWS::Glue::CustomEntityType` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::CustomEntityTypeProperties`?

  Type: "AWS::Glue::CustomEntityType"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::CustomEntityTypeProperties` {
  ContextWords: Listing<String>?

  Name: String?

  RegexString: String?

  Tags: Dynamic?
}

class `AWS::Glue::DataCatalogEncryptionSettings` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::DataCatalogEncryptionSettingsProperties`

  Type: "AWS::Glue::DataCatalogEncryptionSettings"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::DataCatalogEncryptionSettingsProperties` {
  CatalogId: String

  DataCatalogEncryptionSettings: `AWS::Glue::DataCatalogEncryptionSettingsDataCatalogEncryptionSettings`
}

class `AWS::Glue::DataCatalogEncryptionSettingsConnectionPasswordEncryption` {
  KmsKeyId: String?

  ReturnConnectionPasswordEncrypted: Boolean?
}

class `AWS::Glue::DataCatalogEncryptionSettingsDataCatalogEncryptionSettings` {
  ConnectionPasswordEncryption: `AWS::Glue::DataCatalogEncryptionSettingsConnectionPasswordEncryption`?

  EncryptionAtRest: `AWS::Glue::DataCatalogEncryptionSettingsEncryptionAtRest`?
}

class `AWS::Glue::DataCatalogEncryptionSettingsEncryptionAtRest` {
  CatalogEncryptionMode: String?

  SseAwsKmsKeyId: String?
}

class `AWS::Glue::DataQualityRuleset` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::DataQualityRulesetProperties`?

  Type: "AWS::Glue::DataQualityRuleset"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::DataQualityRulesetProperties` {
  ClientToken: String?

  Description: String?

  Name: String?

  Ruleset: String?

  Tags: Dynamic?

  TargetTable: `AWS::Glue::DataQualityRulesetDataQualityTargetTable`?
}

class `AWS::Glue::DataQualityRulesetDataQualityTargetTable` {
  DatabaseName: String?

  TableName: String?
}

class `AWS::Glue::Database` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::DatabaseProperties`

  Type: "AWS::Glue::Database"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::DatabaseProperties` {
  CatalogId: String

  DatabaseInput: `AWS::Glue::DatabaseDatabaseInput`
}

class `AWS::LakeFormation::PrincipalPermissionsDataLakePrincipal` {
  DataLakePrincipalIdentifier: String?
}

class `AWS::Glue::DatabaseDatabaseIdentifier` {
  CatalogId: String?

  DatabaseName: String?

  Region: String?
}

class `AWS::Glue::DatabaseDatabaseInput` {
  CreateTableDefaultPermissions: Listing<`AWS::Glue::DatabasePrincipalPrivileges`>?

  Description: String?

  FederatedDatabase: `AWS::Glue::DatabaseFederatedDatabase`?

  LocationUri: String?

  Name: String?

  Parameters: Dynamic?

  TargetDatabase: `AWS::Glue::DatabaseDatabaseIdentifier`?
}

class `AWS::Glue::DatabaseFederatedDatabase` {
  ConnectionName: String?

  Identifier: String?
}

class `AWS::Glue::DatabasePrincipalPrivileges` {
  Permissions: Listing<String>?

  Principal: `AWS::LakeFormation::PrincipalPermissionsDataLakePrincipal`?
}

class `AWS::Glue::DevEndpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::DevEndpointProperties`

  Type: "AWS::Glue::DevEndpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::DevEndpointProperties` {
  Arguments: Dynamic?

  EndpointName: String?

  ExtraJarsS3Path: String?

  ExtraPythonLibsS3Path: String?

  GlueVersion: String?

  NumberOfNodes: Number?

  NumberOfWorkers: Number?

  PublicKey: String?

  PublicKeys: Listing<String>?

  RoleArn: String

  SecurityConfiguration: String?

  SecurityGroupIds: Listing<String>?

  SubnetId: String?

  Tags: Dynamic?

  WorkerType: String?
}

class `AWS::Glue::Job` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::JobProperties`

  Type: "AWS::Glue::Job"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::JobProperties` {
  AllocatedCapacity: Number?

  Command: `AWS::Glue::JobJobCommand`

  Connections: `AWS::Glue::JobConnectionsList`?

  DefaultArguments: Dynamic?

  Description: String?

  ExecutionClass: String?

  ExecutionProperty: `AWS::Glue::JobExecutionProperty`?

  GlueVersion: String?

  LogUri: String?

  MaxCapacity: Number?

  MaxRetries: Number?

  Name: String?

  NonOverridableArguments: Dynamic?

  NotificationProperty: `AWS::Glue::TriggerNotificationProperty`?

  NumberOfWorkers: Number?

  Role: String

  SecurityConfiguration: String?

  Tags: Dynamic?

  Timeout: Number?

  WorkerType: String?
}

class `AWS::Glue::JobConnectionsList` {
  Connections: Listing<String>?
}

class `AWS::Glue::JobExecutionProperty` {
  MaxConcurrentRuns: Number?
}

class `AWS::Glue::JobJobCommand` {
  Name: String?

  PythonVersion: String?

  Runtime: String?

  ScriptLocation: String?
}

class `AWS::Glue::TriggerNotificationProperty` {
  NotifyDelayAfter: Number?
}

class `AWS::Glue::MLTransform` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::MLTransformProperties`

  Type: "AWS::Glue::MLTransform"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::MLTransformProperties` {
  Description: String?

  GlueVersion: String?

  InputRecordTables: `AWS::Glue::MLTransformInputRecordTables`

  MaxCapacity: Number?

  MaxRetries: Number?

  Name: String?

  NumberOfWorkers: Number?

  Role: String

  Tags: Dynamic?

  Timeout: Number?

  TransformEncryption: `AWS::Glue::MLTransformTransformEncryption`?

  TransformParameters: `AWS::Glue::MLTransformTransformParameters`

  WorkerType: String?
}

class `AWS::Glue::MLTransformFindMatchesParameters` {
  AccuracyCostTradeoff: Number?

  EnforceProvidedLabels: Boolean?

  PrecisionRecallTradeoff: Number?

  PrimaryKeyColumnName: String
}

class `AWS::Glue::MLTransformGlueTables` {
  CatalogId: String?

  ConnectionName: String?

  DatabaseName: String

  TableName: String
}

class `AWS::Glue::MLTransformInputRecordTables` {
  GlueTables: Listing<`AWS::Glue::MLTransformGlueTables`>?
}

class `AWS::Glue::MLTransformMLUserDataEncryption` {
  KmsKeyId: String?

  MLUserDataEncryptionMode: String
}

class `AWS::Glue::MLTransformTransformEncryption` {
  MLUserDataEncryption: `AWS::Glue::MLTransformMLUserDataEncryption`?

  TaskRunSecurityConfigurationName: String?
}

class `AWS::Glue::MLTransformTransformParameters` {
  FindMatchesParameters: `AWS::Glue::MLTransformFindMatchesParameters`?

  TransformType: String
}

class `AWS::Glue::Partition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::PartitionProperties`

  Type: "AWS::Glue::Partition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::PartitionProperties` {
  CatalogId: String

  DatabaseName: String

  PartitionInput: `AWS::Glue::PartitionPartitionInput`

  TableName: String
}

class `AWS::Glue::TableColumn` {
  Comment: String?

  Name: String

  Type: String?
}

class `AWS::Glue::PartitionOrder` {
  Column: String

  SortOrder: Number?
}

class `AWS::Glue::PartitionPartitionInput` {
  Parameters: Dynamic?

  StorageDescriptor: `AWS::Glue::PartitionStorageDescriptor`?

  Values: Listing<String>
}

class `AWS::Glue::TableSchemaId` {
  RegistryName: String?

  SchemaArn: String?

  SchemaName: String?
}

class `AWS::Glue::PartitionSchemaReference` {
  SchemaId: `AWS::Glue::TableSchemaId`?

  SchemaVersionId: String?

  SchemaVersionNumber: Number?
}

class `AWS::Glue::TableSerdeInfo` {
  Name: String?

  Parameters: Dynamic?

  SerializationLibrary: String?
}

class `AWS::Glue::TableSkewedInfo` {
  SkewedColumnNames: Listing<String>?

  SkewedColumnValueLocationMaps: Dynamic?

  SkewedColumnValues: Listing<String>?
}

class `AWS::Glue::PartitionStorageDescriptor` {
  BucketColumns: Listing<String>?

  Columns: Listing<`AWS::Glue::TableColumn`>?

  Compressed: Boolean?

  InputFormat: String?

  Location: String?

  NumberOfBuckets: Number?

  OutputFormat: String?

  Parameters: Dynamic?

  SchemaReference: `AWS::Glue::PartitionSchemaReference`?

  SerdeInfo: `AWS::Glue::TableSerdeInfo`?

  SkewedInfo: `AWS::Glue::TableSkewedInfo`?

  SortColumns: Listing<`AWS::Glue::PartitionOrder`>?

  StoredAsSubDirectories: Boolean?
}

class `AWS::Glue::Registry` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceDiscovery::HttpNamespaceProperties`

  Type: "AWS::Glue::Registry"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::Schema` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::SchemaProperties`

  Type: "AWS::Glue::Schema"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::SchemaProperties` {
  CheckpointVersion: `AWS::Glue::SchemaSchemaVersion`?

  Compatibility: String

  DataFormat: String

  Description: String?

  Name: String

  Registry: `AWS::Glue::SchemaRegistry`?

  SchemaDefinition: String

  Tags: Listing<Tag>?
}

class `AWS::Glue::SchemaSchemaVersion` {
  IsLatest: Boolean?

  VersionNumber: Number?
}

class `AWS::Glue::SchemaVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::SchemaVersionProperties`

  Type: "AWS::Glue::SchemaVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::SchemaVersionProperties` {
  Schema: `AWS::Glue::TableSchemaId`

  SchemaDefinition: String
}

class `AWS::Glue::SchemaVersionMetadata` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::SchemaVersionMetadataProperties`

  Type: "AWS::Glue::SchemaVersionMetadata"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::SchemaVersionMetadataProperties` {
  Key: String

  SchemaVersionId: String

  Value: String
}

class `AWS::Glue::SecurityConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::SecurityConfigurationProperties`

  Type: "AWS::Glue::SecurityConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::SecurityConfigurationProperties` {
  EncryptionConfiguration: `AWS::Glue::SecurityConfigurationEncryptionConfiguration`

  Name: String
}

class `AWS::Glue::SecurityConfigurationCloudWatchEncryption` {
  CloudWatchEncryptionMode: String?

  KmsKeyArn: String?
}

class `AWS::Glue::SecurityConfigurationEncryptionConfiguration` {
  CloudWatchEncryption: `AWS::Glue::SecurityConfigurationCloudWatchEncryption`?

  JobBookmarksEncryption: `AWS::Glue::SecurityConfigurationJobBookmarksEncryption`?

  S3Encryptions: `AWS::Transfer::UserSshPublicKey`?
}

class `AWS::Glue::SecurityConfigurationJobBookmarksEncryption` {
  JobBookmarksEncryptionMode: String?

  KmsKeyArn: String?
}

class `AWS::Glue::SecurityConfigurationS3Encryption` {
  KmsKeyArn: String?

  S3EncryptionMode: String?
}

class `AWS::Glue::Table` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::TableProperties`

  Type: "AWS::Glue::Table"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::TableProperties` {
  CatalogId: String

  DatabaseName: String

  OpenTableFormatInput: `AWS::Glue::TableOpenTableFormatInput`?

  TableInput: `AWS::Glue::TableTableInput`
}

class `AWS::Glue::TableIcebergInput` {
  MetadataOperation: `AWS::Transfer::UserSshPublicKey`?

  Version: String?
}

class `AWS::Glue::TableOpenTableFormatInput` {
  IcebergInput: `AWS::Glue::TableIcebergInput`?
}

class `AWS::Glue::TableOrder` {
  Column: String

  SortOrder: Number
}

class `AWS::Glue::TableSchemaReference` {
  SchemaId: `AWS::Glue::TableSchemaId`?

  SchemaVersionId: String?

  SchemaVersionNumber: Number?
}

class `AWS::Glue::TableStorageDescriptor` {
  BucketColumns: Listing<String>?

  Columns: Listing<`AWS::Glue::TableColumn`>?

  Compressed: Boolean?

  InputFormat: String?

  Location: String?

  NumberOfBuckets: Number?

  OutputFormat: String?

  Parameters: Dynamic?

  SchemaReference: `AWS::Glue::TableSchemaReference`?

  SerdeInfo: `AWS::Glue::TableSerdeInfo`?

  SkewedInfo: `AWS::Glue::TableSkewedInfo`?

  SortColumns: Listing<`AWS::Glue::TableOrder`>?

  StoredAsSubDirectories: Boolean?
}

class `AWS::Glue::TableTableIdentifier` {
  CatalogId: String?

  DatabaseName: String?

  Name: String?

  Region: String?
}

class `AWS::Glue::TableTableInput` {
  Description: String?

  Name: String?

  Owner: String?

  Parameters: Dynamic?

  PartitionKeys: Listing<`AWS::Glue::TableColumn`>?

  Retention: Number?

  StorageDescriptor: `AWS::Glue::TableStorageDescriptor`?

  TableType: String?

  TargetTable: `AWS::Glue::TableTableIdentifier`?

  ViewExpandedText: String?

  ViewOriginalText: String?
}

class `AWS::Glue::Trigger` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::TriggerProperties`

  Type: "AWS::Glue::Trigger"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::TriggerProperties` {
  Actions: Listing<`AWS::Glue::TriggerAction`>

  Description: String?

  EventBatchingCondition: `AWS::Glue::TriggerEventBatchingCondition`?

  Name: String?

  Predicate: `AWS::Glue::TriggerPredicate`?

  Schedule: String?

  StartOnCreation: Boolean?

  Tags: Dynamic?

  Type: String

  WorkflowName: String?
}

class `AWS::Glue::TriggerAction` {
  Arguments: Dynamic?

  CrawlerName: String?

  JobName: String?

  NotificationProperty: `AWS::Glue::TriggerNotificationProperty`?

  SecurityConfiguration: String?

  Timeout: Number?
}

class `AWS::Glue::TriggerCondition` {
  CrawlState: String?

  CrawlerName: String?

  JobName: String?

  LogicalOperator: String?

  State: String?
}

class `AWS::Glue::TriggerEventBatchingCondition` {
  BatchSize: Number

  BatchWindow: Number?
}

class `AWS::Glue::TriggerPredicate` {
  Conditions: Listing<`AWS::Glue::TriggerCondition`>?

  Logical: String?
}

class `AWS::Glue::Workflow` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Glue::WorkflowProperties`?

  Type: "AWS::Glue::Workflow"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Glue::WorkflowProperties` {
  DefaultRunProperties: Dynamic?

  Description: String?

  MaxConcurrentRuns: Number?

  Name: String?

  Tags: Dynamic?
}

class `AWS::Grafana::Workspace` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Grafana::WorkspaceProperties`

  Type: "AWS::Grafana::Workspace"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Grafana::WorkspaceProperties` {
  AccountAccessType: String

  AuthenticationProviders: Listing<String>

  ClientToken: String?

  DataSources: Listing<String>?

  Description: String?

  GrafanaVersion: String?

  Name: String?

  NetworkAccessControl: `AWS::Grafana::WorkspaceNetworkAccessControl`?

  NotificationDestinations: Listing<String>?

  OrganizationRoleName: String?

  OrganizationalUnits: Listing<String>?

  PermissionType: String

  PluginAdminEnabled: Boolean?

  RoleArn: String?

  SamlConfiguration: `AWS::Grafana::WorkspaceSamlConfiguration`?

  StackSetName: String?

  VpcConfiguration: `AWS::KinesisAnalyticsV2::ApplicationVpcConfiguration`?
}

class `AWS::Grafana::WorkspaceAssertionAttributes` {
  Email: String?

  Groups: String?

  Login: String?

  Name: String?

  Org: String?

  Role: String?
}

class `AWS::Grafana::WorkspaceIdpMetadata` {
  Url: String?

  Xml: String?
}

class `AWS::Grafana::WorkspaceNetworkAccessControl` {
  PrefixListIds: Listing<String>?

  VpceIds: Listing<String>?
}

class `AWS::Grafana::WorkspaceRoleValues` {
  Admin: Listing<String>?

  Editor: Listing<String>?
}

class `AWS::Grafana::WorkspaceSamlConfiguration` {
  AllowedOrganizations: Listing<String>?

  AssertionAttributes: `AWS::Grafana::WorkspaceAssertionAttributes`?

  IdpMetadata: `AWS::Grafana::WorkspaceIdpMetadata`

  LoginValidityDuration: Number?

  RoleValues: `AWS::Grafana::WorkspaceRoleValues`?
}

class `AWS::KinesisAnalyticsV2::ApplicationVpcConfiguration` {
  SecurityGroupIds: Listing<String>

  SubnetIds: Listing<String>
}

class `AWS::Greengrass::ConnectorDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::ConnectorDefinitionProperties`

  Type: "AWS::Greengrass::ConnectorDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::ConnectorDefinitionProperties` {
  InitialVersion: `AWS::Greengrass::ConnectorDefinitionConnectorDefinitionVersion`?

  Name: String

  Tags: Dynamic?
}

class `AWS::Greengrass::ConnectorDefinitionVersionConnector` {
  ConnectorArn: String

  Id: String

  Parameters: Dynamic?
}

class `AWS::Greengrass::ConnectorDefinitionConnectorDefinitionVersion` {
  Connectors: Listing<`AWS::Greengrass::ConnectorDefinitionVersionConnector`>
}

class `AWS::Greengrass::ConnectorDefinitionVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::ConnectorDefinitionVersionProperties`

  Type: "AWS::Greengrass::ConnectorDefinitionVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::ConnectorDefinitionVersionProperties` {
  ConnectorDefinitionId: String

  Connectors: Listing<`AWS::Greengrass::ConnectorDefinitionVersionConnector`>
}

class `AWS::Greengrass::CoreDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::CoreDefinitionProperties`

  Type: "AWS::Greengrass::CoreDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::CoreDefinitionProperties` {
  InitialVersion: `AWS::Greengrass::CoreDefinitionCoreDefinitionVersion`?

  Name: String

  Tags: Dynamic?
}

class `AWS::Greengrass::DeviceDefinitionVersionDevice` {
  CertificateArn: String

  Id: String

  SyncShadow: Boolean?

  ThingArn: String
}

class `AWS::Greengrass::CoreDefinitionCoreDefinitionVersion` {
  Cores: Listing<`AWS::Greengrass::DeviceDefinitionVersionDevice`>
}

class `AWS::Greengrass::CoreDefinitionVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::CoreDefinitionVersionProperties`

  Type: "AWS::Greengrass::CoreDefinitionVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::CoreDefinitionVersionProperties` {
  CoreDefinitionId: String

  Cores: Listing<`AWS::Greengrass::DeviceDefinitionVersionDevice`>
}

class `AWS::Greengrass::DeviceDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::DeviceDefinitionProperties`

  Type: "AWS::Greengrass::DeviceDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::DeviceDefinitionProperties` {
  InitialVersion: `AWS::Greengrass::DeviceDefinitionDeviceDefinitionVersion`?

  Name: String

  Tags: Dynamic?
}

class `AWS::Greengrass::DeviceDefinitionDeviceDefinitionVersion` {
  Devices: Listing<`AWS::Greengrass::DeviceDefinitionVersionDevice`>
}

class `AWS::Greengrass::DeviceDefinitionVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::DeviceDefinitionVersionProperties`

  Type: "AWS::Greengrass::DeviceDefinitionVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::DeviceDefinitionVersionProperties` {
  DeviceDefinitionId: String

  Devices: Listing<`AWS::Greengrass::DeviceDefinitionVersionDevice`>
}

class `AWS::Greengrass::FunctionDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::FunctionDefinitionProperties`

  Type: "AWS::Greengrass::FunctionDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::FunctionDefinitionProperties` {
  InitialVersion: `AWS::Greengrass::FunctionDefinitionFunctionDefinitionVersion`?

  Name: String

  Tags: Dynamic?
}

class `AWS::Greengrass::FunctionDefinitionDefaultConfig` {
  Execution: `AWS::Greengrass::FunctionDefinitionExecution`
}

class `AWS::Greengrass::FunctionDefinitionEnvironment` {
  AccessSysfs: Boolean?

  Execution: `AWS::Greengrass::FunctionDefinitionExecution`?

  ResourceAccessPolicies: Listing<`AWS::Greengrass::FunctionDefinitionVersionResourceAccessPolicy`>?

  Variables: Dynamic?
}

class `AWS::Greengrass::FunctionDefinitionExecution` {
  IsolationMode: String?

  RunAs: `AWS::Greengrass::FunctionDefinitionVersionRunAs`?
}

class `AWS::Greengrass::FunctionDefinitionFunction` {
  FunctionArn: String

  FunctionConfiguration: `AWS::Greengrass::FunctionDefinitionFunctionConfiguration`

  Id: String
}

class `AWS::Greengrass::FunctionDefinitionFunctionConfiguration` {
  EncodingType: String?

  Environment: `AWS::Greengrass::FunctionDefinitionEnvironment`?

  ExecArgs: String?

  Executable: String?

  MemorySize: Number?

  Pinned: Boolean?

  Timeout: Number?
}

class `AWS::Greengrass::FunctionDefinitionFunctionDefinitionVersion` {
  DefaultConfig: `AWS::Greengrass::FunctionDefinitionDefaultConfig`?

  Functions: Listing<`AWS::Greengrass::FunctionDefinitionFunction`>
}

class `AWS::Greengrass::FunctionDefinitionVersionResourceAccessPolicy` {
  Permission: String?

  ResourceId: String
}

class `AWS::Greengrass::FunctionDefinitionVersionRunAs` {
  Gid: Number?

  Uid: Number?
}

class `AWS::Greengrass::FunctionDefinitionVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::FunctionDefinitionVersionProperties`

  Type: "AWS::Greengrass::FunctionDefinitionVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::FunctionDefinitionVersionProperties` {
  DefaultConfig: `AWS::Greengrass::FunctionDefinitionVersionDefaultConfig`?

  FunctionDefinitionId: String

  Functions: Listing<`AWS::Greengrass::FunctionDefinitionVersionFunction`>
}

class `AWS::Greengrass::FunctionDefinitionVersionDefaultConfig` {
  Execution: `AWS::Greengrass::FunctionDefinitionVersionExecution`
}

class `AWS::Greengrass::FunctionDefinitionVersionEnvironment` {
  AccessSysfs: Boolean?

  Execution: `AWS::Greengrass::FunctionDefinitionVersionExecution`?

  ResourceAccessPolicies: Listing<`AWS::Greengrass::FunctionDefinitionVersionResourceAccessPolicy`>?

  Variables: Dynamic?
}

class `AWS::Greengrass::FunctionDefinitionVersionExecution` {
  IsolationMode: String?

  RunAs: `AWS::Greengrass::FunctionDefinitionVersionRunAs`?
}

class `AWS::Greengrass::FunctionDefinitionVersionFunction` {
  FunctionArn: String

  FunctionConfiguration: `AWS::Greengrass::FunctionDefinitionVersionFunctionConfiguration`

  Id: String
}

class `AWS::Greengrass::FunctionDefinitionVersionFunctionConfiguration` {
  EncodingType: String?

  Environment: `AWS::Greengrass::FunctionDefinitionVersionEnvironment`?

  ExecArgs: String?

  Executable: String?

  MemorySize: Number?

  Pinned: Boolean?

  Timeout: Number?
}

class `AWS::Greengrass::Group` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::GroupProperties`

  Type: "AWS::Greengrass::Group"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::GroupProperties` {
  InitialVersion: `AWS::Greengrass::GroupGroupVersion`?

  Name: String

  RoleArn: String?

  Tags: Dynamic?
}

class `AWS::Greengrass::GroupGroupVersion` {
  ConnectorDefinitionVersionArn: String?

  CoreDefinitionVersionArn: String?

  DeviceDefinitionVersionArn: String?

  FunctionDefinitionVersionArn: String?

  LoggerDefinitionVersionArn: String?

  ResourceDefinitionVersionArn: String?

  SubscriptionDefinitionVersionArn: String?
}

class `AWS::Greengrass::GroupVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::GroupVersionProperties`

  Type: "AWS::Greengrass::GroupVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::GroupVersionProperties` {
  ConnectorDefinitionVersionArn: String?

  CoreDefinitionVersionArn: String?

  DeviceDefinitionVersionArn: String?

  FunctionDefinitionVersionArn: String?

  GroupId: String

  LoggerDefinitionVersionArn: String?

  ResourceDefinitionVersionArn: String?

  SubscriptionDefinitionVersionArn: String?
}

class `AWS::Greengrass::LoggerDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::LoggerDefinitionProperties`

  Type: "AWS::Greengrass::LoggerDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::LoggerDefinitionProperties` {
  InitialVersion: `AWS::Greengrass::LoggerDefinitionLoggerDefinitionVersion`?

  Name: String

  Tags: Dynamic?
}

class `AWS::Greengrass::LoggerDefinitionVersionLogger` {
  Component: String

  Id: String

  Level: String

  Space: Number?

  Type: String
}

class `AWS::Greengrass::LoggerDefinitionLoggerDefinitionVersion` {
  Loggers: Listing<`AWS::Greengrass::LoggerDefinitionVersionLogger`>
}

class `AWS::Greengrass::LoggerDefinitionVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::LoggerDefinitionVersionProperties`

  Type: "AWS::Greengrass::LoggerDefinitionVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::LoggerDefinitionVersionProperties` {
  LoggerDefinitionId: String

  Loggers: Listing<`AWS::Greengrass::LoggerDefinitionVersionLogger`>
}

class `AWS::Greengrass::ResourceDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::ResourceDefinitionProperties`

  Type: "AWS::Greengrass::ResourceDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::ResourceDefinitionProperties` {
  InitialVersion: `AWS::Greengrass::ResourceDefinitionResourceDefinitionVersion`?

  Name: String

  Tags: Dynamic?
}

class `AWS::Greengrass::ResourceDefinitionVersionGroupOwnerSetting` {
  AutoAddGroupOwner: Boolean

  GroupOwner: String?
}

class `AWS::Greengrass::ResourceDefinitionLocalDeviceResourceData` {
  GroupOwnerSetting: `AWS::Greengrass::ResourceDefinitionVersionGroupOwnerSetting`?

  SourcePath: String
}

class `AWS::Greengrass::ResourceDefinitionLocalVolumeResourceData` {
  DestinationPath: String

  GroupOwnerSetting: `AWS::Greengrass::ResourceDefinitionVersionGroupOwnerSetting`?

  SourcePath: String
}

class `AWS::Greengrass::ResourceDefinitionResourceDataContainer` {
  LocalDeviceResourceData: `AWS::Greengrass::ResourceDefinitionLocalDeviceResourceData`?

  LocalVolumeResourceData: `AWS::Greengrass::ResourceDefinitionLocalVolumeResourceData`?

  S3MachineLearningModelResourceData: `AWS::Greengrass::ResourceDefinitionS3MachineLearningModelResourceData`?

  SageMakerMachineLearningModelResourceData: `AWS::Greengrass::ResourceDefinitionSageMakerMachineLearningModelResourceData`?

  SecretsManagerSecretResourceData: `AWS::Greengrass::ResourceDefinitionVersionSecretsManagerSecretResourceData`?
}

class `AWS::Greengrass::ResourceDefinitionResourceDefinitionVersion` {
  Resources: Listing<`AWS::Greengrass::ResourceDefinitionResourceInstance`>
}

class `AWS::Greengrass::ResourceDefinitionVersionResourceDownloadOwnerSetting` {
  GroupOwner: String

  GroupPermission: String
}

class `AWS::Greengrass::ResourceDefinitionResourceInstance` {
  Id: String

  Name: String

  ResourceDataContainer: `AWS::Greengrass::ResourceDefinitionResourceDataContainer`
}

class `AWS::Greengrass::ResourceDefinitionS3MachineLearningModelResourceData` {
  DestinationPath: String

  OwnerSetting: `AWS::Greengrass::ResourceDefinitionVersionResourceDownloadOwnerSetting`?

  S3Uri: String
}

class `AWS::Greengrass::ResourceDefinitionSageMakerMachineLearningModelResourceData` {
  DestinationPath: String

  OwnerSetting: `AWS::Greengrass::ResourceDefinitionVersionResourceDownloadOwnerSetting`?

  SageMakerJobArn: String
}

class `AWS::Greengrass::ResourceDefinitionVersionSecretsManagerSecretResourceData` {
  ARN: String

  AdditionalStagingLabelsToDownload: Listing<String>?
}

class `AWS::Greengrass::ResourceDefinitionVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::ResourceDefinitionVersionProperties`

  Type: "AWS::Greengrass::ResourceDefinitionVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::ResourceDefinitionVersionProperties` {
  ResourceDefinitionId: String

  Resources: Listing<`AWS::Greengrass::ResourceDefinitionVersionResourceInstance`>
}

class `AWS::Greengrass::ResourceDefinitionVersionLocalDeviceResourceData` {
  GroupOwnerSetting: `AWS::Greengrass::ResourceDefinitionVersionGroupOwnerSetting`?

  SourcePath: String
}

class `AWS::Greengrass::ResourceDefinitionVersionLocalVolumeResourceData` {
  DestinationPath: String

  GroupOwnerSetting: `AWS::Greengrass::ResourceDefinitionVersionGroupOwnerSetting`?

  SourcePath: String
}

class `AWS::Greengrass::ResourceDefinitionVersionResourceDataContainer` {
  LocalDeviceResourceData: `AWS::Greengrass::ResourceDefinitionVersionLocalDeviceResourceData`?

  LocalVolumeResourceData: `AWS::Greengrass::ResourceDefinitionVersionLocalVolumeResourceData`?

  S3MachineLearningModelResourceData: `AWS::Greengrass::ResourceDefinitionVersionS3MachineLearningModelResourceData`?

  SageMakerMachineLearningModelResourceData: `AWS::Greengrass::ResourceDefinitionVersionSageMakerMachineLearningModelResourceData`?

  SecretsManagerSecretResourceData: `AWS::Greengrass::ResourceDefinitionVersionSecretsManagerSecretResourceData`?
}

class `AWS::Greengrass::ResourceDefinitionVersionResourceInstance` {
  Id: String

  Name: String

  ResourceDataContainer: `AWS::Greengrass::ResourceDefinitionVersionResourceDataContainer`
}

class `AWS::Greengrass::ResourceDefinitionVersionS3MachineLearningModelResourceData` {
  DestinationPath: String

  OwnerSetting: `AWS::Greengrass::ResourceDefinitionVersionResourceDownloadOwnerSetting`?

  S3Uri: String
}

class `AWS::Greengrass::ResourceDefinitionVersionSageMakerMachineLearningModelResourceData` {
  DestinationPath: String

  OwnerSetting: `AWS::Greengrass::ResourceDefinitionVersionResourceDownloadOwnerSetting`?

  SageMakerJobArn: String
}

class `AWS::Greengrass::SubscriptionDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::SubscriptionDefinitionProperties`

  Type: "AWS::Greengrass::SubscriptionDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::SubscriptionDefinitionProperties` {
  InitialVersion: `AWS::Greengrass::SubscriptionDefinitionSubscriptionDefinitionVersion`?

  Name: String

  Tags: Dynamic?
}

class `AWS::Greengrass::SubscriptionDefinitionVersionSubscription` {
  Id: String

  Source: String

  Subject: String

  Target: String
}

class `AWS::Greengrass::SubscriptionDefinitionSubscriptionDefinitionVersion` {
  Subscriptions: Listing<`AWS::Greengrass::SubscriptionDefinitionVersionSubscription`>
}

class `AWS::Greengrass::SubscriptionDefinitionVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Greengrass::SubscriptionDefinitionVersionProperties`

  Type: "AWS::Greengrass::SubscriptionDefinitionVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Greengrass::SubscriptionDefinitionVersionProperties` {
  SubscriptionDefinitionId: String

  Subscriptions: Listing<`AWS::Greengrass::SubscriptionDefinitionVersionSubscription`>
}

class `AWS::GreengrassV2::ComponentVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GreengrassV2::ComponentVersionProperties`?

  Type: "AWS::GreengrassV2::ComponentVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GreengrassV2::ComponentVersionProperties` {
  InlineRecipe: String?

  LambdaFunction: `AWS::GreengrassV2::ComponentVersionLambdaFunctionRecipeSource`?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::GreengrassV2::ComponentVersionComponentDependencyRequirement` {
  DependencyType: String?

  VersionRequirement: String?
}

class `AWS::GreengrassV2::ComponentVersionComponentPlatform` {
  Attributes: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Name: String?
}

class `AWS::GreengrassV2::ComponentVersionLambdaContainerParams` {
  Devices: Listing<`AWS::GreengrassV2::ComponentVersionLambdaDeviceMount`>?

  MemorySizeInKB: Number?

  MountROSysfs: Boolean?

  Volumes: Listing<`AWS::GreengrassV2::ComponentVersionLambdaVolumeMount`>?
}

class `AWS::GreengrassV2::ComponentVersionLambdaDeviceMount` {
  AddGroupOwner: Boolean?

  Path: String?

  Permission: String?
}

class `AWS::GreengrassV2::ComponentVersionLambdaEventSource` {
  Topic: String?

  Type: String?
}

class `AWS::GreengrassV2::ComponentVersionLambdaExecutionParameters` {
  EnvironmentVariables: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  EventSources: Listing<`AWS::GreengrassV2::ComponentVersionLambdaEventSource`>?

  ExecArgs: Listing<String>?

  InputPayloadEncodingType: String?

  LinuxProcessParams: `AWS::GreengrassV2::ComponentVersionLambdaLinuxProcessParams`?

  MaxIdleTimeInSeconds: Number?

  MaxInstancesCount: Number?

  MaxQueueSize: Number?

  Pinned: Boolean?

  StatusTimeoutInSeconds: Number?

  TimeoutInSeconds: Number?
}

class `AWS::GreengrassV2::ComponentVersionLambdaFunctionRecipeSource` {
  ComponentDependencies: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::GreengrassV2::ComponentVersionComponentDependencyRequirement`>?

  ComponentLambdaParameters: `AWS::GreengrassV2::ComponentVersionLambdaExecutionParameters`?

  ComponentName: String?

  ComponentPlatforms: Listing<`AWS::GreengrassV2::ComponentVersionComponentPlatform`>?

  ComponentVersion: String?

  LambdaArn: String?
}

class `AWS::GreengrassV2::ComponentVersionLambdaLinuxProcessParams` {
  ContainerParams: `AWS::GreengrassV2::ComponentVersionLambdaContainerParams`?

  IsolationMode: String?
}

class `AWS::GreengrassV2::ComponentVersionLambdaVolumeMount` {
  AddGroupOwner: Boolean?

  DestinationPath: String?

  Permission: String?

  SourcePath: String?
}

class `AWS::GreengrassV2::Deployment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GreengrassV2::DeploymentProperties`

  Type: "AWS::GreengrassV2::Deployment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GreengrassV2::DeploymentProperties` {
  Components: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::GreengrassV2::DeploymentComponentDeploymentSpecification`>?

  DeploymentName: String?

  DeploymentPolicies: `AWS::GreengrassV2::DeploymentDeploymentPolicies`?

  IotJobConfiguration: `AWS::GreengrassV2::DeploymentDeploymentIoTJobConfiguration`?

  ParentTargetArn: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  TargetArn: String
}

class `AWS::GreengrassV2::DeploymentComponentConfigurationUpdate` {
  Merge: String?

  Reset: Listing<String>?
}

class `AWS::GreengrassV2::DeploymentComponentDeploymentSpecification` {
  ComponentVersion: String?

  ConfigurationUpdate: `AWS::GreengrassV2::DeploymentComponentConfigurationUpdate`?

  RunWith: `AWS::GreengrassV2::DeploymentComponentRunWith`?
}

class `AWS::GreengrassV2::DeploymentComponentRunWith` {
  PosixUser: String?

  SystemResourceLimits: `AWS::GreengrassV2::DeploymentSystemResourceLimits`?

  WindowsUser: String?
}

class `AWS::GreengrassV2::DeploymentDeploymentComponentUpdatePolicy` {
  Action: String?

  TimeoutInSeconds: Number?
}

class `AWS::GreengrassV2::DeploymentDeploymentConfigurationValidationPolicy` {
  TimeoutInSeconds: Number?
}

class `AWS::GreengrassV2::DeploymentDeploymentIoTJobConfiguration` {
  AbortConfig: `AWS::GreengrassV2::DeploymentIoTJobAbortConfig`?

  JobExecutionsRolloutConfig: `AWS::GreengrassV2::DeploymentIoTJobExecutionsRolloutConfig`?

  TimeoutConfig: `AWS::GreengrassV2::DeploymentIoTJobTimeoutConfig`?
}

class `AWS::GreengrassV2::DeploymentDeploymentPolicies` {
  ComponentUpdatePolicy: `AWS::GreengrassV2::DeploymentDeploymentComponentUpdatePolicy`?

  ConfigurationValidationPolicy: `AWS::GreengrassV2::DeploymentDeploymentConfigurationValidationPolicy`?

  FailureHandlingPolicy: String?
}

class `AWS::GreengrassV2::DeploymentIoTJobAbortConfig` {
  CriteriaList: Listing<`AWS::IoT::JobTemplateAbortCriteria`>
}

class `AWS::IoT::JobTemplateAbortCriteria` {
  Action: String

  FailureType: String

  MinNumberOfExecutedThings: Number

  ThresholdPercentage: Number
}

class `AWS::GreengrassV2::DeploymentIoTJobExecutionsRolloutConfig` {
  ExponentialRate: `AWS::GreengrassV2::DeploymentIoTJobExponentialRolloutRate`?

  MaximumPerMinute: Number?
}

class `AWS::GreengrassV2::DeploymentIoTJobExponentialRolloutRate` {
  BaseRatePerMinute: Number

  IncrementFactor: Number

  RateIncreaseCriteria: `AWS::IoT::JobTemplateRateIncreaseCriteria`
}

class `AWS::IoT::JobTemplateRateIncreaseCriteria` {
  NumberOfNotifiedThings: Number?

  NumberOfSucceededThings: Number?
}

class `AWS::GreengrassV2::DeploymentIoTJobTimeoutConfig` {
  InProgressTimeoutInMinutes: Number?
}

class `AWS::GreengrassV2::DeploymentSystemResourceLimits` {
  Cpus: Number?

  Memory: Number?
}

class `AWS::GroundStation::Config` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GroundStation::ConfigProperties`

  Type: "AWS::GroundStation::Config"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GroundStation::ConfigProperties` {
  ConfigData: `AWS::GroundStation::ConfigConfigData`

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::GroundStation::ConfigAntennaDownlinkConfig` {
  SpectrumConfig: `AWS::GroundStation::ConfigSpectrumConfig`?
}

class `AWS::GroundStation::ConfigAntennaDownlinkDemodDecodeConfig` {
  DecodeConfig: `AWS::GroundStation::ConfigDemodulationConfig`?

  DemodulationConfig: `AWS::GroundStation::ConfigDemodulationConfig`?

  SpectrumConfig: `AWS::GroundStation::ConfigSpectrumConfig`?
}

class `AWS::GroundStation::ConfigAntennaUplinkConfig` {
  SpectrumConfig: `AWS::GroundStation::ConfigUplinkSpectrumConfig`?

  TargetEirp: `AWS::GroundStation::ConfigFrequencyBandwidth`?

  TransmitDisabled: Boolean?
}

class `AWS::GroundStation::ConfigConfigData` {
  AntennaDownlinkConfig: `AWS::GroundStation::ConfigAntennaDownlinkConfig`?

  AntennaDownlinkDemodDecodeConfig: `AWS::GroundStation::ConfigAntennaDownlinkDemodDecodeConfig`?

  AntennaUplinkConfig: `AWS::GroundStation::ConfigAntennaUplinkConfig`?

  DataflowEndpointConfig: `AWS::GroundStation::ConfigDataflowEndpointConfig`?

  S3RecordingConfig: `AWS::GroundStation::ConfigS3RecordingConfig`?

  TrackingConfig: `AWS::GroundStation::ConfigTrackingConfig`?

  UplinkEchoConfig: `AWS::GroundStation::ConfigUplinkEchoConfig`?
}

class `AWS::GroundStation::ConfigDataflowEndpointConfig` {
  DataflowEndpointName: String?

  DataflowEndpointRegion: String?
}

class `AWS::GroundStation::ConfigDemodulationConfig` {
  UnvalidatedJSON: String?
}

class `AWS::GroundStation::ConfigFrequencyBandwidth` {
  Units: String?

  Value: Number?
}

class `AWS::GroundStation::ConfigS3RecordingConfig` {
  BucketArn: String?

  Prefix: String?

  RoleArn: String?
}

class `AWS::GroundStation::ConfigSpectrumConfig` {
  Bandwidth: `AWS::GroundStation::ConfigFrequencyBandwidth`?

  CenterFrequency: `AWS::GroundStation::ConfigFrequencyBandwidth`?

  Polarization: String?
}

class `AWS::GroundStation::ConfigTrackingConfig` {
  Autotrack: String?
}

class `AWS::GroundStation::ConfigUplinkEchoConfig` {
  AntennaUplinkConfigArn: String?

  Enabled: Boolean?
}

class `AWS::GroundStation::ConfigUplinkSpectrumConfig` {
  CenterFrequency: `AWS::GroundStation::ConfigFrequencyBandwidth`?

  Polarization: String?
}

class `AWS::GroundStation::DataflowEndpointGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GroundStation::DataflowEndpointGroupProperties`

  Type: "AWS::GroundStation::DataflowEndpointGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GroundStation::DataflowEndpointGroupProperties` {
  ContactPostPassDurationSeconds: Number?

  ContactPrePassDurationSeconds: Number?

  EndpointDetails: Listing<`AWS::GroundStation::DataflowEndpointGroupEndpointDetails`>

  Tags: Listing<Tag>?
}

class `AWS::GroundStation::DataflowEndpointGroupAwsGroundStationAgentEndpoint` {
  AgentStatus: String?

  AuditResults: String?

  EgressAddress: `AWS::GroundStation::DataflowEndpointGroupConnectionDetails`?

  IngressAddress: `AWS::GroundStation::DataflowEndpointGroupRangedConnectionDetails`?

  Name: String?
}

class `AWS::GroundStation::DataflowEndpointGroupConnectionDetails` {
  Mtu: Number?

  SocketAddress: `AWS::GroundStation::DataflowEndpointGroupSocketAddress`?
}

class `AWS::GroundStation::DataflowEndpointGroupDataflowEndpoint` {
  Address: `AWS::GroundStation::DataflowEndpointGroupSocketAddress`?

  Mtu: Number?

  Name: String?
}

class `AWS::GroundStation::DataflowEndpointGroupEndpointDetails` {
  AwsGroundStationAgentEndpoint: `AWS::GroundStation::DataflowEndpointGroupAwsGroundStationAgentEndpoint`?

  Endpoint: `AWS::GroundStation::DataflowEndpointGroupDataflowEndpoint`?

  SecurityDetails: `AWS::GroundStation::DataflowEndpointGroupSecurityDetails`?
}

class `AWS::QuickSight::TemplateAxisDisplayMinMaxRange` {
  Maximum: Number?

  Minimum: Number?
}

class `AWS::GroundStation::DataflowEndpointGroupRangedConnectionDetails` {
  Mtu: Number?

  SocketAddress: `AWS::GroundStation::DataflowEndpointGroupRangedSocketAddress`?
}

class `AWS::GroundStation::DataflowEndpointGroupRangedSocketAddress` {
  Name: String?

  PortRange: `AWS::QuickSight::TemplateAxisDisplayMinMaxRange`?
}

class `AWS::GroundStation::DataflowEndpointGroupSecurityDetails` {
  RoleArn: String?

  SecurityGroupIds: Listing<String>?

  SubnetIds: Listing<String>?
}

class `AWS::GroundStation::DataflowEndpointGroupSocketAddress` {
  Name: String?

  Port: Number?
}

class `AWS::GroundStation::MissionProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GroundStation::MissionProfileProperties`

  Type: "AWS::GroundStation::MissionProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GroundStation::MissionProfileProperties` {
  ContactPostPassDurationSeconds: Number?

  ContactPrePassDurationSeconds: Number?

  DataflowEdges: Listing<`AWS::GroundStation::MissionProfileDataflowEdge`>

  MinimumViableContactDurationSeconds: Number

  Name: String

  StreamsKmsKey: `AWS::GroundStation::MissionProfileStreamsKmsKey`?

  StreamsKmsRole: String?

  Tags: Listing<Tag>?

  TrackingConfigArn: String
}

class `AWS::GroundStation::MissionProfileDataflowEdge` {
  Destination: String?

  Source: String?
}

class `AWS::GroundStation::MissionProfileStreamsKmsKey` {
  KmsAliasArn: String?

  KmsKeyArn: String?
}

class `AWS::GuardDuty::Detector` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GuardDuty::DetectorProperties`

  Type: "AWS::GuardDuty::Detector"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GuardDuty::DetectorProperties` {
  DataSources: `AWS::GuardDuty::DetectorCFNDataSourceConfigurations`?

  Enable: Boolean

  Features: Listing<`AWS::GuardDuty::DetectorCFNFeatureConfiguration`>?

  FindingPublishingFrequency: String?

  Tags: Listing<Tag>?
}

class `AWS::GuardDuty::DetectorCFNDataSourceConfigurations` {
  Kubernetes: `AWS::GuardDuty::DetectorCFNKubernetesConfiguration`?

  MalwareProtection: `AWS::GuardDuty::DetectorCFNMalwareProtectionConfiguration`?

  S3Logs: `AWS::GuardDuty::DetectorCFNS3LogsConfiguration`?
}

class `AWS::GuardDuty::DetectorCFNFeatureAdditionalConfiguration` {
  Name: String?

  Status: String?
}

class `AWS::GuardDuty::DetectorCFNFeatureConfiguration` {
  AdditionalConfiguration: Listing<`AWS::GuardDuty::DetectorCFNFeatureAdditionalConfiguration`>?

  Name: String

  Status: String
}

class `AWS::GuardDuty::DetectorCFNS3LogsConfiguration` {
  Enable: Boolean
}

class `AWS::GuardDuty::DetectorCFNKubernetesConfiguration` {
  AuditLogs: `AWS::GuardDuty::DetectorCFNS3LogsConfiguration`
}

class `AWS::GuardDuty::DetectorCFNMalwareProtectionConfiguration` {
  ScanEc2InstanceWithFindings: `AWS::GuardDuty::DetectorCFNScanEc2InstanceWithFindingsConfiguration`?
}

class `AWS::GuardDuty::DetectorCFNScanEc2InstanceWithFindingsConfiguration` {
  EbsVolumes: Boolean?
}

class `AWS::GuardDuty::Filter` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GuardDuty::FilterProperties`

  Type: "AWS::GuardDuty::Filter"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GuardDuty::FilterProperties` {
  Action: String

  Description: String

  DetectorId: String

  FindingCriteria: `AWS::GuardDuty::FilterFindingCriteria`

  Name: String

  Rank: Number

  Tags: Listing<Tag>?
}

class `AWS::GuardDuty::FilterCondition` {
  Eq: Listing<String>?

  Equals: Listing<String>?

  GreaterThan: Number?

  GreaterThanOrEqual: Number?

  Gt: Number?

  Gte: Number?

  LessThan: Number?

  LessThanOrEqual: Number?

  Lt: Number?

  Lte: Number?

  Neq: Listing<String>?

  NotEquals: Listing<String>?
}

class `AWS::GuardDuty::FilterFindingCriteria` {
  Criterion: Dynamic?

  ItemType: `AWS::GuardDuty::FilterCondition`?
}

class `AWS::GuardDuty::IPSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GuardDuty::IPSetProperties`

  Type: "AWS::GuardDuty::IPSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GuardDuty::IPSetProperties` {
  Activate: Boolean?

  DetectorId: String?

  Format: String

  Location: String

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::GuardDuty::Master` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GuardDuty::MasterProperties`

  Type: "AWS::GuardDuty::Master"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GuardDuty::MasterProperties` {
  DetectorId: String

  InvitationId: String?

  MasterId: String
}

class `AWS::GuardDuty::Member` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GuardDuty::MemberProperties`

  Type: "AWS::GuardDuty::Member"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GuardDuty::MemberProperties` {
  DetectorId: String

  DisableEmailNotification: Boolean?

  Email: String

  MemberId: String

  Message: String?

  Status: String?
}

class `AWS::GuardDuty::ThreatIntelSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::GuardDuty::ThreatIntelSetProperties`

  Type: "AWS::GuardDuty::ThreatIntelSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::GuardDuty::ThreatIntelSetProperties` {
  Activate: Boolean?

  DetectorId: String?

  Format: String

  Location: String

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::HealthImaging::Datastore` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::HealthImaging::DatastoreProperties`?

  Type: "AWS::HealthImaging::Datastore"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::HealthImaging::DatastoreProperties` {
  DatastoreName: String?

  KmsKeyArn: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::HealthLake::FHIRDatastore` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::HealthLake::FHIRDatastoreProperties`

  Type: "AWS::HealthLake::FHIRDatastore"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::HealthLake::FHIRDatastoreProperties` {
  DatastoreName: String?

  DatastoreTypeVersion: String

  IdentityProviderConfiguration: `AWS::HealthLake::FHIRDatastoreIdentityProviderConfiguration`?

  PreloadDataConfig: `AWS::HealthLake::FHIRDatastorePreloadDataConfig`?

  SseConfiguration: `AWS::HealthLake::FHIRDatastoreSseConfiguration`?

  Tags: Listing<Tag>?
}

class `AWS::HealthLake::FHIRDatastoreCreatedAt` {
  Nanos: Number

  Seconds: String
}

class `AWS::HealthLake::FHIRDatastoreIdentityProviderConfiguration` {
  AuthorizationStrategy: String

  FineGrainedAuthorizationEnabled: Boolean?

  IdpLambdaArn: String?

  Metadata: String?
}

class `AWS::HealthLake::FHIRDatastoreKmsEncryptionConfig` {
  CmkType: String

  KmsKeyId: String?
}

class `AWS::HealthLake::FHIRDatastorePreloadDataConfig` {
  PreloadDataType: String
}

class `AWS::HealthLake::FHIRDatastoreSseConfiguration` {
  KmsEncryptionConfig: `AWS::HealthLake::FHIRDatastoreKmsEncryptionConfig`
}

class `AWS::IAM::AccessKey` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::AccessKeyProperties`

  Type: "AWS::IAM::AccessKey"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::AccessKeyProperties` {
  Serial: Number?

  Status: String?

  UserName: String
}

class `AWS::IAM::Group` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::GroupProperties`?

  Type: "AWS::IAM::Group"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::GroupProperties` {
  GroupName: String?

  ManagedPolicyArns: Listing<String>?

  Path: String?

  Policies: Listing<`AWS::IAM::UserPolicy`>?
}

class `AWS::IAM::UserPolicy` {
  PolicyDocument: Dynamic

  PolicyName: String
}

class `AWS::IAM::GroupPolicy0` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::GroupPolicyProperties`

  Type: "AWS::IAM::GroupPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::GroupPolicyProperties` {
  GroupName: String

  PolicyDocument: Dynamic?

  PolicyName: String
}

class `AWS::IAM::InstanceProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::InstanceProfileProperties`

  Type: "AWS::IAM::InstanceProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::InstanceProfileProperties` {
  InstanceProfileName: String?

  Path: String?

  Roles: Listing<String>
}

class `AWS::IAM::ManagedPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::ManagedPolicyProperties`

  Type: "AWS::IAM::ManagedPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::ManagedPolicyProperties` {
  Description: String?

  Groups: Listing<String>?

  ManagedPolicyName: String?

  Path: String?

  PolicyDocument: Dynamic

  Roles: Listing<String>?

  Users: Listing<String>?
}

class `AWS::IAM::OIDCProvider` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::OIDCProviderProperties`

  Type: "AWS::IAM::OIDCProvider"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::OIDCProviderProperties` {
  ClientIdList: Listing<String>?

  Tags: Listing<Tag>?

  ThumbprintList: Listing<String>

  Url: String?
}

class `AWS::IAM::Policy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::PolicyProperties`

  Type: "AWS::IAM::Policy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::PolicyProperties` {
  Groups: Listing<String>?

  PolicyDocument: Dynamic

  PolicyName: String

  Roles: Listing<String>?

  Users: Listing<String>?
}

class `AWS::IAM::Role` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::RoleProperties`

  Type: "AWS::IAM::Role"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::RoleProperties` {
  AssumeRolePolicyDocument: Dynamic

  Description: String?

  ManagedPolicyArns: Listing<String>?

  MaxSessionDuration: Number?

  Path: String?

  PermissionsBoundary: String?

  Policies: Listing<`AWS::IAM::UserPolicy`>?

  RoleName: String?

  Tags: Listing<Tag>?
}

class `AWS::IAM::RolePolicy0` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::RolePolicyProperties`

  Type: "AWS::IAM::RolePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::RolePolicyProperties` {
  PolicyDocument: Dynamic?

  PolicyName: String

  RoleName: String
}

class `AWS::IAM::SAMLProvider` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::SAMLProviderProperties`

  Type: "AWS::IAM::SAMLProvider"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::SAMLProviderProperties` {
  Name: String?

  SamlMetadataDocument: String

  Tags: Listing<Tag>?
}

class `AWS::IAM::ServerCertificate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::ServerCertificateProperties`?

  Type: "AWS::IAM::ServerCertificate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::ServerCertificateProperties` {
  CertificateBody: String?

  CertificateChain: String?

  Path: String?

  PrivateKey: String?

  ServerCertificateName: String?

  Tags: Listing<Tag>?
}

class `AWS::IAM::ServiceLinkedRole` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::ServiceLinkedRoleProperties`?

  Type: "AWS::IAM::ServiceLinkedRole"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::ServiceLinkedRoleProperties` {
  AWSServiceName: String?

  CustomSuffix: String?

  Description: String?
}

class `AWS::IAM::User` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::UserProperties`?

  Type: "AWS::IAM::User"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::UserProperties` {
  Groups: Listing<String>?

  LoginProfile: `AWS::IAM::UserLoginProfile`?

  ManagedPolicyArns: Listing<String>?

  Path: String?

  PermissionsBoundary: String?

  Policies: Listing<`AWS::IAM::UserPolicy`>?

  Tags: Listing<Tag>?

  UserName: String?
}

class `AWS::IAM::UserLoginProfile` {
  Password: String

  PasswordResetRequired: Boolean?
}

class `AWS::IAM::UserPolicy0` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::UserPolicyProperties`

  Type: "AWS::IAM::UserPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::UserPolicyProperties` {
  PolicyDocument: Dynamic?

  PolicyName: String

  UserName: String
}

class `AWS::IAM::UserToGroupAddition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::UserToGroupAdditionProperties`

  Type: "AWS::IAM::UserToGroupAddition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::UserToGroupAdditionProperties` {
  GroupName: String

  Users: Listing<String>
}

class `AWS::IAM::VirtualMFADevice` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IAM::VirtualMFADeviceProperties`

  Type: "AWS::IAM::VirtualMFADevice"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IAM::VirtualMFADeviceProperties` {
  Path: String?

  Tags: Listing<Tag>?

  Users: Listing<String>

  VirtualMfaDeviceName: String?
}

class `AWS::IVS::Channel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IVS::ChannelProperties`?

  Type: "AWS::IVS::Channel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IVS::ChannelProperties` {
  Authorized: Boolean?

  InsecureIngest: Boolean?

  LatencyMode: String?

  Name: String?

  Preset: String?

  RecordingConfigurationArn: String?

  Tags: Listing<Tag>?

  Type: String?
}

class `AWS::IVS::PlaybackKeyPair` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IVS::PlaybackKeyPairProperties`?

  Type: "AWS::IVS::PlaybackKeyPair"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IVS::PlaybackKeyPairProperties` {
  Name: String?

  PublicKeyMaterial: String?

  Tags: Listing<Tag>?
}

class `AWS::IVS::RecordingConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IVS::RecordingConfigurationProperties`

  Type: "AWS::IVS::RecordingConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IVS::RecordingConfigurationProperties` {
  DestinationConfiguration: `AWS::IVS::RecordingConfigurationDestinationConfiguration`

  Name: String?

  RecordingReconnectWindowSeconds: Number?

  RenditionConfiguration: `AWS::IVS::RecordingConfigurationRenditionConfiguration`?

  Tags: Listing<Tag>?

  ThumbnailConfiguration: `AWS::IVS::RecordingConfigurationThumbnailConfiguration`?
}

class `AWS::IVS::RecordingConfigurationDestinationConfiguration` {
  S3: `AWS::IVSChat::LoggingConfigurationS3DestinationConfiguration`?
}

class `AWS::IVS::RecordingConfigurationRenditionConfiguration` {
  RenditionSelection: String?

  Renditions: Listing<String>?
}

class `AWS::IVSChat::LoggingConfigurationS3DestinationConfiguration` {
  BucketName: String
}

class `AWS::IVS::RecordingConfigurationThumbnailConfiguration` {
  RecordingMode: String?

  Resolution: String?

  Storage: Listing<String>?

  TargetIntervalSeconds: Number?
}

class `AWS::IVS::StreamKey` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IVS::StreamKeyProperties`

  Type: "AWS::IVS::StreamKey"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IVS::StreamKeyProperties` {
  ChannelArn: String

  Tags: Listing<Tag>?
}

class `AWS::IVSChat::LoggingConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IVSChat::LoggingConfigurationProperties`

  Type: "AWS::IVSChat::LoggingConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IVSChat::LoggingConfigurationProperties` {
  DestinationConfiguration: `AWS::IVSChat::LoggingConfigurationDestinationConfiguration`

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::IVSChat::LoggingConfigurationCloudWatchLogsDestinationConfiguration` {
  LogGroupName: String
}

class `AWS::IVSChat::LoggingConfigurationDestinationConfiguration` {
  CloudWatchLogs: `AWS::IVSChat::LoggingConfigurationCloudWatchLogsDestinationConfiguration`?

  Firehose: `AWS::IVSChat::LoggingConfigurationFirehoseDestinationConfiguration`?

  S3: `AWS::IVSChat::LoggingConfigurationS3DestinationConfiguration`?
}

class `AWS::IVSChat::LoggingConfigurationFirehoseDestinationConfiguration` {
  DeliveryStreamName: String
}

class `AWS::IVSChat::Room` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IVSChat::RoomProperties`?

  Type: "AWS::IVSChat::Room"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IVSChat::RoomProperties` {
  LoggingConfigurationIdentifiers: Listing<String>?

  MaximumMessageLength: Number?

  MaximumMessageRatePerSecond: Number?

  MessageReviewHandler: `AWS::IVSChat::RoomMessageReviewHandler`?

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::IVSChat::RoomMessageReviewHandler` {
  FallbackResult: String?

  Uri: String?
}

class `AWS::IdentityStore::Group` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IdentityStore::GroupProperties`

  Type: "AWS::IdentityStore::Group"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IdentityStore::GroupProperties` {
  Description: String?

  DisplayName: String

  IdentityStoreId: String
}

class `AWS::IdentityStore::GroupMembership` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IdentityStore::GroupMembershipProperties`

  Type: "AWS::IdentityStore::GroupMembership"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IdentityStore::GroupMembershipProperties` {
  GroupId: String

  IdentityStoreId: String

  MemberId: `AWS::IdentityStore::GroupMembershipMemberId`
}

class `AWS::IdentityStore::GroupMembershipMemberId` {
  UserId: String
}

class `AWS::ImageBuilder::Component` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ImageBuilder::ComponentProperties`

  Type: "AWS::ImageBuilder::Component"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ImageBuilder::ComponentProperties` {
  ChangeDescription: String?

  Data: String?

  Description: String?

  KmsKeyId: String?

  Name: String

  Platform: String

  SupportedOsVersions: Listing<String>?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Uri: String?

  Version: String
}

class `AWS::ImageBuilder::ContainerRecipe` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ImageBuilder::ContainerRecipeProperties`

  Type: "AWS::ImageBuilder::ContainerRecipe"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ImageBuilder::ContainerRecipeProperties` {
  Components: Listing<`AWS::ImageBuilder::ContainerRecipeComponentConfiguration`>

  ContainerType: String

  Description: String?

  DockerfileTemplateData: String?

  DockerfileTemplateUri: String?

  ImageOsVersionOverride: String?

  InstanceConfiguration: `AWS::ImageBuilder::ContainerRecipeInstanceConfiguration`?

  KmsKeyId: String?

  Name: String

  ParentImage: String

  PlatformOverride: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  TargetRepository: `AWS::ImageBuilder::DistributionConfigurationTargetContainerRepository`

  Version: String

  WorkingDirectory: String?
}

class `AWS::ImageBuilder::ContainerRecipeComponentConfiguration` {
  ComponentArn: String?

  Parameters: Listing<`AWS::ImageBuilder::ImageRecipeComponentParameter`>?
}

class `AWS::ImageBuilder::ImageRecipeComponentParameter` {
  Name: String

  Value: Listing<String>
}

class `AWS::ImageBuilder::ContainerRecipeInstanceBlockDeviceMapping` {
  DeviceName: String?

  Ebs: `AWS::ImageBuilder::ImageRecipeEbsInstanceBlockDeviceSpecification`?

  NoDevice: String?

  VirtualName: String?
}

class `AWS::ImageBuilder::ContainerRecipeInstanceConfiguration` {
  BlockDeviceMappings: Listing<`AWS::ImageBuilder::ContainerRecipeInstanceBlockDeviceMapping`>?

  Image: String?
}

class `AWS::ImageBuilder::DistributionConfigurationTargetContainerRepository` {
  RepositoryName: String?

  Service: String?
}

class `AWS::ImageBuilder::DistributionConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ImageBuilder::DistributionConfigurationProperties`

  Type: "AWS::ImageBuilder::DistributionConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ImageBuilder::DistributionConfigurationProperties` {
  Description: String?

  Distributions: Listing<`AWS::ImageBuilder::DistributionConfigurationDistribution`>

  Name: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::ImageBuilder::DistributionConfigurationAmiDistributionConfiguration` {
  AmiTags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Description: String?

  KmsKeyId: String?

  LaunchPermissionConfiguration: `AWS::ImageBuilder::DistributionConfigurationLaunchPermissionConfiguration`?

  Name: String?

  TargetAccountIds: Listing<String>?
}

class `AWS::ImageBuilder::DistributionConfigurationContainerDistributionConfiguration` {
  ContainerTags: Listing<String>?

  Description: String?

  TargetRepository: `AWS::ImageBuilder::DistributionConfigurationTargetContainerRepository`?
}

class `AWS::ImageBuilder::DistributionConfigurationDistribution` {
  AmiDistributionConfiguration: `AWS::ImageBuilder::DistributionConfigurationAmiDistributionConfiguration`?

  ContainerDistributionConfiguration: `AWS::ImageBuilder::DistributionConfigurationContainerDistributionConfiguration`?

  FastLaunchConfigurations: Listing<`AWS::ImageBuilder::DistributionConfigurationFastLaunchConfiguration`>?

  LaunchTemplateConfigurations: Listing<`AWS::ImageBuilder::DistributionConfigurationLaunchTemplateConfiguration`>?

  LicenseConfigurationArns: Listing<String>?

  Region: String
}

class `AWS::ImageBuilder::DistributionConfigurationFastLaunchConfiguration` {
  AccountId: String?

  Enabled: Boolean?

  LaunchTemplate: `AWS::ImageBuilder::DistributionConfigurationFastLaunchLaunchTemplateSpecification`?

  MaxParallelLaunches: Number?

  SnapshotConfiguration: `AWS::ImageBuilder::DistributionConfigurationFastLaunchSnapshotConfiguration`?
}

class `AWS::ImageBuilder::DistributionConfigurationFastLaunchLaunchTemplateSpecification` {
  LaunchTemplateId: String?

  LaunchTemplateName: String?

  LaunchTemplateVersion: String?
}

class `AWS::ImageBuilder::DistributionConfigurationFastLaunchSnapshotConfiguration` {
  TargetResourceCount: Number?
}

class `AWS::ImageBuilder::DistributionConfigurationLaunchPermissionConfiguration` {
  OrganizationArns: Listing<String>?

  OrganizationalUnitArns: Listing<String>?

  UserGroups: Listing<String>?

  UserIds: Listing<String>?
}

class `AWS::ImageBuilder::DistributionConfigurationLaunchTemplateConfiguration` {
  AccountId: String?

  LaunchTemplateId: String?

  SetDefaultVersion: Boolean?
}

class `AWS::ImageBuilder::Image` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ImageBuilder::ImageProperties`

  Type: "AWS::ImageBuilder::Image"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ImageBuilder::ImageProperties` {
  ContainerRecipeArn: String?

  DistributionConfigurationArn: String?

  EnhancedImageMetadataEnabled: Boolean?

  ExecutionRole: String?

  ImageRecipeArn: String?

  ImageScanningConfiguration: `AWS::ImageBuilder::ImageImageScanningConfiguration`?

  ImageTestsConfiguration: `AWS::ImageBuilder::ImagePipelineImageTestsConfiguration`?

  InfrastructureConfigurationArn: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Workflows: Listing<`AWS::ImageBuilder::ImageWorkflowConfiguration`>?
}

class `AWS::ImageBuilder::ImagePipelineEcrConfiguration` {
  ContainerTags: Listing<String>?

  RepositoryName: String?
}

class `AWS::ImageBuilder::ImageImageScanningConfiguration` {
  EcrConfiguration: `AWS::ImageBuilder::ImagePipelineEcrConfiguration`?

  ImageScanningEnabled: Boolean?
}

class `AWS::ImageBuilder::ImagePipelineImageTestsConfiguration` {
  ImageTestsEnabled: Boolean?

  TimeoutMinutes: Number?
}

class `AWS::ImageBuilder::ImageWorkflowConfiguration` {
  OnFailure: String?

  ParallelGroup: String?

  Parameters: Listing<`AWS::ImageBuilder::ImagePipelineWorkflowParameter`>?

  WorkflowArn: String?
}

class `AWS::ImageBuilder::ImagePipelineWorkflowParameter` {
  Name: String?

  Value: Listing<String>?
}

class `AWS::ImageBuilder::ImagePipeline` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ImageBuilder::ImagePipelineProperties`

  Type: "AWS::ImageBuilder::ImagePipeline"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ImageBuilder::ImagePipelineProperties` {
  ContainerRecipeArn: String?

  Description: String?

  DistributionConfigurationArn: String?

  EnhancedImageMetadataEnabled: Boolean?

  ExecutionRole: String?

  ImageRecipeArn: String?

  ImageScanningConfiguration: `AWS::ImageBuilder::ImagePipelineImageScanningConfiguration`?

  ImageTestsConfiguration: `AWS::ImageBuilder::ImagePipelineImageTestsConfiguration`?

  InfrastructureConfigurationArn: String

  Name: String

  Schedule: `AWS::ImageBuilder::ImagePipelineSchedule`?

  Status: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Workflows: Listing<`AWS::ImageBuilder::ImagePipelineWorkflowConfiguration`>?
}

class `AWS::ImageBuilder::ImagePipelineImageScanningConfiguration` {
  EcrConfiguration: `AWS::ImageBuilder::ImagePipelineEcrConfiguration`?

  ImageScanningEnabled: Boolean?
}

class `AWS::ImageBuilder::ImagePipelineSchedule` {
  PipelineExecutionStartCondition: String?

  ScheduleExpression: String?
}

class `AWS::ImageBuilder::ImagePipelineWorkflowConfiguration` {
  OnFailure: String?

  ParallelGroup: String?

  Parameters: Listing<`AWS::ImageBuilder::ImagePipelineWorkflowParameter`>?

  WorkflowArn: String?
}

class `AWS::ImageBuilder::ImageRecipe` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ImageBuilder::ImageRecipeProperties`

  Type: "AWS::ImageBuilder::ImageRecipe"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ImageBuilder::ImageRecipeProperties` {
  AdditionalInstanceConfiguration: `AWS::ImageBuilder::ImageRecipeAdditionalInstanceConfiguration`?

  BlockDeviceMappings: Listing<`AWS::ImageBuilder::ImageRecipeInstanceBlockDeviceMapping`>?

  Components: Listing<`AWS::ImageBuilder::ImageRecipeComponentConfiguration`>

  Description: String?

  Name: String

  ParentImage: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Version: String

  WorkingDirectory: String?
}

class `AWS::ImageBuilder::ImageRecipeAdditionalInstanceConfiguration` {
  SystemsManagerAgent: `AWS::ImageBuilder::ImageRecipeSystemsManagerAgent`?

  UserDataOverride: String?
}

class `AWS::ImageBuilder::ImageRecipeComponentConfiguration` {
  ComponentArn: String?

  Parameters: Listing<`AWS::ImageBuilder::ImageRecipeComponentParameter`>?
}

class `AWS::ImageBuilder::ImageRecipeInstanceBlockDeviceMapping` {
  DeviceName: String?

  Ebs: `AWS::ImageBuilder::ImageRecipeEbsInstanceBlockDeviceSpecification`?

  NoDevice: String?

  VirtualName: String?
}

class `AWS::ImageBuilder::ImageRecipeSystemsManagerAgent` {
  UninstallAfterBuild: Boolean?
}

class `AWS::ImageBuilder::InfrastructureConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ImageBuilder::InfrastructureConfigurationProperties`

  Type: "AWS::ImageBuilder::InfrastructureConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ImageBuilder::InfrastructureConfigurationProperties` {
  Description: String?

  InstanceMetadataOptions: `AWS::ImageBuilder::InfrastructureConfigurationInstanceMetadataOptions`?

  InstanceProfileName: String

  InstanceTypes: Listing<String>?

  KeyPair: String?

  Logging: `AWS::ImageBuilder::InfrastructureConfigurationLogging`?

  Name: String

  ResourceTags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  SecurityGroupIds: Listing<String>?

  SnsTopicArn: String?

  SubnetId: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  TerminateInstanceOnFailure: Boolean?
}

class `AWS::ImageBuilder::InfrastructureConfigurationInstanceMetadataOptions` {
  HttpPutResponseHopLimit: Number?

  HttpTokens: String?
}

class `AWS::ImageBuilder::InfrastructureConfigurationLogging` {
  S3Logs: `AWS::ImageBuilder::InfrastructureConfigurationS3Logs`?
}

class `AWS::ImageBuilder::InfrastructureConfigurationS3Logs` {
  S3BucketName: String?

  S3KeyPrefix: String?
}

class `AWS::ImageBuilder::LifecyclePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ImageBuilder::LifecyclePolicyProperties`

  Type: "AWS::ImageBuilder::LifecyclePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ImageBuilder::LifecyclePolicyProperties` {
  Description: String?

  ExecutionRole: String

  Name: String

  PolicyDetails: Listing<`AWS::ImageBuilder::LifecyclePolicyPolicyDetail`>

  ResourceSelection: `AWS::ImageBuilder::LifecyclePolicyResourceSelection`

  ResourceType: String

  Status: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::ImageBuilder::LifecyclePolicyAction` {
  IncludeResources: `AWS::ImageBuilder::LifecyclePolicyIncludeResources`?

  Type: String
}

class `AWS::ImageBuilder::LifecyclePolicyAmiExclusionRules` {
  IsPublic: Boolean?

  LastLaunched: `AWS::SecurityHub::AutomationRuleDateRange`?

  Regions: Listing<String>?

  SharedAccounts: Listing<String>?

  TagMap: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::ImageBuilder::LifecyclePolicyExclusionRules` {
  Amis: `AWS::ImageBuilder::LifecyclePolicyAmiExclusionRules`?

  TagMap: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::ImageBuilder::LifecyclePolicyFilter` {
  RetainAtLeast: Number?

  Type: String

  Unit: String?

  Value: Number
}

class `AWS::ImageBuilder::LifecyclePolicyIncludeResources` {
  Amis: Boolean?

  Containers: Boolean?

  Snapshots: Boolean?
}

class `AWS::ImageBuilder::LifecyclePolicyPolicyDetail` {
  Action: `AWS::ImageBuilder::LifecyclePolicyAction`

  ExclusionRules: `AWS::ImageBuilder::LifecyclePolicyExclusionRules`?

  Filter: `AWS::ImageBuilder::LifecyclePolicyFilter`
}

class `AWS::ImageBuilder::LifecyclePolicyRecipeSelection` {
  Name: String

  SemanticVersion: String?
}

class `AWS::ImageBuilder::LifecyclePolicyResourceSelection` {
  Recipes: Listing<`AWS::ImageBuilder::LifecyclePolicyRecipeSelection`>?

  TagMap: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::ImageBuilder::Workflow` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ImageBuilder::WorkflowProperties`

  Type: "AWS::ImageBuilder::Workflow"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ImageBuilder::WorkflowProperties` {
  ChangeDescription: String?

  Data: String?

  Description: String?

  KmsKeyId: String?

  Name: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Type: String

  Uri: String?

  Version: String
}

class `AWS::Inspector::AssessmentTarget` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Inspector::AssessmentTargetProperties`?

  Type: "AWS::Inspector::AssessmentTarget"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Inspector::AssessmentTargetProperties` {
  AssessmentTargetName: String?

  ResourceGroupArn: String?
}

class `AWS::Inspector::AssessmentTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Inspector::AssessmentTemplateProperties`

  Type: "AWS::Inspector::AssessmentTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Inspector::AssessmentTemplateProperties` {
  AssessmentTargetArn: String

  AssessmentTemplateName: String?

  DurationInSeconds: Number

  RulesPackageArns: Listing<String>

  UserAttributesForFindings: Listing<Tag>?
}

class `AWS::Inspector::ResourceGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Inspector::ResourceGroupProperties`

  Type: "AWS::Inspector::ResourceGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Inspector::ResourceGroupProperties` {
  ResourceGroupTags: Listing<Tag>
}

class `AWS::InspectorV2::Filter` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::InspectorV2::FilterProperties`

  Type: "AWS::InspectorV2::Filter"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::InspectorV2::FilterProperties` {
  Description: String?

  FilterAction: String

  FilterCriteria: `AWS::InspectorV2::FilterFilterCriteria`

  Name: String
}

class `AWS::InspectorV2::FilterDateFilter` {
  EndInclusive: Number?

  StartInclusive: Number?
}

class `AWS::InspectorV2::FilterFilterCriteria` {
  AwsAccountId: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  ComponentId: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  ComponentType: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  Ec2InstanceImageId: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  Ec2InstanceSubnetId: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  Ec2InstanceVpcId: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  EcrImageArchitecture: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  EcrImageHash: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  EcrImagePushedAt: Listing<`AWS::InspectorV2::FilterDateFilter`>?

  EcrImageRegistry: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  EcrImageRepositoryName: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  EcrImageTags: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  FindingArn: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  FindingStatus: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  FindingType: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  FirstObservedAt: Listing<`AWS::InspectorV2::FilterDateFilter`>?

  InspectorScore: Listing<`AWS::InspectorV2::FilterNumberFilter`>?

  LastObservedAt: Listing<`AWS::InspectorV2::FilterDateFilter`>?

  NetworkProtocol: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  PortRange: Listing<`AWS::InspectorV2::FilterPortRangeFilter`>?

  RelatedVulnerabilities: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  ResourceId: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  ResourceTags: Listing<`AWS::InspectorV2::FilterMapFilter`>?

  ResourceType: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  Severity: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  Title: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  UpdatedAt: Listing<`AWS::InspectorV2::FilterDateFilter`>?

  VendorSeverity: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  VulnerabilityId: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  VulnerabilitySource: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  VulnerablePackages: Listing<`AWS::InspectorV2::FilterPackageFilter`>?
}

class `AWS::InspectorV2::FilterMapFilter` {
  Comparison: String

  Key: String?

  Value: String?
}

class `AWS::InspectorV2::FilterNumberFilter` {
  LowerInclusive: Number?

  UpperInclusive: Number?
}

class `AWS::InspectorV2::FilterPackageFilter` {
  Architecture: `AWS::SecurityHub::AutomationRuleStringFilter`?

  Epoch: `AWS::InspectorV2::FilterNumberFilter`?

  Name: `AWS::SecurityHub::AutomationRuleStringFilter`?

  Release: `AWS::SecurityHub::AutomationRuleStringFilter`?

  SourceLayerHash: `AWS::SecurityHub::AutomationRuleStringFilter`?

  Version: `AWS::SecurityHub::AutomationRuleStringFilter`?
}

class `AWS::InspectorV2::FilterPortRangeFilter` {
  BeginInclusive: Number?

  EndInclusive: Number?
}

class `AWS::SecurityHub::AutomationRuleStringFilter` {
  Comparison: String

  Value: String
}

class `AWS::InternetMonitor::Monitor` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::InternetMonitor::MonitorProperties`

  Type: "AWS::InternetMonitor::Monitor"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::InternetMonitor::MonitorProperties` {
  HealthEventsConfig: `AWS::InternetMonitor::MonitorHealthEventsConfig`?

  InternetMeasurementsLogDelivery: `AWS::InternetMonitor::MonitorInternetMeasurementsLogDelivery`?

  MaxCityNetworksToMonitor: Number?

  MonitorName: String

  Resources: Listing<String>?

  ResourcesToAdd: Listing<String>?

  ResourcesToRemove: Listing<String>?

  Status: String?

  Tags: Listing<Tag>?

  TrafficPercentageToMonitor: Number?
}

class `AWS::InternetMonitor::MonitorHealthEventsConfig` {
  AvailabilityLocalHealthEventsConfig: `AWS::InternetMonitor::MonitorLocalHealthEventsConfig`?

  AvailabilityScoreThreshold: Number?

  PerformanceLocalHealthEventsConfig: `AWS::InternetMonitor::MonitorLocalHealthEventsConfig`?

  PerformanceScoreThreshold: Number?
}

class `AWS::InternetMonitor::MonitorInternetMeasurementsLogDelivery` {
  S3Config: `AWS::InternetMonitor::MonitorS3Config`?
}

class `AWS::InternetMonitor::MonitorLocalHealthEventsConfig` {
  HealthScoreThreshold: Number?

  MinTrafficImpact: Number?

  Status: String?
}

class `AWS::InternetMonitor::MonitorS3Config` {
  BucketName: String?

  BucketPrefix: String?

  LogDeliveryStatus: String?
}

class `AWS::IoT1Click::Device` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT1Click::DeviceProperties`

  Type: "AWS::IoT1Click::Device"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT1Click::DeviceProperties` {
  DeviceId: String

  Enabled: Boolean
}

class `AWS::IoT1Click::Placement` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT1Click::PlacementProperties`

  Type: "AWS::IoT1Click::Placement"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT1Click::PlacementProperties` {
  AssociatedDevices: Dynamic?

  Attributes: Dynamic?

  PlacementName: String?

  ProjectName: String
}

class `AWS::IoT1Click::Project` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT1Click::ProjectProperties`

  Type: "AWS::IoT1Click::Project"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT1Click::ProjectProperties` {
  Description: String?

  PlacementTemplate: `AWS::IoT1Click::ProjectPlacementTemplate`

  ProjectName: String?
}

class `AWS::IoT1Click::ProjectDeviceTemplate` {
  CallbackOverrides: Dynamic?

  DeviceType: String?
}

class `AWS::IoT1Click::ProjectPlacementTemplate` {
  DefaultAttributes: Dynamic?

  DeviceTemplates: Dynamic?
}

class `AWS::IoT::AccountAuditConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::AccountAuditConfigurationProperties`

  Type: "AWS::IoT::AccountAuditConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::AccountAuditConfigurationProperties` {
  AccountId: String

  AuditCheckConfigurations: `AWS::IoT::AccountAuditConfigurationAuditCheckConfigurations`

  AuditNotificationTargetConfigurations: `AWS::IoT::AccountAuditConfigurationAuditNotificationTargetConfigurations`?

  RoleArn: String
}

class `AWS::IoT::AccountAuditConfigurationAuditCheckConfigurations` {
  AuthenticatedCognitoRoleOverlyPermissiveCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  CaCertificateExpiringCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  CaCertificateKeyQualityCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  ConflictingClientIdsCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  DeviceCertificateExpiringCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  DeviceCertificateKeyQualityCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  DeviceCertificateSharedCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  IntermediateCaRevokedForActiveDeviceCertificatesCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  IoTPolicyPotentialMisConfigurationCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  IotPolicyOverlyPermissiveCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  IotRoleAliasAllowsAccessToUnusedServicesCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  IotRoleAliasOverlyPermissiveCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  LoggingDisabledCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  RevokedCaCertificateStillActiveCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  RevokedDeviceCertificateStillActiveCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  UnauthenticatedCognitoRoleOverlyPermissiveCheck: `AWS::StepFunctions::StateMachineTracingConfiguration`?
}

class `AWS::IoT::AccountAuditConfigurationAuditNotificationTarget` {
  Enabled: Boolean?

  RoleArn: String?

  TargetArn: String?
}

class `AWS::IoT::AccountAuditConfigurationAuditNotificationTargetConfigurations` {
  Sns: `AWS::IoT::AccountAuditConfigurationAuditNotificationTarget`?
}

class `AWS::IoT::Authorizer` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::AuthorizerProperties`

  Type: "AWS::IoT::Authorizer"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::AuthorizerProperties` {
  AuthorizerFunctionArn: String

  AuthorizerName: String?

  EnableCachingForHttp: Boolean?

  SigningDisabled: Boolean?

  Status: String?

  Tags: Listing<Tag>?

  TokenKeyName: String?

  TokenSigningPublicKeys: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::IoT::BillingGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::BillingGroupProperties`?

  Type: "AWS::IoT::BillingGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::BillingGroupProperties` {
  BillingGroupName: String?

  BillingGroupProperties: `AWS::IoT::BillingGroupBillingGroupProperties`?

  Tags: Listing<Tag>?
}

class `AWS::IoT::BillingGroupBillingGroupProperties` {
  BillingGroupDescription: String?
}

class `AWS::IoT::CACertificate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::CACertificateProperties`

  Type: "AWS::IoT::CACertificate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::CACertificateProperties` {
  AutoRegistrationStatus: String?

  CACertificatePem: String

  CertificateMode: String?

  RegistrationConfig: `AWS::IoT::CACertificateRegistrationConfig`?

  RemoveAutoRegistration: Boolean?

  Status: String

  Tags: Listing<Tag>?

  VerificationCertificatePem: String?
}

class `AWS::IoT::CACertificateRegistrationConfig` {
  RoleArn: String?

  TemplateBody: String?

  TemplateName: String?
}

class `AWS::IoT::Certificate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::CertificateProperties`

  Type: "AWS::IoT::Certificate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::CertificateProperties` {
  CACertificatePem: String?

  CertificateMode: String?

  CertificatePem: String?

  CertificateSigningRequest: String?

  Status: String
}

class `AWS::IoT::CertificateProvider` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::CertificateProviderProperties`

  Type: "AWS::IoT::CertificateProvider"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::CertificateProviderProperties` {
  AccountDefaultForOperations: Listing<String>

  CertificateProviderName: String?

  LambdaFunctionArn: String

  Tags: Listing<Tag>?
}

class `AWS::IoT::CustomMetric` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::CustomMetricProperties`

  Type: "AWS::IoT::CustomMetric"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::CustomMetricProperties` {
  DisplayName: String?

  MetricName: String?

  MetricType: String

  Tags: Listing<Tag>?
}

class `AWS::IoT::Dimension` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::DimensionProperties`

  Type: "AWS::IoT::Dimension"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::DimensionProperties` {
  Name: String?

  StringValues: Listing<String>

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::IoT::DomainConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::DomainConfigurationProperties`?

  Type: "AWS::IoT::DomainConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::DomainConfigurationProperties` {
  AuthorizerConfig: `AWS::IoT::DomainConfigurationAuthorizerConfig`?

  DomainConfigurationName: String?

  DomainConfigurationStatus: String?

  DomainName: String?

  ServerCertificateArns: Listing<String>?

  ServiceType: String?

  Tags: Listing<Tag>?

  TlsConfig: `AWS::IoT::DomainConfigurationTlsConfig`?

  ValidationCertificateArn: String?
}

class `AWS::IoT::DomainConfigurationAuthorizerConfig` {
  AllowAuthorizerOverride: Boolean?

  DefaultAuthorizerName: String?
}

class `AWS::IoT::DomainConfigurationServerCertificateSummary` {
  ServerCertificateArn: String?

  ServerCertificateStatus: String?

  ServerCertificateStatusDetail: String?
}

class `AWS::IoT::DomainConfigurationTlsConfig` {
  SecurityPolicy: String?
}

class `AWS::IoT::FleetMetric` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::FleetMetricProperties`

  Type: "AWS::IoT::FleetMetric"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::FleetMetricProperties` {
  AggregationField: String?

  AggregationType: `AWS::QuickSight::DashboardStringParameter`?

  Description: String?

  IndexName: String?

  MetricName: String

  Period: Number?

  QueryString: String?

  QueryVersion: String?

  Tags: Listing<Tag>?

  Unit: String?
}

class `AWS::QuickSight::DashboardStringParameter` {
  Name: String

  Values: Listing<String>
}

class `AWS::IoT::JobTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::JobTemplateProperties`

  Type: "AWS::IoT::JobTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::JobTemplateProperties` {
  AbortConfig: `AWS::IoT::JobTemplateAbortConfig`?

  Description: String

  DestinationPackageVersions: Listing<String>?

  Document: String?

  DocumentSource: String?

  JobArn: String?

  JobExecutionsRetryConfig: `AWS::IoT::JobTemplateJobExecutionsRetryConfig`?

  JobExecutionsRolloutConfig: `AWS::IoT::JobTemplateJobExecutionsRolloutConfig`?

  JobTemplateId: String

  MaintenanceWindows: Listing<`AWS::IoT::JobTemplateMaintenanceWindow`>?

  PresignedUrlConfig: `AWS::IoT::JobTemplatePresignedUrlConfig`?

  Tags: Listing<Tag>?

  TimeoutConfig: `AWS::IoT::JobTemplateTimeoutConfig`?
}

class `AWS::IoT::JobTemplateAbortConfig` {
  CriteriaList: Listing<`AWS::IoT::JobTemplateAbortCriteria`>
}

class `AWS::IoT::JobTemplateExponentialRolloutRate` {
  BaseRatePerMinute: Number

  IncrementFactor: Number

  RateIncreaseCriteria: `AWS::IoT::JobTemplateRateIncreaseCriteria`
}

class `AWS::IoT::JobTemplateJobExecutionsRetryConfig` {
  RetryCriteriaList: Listing<`AWS::IoT::JobTemplateRetryCriteria`>?
}

class `AWS::IoT::JobTemplateJobExecutionsRolloutConfig` {
  ExponentialRolloutRate: `AWS::IoT::JobTemplateExponentialRolloutRate`?

  MaximumPerMinute: Number?
}

class `AWS::IoT::JobTemplateMaintenanceWindow` {
  DurationInMinutes: Number?

  StartTime: String?
}

class `AWS::IoT::JobTemplatePresignedUrlConfig` {
  ExpiresInSec: Number?

  RoleArn: String
}

class `AWS::IoT::JobTemplateRetryCriteria` {
  FailureType: String?

  NumberOfRetries: Number?
}

class `AWS::IoT::JobTemplateTimeoutConfig` {
  InProgressTimeoutInMinutes: Number
}

class `AWS::IoT::Logging` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::LoggingProperties`

  Type: "AWS::IoT::Logging"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::LoggingProperties` {
  AccountId: String

  DefaultLogLevel: String

  RoleArn: String
}

class `AWS::IoT::MitigationAction` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::MitigationActionProperties`

  Type: "AWS::IoT::MitigationAction"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::MitigationActionProperties` {
  ActionName: String?

  ActionParams: `AWS::IoT::MitigationActionActionParams`

  RoleArn: String

  Tags: Listing<Tag>?
}

class `AWS::IoT::MitigationActionActionParams` {
  AddThingsToThingGroupParams: `AWS::IoT::MitigationActionAddThingsToThingGroupParams`?

  EnableIoTLoggingParams: `AWS::IoT::MitigationActionEnableIoTLoggingParams`?

  PublishFindingToSnsParams: `AWS::Timestream::ScheduledQuerySnsConfiguration`?

  ReplaceDefaultPolicyVersionParams: `AWS::IoT::MitigationActionReplaceDefaultPolicyVersionParams`?

  UpdateCACertificateParams: `AWS::WAFv2::LoggingConfigurationActionCondition`?

  UpdateDeviceCertificateParams: `AWS::WAFv2::LoggingConfigurationActionCondition`?
}

class `AWS::IoT::MitigationActionAddThingsToThingGroupParams` {
  OverrideDynamicGroups: Boolean?

  ThingGroupNames: Listing<String>
}

class `AWS::IoT::MitigationActionEnableIoTLoggingParams` {
  LogLevel: String

  RoleArnForLogging: String
}

class `AWS::Timestream::ScheduledQuerySnsConfiguration` {
  TopicArn: String
}

class `AWS::IoT::MitigationActionReplaceDefaultPolicyVersionParams` {
  TemplateName: String
}

class `AWS::WAFv2::LoggingConfigurationActionCondition` {
  Action: String
}

class `AWS::IoT::Policy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::PolicyProperties`

  Type: "AWS::IoT::Policy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::PolicyProperties` {
  PolicyDocument: Dynamic

  PolicyName: String?

  Tags: Listing<Tag>?
}

class `AWS::IoT::PolicyPrincipalAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::PolicyPrincipalAttachmentProperties`

  Type: "AWS::IoT::PolicyPrincipalAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::PolicyPrincipalAttachmentProperties` {
  PolicyName: String

  Principal: String
}

class `AWS::IoT::ProvisioningTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::ProvisioningTemplateProperties`

  Type: "AWS::IoT::ProvisioningTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::ProvisioningTemplateProperties` {
  Description: String?

  Enabled: Boolean?

  PreProvisioningHook: `AWS::IoT::ProvisioningTemplateProvisioningHook`?

  ProvisioningRoleArn: String

  Tags: Listing<Tag>?

  TemplateBody: String

  TemplateName: String?

  TemplateType: String?
}

class `AWS::IoT::ProvisioningTemplateProvisioningHook` {
  PayloadVersion: String?

  TargetArn: String?
}

class `AWS::IoT::ResourceSpecificLogging` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::ResourceSpecificLoggingProperties`

  Type: "AWS::IoT::ResourceSpecificLogging"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::ResourceSpecificLoggingProperties` {
  LogLevel: String

  TargetName: String

  TargetType: String
}

class `AWS::IoT::RoleAlias` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::RoleAliasProperties`

  Type: "AWS::IoT::RoleAlias"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::RoleAliasProperties` {
  CredentialDurationSeconds: Number?

  RoleAlias: String?

  RoleArn: String

  Tags: Listing<Tag>?
}

class `AWS::IoT::ScheduledAudit` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::ScheduledAuditProperties`

  Type: "AWS::IoT::ScheduledAudit"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::ScheduledAuditProperties` {
  DayOfMonth: String?

  DayOfWeek: String?

  Frequency: String

  ScheduledAuditName: String?

  Tags: Listing<Tag>?

  TargetCheckNames: Listing<String>
}

class `AWS::IoT::SecurityProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::SecurityProfileProperties`?

  Type: "AWS::IoT::SecurityProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::SecurityProfileProperties` {
  AdditionalMetricsToRetainV2: Listing<`AWS::IoT::SecurityProfileMetricToRetain`>?

  AlertTargets: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::IoT::SecurityProfileAlertTarget`>?

  Behaviors: Listing<`AWS::IoT::SecurityProfileBehavior`>?

  MetricsExportConfig: `AWS::IoT::SecurityProfileMetricsExportConfig`?

  SecurityProfileDescription: String?

  SecurityProfileName: String?

  Tags: Listing<Tag>?

  TargetArns: Listing<String>?
}

class `AWS::IoT::SecurityProfileAlertTarget` {
  AlertTargetArn: String

  RoleArn: String
}

class `AWS::IoT::SecurityProfileBehavior` {
  Criteria: `AWS::IoT::SecurityProfileBehaviorCriteria`?

  ExportMetric: Boolean?

  Metric: String?

  MetricDimension: `AWS::IoT::SecurityProfileMetricDimension`?

  Name: String

  SuppressAlerts: Boolean?
}

class `AWS::IoT::SecurityProfileBehaviorCriteria` {
  ComparisonOperator: String?

  ConsecutiveDatapointsToAlarm: Number?

  ConsecutiveDatapointsToClear: Number?

  DurationSeconds: Number?

  MlDetectionConfig: `AWS::IoT::SecurityProfileMachineLearningDetectionConfig`?

  StatisticalThreshold: `AWS::IoT::SecurityProfileStatisticalThreshold`?

  Value: `AWS::IoT::SecurityProfileMetricValue`?
}

class `AWS::IoT::SecurityProfileMachineLearningDetectionConfig` {
  ConfidenceLevel: String?
}

class `AWS::IoT::SecurityProfileMetricDimension` {
  DimensionName: String

  Operator: String?
}

class `AWS::IoT::SecurityProfileMetricToRetain` {
  ExportMetric: Boolean?

  Metric: String

  MetricDimension: `AWS::IoT::SecurityProfileMetricDimension`?
}

class `AWS::IoT::SecurityProfileMetricValue` {
  Cidrs: Listing<String>?

  Count: String?

  Number: Number?

  Numbers: Listing<Number>?

  Ports: Listing<Number>?

  Strings: Listing<String>?
}

class `AWS::IoT::SecurityProfileMetricsExportConfig` {
  MqttTopic: String

  RoleArn: String
}

class `AWS::IoT::SecurityProfileStatisticalThreshold` {
  Statistic: String?
}

class `AWS::IoT::SoftwarePackage` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::SoftwarePackageProperties`?

  Type: "AWS::IoT::SoftwarePackage"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::SoftwarePackageProperties` {
  Description: String?

  PackageName: String?

  Tags: Listing<Tag>?
}

class `AWS::IoT::SoftwarePackageVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::SoftwarePackageVersionProperties`

  Type: "AWS::IoT::SoftwarePackageVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::SoftwarePackageVersionProperties` {
  Attributes: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Description: String?

  PackageName: String

  Tags: Listing<Tag>?

  VersionName: String?
}

class `AWS::IoT::Thing` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::ThingProperties`?

  Type: "AWS::IoT::Thing"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::ThingProperties` {
  AttributePayload: `AWS::IoT::ThingGroupAttributePayload`?

  ThingName: String?
}

class `AWS::IoT::ThingGroupAttributePayload` {
  Attributes: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::IoT::ThingGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::ThingGroupProperties`?

  Type: "AWS::IoT::ThingGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::ThingGroupProperties` {
  ParentGroupName: String?

  QueryString: String?

  Tags: Listing<Tag>?

  ThingGroupName: String?

  ThingGroupProperties: `AWS::IoT::ThingGroupThingGroupProperties`?
}

class `AWS::IoT::ThingGroupThingGroupProperties` {
  AttributePayload: `AWS::IoT::ThingGroupAttributePayload`?

  ThingGroupDescription: String?
}

class `AWS::IoT::ThingPrincipalAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::ThingPrincipalAttachmentProperties`

  Type: "AWS::IoT::ThingPrincipalAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::ThingPrincipalAttachmentProperties` {
  Principal: String

  ThingName: String
}

class `AWS::IoT::ThingType` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::ThingTypeProperties`?

  Type: "AWS::IoT::ThingType"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::ThingTypeProperties` {
  DeprecateThingType: Boolean?

  Tags: Listing<Tag>?

  ThingTypeName: String?

  ThingTypeProperties: `AWS::IoT::ThingTypeThingTypeProperties`?
}

class `AWS::IoT::ThingTypeThingTypeProperties` {
  SearchableAttributes: Listing<String>?

  ThingTypeDescription: String?
}

class `AWS::IoT::TopicRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::TopicRuleProperties`

  Type: "AWS::IoT::TopicRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::TopicRuleProperties` {
  RuleName: String?

  Tags: Listing<Tag>?

  TopicRulePayload: `AWS::IoT::TopicRuleTopicRulePayload`
}

class `AWS::IoT::TopicRuleAction` {
  CloudwatchAlarm: `AWS::IoT::TopicRuleCloudwatchAlarmAction`?

  CloudwatchLogs: `AWS::IoT::TopicRuleCloudwatchLogsAction`?

  CloudwatchMetric: `AWS::IoT::TopicRuleCloudwatchMetricAction`?

  DynamoDB: `AWS::IoT::TopicRuleDynamoDBAction`?

  DynamoDBv2: `AWS::IoT::TopicRuleDynamoDBv2Action`?

  Elasticsearch: `AWS::IoT::TopicRuleOpenSearchAction`?

  Firehose: `AWS::IoT::TopicRuleFirehoseAction`?

  Http: `AWS::IoT::TopicRuleHttpAction`?

  IotAnalytics: `AWS::IoT::TopicRuleIotAnalyticsAction`?

  IotEvents: `AWS::IoT::TopicRuleIotEventsAction`?

  IotSiteWise: `AWS::IoT::TopicRuleIotSiteWiseAction`?

  Kafka: `AWS::IoT::TopicRuleKafkaAction`?

  Kinesis: `AWS::IoT::TopicRuleKinesisAction`?

  Lambda: `AWS::IoT::TopicRuleLambdaAction`?

  Location: `AWS::IoT::TopicRuleLocationAction`?

  OpenSearch: `AWS::IoT::TopicRuleOpenSearchAction`?

  Republish: `AWS::IoT::TopicRuleRepublishAction`?

  S3: `AWS::IoT::TopicRuleS3Action`?

  Sns: `AWS::IoT::TopicRuleSnsAction`?

  Sqs: `AWS::IoT::TopicRuleSqsAction`?

  StepFunctions: `AWS::IoT::TopicRuleStepFunctionsAction`?

  Timestream: `AWS::IoT::TopicRuleTimestreamAction`?
}

class `AWS::IoTEvents::DetectorModelAssetPropertyTimestamp` {
  OffsetInNanos: String?

  TimeInSeconds: String
}

class `AWS::IoT::TopicRuleAssetPropertyValue` {
  Quality: String?

  Timestamp: `AWS::IoTEvents::DetectorModelAssetPropertyTimestamp`

  Value: `AWS::IoTEvents::DetectorModelAssetPropertyVariant`
}

class `AWS::IoTEvents::DetectorModelAssetPropertyVariant` {
  BooleanValue: String?

  DoubleValue: String?

  IntegerValue: String?

  StringValue: String?
}

class `AWS::IoT::TopicRuleCloudwatchAlarmAction` {
  AlarmName: String

  RoleArn: String

  StateReason: String

  StateValue: String
}

class `AWS::IoT::TopicRuleCloudwatchLogsAction` {
  BatchMode: Boolean?

  LogGroupName: String

  RoleArn: String
}

class `AWS::IoT::TopicRuleCloudwatchMetricAction` {
  MetricName: String

  MetricNamespace: String

  MetricTimestamp: String?

  MetricUnit: String

  MetricValue: String

  RoleArn: String
}

class `AWS::IoT::TopicRuleDynamoDBAction` {
  HashKeyField: String

  HashKeyType: String?

  HashKeyValue: String

  PayloadField: String?

  RangeKeyField: String?

  RangeKeyType: String?

  RangeKeyValue: String?

  RoleArn: String

  TableName: String
}

class `AWS::IoT::TopicRuleDynamoDBv2Action` {
  PutItem: `AWS::IoT::TopicRulePutItemInput`?

  RoleArn: String?
}

class `AWS::IoT::TopicRuleOpenSearchAction` {
  Endpoint: String

  Id: String

  Index: String

  RoleArn: String

  Type: String
}

class `AWS::IoT::TopicRuleFirehoseAction` {
  BatchMode: Boolean?

  DeliveryStreamName: String

  RoleArn: String

  Separator: String?
}

class `AWS::IoT::TopicRuleHttpAction` {
  Auth: `AWS::IoT::TopicRuleHttpAuthorization`?

  ConfirmationUrl: String?

  Headers: Listing<Tag>?

  Url: String
}

class `AWS::IoT::TopicRuleHttpAuthorization` {
  Sigv4: `AWS::IoT::TopicRuleSigV4Authorization`?
}

class `AWS::IoT::TopicRuleIotAnalyticsAction` {
  BatchMode: Boolean?

  ChannelName: String

  RoleArn: String
}

class `AWS::IoT::TopicRuleIotEventsAction` {
  BatchMode: Boolean?

  InputName: String

  MessageId: String?

  RoleArn: String
}

class `AWS::IoT::TopicRuleIotSiteWiseAction` {
  PutAssetPropertyValueEntries: Listing<`AWS::IoT::TopicRulePutAssetPropertyValueEntry`>

  RoleArn: String
}

class `AWS::IoT::TopicRuleKafkaAction` {
  ClientProperties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>

  DestinationArn: String

  Headers: Listing<Tag>?

  Key: String?

  Partition: String?

  Topic: String
}

class `AWS::IoT::TopicRuleKinesisAction` {
  PartitionKey: String?

  RoleArn: String

  StreamName: String
}

class `AWS::IoT::TopicRuleLambdaAction` {
  FunctionArn: String?
}

class `AWS::IoT::TopicRuleLocationAction` {
  DeviceId: String

  Latitude: String

  Longitude: String

  RoleArn: String

  Timestamp: `AWS::IoT::TopicRuleTimestamp`?

  TrackerName: String
}

class `AWS::IoT::TopicRulePutAssetPropertyValueEntry` {
  AssetId: String?

  EntryId: String?

  PropertyAlias: String?

  PropertyId: String?

  PropertyValues: Listing<`AWS::IoT::TopicRuleAssetPropertyValue`>
}

class `AWS::IoT::TopicRulePutItemInput` {
  TableName: String
}

class `AWS::IoT::TopicRuleRepublishAction` {
  Headers: `AWS::IoT::TopicRuleRepublishActionHeaders`?

  Qos: Number?

  RoleArn: String

  Topic: String
}

class `AWS::IoT::TopicRuleRepublishActionHeaders` {
  ContentType: String?

  CorrelationData: String?

  MessageExpiry: String?

  PayloadFormatIndicator: String?

  ResponseTopic: String?

  UserProperties: Listing<Tag>?
}

class `AWS::IoT::TopicRuleS3Action` {
  BucketName: String

  CannedAcl: String?

  Key: String

  RoleArn: String
}

class `AWS::IoT::TopicRuleSigV4Authorization` {
  RoleArn: String

  ServiceName: String

  SigningRegion: String
}

class `AWS::IoT::TopicRuleSnsAction` {
  MessageFormat: String?

  RoleArn: String

  TargetArn: String
}

class `AWS::IoT::TopicRuleSqsAction` {
  QueueUrl: String

  RoleArn: String

  UseBase64: Boolean?
}

class `AWS::IoT::TopicRuleStepFunctionsAction` {
  ExecutionNamePrefix: String?

  RoleArn: String

  StateMachineName: String
}

class `AWS::IoT::TopicRuleTimestamp` {
  Unit: String?

  Value: String
}

class `AWS::IoT::TopicRuleTimestreamAction` {
  DatabaseName: String

  Dimensions: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>

  RoleArn: String

  TableName: String

  Timestamp: `AWS::IoT::TopicRuleTimestreamTimestamp`?
}

class `AWS::IoT::TopicRuleTimestreamTimestamp` {
  Unit: String

  Value: String
}

class `AWS::IoT::TopicRuleTopicRulePayload` {
  Actions: Listing<`AWS::IoT::TopicRuleAction`>

  AwsIotSqlVersion: String?

  Description: String?

  ErrorAction: `AWS::IoT::TopicRuleAction`?

  RuleDisabled: Boolean?

  Sql: String
}

class `AWS::IoT::TopicRuleDestination` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoT::TopicRuleDestinationProperties`?

  Type: "AWS::IoT::TopicRuleDestination"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoT::TopicRuleDestinationProperties` {
  HttpUrlProperties: `AWS::IoT::TopicRuleDestinationHttpUrlDestinationSummary`?

  Status: String?

  VpcProperties: `AWS::IoT::TopicRuleDestinationVpcDestinationProperties`?
}

class `AWS::IoT::TopicRuleDestinationHttpUrlDestinationSummary` {
  ConfirmationUrl: String?
}

class `AWS::IoT::TopicRuleDestinationVpcDestinationProperties` {
  RoleArn: String?

  SecurityGroups: Listing<String>?

  SubnetIds: Listing<String>?

  VpcId: String?
}

class `AWS::IoTAnalytics::Channel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTAnalytics::ChannelProperties`?

  Type: "AWS::IoTAnalytics::Channel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTAnalytics::ChannelProperties` {
  ChannelName: String?

  ChannelStorage: `AWS::IoTAnalytics::ChannelChannelStorage`?

  RetentionPeriod: `AWS::IoTAnalytics::DatastoreRetentionPeriod`?

  Tags: Listing<Tag>?
}

class `AWS::IoTAnalytics::ChannelChannelStorage` {
  CustomerManagedS3: `AWS::IoTAnalytics::DatastoreCustomerManagedS3`?

  ServiceManagedS3: Dynamic?
}

class `AWS::IoTAnalytics::DatastoreCustomerManagedS3` {
  Bucket: String

  KeyPrefix: String?

  RoleArn: String
}

class `AWS::IoTAnalytics::DatastoreRetentionPeriod` {
  NumberOfDays: Number?

  Unlimited: Boolean?
}

class `AWS::IoTAnalytics::Dataset` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTAnalytics::DatasetProperties`

  Type: "AWS::IoTAnalytics::Dataset"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTAnalytics::DatasetProperties` {
  Actions: Listing<`AWS::IoTAnalytics::DatasetAction`>

  ContentDeliveryRules: Listing<`AWS::IoTAnalytics::DatasetDatasetContentDeliveryRule`>?

  DatasetName: String?

  LateDataRules: Listing<`AWS::IoTAnalytics::DatasetLateDataRule`>?

  RetentionPeriod: `AWS::IoTAnalytics::DatastoreRetentionPeriod`?

  Tags: Listing<Tag>?

  Triggers: Listing<`AWS::IoTAnalytics::DatasetTrigger`>?

  VersioningConfiguration: `AWS::IoTAnalytics::DatasetVersioningConfiguration`?
}

class `AWS::IoTAnalytics::DatasetAction` {
  ActionName: String

  ContainerAction: `AWS::IoTAnalytics::DatasetContainerAction`?

  QueryAction: `AWS::IoTAnalytics::DatasetQueryAction`?
}

class `AWS::IoTAnalytics::DatasetContainerAction` {
  ExecutionRoleArn: String

  Image: String

  ResourceConfiguration: `AWS::IoTAnalytics::DatasetResourceConfiguration`

  Variables: Listing<`AWS::IoTAnalytics::DatasetVariable`>?
}

class `AWS::IoTAnalytics::DatasetDatasetContentDeliveryRule` {
  Destination: `AWS::IoTAnalytics::DatasetDatasetContentDeliveryRuleDestination`

  EntryName: String?
}

class `AWS::IoTAnalytics::DatasetDatasetContentDeliveryRuleDestination` {
  IotEventsDestinationConfiguration: `AWS::IoTAnalytics::DatasetIotEventsDestinationConfiguration`?

  S3DestinationConfiguration: `AWS::IoTAnalytics::DatasetS3DestinationConfiguration`?
}

class `AWS::IoTAnalytics::DatasetTriggeringDataset` {
  DatasetName: String
}

class `AWS::IoTAnalytics::DatasetDeltaTime` {
  OffsetSeconds: Number

  TimeExpression: String
}

class `AWS::IoTAnalytics::DatasetDeltaTimeSessionWindowConfiguration` {
  TimeoutInMinutes: Number
}

class `AWS::IoTAnalytics::DatasetFilter` {
  DeltaTime: `AWS::IoTAnalytics::DatasetDeltaTime`?
}

class `AWS::IoTAnalytics::DatasetIotEventsDestinationConfiguration` {
  InputName: String

  RoleArn: String
}

class `AWS::IoTAnalytics::DatasetLateDataRule` {
  RuleConfiguration: `AWS::IoTAnalytics::DatasetLateDataRuleConfiguration`

  RuleName: String?
}

class `AWS::IoTAnalytics::DatasetLateDataRuleConfiguration` {
  DeltaTimeSessionWindowConfiguration: `AWS::IoTAnalytics::DatasetDeltaTimeSessionWindowConfiguration`?
}

class `AWS::IoTAnalytics::DatasetOutputFileUriValue` {
  FileName: String
}

class `AWS::IoTAnalytics::DatasetQueryAction` {
  Filters: Listing<`AWS::IoTAnalytics::DatasetFilter`>?

  SqlQuery: String
}

class `AWS::IoTAnalytics::DatasetResourceConfiguration` {
  ComputeType: String

  VolumeSizeInGB: Number
}

class `AWS::IoTAnalytics::DatasetS3DestinationConfiguration` {
  Bucket: String

  GlueConfiguration: `AWS::IoTAnalytics::DatasetGlueConfiguration`?

  Key: String

  RoleArn: String
}

class `AWS::IoTAnalytics::DatasetTrigger` {
  Schedule: `AWS::Timestream::ScheduledQueryScheduleConfiguration`?

  TriggeringDataset: `AWS::IoTAnalytics::DatasetTriggeringDataset`?
}

class `AWS::IoTAnalytics::DatasetVariable` {
  DatasetContentVersionValue: `AWS::IoTAnalytics::DatasetTriggeringDataset`?

  DoubleValue: Number?

  OutputFileUriValue: `AWS::IoTAnalytics::DatasetOutputFileUriValue`?

  StringValue: String?

  VariableName: String
}

class `AWS::IoTAnalytics::DatasetVersioningConfiguration` {
  MaxVersions: Number?

  Unlimited: Boolean?
}

class `AWS::IoTAnalytics::Datastore` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTAnalytics::DatastoreProperties`?

  Type: "AWS::IoTAnalytics::Datastore"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTAnalytics::DatastoreProperties` {
  DatastoreName: String?

  DatastorePartitions: `AWS::IoTAnalytics::DatastoreDatastorePartitions`?

  DatastoreStorage: `AWS::IoTAnalytics::DatastoreDatastoreStorage`?

  FileFormatConfiguration: `AWS::IoTAnalytics::DatastoreFileFormatConfiguration`?

  RetentionPeriod: `AWS::IoTAnalytics::DatastoreRetentionPeriod`?

  Tags: Listing<Tag>?
}

class `AWS::IoTAnalytics::DatastoreCustomerManagedS3Storage` {
  Bucket: String

  KeyPrefix: String?
}

class `AWS::IoTAnalytics::DatastoreDatastorePartition` {
  Partition: `AWS::IoTAnalytics::DatastorePartition`?

  TimestampPartition: `AWS::IoTAnalytics::DatastoreTimestampPartition`?
}

class `AWS::IoTAnalytics::DatastoreDatastorePartitions` {
  Partitions: Listing<`AWS::IoTAnalytics::DatastoreDatastorePartition`>?
}

class `AWS::IoTAnalytics::DatastoreDatastoreStorage` {
  CustomerManagedS3: `AWS::IoTAnalytics::DatastoreCustomerManagedS3`?

  IotSiteWiseMultiLayerStorage: `AWS::IoTAnalytics::DatastoreIotSiteWiseMultiLayerStorage`?

  ServiceManagedS3: Dynamic?
}

class `AWS::IoTAnalytics::DatastoreFileFormatConfiguration` {
  JsonConfiguration: Dynamic?

  ParquetConfiguration: `AWS::IoTAnalytics::DatastoreParquetConfiguration`?
}

class `AWS::IoTAnalytics::DatastoreIotSiteWiseMultiLayerStorage` {
  CustomerManagedS3Storage: `AWS::IoTAnalytics::DatastoreCustomerManagedS3Storage`?
}

class `AWS::IoTAnalytics::DatastoreParquetConfiguration` {
  SchemaDefinition: `AWS::IoTAnalytics::DatastoreSchemaDefinition`?
}

class `AWS::IoTAnalytics::DatastorePartition` {
  AttributeName: String
}

class `AWS::IoTAnalytics::DatastoreSchemaDefinition` {
  Columns: Listing<`AWS::IoTAnalytics::DatastoreColumn`>?
}

class `AWS::IoTAnalytics::DatastoreTimestampPartition` {
  AttributeName: String

  TimestampFormat: String?
}

class `AWS::IoTAnalytics::Pipeline` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTAnalytics::PipelineProperties`

  Type: "AWS::IoTAnalytics::Pipeline"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTAnalytics::PipelineProperties` {
  PipelineActivities: Listing<`AWS::IoTAnalytics::PipelineActivity`>

  PipelineName: String?

  Tags: Listing<Tag>?
}

class `AWS::IoTAnalytics::PipelineActivity` {
  AddAttributes: `AWS::IoTAnalytics::PipelineAddAttributes`?

  Channel: `AWS::IoTAnalytics::PipelineChannel`?

  Datastore: `AWS::IoTAnalytics::PipelineDatastore`?

  DeviceRegistryEnrich: `AWS::IoTAnalytics::PipelineDeviceShadowEnrich`?

  DeviceShadowEnrich: `AWS::IoTAnalytics::PipelineDeviceShadowEnrich`?

  Filter: `AWS::IoTAnalytics::PipelineFilter`?

  Lambda: `AWS::IoTAnalytics::PipelineLambda`?

  Math: `AWS::IoTAnalytics::PipelineMath`?

  RemoveAttributes: `AWS::IoTAnalytics::PipelineSelectAttributes`?

  SelectAttributes: `AWS::IoTAnalytics::PipelineSelectAttributes`?
}

class `AWS::IoTAnalytics::PipelineAddAttributes` {
  Attributes: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>

  Name: String

  Next: String?
}

class `AWS::IoTAnalytics::PipelineChannel` {
  ChannelName: String

  Name: String

  Next: String?
}

class `AWS::IoTAnalytics::PipelineDatastore` {
  DatastoreName: String

  Name: String
}

class `AWS::IoTAnalytics::PipelineDeviceShadowEnrich` {
  Attribute: String

  Name: String

  Next: String?

  RoleArn: String

  ThingName: String
}

class `AWS::IoTAnalytics::PipelineFilter` {
  Filter: String

  Name: String

  Next: String?
}

class `AWS::IoTAnalytics::PipelineLambda` {
  BatchSize: Number

  LambdaName: String

  Name: String

  Next: String?
}

class `AWS::IoTAnalytics::PipelineMath` {
  Attribute: String

  Math: String

  Name: String

  Next: String?
}

class `AWS::IoTAnalytics::PipelineSelectAttributes` {
  Attributes: Listing<String>

  Name: String

  Next: String?
}

class `AWS::IoTCoreDeviceAdvisor::SuiteDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTCoreDeviceAdvisor::SuiteDefinitionProperties`

  Type: "AWS::IoTCoreDeviceAdvisor::SuiteDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTCoreDeviceAdvisor::SuiteDefinitionProperties` {
  SuiteDefinitionConfiguration: `AWS::IoTCoreDeviceAdvisor::SuiteDefinitionSuiteDefinitionConfiguration`

  Tags: Listing<Tag>?
}

class `AWS::IoTCoreDeviceAdvisor::SuiteDefinitionDeviceUnderTest` {
  CertificateArn: String?

  ThingArn: String?
}

class `AWS::IoTCoreDeviceAdvisor::SuiteDefinitionSuiteDefinitionConfiguration` {
  DevicePermissionRoleArn: String

  Devices: Listing<`AWS::IoTCoreDeviceAdvisor::SuiteDefinitionDeviceUnderTest`>?

  IntendedForQualification: Boolean?

  RootGroup: String

  SuiteDefinitionName: String?
}

class `AWS::IoTEvents::AlarmModel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTEvents::AlarmModelProperties`

  Type: "AWS::IoTEvents::AlarmModel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTEvents::AlarmModelProperties` {
  AlarmCapabilities: `AWS::IoTEvents::AlarmModelAlarmCapabilities`?

  AlarmEventActions: `AWS::IoTEvents::AlarmModelAlarmEventActions`?

  AlarmModelDescription: String?

  AlarmModelName: String?

  AlarmRule: `AWS::IoTEvents::AlarmModelAlarmRule`

  Key: String?

  RoleArn: String

  Severity: Number?

  Tags: Listing<Tag>?
}

class `AWS::IoTEvents::AlarmModelAlarmAction` {
  DynamoDB: `AWS::IoTEvents::AlarmModelDynamoDB`?

  DynamoDBv2: `AWS::IoTEvents::AlarmModelDynamoDBv2`?

  Firehose: `AWS::IoTEvents::AlarmModelFirehose`?

  IotEvents: `AWS::IoTEvents::AlarmModelIotEvents`?

  IotSiteWise: `AWS::IoTEvents::AlarmModelIotSiteWise`?

  IotTopicPublish: `AWS::IoTEvents::AlarmModelIotTopicPublish`?

  Lambda: `AWS::IoTEvents::AlarmModelLambda`?

  Sns: `AWS::IoTEvents::AlarmModelSns`?

  Sqs: `AWS::IoTEvents::AlarmModelSqs`?
}

class `AWS::IoTEvents::AlarmModelAlarmCapabilities` {
  AcknowledgeFlow: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  InitializationConfiguration: `AWS::IoTEvents::AlarmModelInitializationConfiguration`?
}

class `AWS::IoTEvents::AlarmModelAlarmEventActions` {
  AlarmActions: Listing<`AWS::IoTEvents::AlarmModelAlarmAction`>?
}

class `AWS::IoTEvents::AlarmModelAlarmRule` {
  SimpleRule: `AWS::IoTEvents::AlarmModelSimpleRule`?
}

class `AWS::IoTEvents::AlarmModelAssetPropertyValue` {
  Quality: String?

  Timestamp: `AWS::IoTEvents::DetectorModelAssetPropertyTimestamp`?

  Value: `AWS::IoTEvents::DetectorModelAssetPropertyVariant`
}

class `AWS::IoTEvents::AlarmModelDynamoDB` {
  HashKeyField: String

  HashKeyType: String?

  HashKeyValue: String

  Operation: String?

  Payload: `AWS::IoTEvents::DetectorModelPayload`?

  PayloadField: String?

  RangeKeyField: String?

  RangeKeyType: String?

  RangeKeyValue: String?

  TableName: String
}

class `AWS::IoTEvents::AlarmModelDynamoDBv2` {
  Payload: `AWS::IoTEvents::DetectorModelPayload`?

  TableName: String
}

class `AWS::IoTEvents::AlarmModelFirehose` {
  DeliveryStreamName: String

  Payload: `AWS::IoTEvents::DetectorModelPayload`?

  Separator: String?
}

class `AWS::IoTEvents::AlarmModelInitializationConfiguration` {
  DisabledOnInitialization: Boolean
}

class `AWS::IoTEvents::AlarmModelIotEvents` {
  InputName: String

  Payload: `AWS::IoTEvents::DetectorModelPayload`?
}

class `AWS::IoTEvents::AlarmModelIotSiteWise` {
  AssetId: String?

  EntryId: String?

  PropertyAlias: String?

  PropertyId: String?

  PropertyValue: `AWS::IoTEvents::AlarmModelAssetPropertyValue`?
}

class `AWS::IoTEvents::AlarmModelIotTopicPublish` {
  MqttTopic: String

  Payload: `AWS::IoTEvents::DetectorModelPayload`?
}

class `AWS::IoTEvents::AlarmModelLambda` {
  FunctionArn: String

  Payload: `AWS::IoTEvents::DetectorModelPayload`?
}

class `AWS::IoTEvents::DetectorModelPayload` {
  ContentExpression: String

  Type: String
}

class `AWS::IoTEvents::AlarmModelSimpleRule` {
  ComparisonOperator: String

  InputProperty: String

  Threshold: String
}

class `AWS::IoTEvents::AlarmModelSns` {
  Payload: `AWS::IoTEvents::DetectorModelPayload`?

  TargetArn: String
}

class `AWS::IoTEvents::AlarmModelSqs` {
  Payload: `AWS::IoTEvents::DetectorModelPayload`?

  QueueUrl: String

  UseBase64: Boolean?
}

class `AWS::IoTEvents::DetectorModel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTEvents::DetectorModelProperties`

  Type: "AWS::IoTEvents::DetectorModel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTEvents::DetectorModelProperties` {
  DetectorModelDefinition: `AWS::IoTEvents::DetectorModelDetectorModelDefinition`

  DetectorModelDescription: String?

  DetectorModelName: String?

  EvaluationMethod: String?

  Key: String?

  RoleArn: String

  Tags: Listing<Tag>?
}

class `AWS::IoTEvents::DetectorModelAction` {
  ClearTimer: `AWS::IoTEvents::DetectorModelResetTimer`?

  DynamoDB: `AWS::IoTEvents::DetectorModelDynamoDB`?

  DynamoDBv2: `AWS::IoTEvents::DetectorModelDynamoDBv2`?

  Firehose: `AWS::IoTEvents::DetectorModelFirehose`?

  IotEvents: `AWS::IoTEvents::DetectorModelIotEvents`?

  IotSiteWise: `AWS::IoTEvents::DetectorModelIotSiteWise`?

  IotTopicPublish: `AWS::IoTEvents::DetectorModelIotTopicPublish`?

  Lambda: `AWS::IoTEvents::DetectorModelLambda`?

  ResetTimer: `AWS::IoTEvents::DetectorModelResetTimer`?

  SetTimer: `AWS::IoTEvents::DetectorModelSetTimer`?

  SetVariable: `AWS::IoTEvents::DetectorModelSetVariable`?

  Sns: `AWS::IoTEvents::DetectorModelSns`?

  Sqs: `AWS::IoTEvents::DetectorModelSqs`?
}

class `AWS::IoTEvents::DetectorModelAssetPropertyValue` {
  Quality: String?

  Timestamp: `AWS::IoTEvents::DetectorModelAssetPropertyTimestamp`?

  Value: `AWS::IoTEvents::DetectorModelAssetPropertyVariant`
}

class `AWS::IoTEvents::DetectorModelResetTimer` {
  TimerName: String
}

class `AWS::IoTEvents::DetectorModelDetectorModelDefinition` {
  InitialStateName: String

  States: Listing<`AWS::IoTEvents::DetectorModelState`>
}

class `AWS::IoTEvents::DetectorModelDynamoDB` {
  HashKeyField: String

  HashKeyType: String?

  HashKeyValue: String

  Operation: String?

  Payload: `AWS::IoTEvents::DetectorModelPayload`?

  PayloadField: String?

  RangeKeyField: String?

  RangeKeyType: String?

  RangeKeyValue: String?

  TableName: String
}

class `AWS::IoTEvents::DetectorModelDynamoDBv2` {
  Payload: `AWS::IoTEvents::DetectorModelPayload`?

  TableName: String
}

class `AWS::IoTEvents::DetectorModelEvent` {
  Actions: Listing<`AWS::IoTEvents::DetectorModelAction`>?

  Condition: String?

  EventName: String
}

class `AWS::IoTEvents::DetectorModelFirehose` {
  DeliveryStreamName: String

  Payload: `AWS::IoTEvents::DetectorModelPayload`?

  Separator: String?
}

class `AWS::IoTEvents::DetectorModelIotEvents` {
  InputName: String

  Payload: `AWS::IoTEvents::DetectorModelPayload`?
}

class `AWS::IoTEvents::DetectorModelIotSiteWise` {
  AssetId: String?

  EntryId: String?

  PropertyAlias: String?

  PropertyId: String?

  PropertyValue: `AWS::IoTEvents::DetectorModelAssetPropertyValue`
}

class `AWS::IoTEvents::DetectorModelIotTopicPublish` {
  MqttTopic: String

  Payload: `AWS::IoTEvents::DetectorModelPayload`?
}

class `AWS::IoTEvents::DetectorModelLambda` {
  FunctionArn: String

  Payload: `AWS::IoTEvents::DetectorModelPayload`?
}

class `AWS::IoTEvents::DetectorModelOnExit` {
  Events: Listing<`AWS::IoTEvents::DetectorModelEvent`>?
}

class `AWS::IoTEvents::DetectorModelOnInput` {
  Events: Listing<`AWS::IoTEvents::DetectorModelEvent`>?

  TransitionEvents: Listing<`AWS::IoTEvents::DetectorModelTransitionEvent`>?
}

class `AWS::IoTEvents::DetectorModelSetTimer` {
  DurationExpression: String?

  Seconds: Number?

  TimerName: String
}

class `AWS::IoTEvents::DetectorModelSetVariable` {
  Value: String

  VariableName: String
}

class `AWS::IoTEvents::DetectorModelSns` {
  Payload: `AWS::IoTEvents::DetectorModelPayload`?

  TargetArn: String
}

class `AWS::IoTEvents::DetectorModelSqs` {
  Payload: `AWS::IoTEvents::DetectorModelPayload`?

  QueueUrl: String

  UseBase64: Boolean?
}

class `AWS::IoTEvents::DetectorModelState` {
  OnEnter: `AWS::IoTEvents::DetectorModelOnExit`?

  OnExit: `AWS::IoTEvents::DetectorModelOnExit`?

  OnInput: `AWS::IoTEvents::DetectorModelOnInput`?

  StateName: String
}

class `AWS::IoTEvents::DetectorModelTransitionEvent` {
  Actions: Listing<`AWS::IoTEvents::DetectorModelAction`>?

  Condition: String

  EventName: String

  NextState: String
}

class `AWS::IoTEvents::Input` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTEvents::InputProperties`

  Type: "AWS::IoTEvents::Input"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTEvents::InputProperties` {
  InputDefinition: `AWS::IoTEvents::InputInputDefinition`

  InputDescription: String?

  InputName: String?

  Tags: Listing<Tag>?
}

class `AWS::IoTEvents::InputAttribute` {
  JsonPath: String
}

class `AWS::IoTEvents::InputInputDefinition` {
  Attributes: Listing<`AWS::IoTEvents::InputAttribute`>
}

class `AWS::IoTFleetHub::Application` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTFleetHub::ApplicationProperties`

  Type: "AWS::IoTFleetHub::Application"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTFleetHub::ApplicationProperties` {
  ApplicationDescription: String?

  ApplicationName: String

  RoleArn: String

  Tags: Listing<Tag>?
}

class `AWS::IoTFleetWise::Campaign` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTFleetWise::CampaignProperties`

  Type: "AWS::IoTFleetWise::Campaign"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTFleetWise::CampaignProperties` {
  Action: String

  CollectionScheme: `AWS::IoTFleetWise::CampaignCollectionScheme`

  Compression: String?

  DataDestinationConfigs: Listing<`AWS::IoTFleetWise::CampaignDataDestinationConfig`>?

  DataExtraDimensions: Listing<String>?

  Description: String?

  DiagnosticsMode: String?

  ExpiryTime: String?

  Name: String

  PostTriggerCollectionDuration: Number?

  Priority: Number?

  SignalCatalogArn: String

  SignalsToCollect: Listing<`AWS::IoTFleetWise::CampaignSignalInformation`>?

  SpoolingMode: String?

  StartTime: String?

  Tags: Listing<Tag>?

  TargetArn: String
}

class `AWS::IoTFleetWise::CampaignCollectionScheme` {
  ConditionBasedCollectionScheme: `AWS::IoTFleetWise::CampaignConditionBasedCollectionScheme`?

  TimeBasedCollectionScheme: `AWS::IoTFleetWise::CampaignTimeBasedCollectionScheme`?
}

class `AWS::IoTFleetWise::CampaignConditionBasedCollectionScheme` {
  ConditionLanguageVersion: Number?

  Expression: String

  MinimumTriggerIntervalMs: Number?

  TriggerMode: String?
}

class `AWS::IoTFleetWise::CampaignDataDestinationConfig` {
  S3Config: `AWS::IoTFleetWise::CampaignS3Config`?

  TimestreamConfig: `AWS::IoTFleetWise::CampaignTimestreamConfig`?
}

class `AWS::IoTFleetWise::CampaignS3Config` {
  BucketArn: String

  DataFormat: String?

  Prefix: String?

  StorageCompressionFormat: String?
}

class `AWS::IoTFleetWise::CampaignSignalInformation` {
  MaxSampleCount: Number?

  MinimumSamplingIntervalMs: Number?

  Name: String
}

class `AWS::IoTFleetWise::CampaignTimeBasedCollectionScheme` {
  PeriodMs: Number
}

class `AWS::IoTFleetWise::CampaignTimestreamConfig` {
  ExecutionRoleArn: String

  TimestreamTableArn: String
}

class `AWS::IoTFleetWise::DecoderManifest` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTFleetWise::DecoderManifestProperties`

  Type: "AWS::IoTFleetWise::DecoderManifest"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTFleetWise::DecoderManifestProperties` {
  Description: String?

  ModelManifestArn: String

  Name: String

  NetworkInterfaces: Listing<`AWS::IoTFleetWise::DecoderManifestNetworkInterfacesItems`>?

  SignalDecoders: Listing<`AWS::IoTFleetWise::DecoderManifestSignalDecodersItems`>?

  Status: String?

  Tags: Listing<Tag>?
}

class `AWS::IoTFleetWise::DecoderManifestCanInterface` {
  Name: String

  ProtocolName: String?

  ProtocolVersion: String?
}

class `AWS::IoTFleetWise::DecoderManifestCanSignal` {
  Factor: String

  IsBigEndian: String

  IsSigned: String

  Length: String

  MessageId: String

  Name: String?

  Offset: String

  StartBit: String
}

class `AWS::IoTFleetWise::DecoderManifestNetworkInterfacesItems` {
  CanInterface: `AWS::IoTFleetWise::DecoderManifestCanInterface`?

  InterfaceId: String

  ObdInterface: `AWS::IoTFleetWise::DecoderManifestObdInterface`?

  Type: String
}

class `AWS::IoTFleetWise::DecoderManifestObdInterface` {
  DtcRequestIntervalSeconds: String?

  HasTransmissionEcu: String?

  Name: String

  ObdStandard: String?

  PidRequestIntervalSeconds: String?

  RequestMessageId: String

  UseExtendedIds: String?
}

class `AWS::IoTFleetWise::DecoderManifestObdSignal` {
  BitMaskLength: String?

  BitRightShift: String?

  ByteLength: String

  Offset: String

  Pid: String

  PidResponseLength: String

  Scaling: String

  ServiceMode: String

  StartByte: String
}

class `AWS::IoTFleetWise::DecoderManifestSignalDecodersItems` {
  CanSignal: `AWS::IoTFleetWise::DecoderManifestCanSignal`?

  FullyQualifiedName: String

  InterfaceId: String

  ObdSignal: `AWS::IoTFleetWise::DecoderManifestObdSignal`?

  Type: String
}

class `AWS::IoTFleetWise::Fleet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTFleetWise::FleetProperties`

  Type: "AWS::IoTFleetWise::Fleet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTFleetWise::FleetProperties` {
  Description: String?

  Id: String

  SignalCatalogArn: String

  Tags: Listing<Tag>?
}

class `AWS::IoTFleetWise::ModelManifest` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTFleetWise::ModelManifestProperties`

  Type: "AWS::IoTFleetWise::ModelManifest"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTFleetWise::ModelManifestProperties` {
  Description: String?

  Name: String

  Nodes: Listing<String>?

  SignalCatalogArn: String

  Status: String?

  Tags: Listing<Tag>?
}

class `AWS::IoTFleetWise::SignalCatalog` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTFleetWise::SignalCatalogProperties`?

  Type: "AWS::IoTFleetWise::SignalCatalog"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTFleetWise::SignalCatalogProperties` {
  Description: String?

  Name: String?

  NodeCounts: `AWS::IoTFleetWise::SignalCatalogNodeCounts`?

  Nodes: Listing<`AWS::IoTFleetWise::SignalCatalogNode`>?

  Tags: Listing<Tag>?
}

class `AWS::IoTFleetWise::SignalCatalogActuator` {
  AllowedValues: Listing<String>?

  AssignedValue: String?

  DataType: String

  Description: String?

  FullyQualifiedName: String

  Max: Number?

  Min: Number?

  Unit: String?
}

class `AWS::IoTFleetWise::SignalCatalogAttribute` {
  AllowedValues: Listing<String>?

  AssignedValue: String?

  DataType: String

  DefaultValue: String?

  Description: String?

  FullyQualifiedName: String

  Max: Number?

  Min: Number?

  Unit: String?
}

class `AWS::IoTFleetWise::SignalCatalogBranch` {
  Description: String?

  FullyQualifiedName: String
}

class `AWS::IoTFleetWise::SignalCatalogNode` {
  Actuator: `AWS::IoTFleetWise::SignalCatalogActuator`?

  Attribute: `AWS::IoTFleetWise::SignalCatalogAttribute`?

  Branch: `AWS::IoTFleetWise::SignalCatalogBranch`?

  Sensor: `AWS::IoTFleetWise::SignalCatalogSensor`?
}

class `AWS::IoTFleetWise::SignalCatalogNodeCounts` {
  TotalActuators: Number?

  TotalAttributes: Number?

  TotalBranches: Number?

  TotalNodes: Number?

  TotalSensors: Number?
}

class `AWS::IoTFleetWise::SignalCatalogSensor` {
  AllowedValues: Listing<String>?

  DataType: String

  Description: String?

  FullyQualifiedName: String

  Max: Number?

  Min: Number?

  Unit: String?
}

class `AWS::IoTFleetWise::Vehicle` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTFleetWise::VehicleProperties`

  Type: "AWS::IoTFleetWise::Vehicle"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTFleetWise::VehicleProperties` {
  AssociationBehavior: String?

  Attributes: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  DecoderManifestArn: String

  ModelManifestArn: String

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::IoTSiteWise::AccessPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTSiteWise::AccessPolicyProperties`

  Type: "AWS::IoTSiteWise::AccessPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTSiteWise::AccessPolicyProperties` {
  AccessPolicyIdentity: `AWS::IoTSiteWise::AccessPolicyAccessPolicyIdentity`

  AccessPolicyPermission: String

  AccessPolicyResource: `AWS::IoTSiteWise::AccessPolicyAccessPolicyResource`
}

class `AWS::IoTSiteWise::AccessPolicyAccessPolicyIdentity` {
  IamRole: `AWS::IoTSiteWise::AccessPolicyIamUser`?

  IamUser: `AWS::IoTSiteWise::AccessPolicyIamUser`?

  User: `AWS::IoTSiteWise::AccessPolicyUser`?
}

class `AWS::IoTSiteWise::AccessPolicyAccessPolicyResource` {
  Portal: `AWS::IoTSiteWise::AccessPolicyUser`?

  Project: `AWS::IoTSiteWise::AccessPolicyUser`?
}

class `AWS::IoTSiteWise::AccessPolicyIamUser` {
  arn: String?
}

class `AWS::IoTSiteWise::AccessPolicyUser` {
  id: String?
}

class `AWS::IoTSiteWise::Asset` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTSiteWise::AssetProperties`

  Type: "AWS::IoTSiteWise::Asset"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTSiteWise::AssetProperties` {
  AssetDescription: String?

  AssetHierarchies: Listing<`AWS::IoTSiteWise::AssetAssetHierarchy`>?

  AssetModelId: String

  AssetName: String

  AssetProperties: Listing<`AWS::IoTSiteWise::AssetAssetProperty`>?

  Tags: Listing<Tag>?
}

class `AWS::IoTSiteWise::AssetAssetHierarchy` {
  ChildAssetId: String

  LogicalId: String
}

class `AWS::IoTSiteWise::AssetAssetProperty` {
  Alias: String?

  LogicalId: String

  NotificationState: String?

  Unit: String?
}

class `AWS::IoTSiteWise::AssetModel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTSiteWise::AssetModelProperties`

  Type: "AWS::IoTSiteWise::AssetModel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTSiteWise::AssetModelProperties` {
  AssetModelCompositeModels: Listing<`AWS::IoTSiteWise::AssetModelAssetModelCompositeModel`>?

  AssetModelDescription: String?

  AssetModelHierarchies: Listing<`AWS::IoTSiteWise::AssetModelAssetModelHierarchy`>?

  AssetModelName: String

  AssetModelProperties: Listing<`AWS::IoTSiteWise::AssetModelAssetModelProperty`>?

  Tags: Listing<Tag>?
}

class `AWS::IoTSiteWise::AssetModelAssetModelCompositeModel` {
  CompositeModelProperties: Listing<`AWS::IoTSiteWise::AssetModelAssetModelProperty`>?

  Description: String?

  Name: String

  Type: String
}

class `AWS::IoTSiteWise::AssetModelAssetModelHierarchy` {
  ChildAssetModelId: String

  LogicalId: String

  Name: String
}

class `AWS::IoTSiteWise::AssetModelAssetModelProperty` {
  DataType: String

  DataTypeSpec: String?

  LogicalId: String

  Name: String

  Type: `AWS::IoTSiteWise::AssetModelPropertyType`

  Unit: String?
}

class `AWS::IoTSiteWise::AssetModelAttribute` {
  DefaultValue: String?
}

class `AWS::IoTSiteWise::AssetModelExpressionVariable` {
  Name: String

  Value: `AWS::IoTSiteWise::AssetModelVariableValue`
}

class `AWS::IoTSiteWise::AssetModelMetric` {
  Expression: String

  Variables: Listing<`AWS::IoTSiteWise::AssetModelExpressionVariable`>

  Window: `AWS::IoTSiteWise::AssetModelMetricWindow`
}

class `AWS::IoTSiteWise::AssetModelMetricWindow` {
  Tumbling: `AWS::IoTSiteWise::AssetModelTumblingWindow`?
}

class `AWS::IoTSiteWise::AssetModelPropertyType` {
  Attribute: `AWS::IoTSiteWise::AssetModelAttribute`?

  Metric: `AWS::IoTSiteWise::AssetModelMetric`?

  Transform: `AWS::IoTSiteWise::AssetModelTransform`?

  TypeName: String
}

class `AWS::IoTSiteWise::AssetModelTransform` {
  Expression: String

  Variables: Listing<`AWS::IoTSiteWise::AssetModelExpressionVariable`>
}

class `AWS::IoTSiteWise::AssetModelTumblingWindow` {
  Interval: String

  Offset: String?
}

class `AWS::IoTSiteWise::AssetModelVariableValue` {
  HierarchyLogicalId: String?

  PropertyLogicalId: String
}

class `AWS::IoTSiteWise::Dashboard` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTSiteWise::DashboardProperties`

  Type: "AWS::IoTSiteWise::Dashboard"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTSiteWise::DashboardProperties` {
  DashboardDefinition: String

  DashboardDescription: String

  DashboardName: String

  ProjectId: String?

  Tags: Listing<Tag>?
}

class `AWS::IoTSiteWise::Gateway` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTSiteWise::GatewayProperties`

  Type: "AWS::IoTSiteWise::Gateway"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTSiteWise::GatewayProperties` {
  GatewayCapabilitySummaries: Listing<`AWS::IoTSiteWise::GatewayGatewayCapabilitySummary`>?

  GatewayName: String

  GatewayPlatform: `AWS::IoTSiteWise::GatewayGatewayPlatform`

  Tags: Listing<Tag>?
}

class `AWS::IoTSiteWise::GatewayGatewayCapabilitySummary` {
  CapabilityConfiguration: String?

  CapabilityNamespace: String
}

class `AWS::IoTSiteWise::GatewayGatewayPlatform` {
  Greengrass: `AWS::IoTSiteWise::GatewayGreengrass`?

  GreengrassV2: `AWS::IoTSiteWise::GatewayGreengrassV2`?
}

class `AWS::IoTSiteWise::GatewayGreengrass` {
  GroupArn: String
}

class `AWS::IoTSiteWise::GatewayGreengrassV2` {
  CoreDeviceThingName: String
}

class `AWS::IoTSiteWise::Portal` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTSiteWise::PortalProperties`

  Type: "AWS::IoTSiteWise::Portal"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTSiteWise::PortalProperties` {
  Alarms: `AWS::IoTSiteWise::PortalAlarms`?

  NotificationSenderEmail: String?

  PortalAuthMode: String?

  PortalContactEmail: String

  PortalDescription: String?

  PortalName: String

  RoleArn: String

  Tags: Listing<Tag>?
}

class `AWS::IoTSiteWise::PortalAlarms` {
  AlarmRoleArn: String?

  NotificationLambdaArn: String?
}

class `AWS::IoTSiteWise::Project` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTSiteWise::ProjectProperties`

  Type: "AWS::IoTSiteWise::Project"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTSiteWise::ProjectProperties` {
  AssetIds: Listing<String>?

  PortalId: String

  ProjectDescription: String?

  ProjectName: String

  Tags: Listing<Tag>?
}

class `AWS::IoTThingsGraph::FlowTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTThingsGraph::FlowTemplateProperties`

  Type: "AWS::IoTThingsGraph::FlowTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTThingsGraph::FlowTemplateProperties` {
  CompatibleNamespaceVersion: Number?

  Definition: `AWS::IoTThingsGraph::FlowTemplateDefinitionDocument`
}

class `AWS::IoTThingsGraph::FlowTemplateDefinitionDocument` {
  Language: String

  Text: String
}

class `AWS::IoTTwinMaker::ComponentType` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTTwinMaker::ComponentTypeProperties`

  Type: "AWS::IoTTwinMaker::ComponentType"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTTwinMaker::ComponentTypeProperties` {
  ComponentTypeId: String

  CompositeComponentTypes: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::IoTTwinMaker::ComponentTypeCompositeComponentType`>?

  Description: String?

  ExtendsFrom: Listing<String>?

  Functions: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::IoTTwinMaker::ComponentTypeFunction`>?

  IsSingleton: Boolean?

  PropertyDefinitions: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::IoTTwinMaker::ComponentTypePropertyDefinition`>?

  PropertyGroups: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::IoTTwinMaker::EntityPropertyGroup`>?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  WorkspaceId: String
}

class `AWS::IoTTwinMaker::ComponentTypeCompositeComponentType` {
  ComponentTypeId: String?
}

class `AWS::IoTTwinMaker::ComponentTypeDataConnector` {
  IsNative: Boolean?

  Lambda: `AWS::S3::StorageLensAwsOrg`?
}

class `AWS::IoTTwinMaker::ComponentTypeDataType` {
  AllowedValues: Listing<`AWS::IoTTwinMaker::ComponentTypeDataValue`>?

  NestedType: `AWS::IoTTwinMaker::ComponentTypeDataType`?

  Relationship: `AWS::IoTTwinMaker::EntityRelationship`?

  Type: String

  UnitOfMeasure: String?
}

class `AWS::IoTTwinMaker::ComponentTypeDataValue` {
  BooleanValue: Boolean?

  DoubleValue: Number?

  Expression: String?

  IntegerValue: Number?

  ListValue: Listing<`AWS::IoTTwinMaker::ComponentTypeDataValue`>?

  LongValue: Number?

  MapValue: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::IoTTwinMaker::ComponentTypeDataValue`>?

  RelationshipValue: `AWS::IoTTwinMaker::EntityRelationshipValue`?

  StringValue: String?
}

class `AWS::IoTTwinMaker::ComponentTypeFunction` {
  ImplementedBy: `AWS::IoTTwinMaker::ComponentTypeDataConnector`?

  RequiredProperties: Listing<String>?

  Scope: String?
}

class `AWS::IoTTwinMaker::ComponentTypePropertyDefinition` {
  Configurations: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  DataType: `AWS::IoTTwinMaker::ComponentTypeDataType`?

  DefaultValue: `AWS::IoTTwinMaker::ComponentTypeDataValue`?

  IsExternalId: Boolean?

  IsRequiredInEntity: Boolean?

  IsStoredExternally: Boolean?

  IsTimeSeries: Boolean?
}

class `AWS::IoTTwinMaker::EntityPropertyGroup` {
  GroupType: String?

  PropertyNames: Listing<String>?
}

class `AWS::IoTTwinMaker::EntityRelationship` {
  RelationshipType: String?

  TargetComponentTypeId: String?
}

class `AWS::IoTTwinMaker::EntityRelationshipValue` {
  TargetComponentName: String?

  TargetEntityId: String?
}

class `AWS::IoTTwinMaker::ComponentTypeStatus` {
  Error: `AWS::IoTTwinMaker::EntityError`?

  State: String?
}

class `AWS::IoTTwinMaker::Entity` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTTwinMaker::EntityProperties`

  Type: "AWS::IoTTwinMaker::Entity"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTTwinMaker::EntityProperties` {
  Components: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::IoTTwinMaker::EntityComponent`>?

  CompositeComponents: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::IoTTwinMaker::EntityCompositeComponent`>?

  Description: String?

  EntityId: String?

  EntityName: String

  ParentEntityId: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  WorkspaceId: String
}

class `AWS::IoTTwinMaker::EntityComponent` {
  ComponentName: String?

  ComponentTypeId: String?

  DefinedIn: String?

  Description: String?

  Properties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::IoTTwinMaker::EntityProperty`>?

  PropertyGroups: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::IoTTwinMaker::EntityPropertyGroup`>?

  Status: `AWS::IoTTwinMaker::EntityStatus`?
}

class `AWS::IoTTwinMaker::EntityCompositeComponent` {
  ComponentName: String?

  ComponentPath: String?

  ComponentTypeId: String?

  Description: String?

  Properties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::IoTTwinMaker::EntityProperty`>?

  PropertyGroups: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::IoTTwinMaker::EntityPropertyGroup`>?

  Status: `AWS::IoTTwinMaker::EntityStatus`?
}

class `AWS::IoTTwinMaker::EntityDataType` {
  AllowedValues: Listing<`AWS::IoTTwinMaker::EntityDataValue`>?

  NestedType: `AWS::IoTTwinMaker::EntityDataType`?

  Relationship: `AWS::IoTTwinMaker::EntityRelationship`?

  Type: String?

  UnitOfMeasure: String?
}

class `AWS::IoTTwinMaker::EntityDataValue` {
  BooleanValue: Boolean?

  DoubleValue: Number?

  Expression: String?

  IntegerValue: Number?

  ListValue: Listing<`AWS::IoTTwinMaker::EntityDataValue`>?

  LongValue: Number?

  MapValue: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::IoTTwinMaker::EntityDataValue`>?

  RelationshipValue: `AWS::IoTTwinMaker::EntityRelationshipValue`?

  StringValue: String?
}

class `AWS::IoTTwinMaker::EntityDefinition` {
  Configuration: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  DataType: `AWS::IoTTwinMaker::EntityDataType`?

  DefaultValue: `AWS::IoTTwinMaker::EntityDataValue`?

  IsExternalId: Boolean?

  IsFinal: Boolean?

  IsImported: Boolean?

  IsInherited: Boolean?

  IsRequiredInEntity: Boolean?

  IsStoredExternally: Boolean?

  IsTimeSeries: Boolean?
}

class `AWS::IoTTwinMaker::EntityProperty` {
  Definition: `AWS::IoTTwinMaker::EntityDefinition`?

  Value: `AWS::IoTTwinMaker::EntityDataValue`?
}

class `AWS::IoTTwinMaker::EntityStatus` {
  Error: `AWS::IoTTwinMaker::EntityError`?

  State: String?
}

class `AWS::IoTTwinMaker::Scene` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTTwinMaker::SceneProperties`

  Type: "AWS::IoTTwinMaker::Scene"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTTwinMaker::SceneProperties` {
  Capabilities: Listing<String>?

  ContentLocation: String

  Description: String?

  SceneId: String

  SceneMetadata: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  WorkspaceId: String
}

class `AWS::IoTTwinMaker::SyncJob` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTTwinMaker::SyncJobProperties`

  Type: "AWS::IoTTwinMaker::SyncJob"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTTwinMaker::SyncJobProperties` {
  SyncRole: String

  SyncSource: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  WorkspaceId: String
}

class `AWS::IoTTwinMaker::Workspace` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTTwinMaker::WorkspaceProperties`

  Type: "AWS::IoTTwinMaker::Workspace"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTTwinMaker::WorkspaceProperties` {
  Description: String?

  Role: String

  S3Location: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  WorkspaceId: String
}

class `AWS::IoTWireless::Destination` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTWireless::DestinationProperties`

  Type: "AWS::IoTWireless::Destination"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTWireless::DestinationProperties` {
  Description: String?

  Expression: String

  ExpressionType: String

  Name: String

  RoleArn: String?

  Tags: Listing<Tag>?
}

class `AWS::IoTWireless::DeviceProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTWireless::DeviceProfileProperties`?

  Type: "AWS::IoTWireless::DeviceProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTWireless::DeviceProfileProperties` {
  LoRaWAN: `AWS::IoTWireless::DeviceProfileLoRaWANDeviceProfile`?

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::IoTWireless::DeviceProfileLoRaWANDeviceProfile` {
  ClassBTimeout: Number?

  ClassCTimeout: Number?

  FactoryPresetFreqsList: Listing<Number>?

  MacVersion: String?

  MaxDutyCycle: Number?

  MaxEirp: Number?

  PingSlotDr: Number?

  PingSlotFreq: Number?

  PingSlotPeriod: Number?

  RegParamsRevision: String?

  RfRegion: String?

  RxDataRate2: Number?

  RxDelay1: Number?

  RxDrOffset1: Number?

  RxFreq2: Number?

  Supports32BitFCnt: Boolean?

  SupportsClassB: Boolean?

  SupportsClassC: Boolean?

  SupportsJoin: Boolean?
}

class `AWS::IoTWireless::FuotaTask` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTWireless::FuotaTaskProperties`

  Type: "AWS::IoTWireless::FuotaTask"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTWireless::FuotaTaskProperties` {
  AssociateMulticastGroup: String?

  AssociateWirelessDevice: String?

  Description: String?

  DisassociateMulticastGroup: String?

  DisassociateWirelessDevice: String?

  FirmwareUpdateImage: String

  FirmwareUpdateRole: String

  LoRaWAN: `AWS::IoTWireless::FuotaTaskLoRaWAN`

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::IoTWireless::FuotaTaskLoRaWAN` {
  RfRegion: String

  StartTime: String?
}

class `AWS::IoTWireless::MulticastGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTWireless::MulticastGroupProperties`

  Type: "AWS::IoTWireless::MulticastGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTWireless::MulticastGroupProperties` {
  AssociateWirelessDevice: String?

  Description: String?

  DisassociateWirelessDevice: String?

  LoRaWAN: `AWS::IoTWireless::MulticastGroupLoRaWAN`

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::IoTWireless::MulticastGroupLoRaWAN` {
  DlClass: String

  NumberOfDevicesInGroup: Number?

  NumberOfDevicesRequested: Number?

  RfRegion: String
}

class `AWS::IoTWireless::NetworkAnalyzerConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTWireless::NetworkAnalyzerConfigurationProperties`

  Type: "AWS::IoTWireless::NetworkAnalyzerConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTWireless::NetworkAnalyzerConfigurationProperties` {
  Description: String?

  Name: String

  Tags: Listing<Tag>?

  TraceContent: `AWS::IoTWireless::NetworkAnalyzerConfigurationTraceContent`?

  WirelessDevices: Listing<String>?

  WirelessGateways: Listing<String>?
}

class `AWS::IoTWireless::NetworkAnalyzerConfigurationTraceContent` {
  LogLevel: String?

  WirelessDeviceFrameInfo: String?
}

class `AWS::IoTWireless::PartnerAccount` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTWireless::PartnerAccountProperties`?

  Type: "AWS::IoTWireless::PartnerAccount"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTWireless::PartnerAccountProperties` {
  AccountLinked: Boolean?

  PartnerAccountId: String?

  PartnerType: String?

  Sidewalk: `AWS::IoTWireless::PartnerAccountSidewalkAccountInfo`?

  SidewalkResponse: `AWS::IoTWireless::PartnerAccountSidewalkAccountInfoWithFingerprint`?

  SidewalkUpdate: `AWS::IoTWireless::PartnerAccountSidewalkUpdateAccount`?

  Tags: Listing<Tag>?
}

class `AWS::IoTWireless::PartnerAccountSidewalkAccountInfo` {
  AppServerPrivateKey: String
}

class `AWS::IoTWireless::PartnerAccountSidewalkAccountInfoWithFingerprint` {
  AmazonId: String?

  Arn: String?

  Fingerprint: String?
}

class `AWS::IoTWireless::PartnerAccountSidewalkUpdateAccount` {
  AppServerPrivateKey: String?
}

class `AWS::IoTWireless::ServiceProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTWireless::ServiceProfileProperties`?

  Type: "AWS::IoTWireless::ServiceProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTWireless::ServiceProfileProperties` {
  LoRaWAN: `AWS::IoTWireless::ServiceProfileLoRaWANServiceProfile`?

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::IoTWireless::ServiceProfileLoRaWANServiceProfile` {
  AddGwMetadata: Boolean?

  ChannelMask: String?

  DevStatusReqFreq: Number?

  DlBucketSize: Number?

  DlRate: Number?

  DlRatePolicy: String?

  DrMax: Number?

  DrMin: Number?

  HrAllowed: Boolean?

  MinGwDiversity: Number?

  NwkGeoLoc: Boolean?

  PrAllowed: Boolean?

  RaAllowed: Boolean?

  ReportDevStatusBattery: Boolean?

  ReportDevStatusMargin: Boolean?

  TargetPer: Number?

  UlBucketSize: Number?

  UlRate: Number?

  UlRatePolicy: String?
}

class `AWS::IoTWireless::TaskDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTWireless::TaskDefinitionProperties`

  Type: "AWS::IoTWireless::TaskDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTWireless::TaskDefinitionProperties` {
  AutoCreateTasks: Boolean

  LoRaWANUpdateGatewayTaskEntry: `AWS::IoTWireless::TaskDefinitionLoRaWANUpdateGatewayTaskEntry`?

  Name: String?

  Tags: Listing<Tag>?

  TaskDefinitionType: String?

  Update: `AWS::IoTWireless::TaskDefinitionUpdateWirelessGatewayTaskCreate`?
}

class `AWS::IoTWireless::TaskDefinitionLoRaWANGatewayVersion` {
  Model: String?

  PackageVersion: String?

  Station: String?
}

class `AWS::IoTWireless::TaskDefinitionLoRaWANUpdateGatewayTaskCreate` {
  CurrentVersion: `AWS::IoTWireless::TaskDefinitionLoRaWANGatewayVersion`?

  SigKeyCrc: Number?

  UpdateSignature: String?

  UpdateVersion: `AWS::IoTWireless::TaskDefinitionLoRaWANGatewayVersion`?
}

class `AWS::IoTWireless::TaskDefinitionLoRaWANUpdateGatewayTaskEntry` {
  CurrentVersion: `AWS::IoTWireless::TaskDefinitionLoRaWANGatewayVersion`?

  UpdateVersion: `AWS::IoTWireless::TaskDefinitionLoRaWANGatewayVersion`?
}

class `AWS::IoTWireless::TaskDefinitionUpdateWirelessGatewayTaskCreate` {
  LoRaWAN: `AWS::IoTWireless::TaskDefinitionLoRaWANUpdateGatewayTaskCreate`?

  UpdateDataRole: String?

  UpdateDataSource: String?
}

class `AWS::IoTWireless::WirelessDevice` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTWireless::WirelessDeviceProperties`

  Type: "AWS::IoTWireless::WirelessDevice"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTWireless::WirelessDeviceProperties` {
  Description: String?

  DestinationName: String

  LastUplinkReceivedAt: String?

  LoRaWAN: `AWS::IoTWireless::WirelessDeviceLoRaWANDevice`?

  Name: String?

  Tags: Listing<Tag>?

  ThingArn: String?

  Type: String
}

class `AWS::IoTWireless::WirelessDeviceAbpV10x` {
  DevAddr: String

  SessionKeys: `AWS::IoTWireless::WirelessDeviceSessionKeysAbpV10x`
}

class `AWS::IoTWireless::WirelessDeviceAbpV11` {
  DevAddr: String

  SessionKeys: `AWS::IoTWireless::WirelessDeviceSessionKeysAbpV11`
}

class `AWS::IoTWireless::WirelessDeviceLoRaWANDevice` {
  AbpV10x: `AWS::IoTWireless::WirelessDeviceAbpV10x`?

  AbpV11: `AWS::IoTWireless::WirelessDeviceAbpV11`?

  DevEui: String?

  DeviceProfileId: String?

  OtaaV10x: `AWS::IoTWireless::WirelessDeviceOtaaV10x`?

  OtaaV11: `AWS::IoTWireless::WirelessDeviceOtaaV11`?

  ServiceProfileId: String?
}

class `AWS::IoTWireless::WirelessDeviceOtaaV10x` {
  AppEui: String

  AppKey: String
}

class `AWS::IoTWireless::WirelessDeviceOtaaV11` {
  AppKey: String

  JoinEui: String

  NwkKey: String
}

class `AWS::IoTWireless::WirelessDeviceSessionKeysAbpV10x` {
  AppSKey: String

  NwkSKey: String
}

class `AWS::IoTWireless::WirelessDeviceSessionKeysAbpV11` {
  AppSKey: String

  FNwkSIntKey: String

  NwkSEncKey: String

  SNwkSIntKey: String
}

class `AWS::IoTWireless::WirelessDeviceImportTask` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTWireless::WirelessDeviceImportTaskProperties`

  Type: "AWS::IoTWireless::WirelessDeviceImportTask"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTWireless::WirelessDeviceImportTaskProperties` {
  DestinationName: String

  Sidewalk: `AWS::IoTWireless::WirelessDeviceImportTaskSidewalk`

  Tags: Listing<Tag>?
}

class `AWS::IoTWireless::WirelessDeviceImportTaskSidewalk` {
  DeviceCreationFile: String?

  DeviceCreationFileList: Listing<String>?

  Role: String?

  SidewalkManufacturingSn: String?
}

class `AWS::IoTWireless::WirelessGateway` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::IoTWireless::WirelessGatewayProperties`

  Type: "AWS::IoTWireless::WirelessGateway"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::IoTWireless::WirelessGatewayProperties` {
  Description: String?

  LastUplinkReceivedAt: String?

  LoRaWAN: `AWS::IoTWireless::WirelessGatewayLoRaWANGateway`

  Name: String?

  Tags: Listing<Tag>?

  ThingArn: String?

  ThingName: String?
}

class `AWS::IoTWireless::WirelessGatewayLoRaWANGateway` {
  GatewayEui: String

  RfRegion: String
}

class `AWS::KMS::Alias` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KMS::AliasProperties`

  Type: "AWS::KMS::Alias"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KMS::AliasProperties` {
  AliasName: String

  TargetKeyId: String
}

class `AWS::KMS::Key` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KMS::KeyProperties`?

  Type: "AWS::KMS::Key"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KMS::KeyProperties` {
  BypassPolicyLockoutSafetyCheck: Boolean?

  Description: String?

  EnableKeyRotation: Boolean?

  Enabled: Boolean?

  KeyPolicy: Dynamic?

  KeySpec: String?

  KeyUsage: String?

  MultiRegion: Boolean?

  Origin: String?

  PendingWindowInDays: Number?

  Tags: Listing<Tag>?
}

class `AWS::KMS::ReplicaKey` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KMS::ReplicaKeyProperties`

  Type: "AWS::KMS::ReplicaKey"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KMS::ReplicaKeyProperties` {
  Description: String?

  Enabled: Boolean?

  KeyPolicy: Dynamic

  PendingWindowInDays: Number?

  PrimaryKeyArn: String

  Tags: Listing<Tag>?
}

class `AWS::KafkaConnect::Connector` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KafkaConnect::ConnectorProperties`

  Type: "AWS::KafkaConnect::Connector"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KafkaConnect::ConnectorProperties` {
  Capacity: `AWS::KafkaConnect::ConnectorCapacity`

  ConnectorConfiguration: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>

  ConnectorDescription: String?

  ConnectorName: String

  KafkaCluster: `AWS::KafkaConnect::ConnectorKafkaCluster`

  KafkaClusterClientAuthentication: `AWS::KafkaConnect::ConnectorKafkaClusterClientAuthentication`

  KafkaClusterEncryptionInTransit: `AWS::KafkaConnect::ConnectorKafkaClusterEncryptionInTransit`

  KafkaConnectVersion: String

  LogDelivery: `AWS::KafkaConnect::ConnectorLogDelivery`?

  Plugins: Listing<`AWS::KafkaConnect::ConnectorPlugin`>

  ServiceExecutionRoleArn: String

  WorkerConfiguration: `AWS::KafkaConnect::ConnectorWorkerConfiguration`?
}

class `AWS::KafkaConnect::ConnectorApacheKafkaCluster` {
  BootstrapServers: String

  Vpc: `AWS::KafkaConnect::ConnectorVpc`
}

class `AWS::KafkaConnect::ConnectorAutoScaling` {
  MaxWorkerCount: Number

  McuCount: Number

  MinWorkerCount: Number

  ScaleInPolicy: `AWS::KafkaConnect::ConnectorScaleOutPolicy`

  ScaleOutPolicy: `AWS::KafkaConnect::ConnectorScaleOutPolicy`
}

class `AWS::KafkaConnect::ConnectorCapacity` {
  AutoScaling: `AWS::KafkaConnect::ConnectorAutoScaling`?

  ProvisionedCapacity: `AWS::KafkaConnect::ConnectorProvisionedCapacity`?
}

class `AWS::MSK::ClusterCloudWatchLogs` {
  Enabled: Boolean

  LogGroup: String?
}

class `AWS::KafkaConnect::ConnectorCustomPlugin` {
  CustomPluginArn: String

  Revision: Number
}

class `AWS::MSK::ClusterFirehose` {
  DeliveryStream: String?

  Enabled: Boolean
}

class `AWS::KafkaConnect::ConnectorKafkaCluster` {
  ApacheKafkaCluster: `AWS::KafkaConnect::ConnectorApacheKafkaCluster`
}

class `AWS::KafkaConnect::ConnectorKafkaClusterClientAuthentication` {
  AuthenticationType: String
}

class `AWS::KafkaConnect::ConnectorKafkaClusterEncryptionInTransit` {
  EncryptionType: String
}

class `AWS::KafkaConnect::ConnectorLogDelivery` {
  WorkerLogDelivery: `AWS::KafkaConnect::ConnectorWorkerLogDelivery`
}

class `AWS::KafkaConnect::ConnectorPlugin` {
  CustomPlugin: `AWS::KafkaConnect::ConnectorCustomPlugin`
}

class `AWS::KafkaConnect::ConnectorProvisionedCapacity` {
  McuCount: Number?

  WorkerCount: Number
}

class `AWS::MSK::ClusterS3` {
  Bucket: String?

  Enabled: Boolean

  Prefix: String?
}

class `AWS::KafkaConnect::ConnectorScaleOutPolicy` {
  CpuUtilizationPercentage: Number
}

class `AWS::KafkaConnect::ConnectorVpc` {
  SecurityGroups: Listing<String>

  Subnets: Listing<String>
}

class `AWS::KafkaConnect::ConnectorWorkerConfiguration` {
  Revision: Number

  WorkerConfigurationArn: String
}

class `AWS::KafkaConnect::ConnectorWorkerLogDelivery` {
  CloudWatchLogs: `AWS::MSK::ClusterCloudWatchLogs`?

  Firehose: `AWS::MSK::ClusterFirehose`?

  S3: `AWS::MSK::ClusterS3`?
}

class `AWS::Kendra::DataSource` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Kendra::DataSourceProperties`

  Type: "AWS::Kendra::DataSource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Kendra::DataSourceProperties` {
  CustomDocumentEnrichmentConfiguration: `AWS::Kendra::DataSourceCustomDocumentEnrichmentConfiguration`?

  DataSourceConfiguration: `AWS::Kendra::DataSourceDataSourceConfiguration`?

  Description: String?

  IndexId: String

  LanguageCode: String?

  Name: String

  RoleArn: String?

  Schedule: String?

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::Kendra::DataSourceAccessControlListConfiguration` {
  KeyPath: String?
}

class `AWS::Kendra::DataSourceAclConfiguration` {
  AllowedGroupsColumnName: String
}

class `AWS::Kendra::DataSourceColumnConfiguration` {
  ChangeDetectingColumns: Listing<String>

  DocumentDataColumnName: String

  DocumentIdColumnName: String

  DocumentTitleColumnName: String?

  FieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?
}

class `AWS::Kendra::DataSourceConfluenceAttachmentConfiguration` {
  AttachmentFieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?

  CrawlAttachments: Boolean?
}

class `AWS::Kendra::DataSourceDataSourceToIndexFieldMapping` {
  DataSourceFieldName: String

  DateFieldFormat: String?

  IndexFieldName: String
}

class `AWS::Kendra::DataSourceConfluenceBlogConfiguration` {
  BlogFieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?
}

class `AWS::Kendra::DataSourceConfluenceConfiguration` {
  AttachmentConfiguration: `AWS::Kendra::DataSourceConfluenceAttachmentConfiguration`?

  BlogConfiguration: `AWS::Kendra::DataSourceConfluenceBlogConfiguration`?

  ExclusionPatterns: Listing<String>?

  InclusionPatterns: Listing<String>?

  PageConfiguration: `AWS::Kendra::DataSourceConfluencePageConfiguration`?

  SecretArn: String

  ServerUrl: String

  SpaceConfiguration: `AWS::Kendra::DataSourceConfluenceSpaceConfiguration`?

  Version: String

  VpcConfiguration: `AWS::KinesisAnalyticsV2::ApplicationVpcConfiguration`?
}

class `AWS::Kendra::DataSourceConfluencePageConfiguration` {
  PageFieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?
}

class `AWS::Kendra::DataSourceConfluenceSpaceConfiguration` {
  CrawlArchivedSpaces: Boolean?

  CrawlPersonalSpaces: Boolean?

  ExcludeSpaces: Listing<String>?

  IncludeSpaces: Listing<String>?

  SpaceFieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?
}

class `AWS::Kendra::DataSourceConnectionConfiguration` {
  DatabaseHost: String

  DatabaseName: String

  DatabasePort: Number

  SecretArn: String

  TableName: String
}

class `AWS::Kendra::DataSourceCustomDocumentEnrichmentConfiguration` {
  InlineConfigurations: Listing<`AWS::Kendra::DataSourceInlineCustomDocumentEnrichmentConfiguration`>?

  PostExtractionHookConfiguration: `AWS::Kendra::DataSourceHookConfiguration`?

  PreExtractionHookConfiguration: `AWS::Kendra::DataSourceHookConfiguration`?

  RoleArn: String?
}

class `AWS::Kendra::DataSourceDataSourceConfiguration` {
  ConfluenceConfiguration: `AWS::Kendra::DataSourceConfluenceConfiguration`?

  DatabaseConfiguration: `AWS::Kendra::DataSourceDatabaseConfiguration`?

  GoogleDriveConfiguration: `AWS::Kendra::DataSourceGoogleDriveConfiguration`?

  OneDriveConfiguration: `AWS::Kendra::DataSourceOneDriveConfiguration`?

  S3Configuration: `AWS::Kendra::DataSourceS3DataSourceConfiguration`?

  SalesforceConfiguration: `AWS::Kendra::DataSourceSalesforceConfiguration`?

  ServiceNowConfiguration: `AWS::Kendra::DataSourceServiceNowConfiguration`?

  SharePointConfiguration: `AWS::Kendra::DataSourceSharePointConfiguration`?

  WebCrawlerConfiguration: `AWS::Kendra::DataSourceWebCrawlerConfiguration`?

  WorkDocsConfiguration: `AWS::Kendra::DataSourceWorkDocsConfiguration`?
}

class `AWS::Kendra::DataSourceDatabaseConfiguration` {
  AclConfiguration: `AWS::Kendra::DataSourceAclConfiguration`?

  ColumnConfiguration: `AWS::Kendra::DataSourceColumnConfiguration`

  ConnectionConfiguration: `AWS::Kendra::DataSourceConnectionConfiguration`

  DatabaseEngineType: String

  SqlConfiguration: `AWS::Kendra::DataSourceSqlConfiguration`?

  VpcConfiguration: `AWS::KinesisAnalyticsV2::ApplicationVpcConfiguration`?
}

class `AWS::Kendra::DataSourceDocumentAttributeCondition` {
  ConditionDocumentAttributeKey: String

  ConditionOnValue: `AWS::Kendra::DataSourceDocumentAttributeValue`?

  Operator: String
}

class `AWS::Kendra::DataSourceDocumentAttributeTarget` {
  TargetDocumentAttributeKey: String

  TargetDocumentAttributeValue: `AWS::Kendra::DataSourceDocumentAttributeValue`?

  TargetDocumentAttributeValueDeletion: Boolean?
}

class `AWS::Kendra::DataSourceDocumentAttributeValue` {
  DateValue: String?

  LongValue: Number?

  StringListValue: Listing<String>?

  StringValue: String?
}

class `AWS::Kendra::DataSourceDocumentsMetadataConfiguration` {
  S3Prefix: String?
}

class `AWS::Kendra::DataSourceGoogleDriveConfiguration` {
  ExcludeMimeTypes: Listing<String>?

  ExcludeSharedDrives: Listing<String>?

  ExcludeUserAccounts: Listing<String>?

  ExclusionPatterns: Listing<String>?

  FieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?

  InclusionPatterns: Listing<String>?

  SecretArn: String
}

class `AWS::Kendra::DataSourceHookConfiguration` {
  InvocationCondition: `AWS::Kendra::DataSourceDocumentAttributeCondition`?

  LambdaArn: String

  S3Bucket: String
}

class `AWS::Kendra::DataSourceInlineCustomDocumentEnrichmentConfiguration` {
  Condition: `AWS::Kendra::DataSourceDocumentAttributeCondition`?

  DocumentContentDeletion: Boolean?

  Target: `AWS::Kendra::DataSourceDocumentAttributeTarget`?
}

class `AWS::Kendra::DataSourceOneDriveConfiguration` {
  DisableLocalGroups: Boolean?

  ExclusionPatterns: Listing<String>?

  FieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?

  InclusionPatterns: Listing<String>?

  OneDriveUsers: `AWS::Kendra::DataSourceOneDriveUsers`

  SecretArn: String

  TenantDomain: String
}

class `AWS::Kendra::DataSourceOneDriveUsers` {
  OneDriveUserList: Listing<String>?

  OneDriveUserS3Path: `AWS::QuickSight::DataSourceManifestFileLocation`?
}

class `AWS::Kendra::DataSourceProxyConfiguration` {
  Credentials: String?

  Host: String

  Port: Number
}

class `AWS::Kendra::DataSourceS3DataSourceConfiguration` {
  AccessControlListConfiguration: `AWS::Kendra::DataSourceAccessControlListConfiguration`?

  BucketName: String

  DocumentsMetadataConfiguration: `AWS::Kendra::DataSourceDocumentsMetadataConfiguration`?

  ExclusionPatterns: Listing<String>?

  InclusionPatterns: Listing<String>?

  InclusionPrefixes: Listing<String>?
}

class `AWS::QuickSight::DataSourceManifestFileLocation` {
  Bucket: String

  Key: String
}

class `AWS::Kendra::DataSourceSalesforceChatterFeedConfiguration` {
  DocumentDataFieldName: String

  DocumentTitleFieldName: String?

  FieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?

  IncludeFilterTypes: Listing<String>?
}

class `AWS::Kendra::DataSourceSalesforceConfiguration` {
  ChatterFeedConfiguration: `AWS::Kendra::DataSourceSalesforceChatterFeedConfiguration`?

  CrawlAttachments: Boolean?

  ExcludeAttachmentFilePatterns: Listing<String>?

  IncludeAttachmentFilePatterns: Listing<String>?

  KnowledgeArticleConfiguration: `AWS::Kendra::DataSourceSalesforceKnowledgeArticleConfiguration`?

  SecretArn: String

  ServerUrl: String

  StandardObjectAttachmentConfiguration: `AWS::Kendra::DataSourceSalesforceStandardObjectAttachmentConfiguration`?

  StandardObjectConfigurations: Listing<`AWS::Kendra::DataSourceSalesforceStandardObjectConfiguration`>?
}

class `AWS::Kendra::DataSourceSalesforceStandardObjectConfiguration` {
  DocumentDataFieldName: String

  DocumentTitleFieldName: String?

  FieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?

  Name: String
}

class `AWS::Kendra::DataSourceSalesforceKnowledgeArticleConfiguration` {
  CustomKnowledgeArticleTypeConfigurations: Listing<`AWS::Kendra::DataSourceSalesforceStandardObjectConfiguration`>?

  IncludedStates: Listing<String>

  StandardKnowledgeArticleTypeConfiguration: `AWS::Kendra::DataSourceSalesforceStandardKnowledgeArticleTypeConfiguration`?
}

class `AWS::Kendra::DataSourceSalesforceStandardKnowledgeArticleTypeConfiguration` {
  DocumentDataFieldName: String

  DocumentTitleFieldName: String?

  FieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?
}

class `AWS::Kendra::DataSourceSalesforceStandardObjectAttachmentConfiguration` {
  DocumentTitleFieldName: String?

  FieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?
}

class `AWS::Kendra::DataSourceServiceNowConfiguration` {
  AuthenticationType: String?

  HostUrl: String

  KnowledgeArticleConfiguration: `AWS::Kendra::DataSourceServiceNowKnowledgeArticleConfiguration`?

  SecretArn: String

  ServiceCatalogConfiguration: `AWS::Kendra::DataSourceServiceNowServiceCatalogConfiguration`?

  ServiceNowBuildVersion: String
}

class `AWS::Kendra::DataSourceServiceNowKnowledgeArticleConfiguration` {
  CrawlAttachments: Boolean?

  DocumentDataFieldName: String

  DocumentTitleFieldName: String?

  ExcludeAttachmentFilePatterns: Listing<String>?

  FieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?

  FilterQuery: String?

  IncludeAttachmentFilePatterns: Listing<String>?
}

class `AWS::Kendra::DataSourceServiceNowServiceCatalogConfiguration` {
  CrawlAttachments: Boolean?

  DocumentDataFieldName: String

  DocumentTitleFieldName: String?

  ExcludeAttachmentFilePatterns: Listing<String>?

  FieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?

  IncludeAttachmentFilePatterns: Listing<String>?
}

class `AWS::Kendra::DataSourceSharePointConfiguration` {
  CrawlAttachments: Boolean?

  DisableLocalGroups: Boolean?

  DocumentTitleFieldName: String?

  ExclusionPatterns: Listing<String>?

  FieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?

  InclusionPatterns: Listing<String>?

  SecretArn: String

  SharePointVersion: String

  SslCertificateS3Path: `AWS::QuickSight::DataSourceManifestFileLocation`?

  Urls: Listing<String>

  UseChangeLog: Boolean?

  VpcConfiguration: `AWS::KinesisAnalyticsV2::ApplicationVpcConfiguration`?
}

class `AWS::Kendra::DataSourceSqlConfiguration` {
  QueryIdentifiersEnclosingOption: String?
}

class `AWS::Kendra::DataSourceWebCrawlerAuthenticationConfiguration` {
  BasicAuthentication: Listing<`AWS::Kendra::DataSourceWebCrawlerBasicAuthentication`>?
}

class `AWS::Kendra::DataSourceWebCrawlerBasicAuthentication` {
  Credentials: String

  Host: String

  Port: Number
}

class `AWS::Kendra::DataSourceWebCrawlerConfiguration` {
  AuthenticationConfiguration: `AWS::Kendra::DataSourceWebCrawlerAuthenticationConfiguration`?

  CrawlDepth: Number?

  MaxContentSizePerPageInMegaBytes: Number?

  MaxLinksPerPage: Number?

  MaxUrlsPerMinuteCrawlRate: Number?

  ProxyConfiguration: `AWS::Kendra::DataSourceProxyConfiguration`?

  UrlExclusionPatterns: Listing<String>?

  UrlInclusionPatterns: Listing<String>?

  Urls: `AWS::Kendra::DataSourceWebCrawlerUrls`
}

class `AWS::Kendra::DataSourceWebCrawlerSeedUrlConfiguration` {
  SeedUrls: Listing<String>

  WebCrawlerMode: String?
}

class `AWS::Kendra::DataSourceWebCrawlerSiteMapsConfiguration` {
  SiteMaps: Listing<String>
}

class `AWS::Kendra::DataSourceWebCrawlerUrls` {
  SeedUrlConfiguration: `AWS::Kendra::DataSourceWebCrawlerSeedUrlConfiguration`?

  SiteMapsConfiguration: `AWS::Kendra::DataSourceWebCrawlerSiteMapsConfiguration`?
}

class `AWS::Kendra::DataSourceWorkDocsConfiguration` {
  CrawlComments: Boolean?

  ExclusionPatterns: Listing<String>?

  FieldMappings: Listing<`AWS::Kendra::DataSourceDataSourceToIndexFieldMapping`>?

  InclusionPatterns: Listing<String>?

  OrganizationId: String

  UseChangeLog: Boolean?
}

class `AWS::Kendra::Faq` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Kendra::FaqProperties`

  Type: "AWS::Kendra::Faq"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Kendra::FaqProperties` {
  Description: String?

  FileFormat: String?

  IndexId: String

  Name: String

  RoleArn: String

  S3Path: `AWS::QuickSight::DataSourceManifestFileLocation`

  Tags: Listing<Tag>?
}

class `AWS::Kendra::Index` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Kendra::IndexProperties`

  Type: "AWS::Kendra::Index"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Kendra::IndexProperties` {
  CapacityUnits: `AWS::Kendra::IndexCapacityUnitsConfiguration`?

  Description: String?

  DocumentMetadataConfigurations: Listing<`AWS::Kendra::IndexDocumentMetadataConfiguration`>?

  Edition: String

  Name: String

  RoleArn: String

  ServerSideEncryptionConfiguration: `AWS::Wisdom::KnowledgeBaseServerSideEncryptionConfiguration`?

  Tags: Listing<Tag>?

  UserContextPolicy: String?

  UserTokenConfigurations: Listing<`AWS::Kendra::IndexUserTokenConfiguration`>?
}

class `AWS::Kendra::IndexCapacityUnitsConfiguration` {
  QueryCapacityUnits: Number

  StorageCapacityUnits: Number
}

class `AWS::Kendra::IndexDocumentMetadataConfiguration` {
  Name: String

  Relevance: `AWS::Kendra::IndexRelevance`?

  Search: `AWS::Kendra::IndexSearch`?

  Type: String
}

class `AWS::Kendra::IndexJsonTokenTypeConfiguration` {
  GroupAttributeField: String

  UserNameAttributeField: String
}

class `AWS::Kendra::IndexJwtTokenTypeConfiguration` {
  ClaimRegex: String?

  GroupAttributeField: String?

  Issuer: String?

  KeyLocation: String

  SecretManagerArn: String?

  URL: String?

  UserNameAttributeField: String?
}

class `AWS::Kendra::IndexRelevance` {
  Duration: String?

  Freshness: Boolean?

  Importance: Number?

  RankOrder: String?

  ValueImportanceItems: Listing<`AWS::Kendra::IndexValueImportanceItem`>?
}

class `AWS::Kendra::IndexSearch` {
  Displayable: Boolean?

  Facetable: Boolean?

  Searchable: Boolean?

  Sortable: Boolean?
}

class `AWS::Wisdom::KnowledgeBaseServerSideEncryptionConfiguration` {
  KmsKeyId: String?
}

class `AWS::Kendra::IndexUserTokenConfiguration` {
  JsonTokenTypeConfiguration: `AWS::Kendra::IndexJsonTokenTypeConfiguration`?

  JwtTokenTypeConfiguration: `AWS::Kendra::IndexJwtTokenTypeConfiguration`?
}

class `AWS::Kendra::IndexValueImportanceItem` {
  Key: String?

  Value: Number?
}

class `AWS::KendraRanking::ExecutionPlan` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KendraRanking::ExecutionPlanProperties`

  Type: "AWS::KendraRanking::ExecutionPlan"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KendraRanking::ExecutionPlanProperties` {
  CapacityUnits: `AWS::KendraRanking::ExecutionPlanCapacityUnitsConfiguration`?

  Description: String?

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::KendraRanking::ExecutionPlanCapacityUnitsConfiguration` {
  RescoreCapacityUnits: Number
}

class `AWS::Kinesis::Stream` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Kinesis::StreamProperties`?

  Type: "AWS::Kinesis::Stream"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Kinesis::StreamProperties` {
  Name: String?

  RetentionPeriodHours: Number?

  ShardCount: Number?

  StreamEncryption: `AWS::Kinesis::StreamStreamEncryption`?

  StreamModeDetails: `AWS::Kinesis::StreamStreamModeDetails`?

  Tags: Listing<Tag>?
}

class `AWS::Kinesis::StreamStreamModeDetails` {
  StreamMode: String
}

class `AWS::Kinesis::StreamConsumer` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Kinesis::StreamConsumerProperties`

  Type: "AWS::Kinesis::StreamConsumer"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Kinesis::StreamConsumerProperties` {
  ConsumerName: String

  StreamARN: String
}

class `AWS::KinesisAnalytics::Application` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KinesisAnalytics::ApplicationProperties`

  Type: "AWS::KinesisAnalytics::Application"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KinesisAnalytics::ApplicationProperties` {
  ApplicationCode: String?

  ApplicationDescription: String?

  ApplicationName: String?

  Inputs: Listing<`AWS::KinesisAnalytics::ApplicationInput`>
}

class `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceCSVMappingParameters` {
  RecordColumnDelimiter: String

  RecordRowDelimiter: String
}

class `AWS::KinesisAnalytics::ApplicationInput` {
  InputParallelism: `AWS::KinesisAnalyticsV2::ApplicationInputParallelism`?

  InputProcessingConfiguration: `AWS::KinesisAnalytics::ApplicationInputProcessingConfiguration`?

  InputSchema: `AWS::KinesisAnalytics::ApplicationInputSchema`

  KinesisFirehoseInput: `AWS::KinesisAnalytics::ApplicationOutputLambdaOutput`?

  KinesisStreamsInput: `AWS::KinesisAnalytics::ApplicationOutputLambdaOutput`?

  NamePrefix: String
}

class `AWS::KinesisAnalytics::ApplicationOutputLambdaOutput` {
  ResourceARN: String

  RoleARN: String
}

class `AWS::KinesisAnalyticsV2::ApplicationInputParallelism` {
  Count: Number?
}

class `AWS::KinesisAnalytics::ApplicationInputProcessingConfiguration` {
  InputLambdaProcessor: `AWS::KinesisAnalytics::ApplicationOutputLambdaOutput`?
}

class `AWS::KinesisAnalytics::ApplicationInputSchema` {
  RecordColumns: Listing<`AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceRecordColumn`>

  RecordEncoding: String?

  RecordFormat: `AWS::KinesisAnalytics::ApplicationRecordFormat`
}

class `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceJSONMappingParameters` {
  RecordRowPath: String
}

class `AWS::KinesisAnalytics::ApplicationMappingParameters` {
  CSVMappingParameters: `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceCSVMappingParameters`?

  JSONMappingParameters: `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceJSONMappingParameters`?
}

class `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceRecordColumn` {
  Mapping: String?

  Name: String

  SqlType: String
}

class `AWS::KinesisAnalytics::ApplicationRecordFormat` {
  MappingParameters: `AWS::KinesisAnalytics::ApplicationMappingParameters`?

  RecordFormatType: String
}

class `AWS::KinesisAnalytics::ApplicationOutput` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KinesisAnalytics::ApplicationOutputProperties`

  Type: "AWS::KinesisAnalytics::ApplicationOutput"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KinesisAnalytics::ApplicationOutputProperties` {
  ApplicationName: String

  Output: `AWS::KinesisAnalytics::ApplicationOutputOutput`
}

class `AWS::KinesisAnalyticsV2::ApplicationOutputDestinationSchema` {
  RecordFormatType: String?
}

class `AWS::KinesisAnalytics::ApplicationOutputOutput` {
  DestinationSchema: `AWS::KinesisAnalyticsV2::ApplicationOutputDestinationSchema`

  KinesisFirehoseOutput: `AWS::KinesisAnalytics::ApplicationOutputLambdaOutput`?

  KinesisStreamsOutput: `AWS::KinesisAnalytics::ApplicationOutputLambdaOutput`?

  LambdaOutput: `AWS::KinesisAnalytics::ApplicationOutputLambdaOutput`?

  Name: String?
}

class `AWS::KinesisAnalytics::ApplicationReferenceDataSource` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KinesisAnalytics::ApplicationReferenceDataSourceProperties`

  Type: "AWS::KinesisAnalytics::ApplicationReferenceDataSource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KinesisAnalytics::ApplicationReferenceDataSourceProperties` {
  ApplicationName: String

  ReferenceDataSource: `AWS::KinesisAnalytics::ApplicationReferenceDataSourceReferenceDataSource`
}

class `AWS::KinesisAnalytics::ApplicationReferenceDataSourceMappingParameters` {
  CSVMappingParameters: `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceCSVMappingParameters`?

  JSONMappingParameters: `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceJSONMappingParameters`?
}

class `AWS::KinesisAnalytics::ApplicationReferenceDataSourceRecordFormat` {
  MappingParameters: `AWS::KinesisAnalytics::ApplicationReferenceDataSourceMappingParameters`?

  RecordFormatType: String
}

class `AWS::KinesisAnalytics::ApplicationReferenceDataSourceReferenceDataSource` {
  ReferenceSchema: `AWS::KinesisAnalytics::ApplicationReferenceDataSourceReferenceSchema`

  S3ReferenceDataSource: `AWS::KinesisAnalytics::ApplicationReferenceDataSourceS3ReferenceDataSource`?

  TableName: String?
}

class `AWS::KinesisAnalytics::ApplicationReferenceDataSourceReferenceSchema` {
  RecordColumns: Listing<`AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceRecordColumn`>

  RecordEncoding: String?

  RecordFormat: `AWS::KinesisAnalytics::ApplicationReferenceDataSourceRecordFormat`
}

class `AWS::KinesisAnalytics::ApplicationReferenceDataSourceS3ReferenceDataSource` {
  BucketARN: String

  FileKey: String

  ReferenceRoleARN: String
}

class `AWS::KinesisAnalyticsV2::Application` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KinesisAnalyticsV2::ApplicationProperties`

  Type: "AWS::KinesisAnalyticsV2::Application"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KinesisAnalyticsV2::ApplicationProperties` {
  ApplicationConfiguration: `AWS::KinesisAnalyticsV2::ApplicationApplicationConfiguration`?

  ApplicationDescription: String?

  ApplicationMaintenanceConfiguration: `AWS::KinesisAnalyticsV2::ApplicationApplicationMaintenanceConfiguration`?

  ApplicationMode: String?

  ApplicationName: String?

  RunConfiguration: `AWS::KinesisAnalyticsV2::ApplicationRunConfiguration`?

  RuntimeEnvironment: String

  ServiceExecutionRole: String

  Tags: Listing<Tag>?
}

class `AWS::KinesisAnalyticsV2::ApplicationApplicationCodeConfiguration` {
  CodeContent: `AWS::KinesisAnalyticsV2::ApplicationCodeContent`

  CodeContentType: String
}

class `AWS::KinesisAnalyticsV2::ApplicationApplicationConfiguration` {
  ApplicationCodeConfiguration: `AWS::KinesisAnalyticsV2::ApplicationApplicationCodeConfiguration`?

  ApplicationSnapshotConfiguration: `AWS::KinesisAnalyticsV2::ApplicationApplicationSnapshotConfiguration`?

  EnvironmentProperties: `AWS::KinesisAnalyticsV2::ApplicationEnvironmentProperties`?

  FlinkApplicationConfiguration: `AWS::KinesisAnalyticsV2::ApplicationFlinkApplicationConfiguration`?

  SqlApplicationConfiguration: `AWS::KinesisAnalyticsV2::ApplicationSqlApplicationConfiguration`?

  VpcConfigurations: Listing<`AWS::KinesisAnalyticsV2::ApplicationVpcConfiguration`>?

  ZeppelinApplicationConfiguration: `AWS::KinesisAnalyticsV2::ApplicationZeppelinApplicationConfiguration`?
}

class `AWS::KinesisAnalyticsV2::ApplicationApplicationMaintenanceConfiguration` {
  ApplicationMaintenanceWindowStartTime: String
}

class `AWS::KinesisAnalyticsV2::ApplicationApplicationRestoreConfiguration` {
  ApplicationRestoreType: String

  SnapshotName: String?
}

class `AWS::KinesisAnalyticsV2::ApplicationApplicationSnapshotConfiguration` {
  SnapshotsEnabled: Boolean
}

class `AWS::KinesisAnalyticsV2::ApplicationCatalogConfiguration` {
  GlueDataCatalogConfiguration: `AWS::KinesisAnalyticsV2::ApplicationGlueDataCatalogConfiguration`?
}

class `AWS::KinesisAnalyticsV2::ApplicationCheckpointConfiguration` {
  CheckpointInterval: Number?

  CheckpointingEnabled: Boolean?

  ConfigurationType: String

  MinPauseBetweenCheckpoints: Number?
}

class `AWS::KinesisAnalyticsV2::ApplicationCodeContent` {
  S3ContentLocation: `AWS::KinesisAnalyticsV2::ApplicationS3ContentLocation`?

  TextContent: String?

  ZipFileContent: String?
}

class `AWS::KinesisAnalyticsV2::ApplicationCustomArtifactConfiguration` {
  ArtifactType: String

  MavenReference: `AWS::KinesisAnalyticsV2::ApplicationMavenReference`?

  S3ContentLocation: `AWS::KinesisAnalyticsV2::ApplicationS3ContentLocation`?
}

class `AWS::KinesisAnalyticsV2::ApplicationDeployAsApplicationConfiguration` {
  S3ContentLocation: `AWS::KinesisAnalyticsV2::ApplicationS3ContentBaseLocation`
}

class `AWS::KinesisAnalyticsV2::ApplicationEnvironmentProperties` {
  PropertyGroups: Listing<`AWS::KinesisAnalyticsV2::ApplicationPropertyGroup`>?
}

class `AWS::KinesisAnalyticsV2::ApplicationFlinkApplicationConfiguration` {
  CheckpointConfiguration: `AWS::KinesisAnalyticsV2::ApplicationCheckpointConfiguration`?

  MonitoringConfiguration: `AWS::KinesisAnalyticsV2::ApplicationMonitoringConfiguration`?

  ParallelismConfiguration: `AWS::KinesisAnalyticsV2::ApplicationParallelismConfiguration`?
}

class `AWS::KinesisAnalyticsV2::ApplicationFlinkRunConfiguration` {
  AllowNonRestoredState: Boolean?
}

class `AWS::KinesisAnalyticsV2::ApplicationGlueDataCatalogConfiguration` {
  DatabaseARN: String?
}

class `AWS::KinesisAnalyticsV2::ApplicationInput` {
  InputParallelism: `AWS::KinesisAnalyticsV2::ApplicationInputParallelism`?

  InputProcessingConfiguration: `AWS::KinesisAnalyticsV2::ApplicationInputProcessingConfiguration`?

  InputSchema: `AWS::KinesisAnalyticsV2::ApplicationInputSchema`

  KinesisFirehoseInput: `AWS::KinesisAnalyticsV2::ApplicationOutputLambdaOutput`?

  KinesisStreamsInput: `AWS::KinesisAnalyticsV2::ApplicationOutputLambdaOutput`?

  NamePrefix: String
}

class `AWS::KinesisAnalyticsV2::ApplicationOutputLambdaOutput` {
  ResourceARN: String
}

class `AWS::KinesisAnalyticsV2::ApplicationInputProcessingConfiguration` {
  InputLambdaProcessor: `AWS::KinesisAnalyticsV2::ApplicationOutputLambdaOutput`?
}

class `AWS::KinesisAnalyticsV2::ApplicationInputSchema` {
  RecordColumns: Listing<`AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceRecordColumn`>

  RecordEncoding: String?

  RecordFormat: `AWS::KinesisAnalyticsV2::ApplicationRecordFormat`
}

class `AWS::KinesisAnalyticsV2::ApplicationMappingParameters` {
  CSVMappingParameters: `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceCSVMappingParameters`?

  JSONMappingParameters: `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceJSONMappingParameters`?
}

class `AWS::KinesisAnalyticsV2::ApplicationMavenReference` {
  ArtifactId: String

  GroupId: String

  Version: String
}

class `AWS::KinesisAnalyticsV2::ApplicationMonitoringConfiguration` {
  ConfigurationType: String

  LogLevel: String?

  MetricsLevel: String?
}

class `AWS::KinesisAnalyticsV2::ApplicationParallelismConfiguration` {
  AutoScalingEnabled: Boolean?

  ConfigurationType: String

  Parallelism: Number?

  ParallelismPerKPU: Number?
}

class `AWS::KinesisAnalyticsV2::ApplicationPropertyGroup` {
  PropertyGroupId: String?

  PropertyMap: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::KinesisAnalyticsV2::ApplicationRecordFormat` {
  MappingParameters: `AWS::KinesisAnalyticsV2::ApplicationMappingParameters`?

  RecordFormatType: String
}

class `AWS::KinesisAnalyticsV2::ApplicationRunConfiguration` {
  ApplicationRestoreConfiguration: `AWS::KinesisAnalyticsV2::ApplicationApplicationRestoreConfiguration`?

  FlinkRunConfiguration: `AWS::KinesisAnalyticsV2::ApplicationFlinkRunConfiguration`?
}

class `AWS::KinesisAnalyticsV2::ApplicationS3ContentBaseLocation` {
  BasePath: String?

  BucketARN: String
}

class `AWS::KinesisAnalyticsV2::ApplicationS3ContentLocation` {
  BucketARN: String

  FileKey: String

  ObjectVersion: String?
}

class `AWS::KinesisAnalyticsV2::ApplicationSqlApplicationConfiguration` {
  Inputs: Listing<`AWS::KinesisAnalyticsV2::ApplicationInput`>?
}

class `AWS::KinesisAnalyticsV2::ApplicationZeppelinApplicationConfiguration` {
  CatalogConfiguration: `AWS::KinesisAnalyticsV2::ApplicationCatalogConfiguration`?

  CustomArtifactsConfiguration: Listing<`AWS::KinesisAnalyticsV2::ApplicationCustomArtifactConfiguration`>?

  DeployAsApplicationConfiguration: `AWS::KinesisAnalyticsV2::ApplicationDeployAsApplicationConfiguration`?

  MonitoringConfiguration: `AWS::KinesisAnalyticsV2::ApplicationZeppelinMonitoringConfiguration`?
}

class `AWS::KinesisAnalyticsV2::ApplicationZeppelinMonitoringConfiguration` {
  LogLevel: String?
}

class `AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOptionProperties`

  Type: "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOptionProperties` {
  ApplicationName: String

  CloudWatchLoggingOption: `AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOptionCloudWatchLoggingOption`
}

class `AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOptionCloudWatchLoggingOption` {
  LogStreamARN: String
}

class `AWS::KinesisAnalyticsV2::ApplicationOutput` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KinesisAnalyticsV2::ApplicationOutputProperties`

  Type: "AWS::KinesisAnalyticsV2::ApplicationOutput"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KinesisAnalyticsV2::ApplicationOutputProperties` {
  ApplicationName: String

  Output: `AWS::KinesisAnalyticsV2::ApplicationOutputOutput`
}

class `AWS::KinesisAnalyticsV2::ApplicationOutputOutput` {
  DestinationSchema: `AWS::KinesisAnalyticsV2::ApplicationOutputDestinationSchema`

  KinesisFirehoseOutput: `AWS::KinesisAnalyticsV2::ApplicationOutputLambdaOutput`?

  KinesisStreamsOutput: `AWS::KinesisAnalyticsV2::ApplicationOutputLambdaOutput`?

  LambdaOutput: `AWS::KinesisAnalyticsV2::ApplicationOutputLambdaOutput`?

  Name: String?
}

class `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceProperties`

  Type: "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceProperties` {
  ApplicationName: String

  ReferenceDataSource: `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceReferenceDataSource`
}

class `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceMappingParameters` {
  CSVMappingParameters: `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceCSVMappingParameters`?

  JSONMappingParameters: `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceJSONMappingParameters`?
}

class `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceRecordFormat` {
  MappingParameters: `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceMappingParameters`?

  RecordFormatType: String
}

class `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceReferenceDataSource` {
  ReferenceSchema: `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceReferenceSchema`

  S3ReferenceDataSource: `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceS3ReferenceDataSource`?

  TableName: String?
}

class `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceReferenceSchema` {
  RecordColumns: Listing<`AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceRecordColumn`>

  RecordEncoding: String?

  RecordFormat: `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceRecordFormat`
}

class `AWS::KinesisAnalyticsV2::ApplicationReferenceDataSourceS3ReferenceDataSource` {
  BucketARN: String

  FileKey: String
}

class `AWS::KinesisFirehose::DeliveryStream` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KinesisFirehose::DeliveryStreamProperties`?

  Type: "AWS::KinesisFirehose::DeliveryStream"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KinesisFirehose::DeliveryStreamProperties` {
  AmazonOpenSearchServerlessDestinationConfiguration: `AWS::KinesisFirehose::DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration`?

  AmazonopensearchserviceDestinationConfiguration: `AWS::KinesisFirehose::DeliveryStreamAmazonopensearchserviceDestinationConfiguration`?

  DeliveryStreamEncryptionConfigurationInput: `AWS::KinesisFirehose::DeliveryStreamDeliveryStreamEncryptionConfigurationInput`?

  DeliveryStreamName: String?

  DeliveryStreamType: String?

  ElasticsearchDestinationConfiguration: `AWS::KinesisFirehose::DeliveryStreamElasticsearchDestinationConfiguration`?

  ExtendedS3DestinationConfiguration: `AWS::KinesisFirehose::DeliveryStreamExtendedS3DestinationConfiguration`?

  HttpEndpointDestinationConfiguration: `AWS::KinesisFirehose::DeliveryStreamHttpEndpointDestinationConfiguration`?

  KinesisStreamSourceConfiguration: `AWS::KinesisFirehose::DeliveryStreamKinesisStreamSourceConfiguration`?

  MSKSourceConfiguration: `AWS::KinesisFirehose::DeliveryStreamMSKSourceConfiguration`?

  RedshiftDestinationConfiguration: `AWS::KinesisFirehose::DeliveryStreamRedshiftDestinationConfiguration`?

  S3DestinationConfiguration: `AWS::KinesisFirehose::DeliveryStreamS3DestinationConfiguration`?

  SplunkDestinationConfiguration: `AWS::KinesisFirehose::DeliveryStreamSplunkDestinationConfiguration`?

  Tags: Listing<Tag>?
}

class `AWS::KinesisFirehose::DeliveryStreamSplunkBufferingHints` {
  IntervalInSeconds: Number?

  SizeInMBs: Number?
}

class `AWS::KinesisFirehose::DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration` {
  BufferingHints: `AWS::KinesisFirehose::DeliveryStreamSplunkBufferingHints`?

  CloudWatchLoggingOptions: `AWS::KinesisFirehose::DeliveryStreamCloudWatchLoggingOptions`?

  CollectionEndpoint: String?

  IndexName: String

  ProcessingConfiguration: `AWS::KinesisFirehose::DeliveryStreamProcessingConfiguration`?

  RetryOptions: `AWS::KinesisFirehose::DeliveryStreamSplunkRetryOptions`?

  RoleARN: String

  S3BackupMode: String?

  S3Configuration: `AWS::KinesisFirehose::DeliveryStreamS3DestinationConfiguration`

  VpcConfiguration: `AWS::KinesisFirehose::DeliveryStreamVpcConfiguration`?
}

class `AWS::KinesisFirehose::DeliveryStreamSplunkRetryOptions` {
  DurationInSeconds: Number?
}

class `AWS::KinesisFirehose::DeliveryStreamAmazonopensearchserviceDestinationConfiguration` {
  BufferingHints: `AWS::KinesisFirehose::DeliveryStreamSplunkBufferingHints`?

  CloudWatchLoggingOptions: `AWS::KinesisFirehose::DeliveryStreamCloudWatchLoggingOptions`?

  ClusterEndpoint: String?

  DocumentIdOptions: `AWS::KinesisFirehose::DeliveryStreamDocumentIdOptions`?

  DomainARN: String?

  IndexName: String

  IndexRotationPeriod: String?

  ProcessingConfiguration: `AWS::KinesisFirehose::DeliveryStreamProcessingConfiguration`?

  RetryOptions: `AWS::KinesisFirehose::DeliveryStreamSplunkRetryOptions`?

  RoleARN: String

  S3BackupMode: String?

  S3Configuration: `AWS::KinesisFirehose::DeliveryStreamS3DestinationConfiguration`

  TypeName: String?

  VpcConfiguration: `AWS::KinesisFirehose::DeliveryStreamVpcConfiguration`?
}

class `AWS::KinesisFirehose::DeliveryStreamAuthenticationConfiguration` {
  Connectivity: String

  RoleARN: String
}

class `AWS::KinesisFirehose::DeliveryStreamCloudWatchLoggingOptions` {
  Enabled: Boolean?

  LogGroupName: String?

  LogStreamName: String?
}

class `AWS::KinesisFirehose::DeliveryStreamCopyCommand` {
  CopyOptions: String?

  DataTableColumns: String?

  DataTableName: String
}

class `AWS::KinesisFirehose::DeliveryStreamDataFormatConversionConfiguration` {
  Enabled: Boolean?

  InputFormatConfiguration: `AWS::KinesisFirehose::DeliveryStreamInputFormatConfiguration`?

  OutputFormatConfiguration: `AWS::KinesisFirehose::DeliveryStreamOutputFormatConfiguration`?

  SchemaConfiguration: `AWS::KinesisFirehose::DeliveryStreamSchemaConfiguration`?
}

class `AWS::KinesisFirehose::DeliveryStreamDeliveryStreamEncryptionConfigurationInput` {
  KeyARN: String?

  KeyType: String
}

class `AWS::KinesisFirehose::DeliveryStreamDeserializer` {
  HiveJsonSerDe: `AWS::KinesisFirehose::DeliveryStreamHiveJsonSerDe`?

  OpenXJsonSerDe: `AWS::KinesisFirehose::DeliveryStreamOpenXJsonSerDe`?
}

class `AWS::KinesisFirehose::DeliveryStreamDocumentIdOptions` {
  DefaultDocumentIdFormat: String
}

class `AWS::KinesisFirehose::DeliveryStreamDynamicPartitioningConfiguration` {
  Enabled: Boolean?

  RetryOptions: `AWS::KinesisFirehose::DeliveryStreamSplunkRetryOptions`?
}

class `AWS::KinesisFirehose::DeliveryStreamElasticsearchDestinationConfiguration` {
  BufferingHints: `AWS::KinesisFirehose::DeliveryStreamSplunkBufferingHints`?

  CloudWatchLoggingOptions: `AWS::KinesisFirehose::DeliveryStreamCloudWatchLoggingOptions`?

  ClusterEndpoint: String?

  DocumentIdOptions: `AWS::KinesisFirehose::DeliveryStreamDocumentIdOptions`?

  DomainARN: String?

  IndexName: String

  IndexRotationPeriod: String?

  ProcessingConfiguration: `AWS::KinesisFirehose::DeliveryStreamProcessingConfiguration`?

  RetryOptions: `AWS::KinesisFirehose::DeliveryStreamSplunkRetryOptions`?

  RoleARN: String

  S3BackupMode: String?

  S3Configuration: `AWS::KinesisFirehose::DeliveryStreamS3DestinationConfiguration`

  TypeName: String?

  VpcConfiguration: `AWS::KinesisFirehose::DeliveryStreamVpcConfiguration`?
}

class `AWS::KinesisFirehose::DeliveryStreamEncryptionConfiguration` {
  KMSEncryptionConfig: `AWS::KinesisFirehose::DeliveryStreamKMSEncryptionConfig`?

  NoEncryptionConfig: String?
}

class `AWS::KinesisFirehose::DeliveryStreamExtendedS3DestinationConfiguration` {
  BucketARN: String

  BufferingHints: `AWS::KinesisFirehose::DeliveryStreamSplunkBufferingHints`?

  CloudWatchLoggingOptions: `AWS::KinesisFirehose::DeliveryStreamCloudWatchLoggingOptions`?

  CompressionFormat: String?

  DataFormatConversionConfiguration: `AWS::KinesisFirehose::DeliveryStreamDataFormatConversionConfiguration`?

  DynamicPartitioningConfiguration: `AWS::KinesisFirehose::DeliveryStreamDynamicPartitioningConfiguration`?

  EncryptionConfiguration: `AWS::KinesisFirehose::DeliveryStreamEncryptionConfiguration`?

  ErrorOutputPrefix: String?

  Prefix: String?

  ProcessingConfiguration: `AWS::KinesisFirehose::DeliveryStreamProcessingConfiguration`?

  RoleARN: String

  S3BackupConfiguration: `AWS::KinesisFirehose::DeliveryStreamS3DestinationConfiguration`?

  S3BackupMode: String?
}

class `AWS::KinesisFirehose::DeliveryStreamHiveJsonSerDe` {
  TimestampFormats: Listing<String>?
}

class `AWS::KinesisFirehose::DeliveryStreamHttpEndpointCommonAttribute` {
  AttributeName: String

  AttributeValue: String
}

class `AWS::KinesisFirehose::DeliveryStreamHttpEndpointConfiguration` {
  AccessKey: String?

  Name: String?

  Url: String
}

class `AWS::KinesisFirehose::DeliveryStreamHttpEndpointDestinationConfiguration` {
  BufferingHints: `AWS::KinesisFirehose::DeliveryStreamSplunkBufferingHints`?

  CloudWatchLoggingOptions: `AWS::KinesisFirehose::DeliveryStreamCloudWatchLoggingOptions`?

  EndpointConfiguration: `AWS::KinesisFirehose::DeliveryStreamHttpEndpointConfiguration`

  ProcessingConfiguration: `AWS::KinesisFirehose::DeliveryStreamProcessingConfiguration`?

  RequestConfiguration: `AWS::KinesisFirehose::DeliveryStreamHttpEndpointRequestConfiguration`?

  RetryOptions: `AWS::KinesisFirehose::DeliveryStreamSplunkRetryOptions`?

  RoleARN: String?

  S3BackupMode: String?

  S3Configuration: `AWS::KinesisFirehose::DeliveryStreamS3DestinationConfiguration`
}

class `AWS::KinesisFirehose::DeliveryStreamHttpEndpointRequestConfiguration` {
  CommonAttributes: Listing<`AWS::KinesisFirehose::DeliveryStreamHttpEndpointCommonAttribute`>?

  ContentEncoding: String?
}

class `AWS::KinesisFirehose::DeliveryStreamInputFormatConfiguration` {
  Deserializer: `AWS::KinesisFirehose::DeliveryStreamDeserializer`?
}

class `AWS::KinesisFirehose::DeliveryStreamKMSEncryptionConfig` {
  AWSKMSKeyARN: String
}

class `AWS::KinesisFirehose::DeliveryStreamKinesisStreamSourceConfiguration` {
  KinesisStreamARN: String

  RoleARN: String
}

class `AWS::KinesisFirehose::DeliveryStreamMSKSourceConfiguration` {
  AuthenticationConfiguration: `AWS::KinesisFirehose::DeliveryStreamAuthenticationConfiguration`

  MSKClusterARN: String

  TopicName: String
}

class `AWS::KinesisFirehose::DeliveryStreamOpenXJsonSerDe` {
  CaseInsensitive: Boolean?

  ColumnToJsonKeyMappings: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ConvertDotsInJsonKeysToUnderscores: Boolean?
}

class `AWS::KinesisFirehose::DeliveryStreamOrcSerDe` {
  BlockSizeBytes: Number?

  BloomFilterColumns: Listing<String>?

  BloomFilterFalsePositiveProbability: Number?

  Compression: String?

  DictionaryKeyThreshold: Number?

  EnablePadding: Boolean?

  FormatVersion: String?

  PaddingTolerance: Number?

  RowIndexStride: Number?

  StripeSizeBytes: Number?
}

class `AWS::KinesisFirehose::DeliveryStreamOutputFormatConfiguration` {
  Serializer: `AWS::KinesisFirehose::DeliveryStreamSerializer`?
}

class `AWS::KinesisFirehose::DeliveryStreamParquetSerDe` {
  BlockSizeBytes: Number?

  Compression: String?

  EnableDictionaryCompression: Boolean?

  MaxPaddingBytes: Number?

  PageSizeBytes: Number?

  WriterVersion: String?
}

class `AWS::KinesisFirehose::DeliveryStreamProcessingConfiguration` {
  Enabled: Boolean?

  Processors: Listing<`AWS::KinesisFirehose::DeliveryStreamProcessor`>?
}

class `AWS::KinesisFirehose::DeliveryStreamProcessor` {
  Parameters: Listing<`AWS::Redshift::ClusterParameterGroupParameter`>?

  Type: String
}

class `AWS::KinesisFirehose::DeliveryStreamRedshiftDestinationConfiguration` {
  CloudWatchLoggingOptions: `AWS::KinesisFirehose::DeliveryStreamCloudWatchLoggingOptions`?

  ClusterJDBCURL: String

  CopyCommand: `AWS::KinesisFirehose::DeliveryStreamCopyCommand`

  Password: String

  ProcessingConfiguration: `AWS::KinesisFirehose::DeliveryStreamProcessingConfiguration`?

  RetryOptions: `AWS::KinesisFirehose::DeliveryStreamSplunkRetryOptions`?

  RoleARN: String

  S3BackupConfiguration: `AWS::KinesisFirehose::DeliveryStreamS3DestinationConfiguration`?

  S3BackupMode: String?

  S3Configuration: `AWS::KinesisFirehose::DeliveryStreamS3DestinationConfiguration`

  Username: String
}

class `AWS::KinesisFirehose::DeliveryStreamS3DestinationConfiguration` {
  BucketARN: String

  BufferingHints: `AWS::KinesisFirehose::DeliveryStreamSplunkBufferingHints`?

  CloudWatchLoggingOptions: `AWS::KinesisFirehose::DeliveryStreamCloudWatchLoggingOptions`?

  CompressionFormat: String?

  EncryptionConfiguration: `AWS::KinesisFirehose::DeliveryStreamEncryptionConfiguration`?

  ErrorOutputPrefix: String?

  Prefix: String?

  RoleARN: String
}

class `AWS::KinesisFirehose::DeliveryStreamSchemaConfiguration` {
  CatalogId: String?

  DatabaseName: String?

  Region: String?

  RoleARN: String?

  TableName: String?

  VersionId: String?
}

class `AWS::KinesisFirehose::DeliveryStreamSerializer` {
  OrcSerDe: `AWS::KinesisFirehose::DeliveryStreamOrcSerDe`?

  ParquetSerDe: `AWS::KinesisFirehose::DeliveryStreamParquetSerDe`?
}

class `AWS::KinesisFirehose::DeliveryStreamSplunkDestinationConfiguration` {
  BufferingHints: `AWS::KinesisFirehose::DeliveryStreamSplunkBufferingHints`?

  CloudWatchLoggingOptions: `AWS::KinesisFirehose::DeliveryStreamCloudWatchLoggingOptions`?

  HECAcknowledgmentTimeoutInSeconds: Number?

  HECEndpoint: String

  HECEndpointType: String

  HECToken: String

  ProcessingConfiguration: `AWS::KinesisFirehose::DeliveryStreamProcessingConfiguration`?

  RetryOptions: `AWS::KinesisFirehose::DeliveryStreamSplunkRetryOptions`?

  S3BackupMode: String?

  S3Configuration: `AWS::KinesisFirehose::DeliveryStreamS3DestinationConfiguration`
}

class `AWS::KinesisFirehose::DeliveryStreamVpcConfiguration` {
  RoleARN: String

  SecurityGroupIds: Listing<String>

  SubnetIds: Listing<String>
}

class `AWS::KinesisVideo::SignalingChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KinesisVideo::SignalingChannelProperties`?

  Type: "AWS::KinesisVideo::SignalingChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KinesisVideo::SignalingChannelProperties` {
  MessageTtlSeconds: Number?

  Name: String?

  Tags: Listing<Tag>?

  Type: String?
}

class `AWS::KinesisVideo::Stream` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::KinesisVideo::StreamProperties`?

  Type: "AWS::KinesisVideo::Stream"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::KinesisVideo::StreamProperties` {
  DataRetentionInHours: Number?

  DeviceName: String?

  KmsKeyId: String?

  MediaType: String?

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::LakeFormation::DataCellsFilter` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::LakeFormation::DataCellsFilterProperties`

  Type: "AWS::LakeFormation::DataCellsFilter"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::LakeFormation::DataCellsFilterProperties` {
  ColumnNames: Listing<String>?

  ColumnWildcard: `AWS::LakeFormation::PrincipalPermissionsColumnWildcard`?

  DatabaseName: String

  Name: String

  RowFilter: `AWS::LakeFormation::DataCellsFilterRowFilter`?

  TableCatalogId: String

  TableName: String
}

class `AWS::LakeFormation::PrincipalPermissionsColumnWildcard` {
  ExcludedColumnNames: Listing<String>?
}

class `AWS::LakeFormation::DataCellsFilterRowFilter` {
  AllRowsWildcard: Dynamic?

  FilterExpression: String?
}

class `AWS::LakeFormation::DataLakeSettings` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::LakeFormation::DataLakeSettingsProperties`?

  Type: "AWS::LakeFormation::DataLakeSettings"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::LakeFormation::DataLakeSettingsProperties` {
  Admins: `AWS::Transfer::UserSshPublicKey`?

  AllowExternalDataFiltering: Boolean?

  AllowFullTableExternalDataAccess: Boolean?

  AuthorizedSessionTagValueList: Listing<String>?

  CreateDatabaseDefaultPermissions: `AWS::Transfer::UserSshPublicKey`?

  CreateTableDefaultPermissions: `AWS::Transfer::UserSshPublicKey`?

  ExternalDataFilteringAllowList: `AWS::Transfer::UserSshPublicKey`?

  MutationType: String?

  Parameters: Dynamic?

  TrustedResourceOwners: Listing<String>?
}

class `AWS::LakeFormation::DataLakeSettingsDataLakePrincipal` {
  DataLakePrincipalIdentifier: String
}

class `AWS::LakeFormation::DataLakeSettingsPrincipalPermissions` {
  Permissions: Listing<String>

  Principal: `AWS::LakeFormation::DataLakeSettingsDataLakePrincipal`
}

class `AWS::LakeFormation::Permissions` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::LakeFormation::PermissionsProperties`

  Type: "AWS::LakeFormation::Permissions"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::LakeFormation::PermissionsProperties` {
  DataLakePrincipal: `AWS::LakeFormation::PrincipalPermissionsDataLakePrincipal`

  Permissions: Listing<String>?

  PermissionsWithGrantOption: Listing<String>?

  Resource: `AWS::LakeFormation::PermissionsResource`
}

class `AWS::LakeFormation::PermissionsDataLocationResource` {
  CatalogId: String?

  S3Resource: String?
}

class `AWS::LakeFormation::PermissionsDatabaseResource` {
  CatalogId: String?

  Name: String?
}

class `AWS::LakeFormation::PermissionsResource` {
  DataLocationResource: `AWS::LakeFormation::PermissionsDataLocationResource`?

  DatabaseResource: `AWS::LakeFormation::PermissionsDatabaseResource`?

  TableResource: `AWS::LakeFormation::PermissionsTableResource`?

  TableWithColumnsResource: `AWS::LakeFormation::PermissionsTableWithColumnsResource`?
}

class `AWS::LakeFormation::PermissionsTableResource` {
  CatalogId: String?

  DatabaseName: String?

  Name: String?

  TableWildcard: `AWS::Transfer::UserSshPublicKey`?
}

class `AWS::LakeFormation::PermissionsTableWithColumnsResource` {
  CatalogId: String?

  ColumnNames: Listing<String>?

  ColumnWildcard: `AWS::LakeFormation::PrincipalPermissionsColumnWildcard`?

  DatabaseName: String?

  Name: String?
}

class `AWS::LakeFormation::PrincipalPermissions` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::LakeFormation::PrincipalPermissionsProperties`

  Type: "AWS::LakeFormation::PrincipalPermissions"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::LakeFormation::PrincipalPermissionsProperties` {
  Catalog: String?

  Permissions: Listing<String>

  PermissionsWithGrantOption: Listing<String>

  Principal: `AWS::LakeFormation::PrincipalPermissionsDataLakePrincipal`

  Resource: `AWS::LakeFormation::PrincipalPermissionsResource`
}

class `AWS::LakeFormation::PrincipalPermissionsDataCellsFilterResource` {
  DatabaseName: String

  Name: String

  TableCatalogId: String

  TableName: String
}

class `AWS::LakeFormation::PrincipalPermissionsDataLocationResource` {
  CatalogId: String

  ResourceArn: String
}

class `AWS::LakeFormation::TagAssociationDatabaseResource` {
  CatalogId: String

  Name: String
}

class `AWS::LakeFormation::PrincipalPermissionsLFTag` {
  TagKey: String?

  TagValues: Listing<String>?
}

class `AWS::LakeFormation::TagAssociationLFTagPair` {
  CatalogId: String

  TagKey: String

  TagValues: Listing<String>
}

class `AWS::LakeFormation::PrincipalPermissionsLFTagPolicyResource` {
  CatalogId: String

  Expression: Listing<`AWS::LakeFormation::PrincipalPermissionsLFTag`>

  ResourceType: String
}

class `AWS::LakeFormation::PrincipalPermissionsResource` {
  Catalog: Dynamic?

  DataCellsFilter: `AWS::LakeFormation::PrincipalPermissionsDataCellsFilterResource`?

  DataLocation: `AWS::LakeFormation::PrincipalPermissionsDataLocationResource`?

  Database: `AWS::LakeFormation::TagAssociationDatabaseResource`?

  LFTag: `AWS::LakeFormation::TagAssociationLFTagPair`?

  LFTagPolicy: `AWS::LakeFormation::PrincipalPermissionsLFTagPolicyResource`?

  Table: `AWS::LakeFormation::TagAssociationTableResource`?

  TableWithColumns: `AWS::LakeFormation::PrincipalPermissionsTableWithColumnsResource`?
}

class `AWS::LakeFormation::TagAssociationTableResource` {
  CatalogId: String

  DatabaseName: String

  Name: String?

  TableWildcard: Dynamic?
}

class `AWS::LakeFormation::PrincipalPermissionsTableWithColumnsResource` {
  CatalogId: String

  ColumnNames: Listing<String>?

  ColumnWildcard: `AWS::LakeFormation::PrincipalPermissionsColumnWildcard`?

  DatabaseName: String

  Name: String
}

class `AWS::LakeFormation::Resource` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::LakeFormation::ResourceProperties`

  Type: "AWS::LakeFormation::Resource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::LakeFormation::ResourceProperties` {
  ResourceArn: String

  RoleArn: String?

  UseServiceLinkedRole: Boolean

  WithFederation: Boolean?
}

class `AWS::LakeFormation::Tag` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::LakeFormation::TagProperties`

  Type: "AWS::LakeFormation::Tag"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::LakeFormation::TagProperties` {
  CatalogId: String?

  TagKey: String

  TagValues: Listing<String>
}

class `AWS::LakeFormation::TagAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::LakeFormation::TagAssociationProperties`

  Type: "AWS::LakeFormation::TagAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::LakeFormation::TagAssociationProperties` {
  LFTags: Listing<`AWS::LakeFormation::TagAssociationLFTagPair`>

  Resource: `AWS::LakeFormation::TagAssociationResource`
}

class `AWS::LakeFormation::TagAssociationResource` {
  Catalog: Dynamic?

  Database: `AWS::LakeFormation::TagAssociationDatabaseResource`?

  Table: `AWS::LakeFormation::TagAssociationTableResource`?

  TableWithColumns: `AWS::LakeFormation::TagAssociationTableWithColumnsResource`?
}

class `AWS::LakeFormation::TagAssociationTableWithColumnsResource` {
  CatalogId: String

  ColumnNames: Listing<String>

  DatabaseName: String

  Name: String
}

class `AWS::Lambda::Alias` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lambda::AliasProperties`

  Type: "AWS::Lambda::Alias"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lambda::AliasProperties` {
  Description: String?

  FunctionName: String

  FunctionVersion: String

  Name: String

  ProvisionedConcurrencyConfig: `AWS::Lambda::VersionProvisionedConcurrencyConfiguration`?

  RoutingConfig: `AWS::Lambda::AliasAliasRoutingConfiguration`?
}

class `AWS::Lambda::AliasAliasRoutingConfiguration` {
  AdditionalVersionWeights: Listing<`AWS::Lambda::AliasVersionWeight`>
}

class `AWS::Lambda::VersionProvisionedConcurrencyConfiguration` {
  ProvisionedConcurrentExecutions: Number
}

class `AWS::Lambda::AliasVersionWeight` {
  FunctionVersion: String

  FunctionWeight: Number
}

class `AWS::Lambda::CodeSigningConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lambda::CodeSigningConfigProperties`

  Type: "AWS::Lambda::CodeSigningConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lambda::CodeSigningConfigProperties` {
  AllowedPublishers: `AWS::Lambda::CodeSigningConfigAllowedPublishers`

  CodeSigningPolicies: `AWS::Lambda::CodeSigningConfigCodeSigningPolicies`?

  Description: String?
}

class `AWS::Lambda::CodeSigningConfigAllowedPublishers` {
  SigningProfileVersionArns: Listing<String>
}

class `AWS::Lambda::CodeSigningConfigCodeSigningPolicies` {
  UntrustedArtifactOnDeployment: String
}

class `AWS::Lambda::EventInvokeConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lambda::EventInvokeConfigProperties`

  Type: "AWS::Lambda::EventInvokeConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lambda::EventInvokeConfigProperties` {
  DestinationConfig: `AWS::Lambda::EventInvokeConfigDestinationConfig`?

  FunctionName: String

  MaximumEventAgeInSeconds: Number?

  MaximumRetryAttempts: Number?

  Qualifier: String
}

class `AWS::Lambda::EventInvokeConfigDestinationConfig` {
  OnFailure: `AWS::Lambda::EventInvokeConfigOnSuccess`?

  OnSuccess: `AWS::Lambda::EventInvokeConfigOnSuccess`?
}

class `AWS::Lambda::EventInvokeConfigOnSuccess` {
  Destination: String
}

class `AWS::Lambda::EventSourceMapping` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lambda::EventSourceMappingProperties`

  Type: "AWS::Lambda::EventSourceMapping"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lambda::EventSourceMappingProperties` {
  AmazonManagedKafkaEventSourceConfig: `AWS::Lambda::EventSourceMappingSelfManagedKafkaEventSourceConfig`?

  BatchSize: Number?

  BisectBatchOnFunctionError: Boolean?

  DestinationConfig: `AWS::Lambda::EventSourceMappingDestinationConfig`?

  DocumentDBEventSourceConfig: `AWS::Lambda::EventSourceMappingDocumentDBEventSourceConfig`?

  Enabled: Boolean?

  EventSourceArn: String?

  FilterCriteria: `AWS::Lambda::EventSourceMappingFilterCriteria`?

  FunctionName: String

  FunctionResponseTypes: Listing<String>?

  MaximumBatchingWindowInSeconds: Number?

  MaximumRecordAgeInSeconds: Number?

  MaximumRetryAttempts: Number?

  ParallelizationFactor: Number?

  Queues: Listing<String>?

  ScalingConfig: `AWS::Lambda::EventSourceMappingScalingConfig`?

  SelfManagedEventSource: `AWS::Lambda::EventSourceMappingSelfManagedEventSource`?

  SelfManagedKafkaEventSourceConfig: `AWS::Lambda::EventSourceMappingSelfManagedKafkaEventSourceConfig`?

  SourceAccessConfigurations: Listing<`AWS::Lambda::EventSourceMappingSourceAccessConfiguration`>?

  StartingPosition: String?

  StartingPositionTimestamp: Number?

  Topics: Listing<String>?

  TumblingWindowInSeconds: Number?
}

class `AWS::Lambda::EventSourceMappingSelfManagedKafkaEventSourceConfig` {
  ConsumerGroupId: String?
}

class `AWS::Lambda::EventSourceMappingDestinationConfig` {
  OnFailure: `AWS::Lambda::EventSourceMappingOnFailure`?
}

class `AWS::Lambda::EventSourceMappingDocumentDBEventSourceConfig` {
  CollectionName: String?

  DatabaseName: String?

  FullDocument: String?
}

class `AWS::Lambda::EventSourceMappingEndpoints` {
  KafkaBootstrapServers: Listing<String>?
}

class `AWS::Pipes::PipeFilter` {
  Pattern: String?
}

class `AWS::Lambda::EventSourceMappingFilterCriteria` {
  Filters: Listing<`AWS::Pipes::PipeFilter`>?
}

class `AWS::Lambda::EventSourceMappingOnFailure` {
  Destination: String?
}

class `AWS::Lambda::EventSourceMappingScalingConfig` {
  MaximumConcurrency: Number?
}

class `AWS::Lambda::EventSourceMappingSelfManagedEventSource` {
  Endpoints: `AWS::Lambda::EventSourceMappingEndpoints`?
}

class `AWS::Lambda::EventSourceMappingSourceAccessConfiguration` {
  Type: String?

  URI: String?
}

class `AWS::Lambda::Function` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lambda::FunctionProperties`

  Type: "AWS::Lambda::Function"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lambda::FunctionProperties` {
  Architectures: Listing<String>?

  Code: `AWS::Lambda::FunctionCode`

  CodeSigningConfigArn: String?

  DeadLetterConfig: `AWS::Lambda::FunctionDeadLetterConfig`?

  Description: String?

  Environment: `AWS::Lambda::FunctionEnvironment`?

  EphemeralStorage: `AWS::Lambda::FunctionEphemeralStorage`?

  FileSystemConfigs: Listing<`AWS::Lambda::FunctionFileSystemConfig`>?

  FunctionName: String?

  Handler: String?

  ImageConfig: `AWS::Lambda::FunctionImageConfig`?

  KmsKeyArn: String?

  Layers: Listing<String>?

  LoggingConfig: `AWS::Lambda::FunctionLoggingConfig`?

  MemorySize: Number?

  PackageType: String?

  ReservedConcurrentExecutions: Number?

  Role: String

  Runtime: String?

  RuntimeManagementConfig: `AWS::Lambda::VersionRuntimePolicy`?

  SnapStart: `AWS::Lambda::FunctionSnapStart`?

  Tags: Listing<Tag>?

  Timeout: Number?

  TracingConfig: `AWS::Lambda::FunctionTracingConfig`?

  VpcConfig: `AWS::Lambda::FunctionVpcConfig`?
}

class `AWS::Lambda::FunctionCode` {
  ImageUri: String?

  S3Bucket: String?

  S3Key: String?

  S3ObjectVersion: String?

  ZipFile: String?
}

class `AWS::Lambda::FunctionDeadLetterConfig` {
  TargetArn: String?
}

class `AWS::Lambda::FunctionEnvironment` {
  Variables: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Lambda::FunctionEphemeralStorage` {
  Size: Number
}

class `AWS::Lambda::FunctionFileSystemConfig` {
  Arn: String

  LocalMountPath: String
}

class `AWS::Lambda::FunctionImageConfig` {
  Command: Listing<String>?

  EntryPoint: Listing<String>?

  WorkingDirectory: String?
}

class `AWS::Lambda::FunctionLoggingConfig` {
  ApplicationLogLevel: String?

  LogFormat: String?

  LogGroup: String?

  SystemLogLevel: String?
}

class `AWS::Lambda::VersionRuntimePolicy` {
  RuntimeVersionArn: String?

  UpdateRuntimeOn: String
}

class `AWS::Lambda::FunctionSnapStart` {
  ApplyOn: String
}

class `AWS::Lambda::FunctionSnapStartResponse` {
  ApplyOn: String?

  OptimizationStatus: String?
}

class `AWS::Lambda::FunctionVpcConfig` {
  Ipv6AllowedForDualStack: Boolean?

  SecurityGroupIds: Listing<String>?

  SubnetIds: Listing<String>?
}

class `AWS::Lambda::LayerVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lambda::LayerVersionProperties`

  Type: "AWS::Lambda::LayerVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lambda::LayerVersionProperties` {
  CompatibleArchitectures: Listing<String>?

  CompatibleRuntimes: Listing<String>?

  Content: `AWS::Lambda::LayerVersionContent`

  Description: String?

  LayerName: String?

  LicenseInfo: String?
}

class `AWS::Lambda::LayerVersionContent` {
  S3Bucket: String

  S3Key: String

  S3ObjectVersion: String?
}

class `AWS::Lambda::LayerVersionPermission` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lambda::LayerVersionPermissionProperties`

  Type: "AWS::Lambda::LayerVersionPermission"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lambda::LayerVersionPermissionProperties` {
  Action: String

  LayerVersionArn: String

  OrganizationId: String?

  Principal: String
}

class `AWS::Lambda::Permission` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lambda::PermissionProperties`

  Type: "AWS::Lambda::Permission"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lambda::PermissionProperties` {
  Action: String

  EventSourceToken: String?

  FunctionName: String

  FunctionUrlAuthType: String?

  Principal: String

  PrincipalOrgID: String?

  SourceAccount: String?

  SourceArn: String?
}

class `AWS::Lambda::Url` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lambda::UrlProperties`

  Type: "AWS::Lambda::Url"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lambda::UrlProperties` {
  AuthType: String

  Cors: `AWS::Lambda::UrlCors`?

  InvokeMode: String?

  Qualifier: String?

  TargetFunctionArn: String
}

class `AWS::Lambda::Version` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lambda::VersionProperties`

  Type: "AWS::Lambda::Version"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lambda::VersionProperties` {
  CodeSha256: String?

  Description: String?

  FunctionName: String

  ProvisionedConcurrencyConfig: `AWS::Lambda::VersionProvisionedConcurrencyConfiguration`?

  RuntimePolicy: `AWS::Lambda::VersionRuntimePolicy`?
}

class `AWS::Lex::Bot` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lex::BotProperties`

  Type: "AWS::Lex::Bot"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lex::BotProperties` {
  AutoBuildBotLocales: Boolean?

  BotFileS3Location: `AWS::Lex::BotS3Location`?

  BotLocales: Listing<`AWS::Lex::BotBotLocale`>?

  BotTags: Listing<Tag>?

  DataPrivacy: `AWS::Lex::BotDataPrivacy`

  Description: String?

  IdleSessionTTLInSeconds: Number

  Name: String

  RoleArn: String

  TestBotAliasSettings: `AWS::Lex::BotTestBotAliasSettings`?

  TestBotAliasTags: Listing<Tag>?
}

class `AWS::Lex::BotAdvancedRecognitionSetting` {
  AudioRecognitionStrategy: String?
}

class `AWS::Lex::BotAllowedInputTypes` {
  AllowAudioInput: Boolean

  AllowDTMFInput: Boolean
}

class `AWS::Lex::BotAudioAndDTMFInputSpecification` {
  AudioSpecification: `AWS::Lex::BotAudioSpecification`?

  DTMFSpecification: `AWS::Lex::BotDTMFSpecification`?

  StartTimeoutMs: Number
}

class `AWS::Lex::BotAudioLogDestination` {
  S3Bucket: `AWS::Lex::BotAliasS3BucketLogDestination`
}

class `AWS::Lex::BotAudioLogSetting` {
  Destination: `AWS::Lex::BotAudioLogDestination`

  Enabled: Boolean
}

class `AWS::Lex::BotAudioSpecification` {
  EndTimeoutMs: Number

  MaxLengthMs: Number
}

class `AWS::Lex::BotBotAliasLocaleSettings` {
  CodeHookSpecification: `AWS::Lex::BotCodeHookSpecification`?

  Enabled: Boolean
}

class `AWS::Lex::BotBotAliasLocaleSettingsItem` {
  BotAliasLocaleSetting: `AWS::Lex::BotBotAliasLocaleSettings`

  LocaleId: String
}

class `AWS::Lex::BotBotLocale` {
  CustomVocabulary: `AWS::Lex::BotCustomVocabulary`?

  Description: String?

  Intents: Listing<`AWS::Lex::BotIntent`>?

  LocaleId: String

  NluConfidenceThreshold: Number

  SlotTypes: Listing<`AWS::Lex::BotSlotType`>?

  VoiceSettings: `AWS::Lex::BotVoiceSettings`?
}

class `AWS::Lex::BotButton` {
  Text: String

  Value: String
}

class `AWS::Lex::BotAliasCloudWatchLogGroupLogDestination` {
  CloudWatchLogGroupArn: String

  LogPrefix: String
}

class `AWS::Lex::BotCodeHookSpecification` {
  LambdaCodeHook: `AWS::Lex::BotAliasLambdaCodeHook`
}

class `AWS::Lex::BotCondition` {
  ExpressionString: String
}

class `AWS::Lex::BotConditionalBranch` {
  Condition: `AWS::Lex::BotCondition`

  Name: String

  NextStep: `AWS::Lex::BotDialogState`

  Response: `AWS::Lex::BotResponseSpecification`?
}

class `AWS::Lex::BotConditionalSpecification` {
  ConditionalBranches: Listing<`AWS::Lex::BotConditionalBranch`>

  DefaultBranch: `AWS::Lex::BotDefaultConditionalBranch`

  IsActive: Boolean
}

class `AWS::Lex::BotConversationLogSettings` {
  AudioLogSettings: Listing<`AWS::Lex::BotAudioLogSetting`>?

  TextLogSettings: Listing<`AWS::Lex::BotTextLogSetting`>?
}

class `AWS::NetworkFirewall::RuleGroupDimension` {
  Value: String
}

class `AWS::Lex::BotCustomVocabulary` {
  CustomVocabularyItems: Listing<`AWS::Lex::BotCustomVocabularyItem`>
}

class `AWS::Lex::BotCustomVocabularyItem` {
  DisplayAs: String?

  Phrase: String

  Weight: Number?
}

class `AWS::Lex::BotDTMFSpecification` {
  DeletionCharacter: String

  EndCharacter: String

  EndTimeoutMs: Number

  MaxLength: Number
}

class `AWS::Lex::BotDataPrivacy` {
  ChildDirected: Boolean
}

class `AWS::Lex::BotDefaultConditionalBranch` {
  NextStep: `AWS::Lex::BotDialogState`?

  Response: `AWS::Lex::BotResponseSpecification`?
}

class `AWS::Lex::BotDialogAction` {
  SlotToElicit: String?

  SuppressNextMessage: Boolean?

  Type: String
}

class `AWS::Lex::BotDialogCodeHookInvocationSetting` {
  EnableCodeHookInvocation: Boolean

  InvocationLabel: String?

  IsActive: Boolean

  PostCodeHookSpecification: `AWS::Lex::BotPostFulfillmentStatusSpecification`
}

class `AWS::Lex::BotDialogState` {
  DialogAction: `AWS::Lex::BotDialogAction`?

  Intent: `AWS::Lex::BotIntentOverride`?

  SessionAttributes: Listing<`AWS::Lex::BotSessionAttribute`>?
}

class `AWS::Lex::BotElicitationCodeHookInvocationSetting` {
  EnableCodeHookInvocation: Boolean

  InvocationLabel: String?
}

class `AWS::Lex::BotExternalSourceSetting` {
  GrammarSlotTypeSetting: `AWS::Lex::BotGrammarSlotTypeSetting`?
}

class `AWS::Lex::BotFulfillmentCodeHookSetting` {
  Enabled: Boolean

  FulfillmentUpdatesSpecification: `AWS::Lex::BotFulfillmentUpdatesSpecification`?

  IsActive: Boolean?

  PostFulfillmentStatusSpecification: `AWS::Lex::BotPostFulfillmentStatusSpecification`?
}

class `AWS::Lex::BotFulfillmentStartResponseSpecification` {
  AllowInterrupt: Boolean?

  DelayInSeconds: Number

  MessageGroups: Listing<`AWS::Lex::BotMessageGroup`>
}

class `AWS::Lex::BotFulfillmentUpdateResponseSpecification` {
  AllowInterrupt: Boolean?

  FrequencyInSeconds: Number

  MessageGroups: Listing<`AWS::Lex::BotMessageGroup`>
}

class `AWS::Lex::BotFulfillmentUpdatesSpecification` {
  Active: Boolean

  StartResponse: `AWS::Lex::BotFulfillmentStartResponseSpecification`?

  TimeoutInSeconds: Number?

  UpdateResponse: `AWS::Lex::BotFulfillmentUpdateResponseSpecification`?
}

class `AWS::Lex::BotGrammarSlotTypeSetting` {
  Source: `AWS::Lex::BotGrammarSlotTypeSource`?
}

class `AWS::Lex::BotGrammarSlotTypeSource` {
  KmsKeyArn: String?

  S3BucketName: String

  S3ObjectKey: String
}

class `AWS::Lex::BotImageResponseCard` {
  Buttons: Listing<`AWS::Lex::BotButton`>?

  ImageUrl: String?

  Subtitle: String?

  Title: String
}

class `AWS::Lex::BotInitialResponseSetting` {
  CodeHook: `AWS::Lex::BotDialogCodeHookInvocationSetting`?

  Conditional: `AWS::Lex::BotConditionalSpecification`?

  InitialResponse: `AWS::Lex::BotResponseSpecification`?

  NextStep: `AWS::Lex::BotDialogState`?
}

class `AWS::Lex::BotIntent` {
  Description: String?

  DialogCodeHook: `AWS::MSK::ServerlessClusterIam`?

  FulfillmentCodeHook: `AWS::Lex::BotFulfillmentCodeHookSetting`?

  InitialResponseSetting: `AWS::Lex::BotInitialResponseSetting`?

  InputContexts: Listing<`AWS::WAFv2::WebACLSingleQueryArgument`>?

  IntentClosingSetting: `AWS::Lex::BotIntentClosingSetting`?

  IntentConfirmationSetting: `AWS::Lex::BotIntentConfirmationSetting`?

  KendraConfiguration: `AWS::Lex::BotKendraConfiguration`?

  Name: String

  OutputContexts: Listing<`AWS::Lex::BotOutputContext`>?

  ParentIntentSignature: String?

  SampleUtterances: Listing<`AWS::Lex::BotSampleUtterance`>?

  SlotPriorities: Listing<`AWS::Lex::BotSlotPriority`>?

  Slots: Listing<`AWS::Lex::BotSlot`>?
}

class `AWS::Lex::BotIntentClosingSetting` {
  ClosingResponse: `AWS::Lex::BotResponseSpecification`?

  Conditional: `AWS::Lex::BotConditionalSpecification`?

  IsActive: Boolean?

  NextStep: `AWS::Lex::BotDialogState`?
}

class `AWS::Lex::BotIntentConfirmationSetting` {
  CodeHook: `AWS::Lex::BotDialogCodeHookInvocationSetting`?

  ConfirmationConditional: `AWS::Lex::BotConditionalSpecification`?

  ConfirmationNextStep: `AWS::Lex::BotDialogState`?

  ConfirmationResponse: `AWS::Lex::BotResponseSpecification`?

  DeclinationConditional: `AWS::Lex::BotConditionalSpecification`?

  DeclinationNextStep: `AWS::Lex::BotDialogState`?

  DeclinationResponse: `AWS::Lex::BotResponseSpecification`?

  ElicitationCodeHook: `AWS::Lex::BotElicitationCodeHookInvocationSetting`?

  FailureConditional: `AWS::Lex::BotConditionalSpecification`?

  FailureNextStep: `AWS::Lex::BotDialogState`?

  FailureResponse: `AWS::Lex::BotResponseSpecification`?

  IsActive: Boolean?

  PromptSpecification: `AWS::Lex::BotPromptSpecification`
}

class `AWS::Lex::BotIntentOverride` {
  Name: String?

  Slots: Listing<`AWS::Lex::BotSlotValueOverrideMap`>?
}

class `AWS::Lex::BotKendraConfiguration` {
  KendraIndex: String

  QueryFilterString: String?

  QueryFilterStringEnabled: Boolean?
}

class `AWS::Lex::BotAliasLambdaCodeHook` {
  CodeHookInterfaceVersion: String

  LambdaArn: String
}

class `AWS::Lex::BotMessage` {
  CustomPayload: `AWS::NetworkFirewall::RuleGroupDimension`?

  ImageResponseCard: `AWS::Lex::BotImageResponseCard`?

  PlainTextMessage: `AWS::NetworkFirewall::RuleGroupDimension`?

  SSMLMessage: `AWS::NetworkFirewall::RuleGroupDimension`?
}

class `AWS::Lex::BotMessageGroup` {
  Message: `AWS::Lex::BotMessage`

  Variations: Listing<`AWS::Lex::BotMessage`>?
}

class `AWS::Lex::BotMultipleValuesSetting` {
  AllowMultipleValues: Boolean?
}

class `AWS::Lex::BotObfuscationSetting` {
  ObfuscationSettingType: String
}

class `AWS::Lex::BotOutputContext` {
  Name: String

  TimeToLiveInSeconds: Number

  TurnsToLive: Number
}

class `AWS::Lex::BotPostFulfillmentStatusSpecification` {
  FailureConditional: `AWS::Lex::BotConditionalSpecification`?

  FailureNextStep: `AWS::Lex::BotDialogState`?

  FailureResponse: `AWS::Lex::BotResponseSpecification`?

  SuccessConditional: `AWS::Lex::BotConditionalSpecification`?

  SuccessNextStep: `AWS::Lex::BotDialogState`?

  SuccessResponse: `AWS::Lex::BotResponseSpecification`?

  TimeoutConditional: `AWS::Lex::BotConditionalSpecification`?

  TimeoutNextStep: `AWS::Lex::BotDialogState`?

  TimeoutResponse: `AWS::Lex::BotResponseSpecification`?
}

class `AWS::Lex::BotPromptAttemptSpecification` {
  AllowInterrupt: Boolean?

  AllowedInputTypes: `AWS::Lex::BotAllowedInputTypes`

  AudioAndDTMFInputSpecification: `AWS::Lex::BotAudioAndDTMFInputSpecification`?

  TextInputSpecification: `AWS::Lex::BotTextInputSpecification`?
}

class `AWS::Lex::BotPromptSpecification` {
  AllowInterrupt: Boolean?

  MaxRetries: Number

  MessageGroupsList: Listing<`AWS::Lex::BotMessageGroup`>

  MessageSelectionStrategy: String?

  PromptAttemptsSpecification: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::Lex::BotPromptAttemptSpecification`>?
}

class `AWS::Lex::BotResponseSpecification` {
  AllowInterrupt: Boolean?

  MessageGroupsList: Listing<`AWS::Lex::BotMessageGroup`>
}

class `AWS::Lex::BotAliasS3BucketLogDestination` {
  KmsKeyArn: String?

  LogPrefix: String

  S3BucketArn: String
}

class `AWS::Lex::BotS3Location` {
  S3Bucket: String

  S3ObjectKey: String

  S3ObjectVersion: String?
}

class `AWS::Lex::BotSampleUtterance` {
  Utterance: String
}

class `AWS::Lex::BotAliasSentimentAnalysisSettings` {
  DetectSentiment: Boolean
}

class `AWS::Lex::BotSlot` {
  Description: String?

  MultipleValuesSetting: `AWS::Lex::BotMultipleValuesSetting`?

  Name: String

  ObfuscationSetting: `AWS::Lex::BotObfuscationSetting`?

  SlotTypeName: String

  ValueElicitationSetting: `AWS::Lex::BotSlotValueElicitationSetting`
}

class `AWS::Lex::BotSlotCaptureSetting` {
  CaptureConditional: `AWS::Lex::BotConditionalSpecification`?

  CaptureNextStep: `AWS::Lex::BotDialogState`?

  CaptureResponse: `AWS::Lex::BotResponseSpecification`?

  CodeHook: `AWS::Lex::BotDialogCodeHookInvocationSetting`?

  ElicitationCodeHook: `AWS::Lex::BotElicitationCodeHookInvocationSetting`?

  FailureConditional: `AWS::Lex::BotConditionalSpecification`?

  FailureNextStep: `AWS::Lex::BotDialogState`?

  FailureResponse: `AWS::Lex::BotResponseSpecification`?
}

class `AWS::Lex::BotSlotDefaultValue` {
  DefaultValue: String
}

class `AWS::Lex::BotSlotDefaultValueSpecification` {
  DefaultValueList: Listing<`AWS::Lex::BotSlotDefaultValue`>
}

class `AWS::Lex::BotSlotPriority` {
  Priority: Number

  SlotName: String
}

class `AWS::Lex::BotSlotType` {
  Description: String?

  ExternalSourceSetting: `AWS::Lex::BotExternalSourceSetting`?

  Name: String

  ParentSlotTypeSignature: String?

  SlotTypeValues: Listing<`AWS::Lex::BotSlotTypeValue`>?

  ValueSelectionSetting: `AWS::Lex::BotSlotValueSelectionSetting`?
}

class `AWS::Lex::BotSlotTypeValue` {
  SampleValue: `AWS::NetworkFirewall::RuleGroupDimension`

  Synonyms: Listing<`AWS::NetworkFirewall::RuleGroupDimension`>?
}

class `AWS::Lex::BotSlotValue` {
  InterpretedValue: String?
}

class `AWS::Lex::BotSlotValueElicitationSetting` {
  DefaultValueSpecification: `AWS::Lex::BotSlotDefaultValueSpecification`?

  PromptSpecification: `AWS::Lex::BotPromptSpecification`?

  SampleUtterances: Listing<`AWS::Lex::BotSampleUtterance`>?

  SlotCaptureSetting: `AWS::Lex::BotSlotCaptureSetting`?

  SlotConstraint: String

  WaitAndContinueSpecification: `AWS::Lex::BotWaitAndContinueSpecification`?
}

class `AWS::Lex::BotSlotValueOverride` {
  Shape: String?

  Value: `AWS::Lex::BotSlotValue`?

  Values: Listing<`AWS::Lex::BotSlotValueOverride`>?
}

class `AWS::Lex::BotSlotValueOverrideMap` {
  SlotName: String?

  SlotValueOverride: `AWS::Lex::BotSlotValueOverride`?
}

class `AWS::Lex::BotSlotValueRegexFilter` {
  Pattern: String
}

class `AWS::Lex::BotSlotValueSelectionSetting` {
  AdvancedRecognitionSetting: `AWS::Lex::BotAdvancedRecognitionSetting`?

  RegexFilter: `AWS::Lex::BotSlotValueRegexFilter`?

  ResolutionStrategy: String
}

class `AWS::Lex::BotStillWaitingResponseSpecification` {
  AllowInterrupt: Boolean?

  FrequencyInSeconds: Number

  MessageGroupsList: Listing<`AWS::Lex::BotMessageGroup`>

  TimeoutInSeconds: Number
}

class `AWS::Lex::BotTestBotAliasSettings` {
  BotAliasLocaleSettings: Listing<`AWS::Lex::BotBotAliasLocaleSettingsItem`>?

  ConversationLogSettings: `AWS::Lex::BotConversationLogSettings`?

  Description: String?

  SentimentAnalysisSettings: `AWS::Lex::BotAliasSentimentAnalysisSettings`?
}

class `AWS::Lex::BotTextInputSpecification` {
  StartTimeoutMs: Number
}

class `AWS::Lex::BotTextLogDestination` {
  CloudWatch: `AWS::Lex::BotAliasCloudWatchLogGroupLogDestination`
}

class `AWS::Lex::BotTextLogSetting` {
  Destination: `AWS::Lex::BotTextLogDestination`

  Enabled: Boolean
}

class `AWS::Lex::BotVoiceSettings` {
  Engine: String?

  VoiceId: String
}

class `AWS::Lex::BotWaitAndContinueSpecification` {
  ContinueResponse: `AWS::Lex::BotResponseSpecification`

  IsActive: Boolean?

  StillWaitingResponse: `AWS::Lex::BotStillWaitingResponseSpecification`?

  WaitingResponse: `AWS::Lex::BotResponseSpecification`
}

class `AWS::Lex::BotAlias` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lex::BotAliasProperties`

  Type: "AWS::Lex::BotAlias"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lex::BotAliasProperties` {
  BotAliasLocaleSettings: Listing<`AWS::Lex::BotAliasBotAliasLocaleSettingsItem`>?

  BotAliasName: String

  BotAliasTags: Listing<Tag>?

  BotId: String

  BotVersion: String?

  ConversationLogSettings: `AWS::Lex::BotAliasConversationLogSettings`?

  Description: String?

  SentimentAnalysisSettings: `AWS::Lex::BotAliasSentimentAnalysisSettings`?
}

class `AWS::Lex::BotAliasAudioLogDestination` {
  S3Bucket: `AWS::Lex::BotAliasS3BucketLogDestination`
}

class `AWS::Lex::BotAliasAudioLogSetting` {
  Destination: `AWS::Lex::BotAliasAudioLogDestination`

  Enabled: Boolean
}

class `AWS::Lex::BotAliasBotAliasLocaleSettings` {
  CodeHookSpecification: `AWS::Lex::BotAliasCodeHookSpecification`?

  Enabled: Boolean
}

class `AWS::Lex::BotAliasBotAliasLocaleSettingsItem` {
  BotAliasLocaleSetting: `AWS::Lex::BotAliasBotAliasLocaleSettings`

  LocaleId: String
}

class `AWS::Lex::BotAliasCodeHookSpecification` {
  LambdaCodeHook: `AWS::Lex::BotAliasLambdaCodeHook`
}

class `AWS::Lex::BotAliasConversationLogSettings` {
  AudioLogSettings: Listing<`AWS::Lex::BotAliasAudioLogSetting`>?

  TextLogSettings: Listing<`AWS::Lex::BotAliasTextLogSetting`>?
}

class `AWS::Lex::BotAliasTextLogDestination` {
  CloudWatch: `AWS::Lex::BotAliasCloudWatchLogGroupLogDestination`
}

class `AWS::Lex::BotAliasTextLogSetting` {
  Destination: `AWS::Lex::BotAliasTextLogDestination`

  Enabled: Boolean
}

class `AWS::Lex::BotVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lex::BotVersionProperties`

  Type: "AWS::Lex::BotVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lex::BotVersionProperties` {
  BotId: String

  BotVersionLocaleSpecification: Listing<`AWS::Lex::BotVersionBotVersionLocaleSpecification`>

  Description: String?
}

class `AWS::Lex::BotVersionBotVersionLocaleDetails` {
  SourceBotVersion: String
}

class `AWS::Lex::BotVersionBotVersionLocaleSpecification` {
  BotVersionLocaleDetails: `AWS::Lex::BotVersionBotVersionLocaleDetails`

  LocaleId: String
}

class `AWS::Lex::ResourcePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VpcLattice::ResourcePolicyProperties`

  Type: "AWS::Lex::ResourcePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VpcLattice::ResourcePolicyProperties` {
  Policy: Dynamic

  ResourceArn: String
}

class `AWS::LicenseManager::Grant` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::LicenseManager::GrantProperties`?

  Type: "AWS::LicenseManager::Grant"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::LicenseManager::GrantProperties` {
  AllowedOperations: Listing<String>?

  GrantName: String?

  HomeRegion: String?

  LicenseArn: String?

  Principals: Listing<String>?

  Status: String?
}

class `AWS::LicenseManager::License` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::LicenseManager::LicenseProperties`

  Type: "AWS::LicenseManager::License"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::LicenseManager::LicenseProperties` {
  Beneficiary: String?

  ConsumptionConfiguration: `AWS::LicenseManager::LicenseConsumptionConfiguration`

  Entitlements: Listing<`AWS::LicenseManager::LicenseEntitlement`>

  HomeRegion: String

  Issuer: `AWS::LicenseManager::LicenseIssuerData`

  LicenseMetadata: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  LicenseName: String

  ProductName: String

  ProductSKU: String?

  Status: String?

  Validity: `AWS::LicenseManager::LicenseValidityDateFormat`
}

class `AWS::LicenseManager::LicenseBorrowConfiguration` {
  AllowEarlyCheckIn: Boolean

  MaxTimeToLiveInMinutes: Number
}

class `AWS::LicenseManager::LicenseConsumptionConfiguration` {
  BorrowConfiguration: `AWS::LicenseManager::LicenseBorrowConfiguration`?

  ProvisionalConfiguration: `AWS::LicenseManager::LicenseProvisionalConfiguration`?

  RenewType: String?
}

class `AWS::LicenseManager::LicenseEntitlement` {
  AllowCheckIn: Boolean?

  MaxCount: Number?

  Name: String

  Overage: Boolean?

  Unit: String

  Value: String?
}

class `AWS::LicenseManager::LicenseIssuerData` {
  Name: String

  SignKey: String?
}

class `AWS::LicenseManager::LicenseProvisionalConfiguration` {
  MaxTimeToLiveInMinutes: Number
}

class `AWS::LicenseManager::LicenseValidityDateFormat` {
  Begin: String

  End: String
}

class `AWS::Lightsail::Alarm` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lightsail::AlarmProperties`

  Type: "AWS::Lightsail::Alarm"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lightsail::AlarmProperties` {
  AlarmName: String

  ComparisonOperator: String

  ContactProtocols: Listing<String>?

  DatapointsToAlarm: Number?

  EvaluationPeriods: Number

  MetricName: String

  MonitoredResourceName: String

  NotificationEnabled: Boolean?

  NotificationTriggers: Listing<String>?

  Threshold: Number

  TreatMissingData: String?
}

class `AWS::Lightsail::Bucket` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lightsail::BucketProperties`

  Type: "AWS::Lightsail::Bucket"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lightsail::BucketProperties` {
  AccessRules: `AWS::Lightsail::BucketAccessRules`?

  BucketName: String

  BundleId: String

  ObjectVersioning: Boolean?

  ReadOnlyAccessAccounts: Listing<String>?

  ResourcesReceivingAccess: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::Lightsail::BucketAccessRules` {
  AllowPublicOverrides: Boolean?

  GetObject: String?
}

class `AWS::Lightsail::Certificate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lightsail::CertificateProperties`

  Type: "AWS::Lightsail::Certificate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lightsail::CertificateProperties` {
  CertificateName: String

  DomainName: String

  SubjectAlternativeNames: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::Lightsail::Container` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lightsail::ContainerProperties`

  Type: "AWS::Lightsail::Container"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lightsail::ContainerProperties` {
  ContainerServiceDeployment: `AWS::Lightsail::ContainerContainerServiceDeployment`?

  IsDisabled: Boolean?

  Power: String

  PrivateRegistryAccess: `AWS::Lightsail::ContainerPrivateRegistryAccess`?

  PublicDomainNames: Listing<`AWS::Lightsail::ContainerPublicDomainName`>?

  Scale: Number

  ServiceName: String

  Tags: Listing<Tag>?
}

class `AWS::Lightsail::ContainerContainer` {
  Command: Listing<String>?

  ContainerName: String?

  Environment: Listing<`AWS::Lightsail::ContainerEnvironmentVariable`>?

  Image: String?

  Ports: Listing<`AWS::Lightsail::ContainerPortInfo`>?
}

class `AWS::Lightsail::ContainerContainerServiceDeployment` {
  Containers: Listing<`AWS::Lightsail::ContainerContainer`>?

  PublicEndpoint: `AWS::Lightsail::ContainerPublicEndpoint`?
}

class `AWS::Lightsail::ContainerEcrImagePullerRole` {
  IsActive: Boolean?

  PrincipalArn: String?
}

class `AWS::Lightsail::ContainerEnvironmentVariable` {
  Value: String?

  Variable: String?
}

class `AWS::Lightsail::ContainerHealthCheckConfig` {
  HealthyThreshold: Number?

  IntervalSeconds: Number?

  Path: String?

  SuccessCodes: String?

  TimeoutSeconds: Number?

  UnhealthyThreshold: Number?
}

class `AWS::Lightsail::ContainerPortInfo` {
  Port: String?

  Protocol: String?
}

class `AWS::Lightsail::ContainerPrivateRegistryAccess` {
  EcrImagePullerRole: `AWS::Lightsail::ContainerEcrImagePullerRole`?
}

class `AWS::Lightsail::ContainerPublicDomainName` {
  CertificateName: String?

  DomainNames: Listing<String>?
}

class `AWS::Lightsail::ContainerPublicEndpoint` {
  ContainerName: String?

  ContainerPort: Number?

  HealthCheckConfig: `AWS::Lightsail::ContainerHealthCheckConfig`?
}

class `AWS::Lightsail::Database` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lightsail::DatabaseProperties`

  Type: "AWS::Lightsail::Database"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lightsail::DatabaseProperties` {
  AvailabilityZone: String?

  BackupRetention: Boolean?

  CaCertificateIdentifier: String?

  MasterDatabaseName: String

  MasterUserPassword: String?

  MasterUsername: String

  PreferredBackupWindow: String?

  PreferredMaintenanceWindow: String?

  PubliclyAccessible: Boolean?

  RelationalDatabaseBlueprintId: String

  RelationalDatabaseBundleId: String

  RelationalDatabaseName: String

  RelationalDatabaseParameters: Listing<`AWS::Lightsail::DatabaseRelationalDatabaseParameter`>?

  RotateMasterUserPassword: Boolean?

  Tags: Listing<Tag>?
}

class `AWS::Lightsail::DatabaseRelationalDatabaseParameter` {
  AllowedValues: String?

  ApplyMethod: String?

  ApplyType: String?

  DataType: String?

  Description: String?

  IsModifiable: Boolean?

  ParameterName: String?

  ParameterValue: String?
}

class `AWS::Lightsail::Disk` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lightsail::DiskProperties`

  Type: "AWS::Lightsail::Disk"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lightsail::DiskProperties` {
  AddOns: Listing<`AWS::Lightsail::DiskAddOn`>?

  AvailabilityZone: String?

  DiskName: String

  Location: `AWS::Lightsail::InstanceLocation`?

  SizeInGb: Number

  Tags: Listing<Tag>?
}

class `AWS::Lightsail::DiskAddOn` {
  AddOnType: String

  AutoSnapshotAddOnRequest: `AWS::Lightsail::InstanceAutoSnapshotAddOn`?

  Status: String?
}

class `AWS::Lightsail::InstanceAutoSnapshotAddOn` {
  SnapshotTimeOfDay: String?
}

class `AWS::Lightsail::InstanceLocation` {
  AvailabilityZone: String?

  RegionName: String?
}

class `AWS::Lightsail::Distribution` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lightsail::DistributionProperties`

  Type: "AWS::Lightsail::Distribution"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lightsail::DistributionProperties` {
  BundleId: String

  CacheBehaviorSettings: `AWS::Lightsail::DistributionCacheSettings`?

  CacheBehaviors: Listing<`AWS::Lightsail::DistributionCacheBehaviorPerPath`>?

  CertificateName: String?

  DefaultCacheBehavior: `AWS::Lightsail::DistributionCacheBehavior`

  DistributionName: String

  IpAddressType: String?

  IsEnabled: Boolean?

  Origin: `AWS::Lightsail::DistributionInputOrigin`

  Tags: Listing<Tag>?
}

class `AWS::Lightsail::DistributionCacheBehavior` {
  Behavior: String?
}

class `AWS::Lightsail::DistributionCacheBehaviorPerPath` {
  Behavior: String?

  Path: String?
}

class `AWS::Lightsail::DistributionCacheSettings` {
  AllowedHTTPMethods: String?

  CachedHTTPMethods: String?

  DefaultTTL: Number?

  ForwardedCookies: `AWS::Lightsail::DistributionCookieObject`?

  ForwardedHeaders: `AWS::Lightsail::DistributionHeaderObject`?

  ForwardedQueryStrings: `AWS::Lightsail::DistributionQueryStringObject`?

  MaximumTTL: Number?

  MinimumTTL: Number?
}

class `AWS::Lightsail::DistributionCookieObject` {
  CookiesAllowList: Listing<String>?

  Option: String?
}

class `AWS::Lightsail::DistributionHeaderObject` {
  HeadersAllowList: Listing<String>?

  Option: String?
}

class `AWS::Lightsail::DistributionInputOrigin` {
  Name: String?

  ProtocolPolicy: String?

  RegionName: String?
}

class `AWS::Lightsail::DistributionQueryStringObject` {
  Option: Boolean?

  QueryStringsAllowList: Listing<String>?
}

class `AWS::Lightsail::Instance` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lightsail::InstanceProperties`

  Type: "AWS::Lightsail::Instance"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lightsail::InstanceProperties` {
  AddOns: Listing<`AWS::Lightsail::InstanceAddOn`>?

  AvailabilityZone: String?

  BlueprintId: String

  BundleId: String

  Hardware: `AWS::Lightsail::InstanceHardware`?

  InstanceName: String

  KeyPairName: String?

  Location: `AWS::Lightsail::InstanceLocation`?

  Networking: `AWS::Lightsail::InstanceNetworking`?

  State: `AWS::Lightsail::InstanceState`?

  Tags: Listing<Tag>?

  UserData: String?
}

class `AWS::Lightsail::InstanceAddOn` {
  AddOnType: String

  AutoSnapshotAddOnRequest: `AWS::Lightsail::InstanceAutoSnapshotAddOn`?

  Status: String?
}

class `AWS::Lightsail::InstanceDisk` {
  AttachedTo: String?

  AttachmentState: String?

  DiskName: String

  IOPS: Number?

  IsSystemDisk: Boolean?

  Path: String

  SizeInGb: String?
}

class `AWS::Lightsail::InstanceHardware` {
  CpuCount: Number?

  Disks: Listing<`AWS::Lightsail::InstanceDisk`>?

  RamSizeInGb: Number?
}

class `AWS::Lightsail::InstanceMonthlyTransfer` {
  GbPerMonthAllocated: String?
}

class `AWS::Lightsail::InstanceNetworking` {
  MonthlyTransfer: `AWS::Lightsail::InstanceMonthlyTransfer`?

  Ports: Listing<`AWS::Lightsail::InstancePort`>
}

class `AWS::Lightsail::InstancePort` {
  AccessDirection: String?

  AccessFrom: String?

  AccessType: String?

  CidrListAliases: Listing<String>?

  Cidrs: Listing<String>?

  CommonName: String?

  FromPort: Number?

  Ipv6Cidrs: Listing<String>?

  Protocol: String?

  ToPort: Number?
}

class `AWS::Lightsail::InstanceState` {
  Code: Number?

  Name: String?
}

class `AWS::Lightsail::LoadBalancer` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lightsail::LoadBalancerProperties`

  Type: "AWS::Lightsail::LoadBalancer"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lightsail::LoadBalancerProperties` {
  AttachedInstances: Listing<String>?

  HealthCheckPath: String?

  InstancePort: Number

  IpAddressType: String?

  LoadBalancerName: String

  SessionStickinessEnabled: Boolean?

  SessionStickinessLBCookieDurationSeconds: String?

  Tags: Listing<Tag>?

  TlsPolicyName: String?
}

class `AWS::Lightsail::LoadBalancerTlsCertificate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lightsail::LoadBalancerTlsCertificateProperties`

  Type: "AWS::Lightsail::LoadBalancerTlsCertificate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lightsail::LoadBalancerTlsCertificateProperties` {
  CertificateAlternativeNames: Listing<String>?

  CertificateDomainName: String

  CertificateName: String

  HttpsRedirectionEnabled: Boolean?

  IsAttached: Boolean?

  LoadBalancerName: String
}

class `AWS::Lightsail::StaticIp` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Lightsail::StaticIpProperties`

  Type: "AWS::Lightsail::StaticIp"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Lightsail::StaticIpProperties` {
  AttachedTo: String?

  StaticIpName: String
}

class `AWS::Location::APIKey` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Location::APIKeyProperties`

  Type: "AWS::Location::APIKey"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Location::APIKeyProperties` {
  Description: String?

  ExpireTime: String?

  ForceDelete: Boolean?

  ForceUpdate: Boolean?

  KeyName: String

  NoExpiry: Boolean?

  Restrictions: `AWS::Location::APIKeyApiKeyRestrictions`

  Tags: Listing<Tag>?
}

class `AWS::Location::APIKeyApiKeyRestrictions` {
  AllowActions: Listing<String>

  AllowReferers: Listing<String>?

  AllowResources: Listing<String>
}

class `AWS::Location::GeofenceCollection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Location::GeofenceCollectionProperties`

  Type: "AWS::Location::GeofenceCollection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Location::GeofenceCollectionProperties` {
  CollectionName: String

  Description: String?

  KmsKeyId: String?

  Tags: Listing<Tag>?
}

class `AWS::Location::Map` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Location::MapProperties`

  Type: "AWS::Location::Map"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Location::MapProperties` {
  Configuration: `AWS::Location::MapMapConfiguration`

  Description: String?

  MapName: String

  PricingPlan: String?

  Tags: Listing<Tag>?
}

class `AWS::Location::MapMapConfiguration` {
  PoliticalView: String?

  Style: String
}

class `AWS::Location::PlaceIndex` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Location::PlaceIndexProperties`

  Type: "AWS::Location::PlaceIndex"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Location::PlaceIndexProperties` {
  DataSource: String

  DataSourceConfiguration: `AWS::Location::PlaceIndexDataSourceConfiguration`?

  Description: String?

  IndexName: String

  PricingPlan: String?

  Tags: Listing<Tag>?
}

class `AWS::Location::PlaceIndexDataSourceConfiguration` {
  IntendedUse: String?
}

class `AWS::Location::RouteCalculator` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Location::RouteCalculatorProperties`

  Type: "AWS::Location::RouteCalculator"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Location::RouteCalculatorProperties` {
  CalculatorName: String

  DataSource: String

  Description: String?

  PricingPlan: String?

  Tags: Listing<Tag>?
}

class `AWS::Location::Tracker` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Location::TrackerProperties`

  Type: "AWS::Location::Tracker"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Location::TrackerProperties` {
  Description: String?

  EventBridgeEnabled: Boolean?

  KmsKeyEnableGeospatialQueries: Boolean?

  KmsKeyId: String?

  PositionFiltering: String?

  Tags: Listing<Tag>?

  TrackerName: String
}

class `AWS::Location::TrackerConsumer` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Location::TrackerConsumerProperties`

  Type: "AWS::Location::TrackerConsumer"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Location::TrackerConsumerProperties` {
  ConsumerArn: String

  TrackerName: String
}

class `AWS::Logs::AccountPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Logs::AccountPolicyProperties`

  Type: "AWS::Logs::AccountPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Logs::AccountPolicyProperties` {
  PolicyDocument: String

  PolicyName: String

  PolicyType: String

  Scope: String?

  SelectionCriteria: String?
}

class `AWS::Logs::Delivery` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Logs::DeliveryProperties`

  Type: "AWS::Logs::Delivery"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Logs::DeliveryProperties` {
  DeliveryDestinationArn: String

  DeliverySourceName: String

  Tags: Listing<Tag>?
}

class `AWS::Logs::DeliveryDestination` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Logs::DeliveryDestinationProperties`

  Type: "AWS::Logs::DeliveryDestination"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Logs::DeliveryDestinationProperties` {
  DeliveryDestinationPolicy: Dynamic?

  DestinationResourceArn: String?

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::Logs::DeliverySource` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Logs::DeliverySourceProperties`

  Type: "AWS::Logs::DeliverySource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Logs::DeliverySourceProperties` {
  LogType: String?

  Name: String

  ResourceArn: String?

  Tags: Listing<Tag>?
}

class `AWS::Logs::Destination` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Logs::DestinationProperties`

  Type: "AWS::Logs::Destination"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Logs::DestinationProperties` {
  DestinationName: String

  DestinationPolicy: String?

  RoleArn: String

  TargetArn: String
}

class `AWS::Logs::LogAnomalyDetector` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Logs::LogAnomalyDetectorProperties`?

  Type: "AWS::Logs::LogAnomalyDetector"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Logs::LogAnomalyDetectorProperties` {
  AccountId: String?

  AnomalyVisibilityTime: Number?

  DetectorName: String?

  EvaluationFrequency: String?

  FilterPattern: String?

  KmsKeyId: String?

  LogGroupArnList: Listing<String>?
}

class `AWS::Logs::LogGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Logs::LogGroupProperties`?

  Type: "AWS::Logs::LogGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Logs::LogGroupProperties` {
  DataProtectionPolicy: Dynamic?

  KmsKeyId: String?

  LogGroupClass: String?

  LogGroupName: String?

  RetentionInDays: Number?

  Tags: Listing<Tag>?
}

class `AWS::Logs::LogStream` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Logs::LogStreamProperties`

  Type: "AWS::Logs::LogStream"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Logs::LogStreamProperties` {
  LogGroupName: String

  LogStreamName: String?
}

class `AWS::Logs::MetricFilter` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Logs::MetricFilterProperties`

  Type: "AWS::Logs::MetricFilter"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Logs::MetricFilterProperties` {
  FilterName: String?

  FilterPattern: String

  LogGroupName: String

  MetricTransformations: Listing<`AWS::Logs::MetricFilterMetricTransformation`>
}

class `AWS::Logs::MetricFilterMetricTransformation` {
  DefaultValue: Number?

  Dimensions: Listing<Tag>?

  MetricName: String

  MetricNamespace: String

  MetricValue: String

  Unit: String?
}

class `AWS::Logs::QueryDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Logs::QueryDefinitionProperties`

  Type: "AWS::Logs::QueryDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Logs::QueryDefinitionProperties` {
  LogGroupNames: Listing<String>?

  Name: String

  QueryString: String
}

class `AWS::Logs::ResourcePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Logs::ResourcePolicyProperties`

  Type: "AWS::Logs::ResourcePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Logs::ResourcePolicyProperties` {
  PolicyDocument: String

  PolicyName: String
}

class `AWS::Logs::SubscriptionFilter` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Logs::SubscriptionFilterProperties`

  Type: "AWS::Logs::SubscriptionFilter"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Logs::SubscriptionFilterProperties` {
  DestinationArn: String

  Distribution: String?

  FilterName: String?

  FilterPattern: String

  LogGroupName: String

  RoleArn: String?
}

class `AWS::LookoutEquipment::InferenceScheduler` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::LookoutEquipment::InferenceSchedulerProperties`

  Type: "AWS::LookoutEquipment::InferenceScheduler"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::LookoutEquipment::InferenceSchedulerProperties` {
  DataDelayOffsetInMinutes: Number?

  DataInputConfiguration: `AWS::LookoutEquipment::InferenceSchedulerDataInputConfiguration`

  DataOutputConfiguration: `AWS::LookoutEquipment::InferenceSchedulerDataOutputConfiguration`

  DataUploadFrequency: String

  InferenceSchedulerName: String?

  ModelName: String

  RoleArn: String

  ServerSideKmsKeyId: String?

  Tags: Listing<Tag>?
}

class `AWS::LookoutEquipment::InferenceSchedulerDataInputConfiguration` {
  InferenceInputNameConfiguration: `AWS::LookoutEquipment::InferenceSchedulerInputNameConfiguration`?

  InputTimeZoneOffset: String?

  S3InputConfiguration: `AWS::LookoutEquipment::InferenceSchedulerS3OutputConfiguration`
}

class `AWS::LookoutEquipment::InferenceSchedulerDataOutputConfiguration` {
  KmsKeyId: String?

  S3OutputConfiguration: `AWS::LookoutEquipment::InferenceSchedulerS3OutputConfiguration`
}

class `AWS::LookoutEquipment::InferenceSchedulerInputNameConfiguration` {
  ComponentTimestampDelimiter: String?

  TimestampFormat: String?
}

class `AWS::LookoutEquipment::InferenceSchedulerS3OutputConfiguration` {
  Bucket: String

  Prefix: String?
}

class `AWS::LookoutMetrics::Alert` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::LookoutMetrics::AlertProperties`

  Type: "AWS::LookoutMetrics::Alert"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::LookoutMetrics::AlertProperties` {
  Action: `AWS::LookoutMetrics::AlertAction`

  AlertDescription: String?

  AlertName: String?

  AlertSensitivityThreshold: Number

  AnomalyDetectorArn: String
}

class `AWS::LookoutMetrics::AlertAction` {
  LambdaConfiguration: `AWS::LookoutMetrics::AlertLambdaConfiguration`?

  SNSConfiguration: `AWS::LookoutMetrics::AlertSNSConfiguration`?
}

class `AWS::LookoutMetrics::AlertLambdaConfiguration` {
  LambdaArn: String

  RoleArn: String
}

class `AWS::LookoutMetrics::AlertSNSConfiguration` {
  RoleArn: String

  SnsTopicArn: String
}

class `AWS::LookoutMetrics::AnomalyDetector` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::LookoutMetrics::AnomalyDetectorProperties`

  Type: "AWS::LookoutMetrics::AnomalyDetector"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::LookoutMetrics::AnomalyDetectorProperties` {
  AnomalyDetectorConfig: `AWS::LookoutMetrics::AnomalyDetectorAnomalyDetectorConfig`

  AnomalyDetectorDescription: String?

  AnomalyDetectorName: String?

  KmsKeyArn: String?

  MetricSetList: Listing<`AWS::LookoutMetrics::AnomalyDetectorMetricSet`>
}

class `AWS::LookoutMetrics::AnomalyDetectorAnomalyDetectorConfig` {
  AnomalyDetectorFrequency: String
}

class `AWS::LookoutMetrics::AnomalyDetectorAppFlowConfig` {
  FlowName: String

  RoleArn: String
}

class `AWS::LookoutMetrics::AnomalyDetectorCloudwatchConfig` {
  RoleArn: String
}

class `AWS::LookoutMetrics::AnomalyDetectorCsvFormatDescriptor` {
  Charset: String?

  ContainsHeader: Boolean?

  Delimiter: String?

  FileCompression: String?

  HeaderList: Listing<String>?

  QuoteSymbol: String?
}

class `AWS::LookoutMetrics::AnomalyDetectorFileFormatDescriptor` {
  CsvFormatDescriptor: `AWS::LookoutMetrics::AnomalyDetectorCsvFormatDescriptor`?

  JsonFormatDescriptor: `AWS::LookoutMetrics::AnomalyDetectorJsonFormatDescriptor`?
}

class `AWS::LookoutMetrics::AnomalyDetectorJsonFormatDescriptor` {
  Charset: String?

  FileCompression: String?
}

class `AWS::LookoutMetrics::AnomalyDetectorMetric` {
  AggregationFunction: String

  MetricName: String

  Namespace: String?
}

class `AWS::LookoutMetrics::AnomalyDetectorMetricSet` {
  DimensionList: Listing<String>?

  MetricList: Listing<`AWS::LookoutMetrics::AnomalyDetectorMetric`>

  MetricSetDescription: String?

  MetricSetFrequency: String?

  MetricSetName: String

  MetricSource: `AWS::LookoutMetrics::AnomalyDetectorMetricSource`

  Offset: Number?

  TimestampColumn: `AWS::LookoutMetrics::AnomalyDetectorTimestampColumn`?

  Timezone: String?
}

class `AWS::LookoutMetrics::AnomalyDetectorMetricSource` {
  AppFlowConfig: `AWS::LookoutMetrics::AnomalyDetectorAppFlowConfig`?

  CloudwatchConfig: `AWS::LookoutMetrics::AnomalyDetectorCloudwatchConfig`?

  RDSSourceConfig: `AWS::LookoutMetrics::AnomalyDetectorRDSSourceConfig`?

  RedshiftSourceConfig: `AWS::LookoutMetrics::AnomalyDetectorRedshiftSourceConfig`?

  S3SourceConfig: `AWS::LookoutMetrics::AnomalyDetectorS3SourceConfig`?
}

class `AWS::LookoutMetrics::AnomalyDetectorRDSSourceConfig` {
  DBInstanceIdentifier: String

  DatabaseHost: String

  DatabaseName: String

  DatabasePort: Number

  RoleArn: String

  SecretManagerArn: String

  TableName: String

  VpcConfiguration: `AWS::LookoutMetrics::AnomalyDetectorVpcConfiguration`
}

class `AWS::LookoutMetrics::AnomalyDetectorRedshiftSourceConfig` {
  ClusterIdentifier: String

  DatabaseHost: String

  DatabaseName: String

  DatabasePort: Number

  RoleArn: String

  SecretManagerArn: String

  TableName: String

  VpcConfiguration: `AWS::LookoutMetrics::AnomalyDetectorVpcConfiguration`
}

class `AWS::LookoutMetrics::AnomalyDetectorS3SourceConfig` {
  FileFormatDescriptor: `AWS::LookoutMetrics::AnomalyDetectorFileFormatDescriptor`

  HistoricalDataPathList: Listing<String>?

  RoleArn: String

  TemplatedPathList: Listing<String>?
}

class `AWS::LookoutMetrics::AnomalyDetectorTimestampColumn` {
  ColumnFormat: String?

  ColumnName: String?
}

class `AWS::LookoutMetrics::AnomalyDetectorVpcConfiguration` {
  SecurityGroupIdList: Listing<String>

  SubnetIdList: Listing<String>
}

class `AWS::LookoutVision::Project` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Rekognition::ProjectProperties`

  Type: "AWS::LookoutVision::Project"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Rekognition::ProjectProperties` {
  ProjectName: String
}

class `AWS::M2::Application` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::M2::ApplicationProperties`

  Type: "AWS::M2::Application"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::M2::ApplicationProperties` {
  Definition: `AWS::M2::ApplicationDefinition`

  Description: String?

  EngineType: String

  KmsKeyId: String?

  Name: String

  RoleArn: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::M2::ApplicationDefinition` {
  Content: String?

  S3Location: String?
}

class `AWS::M2::Environment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::M2::EnvironmentProperties`

  Type: "AWS::M2::Environment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::M2::EnvironmentProperties` {
  Description: String?

  EngineType: String

  EngineVersion: String?

  HighAvailabilityConfig: `AWS::M2::EnvironmentHighAvailabilityConfig`?

  InstanceType: String

  KmsKeyId: String?

  Name: String

  PreferredMaintenanceWindow: String?

  PubliclyAccessible: Boolean?

  SecurityGroupIds: Listing<String>?

  StorageConfigurations: Listing<`AWS::M2::EnvironmentStorageConfiguration`>?

  SubnetIds: Listing<String>?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::M2::EnvironmentFsxStorageConfiguration` {
  FileSystemId: String

  MountPoint: String
}

class `AWS::M2::EnvironmentHighAvailabilityConfig` {
  DesiredCapacity: Number
}

class `AWS::M2::EnvironmentStorageConfiguration` {
  Efs: `AWS::M2::EnvironmentFsxStorageConfiguration`?

  Fsx: `AWS::M2::EnvironmentFsxStorageConfiguration`?
}

class `AWS::MSK::BatchScramSecret` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MSK::BatchScramSecretProperties`

  Type: "AWS::MSK::BatchScramSecret"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MSK::BatchScramSecretProperties` {
  ClusterArn: String

  SecretArnList: Listing<String>?
}

class `AWS::MSK::Cluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MSK::ClusterProperties`

  Type: "AWS::MSK::Cluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MSK::ClusterProperties` {
  BrokerNodeGroupInfo: `AWS::MSK::ClusterBrokerNodeGroupInfo`

  ClientAuthentication: `AWS::MSK::ClusterClientAuthentication`?

  ClusterName: String

  ConfigurationInfo: `AWS::MSK::ClusterConfigurationInfo`?

  CurrentVersion: String?

  EncryptionInfo: `AWS::MSK::ClusterEncryptionInfo`?

  EnhancedMonitoring: String?

  KafkaVersion: String

  LoggingInfo: `AWS::MSK::ClusterLoggingInfo`?

  NumberOfBrokerNodes: Number

  OpenMonitoring: `AWS::MSK::ClusterOpenMonitoring`?

  StorageMode: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::MSK::ClusterBrokerLogs` {
  CloudWatchLogs: `AWS::MSK::ClusterCloudWatchLogs`?

  Firehose: `AWS::MSK::ClusterFirehose`?

  S3: `AWS::MSK::ClusterS3`?
}

class `AWS::MSK::ClusterBrokerNodeGroupInfo` {
  BrokerAZDistribution: String?

  ClientSubnets: Listing<String>

  ConnectivityInfo: `AWS::MSK::ClusterConnectivityInfo`?

  InstanceType: String

  SecurityGroups: Listing<String>?

  StorageInfo: `AWS::MSK::ClusterStorageInfo`?
}

class `AWS::MSK::ClusterClientAuthentication` {
  Sasl: `AWS::MSK::ClusterSasl`?

  Tls: `AWS::MSK::ClusterTls`?

  Unauthenticated: `AWS::MSK::ServerlessClusterIam`?
}

class `AWS::MSK::ClusterConfigurationInfo` {
  Arn: String

  Revision: Number
}

class `AWS::MSK::ClusterConnectivityInfo` {
  PublicAccess: `AWS::MSK::ClusterPublicAccess`?

  VpcConnectivity: `AWS::MSK::ClusterVpcConnectivity`?
}

class `AWS::MSK::ClusterEBSStorageInfo` {
  ProvisionedThroughput: `AWS::MSK::ClusterProvisionedThroughput`?

  VolumeSize: Number?
}

class `AWS::MSK::ClusterEncryptionAtRest` {
  DataVolumeKMSKeyId: String
}

class `AWS::MSK::ClusterEncryptionInTransit` {
  ClientBroker: String?

  InCluster: Boolean?
}

class `AWS::MSK::ClusterEncryptionInfo` {
  EncryptionAtRest: `AWS::MSK::ClusterEncryptionAtRest`?

  EncryptionInTransit: `AWS::MSK::ClusterEncryptionInTransit`?
}

class `AWS::MSK::ClusterNodeExporter` {
  EnabledInBroker: Boolean
}

class `AWS::MSK::ClusterLoggingInfo` {
  BrokerLogs: `AWS::MSK::ClusterBrokerLogs`
}

class `AWS::MSK::ClusterOpenMonitoring` {
  Prometheus: `AWS::MSK::ClusterPrometheus`
}

class `AWS::MSK::ClusterPrometheus` {
  JmxExporter: `AWS::MSK::ClusterNodeExporter`?

  NodeExporter: `AWS::MSK::ClusterNodeExporter`?
}

class `AWS::MSK::ClusterProvisionedThroughput` {
  Enabled: Boolean?

  VolumeThroughput: Number?
}

class `AWS::MSK::ClusterSasl` {
  Iam: `AWS::MSK::ServerlessClusterIam`?

  Scram: `AWS::MSK::ServerlessClusterIam`?
}

class `AWS::MSK::ClusterStorageInfo` {
  EBSStorageInfo: `AWS::MSK::ClusterEBSStorageInfo`?
}

class `AWS::MSK::ClusterTls` {
  CertificateAuthorityArnList: Listing<String>?

  Enabled: Boolean?
}

class `AWS::MSK::ClusterVpcConnectivity` {
  ClientAuthentication: `AWS::MSK::ClusterVpcConnectivityClientAuthentication`?
}

class `AWS::MSK::ClusterVpcConnectivityClientAuthentication` {
  Sasl: `AWS::MSK::ClusterVpcConnectivitySasl`?

  Tls: `AWS::MSK::ServerlessClusterIam`?
}

class `AWS::MSK::ClusterVpcConnectivitySasl` {
  Iam: `AWS::MSK::ServerlessClusterIam`?

  Scram: `AWS::MSK::ServerlessClusterIam`?
}

class `AWS::MSK::ClusterPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MSK::ClusterPolicyProperties`

  Type: "AWS::MSK::ClusterPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MSK::ClusterPolicyProperties` {
  ClusterArn: String

  Policy: Dynamic
}

class `AWS::MSK::Configuration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MSK::ConfigurationProperties`

  Type: "AWS::MSK::Configuration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MSK::ConfigurationProperties` {
  Description: String?

  KafkaVersionsList: Listing<String>?

  LatestRevision: `AWS::MSK::ConfigurationLatestRevision`?

  Name: String

  ServerProperties: String
}

class `AWS::MSK::ConfigurationLatestRevision` {
  CreationTime: String?

  Description: String?

  Revision: Number?
}

class `AWS::MSK::Replicator` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MSK::ReplicatorProperties`

  Type: "AWS::MSK::Replicator"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MSK::ReplicatorProperties` {
  CurrentVersion: String?

  Description: String?

  KafkaClusters: Listing<`AWS::MSK::ReplicatorKafkaCluster`>

  ReplicationInfoList: Listing<`AWS::MSK::ReplicatorReplicationInfo`>

  ReplicatorName: String

  ServiceExecutionRoleArn: String

  Tags: Listing<Tag>?
}

class `AWS::MSK::ReplicatorAmazonMskCluster` {
  MskClusterArn: String
}

class `AWS::MSK::ReplicatorConsumerGroupReplication` {
  ConsumerGroupsToExclude: Listing<String>?

  ConsumerGroupsToReplicate: Listing<String>

  DetectAndCopyNewConsumerGroups: Boolean?

  SynchroniseConsumerGroupOffsets: Boolean?
}

class `AWS::MSK::ReplicatorKafkaCluster` {
  AmazonMskCluster: `AWS::MSK::ReplicatorAmazonMskCluster`

  VpcConfig: `AWS::OSIS::PipelineVpcOptions`
}

class `AWS::OSIS::PipelineVpcOptions` {
  SecurityGroupIds: Listing<String>?

  SubnetIds: Listing<String>
}

class `AWS::MSK::ReplicatorReplicationInfo` {
  ConsumerGroupReplication: `AWS::MSK::ReplicatorConsumerGroupReplication`

  SourceKafkaClusterArn: String

  TargetCompressionType: String

  TargetKafkaClusterArn: String

  TopicReplication: `AWS::MSK::ReplicatorTopicReplication`
}

class `AWS::MSK::ReplicatorTopicReplication` {
  CopyAccessControlListsForTopics: Boolean?

  CopyTopicConfigurations: Boolean?

  DetectAndCopyNewTopics: Boolean?

  TopicsToExclude: Listing<String>?

  TopicsToReplicate: Listing<String>
}

class `AWS::MSK::ServerlessCluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MSK::ServerlessClusterProperties`

  Type: "AWS::MSK::ServerlessCluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MSK::ServerlessClusterProperties` {
  ClientAuthentication: `AWS::MSK::ServerlessClusterClientAuthentication`

  ClusterName: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  VpcConfigs: Listing<`AWS::MSK::ServerlessClusterVpcConfig`>
}

class `AWS::MSK::ServerlessClusterClientAuthentication` {
  Sasl: `AWS::MSK::ServerlessClusterSasl`
}

class `AWS::MSK::ServerlessClusterSasl` {
  Iam: `AWS::MSK::ServerlessClusterIam`
}

class `AWS::MSK::ServerlessClusterVpcConfig` {
  SecurityGroups: Listing<String>?

  SubnetIds: Listing<String>
}

class `AWS::MSK::VpcConnection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MSK::VpcConnectionProperties`

  Type: "AWS::MSK::VpcConnection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MSK::VpcConnectionProperties` {
  Authentication: String

  ClientSubnets: Listing<String>

  SecurityGroups: Listing<String>

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  TargetClusterArn: String

  VpcId: String
}

class `AWS::MWAA::Environment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MWAA::EnvironmentProperties`

  Type: "AWS::MWAA::Environment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MWAA::EnvironmentProperties` {
  AirflowConfigurationOptions: Dynamic?

  AirflowVersion: String?

  DagS3Path: String?

  EndpointManagement: String?

  EnvironmentClass: String?

  ExecutionRoleArn: String?

  KmsKey: String?

  LoggingConfiguration: `AWS::MWAA::EnvironmentLoggingConfiguration`?

  MaxWorkers: Number?

  MinWorkers: Number?

  Name: String

  NetworkConfiguration: `AWS::OpenSearchService::DomainVPCOptions`?

  PluginsS3ObjectVersion: String?

  PluginsS3Path: String?

  RequirementsS3ObjectVersion: String?

  RequirementsS3Path: String?

  Schedulers: Number?

  SourceBucketArn: String?

  StartupScriptS3ObjectVersion: String?

  StartupScriptS3Path: String?

  Tags: Dynamic?

  WebserverAccessMode: String?

  WeeklyMaintenanceWindowStart: String?
}

class `AWS::MWAA::EnvironmentLoggingConfiguration` {
  DagProcessingLogs: `AWS::MWAA::EnvironmentModuleLoggingConfiguration`?

  SchedulerLogs: `AWS::MWAA::EnvironmentModuleLoggingConfiguration`?

  TaskLogs: `AWS::MWAA::EnvironmentModuleLoggingConfiguration`?

  WebserverLogs: `AWS::MWAA::EnvironmentModuleLoggingConfiguration`?

  WorkerLogs: `AWS::MWAA::EnvironmentModuleLoggingConfiguration`?
}

class `AWS::MWAA::EnvironmentModuleLoggingConfiguration` {
  CloudWatchLogGroupArn: String?

  Enabled: Boolean?

  LogLevel: String?
}

class `AWS::Macie::AllowList` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Macie::AllowListProperties`

  Type: "AWS::Macie::AllowList"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Macie::AllowListProperties` {
  Criteria: `AWS::Macie::AllowListCriteria`

  Description: String?

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::Macie::AllowListCriteria` {
  Regex: String?

  S3WordsList: `AWS::SimSpaceWeaver::SimulationS3Location`?
}

class `AWS::SimSpaceWeaver::SimulationS3Location` {
  BucketName: String

  ObjectKey: String
}

class `AWS::Macie::CustomDataIdentifier` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Macie::CustomDataIdentifierProperties`

  Type: "AWS::Macie::CustomDataIdentifier"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Macie::CustomDataIdentifierProperties` {
  Description: String?

  IgnoreWords: Listing<String>?

  Keywords: Listing<String>?

  MaximumMatchDistance: Number?

  Name: String

  Regex: String

  Tags: Listing<Tag>?
}

class `AWS::Macie::FindingsFilter` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Macie::FindingsFilterProperties`

  Type: "AWS::Macie::FindingsFilter"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Macie::FindingsFilterProperties` {
  Action: String?

  Description: String?

  FindingCriteria: `AWS::Macie::FindingsFilterFindingCriteria`

  Name: String

  Position: Number?

  Tags: Listing<Tag>?
}

class `AWS::Macie::FindingsFilterCriterionAdditionalProperties` {
  eq: Listing<String>?

  gt: Number?

  gte: Number?

  lt: Number?

  lte: Number?

  neq: Listing<String>?
}

class `AWS::Macie::FindingsFilterFindingCriteria` {
  Criterion: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::Macie::FindingsFilterCriterionAdditionalProperties`>?
}

class `AWS::Macie::Session` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Macie::SessionProperties`?

  Type: "AWS::Macie::Session"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Macie::SessionProperties` {
  FindingPublishingFrequency: String?

  Status: String?
}

class `AWS::ManagedBlockchain::Accessor` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ManagedBlockchain::AccessorProperties`

  Type: "AWS::ManagedBlockchain::Accessor"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ManagedBlockchain::AccessorProperties` {
  AccessorType: String

  NetworkType: String?

  Tags: Listing<Tag>?
}

class `AWS::ManagedBlockchain::Member` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ManagedBlockchain::MemberProperties`

  Type: "AWS::ManagedBlockchain::Member"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ManagedBlockchain::MemberProperties` {
  InvitationId: String?

  MemberConfiguration: `AWS::ManagedBlockchain::MemberMemberConfiguration`

  NetworkConfiguration: `AWS::ManagedBlockchain::MemberNetworkConfiguration`?

  NetworkId: String?
}

class `AWS::ManagedBlockchain::MemberApprovalThresholdPolicy` {
  ProposalDurationInHours: Number?

  ThresholdComparator: String?

  ThresholdPercentage: Number?
}

class `AWS::ManagedBlockchain::MemberMemberConfiguration` {
  Description: String?

  MemberFrameworkConfiguration: `AWS::ManagedBlockchain::MemberMemberFrameworkConfiguration`?

  Name: String
}

class `AWS::ManagedBlockchain::MemberMemberFabricConfiguration` {
  AdminPassword: String

  AdminUsername: String
}

class `AWS::ManagedBlockchain::MemberMemberFrameworkConfiguration` {
  MemberFabricConfiguration: `AWS::ManagedBlockchain::MemberMemberFabricConfiguration`?
}

class `AWS::ManagedBlockchain::MemberNetworkConfiguration` {
  Description: String?

  Framework: String

  FrameworkVersion: String

  Name: String

  NetworkFrameworkConfiguration: `AWS::ManagedBlockchain::MemberNetworkFrameworkConfiguration`?

  VotingPolicy: `AWS::ManagedBlockchain::MemberVotingPolicy`
}

class `AWS::ManagedBlockchain::MemberNetworkFabricConfiguration` {
  Edition: String
}

class `AWS::ManagedBlockchain::MemberNetworkFrameworkConfiguration` {
  NetworkFabricConfiguration: `AWS::ManagedBlockchain::MemberNetworkFabricConfiguration`?
}

class `AWS::ManagedBlockchain::MemberVotingPolicy` {
  ApprovalThresholdPolicy: `AWS::ManagedBlockchain::MemberApprovalThresholdPolicy`?
}

class `AWS::ManagedBlockchain::Node` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ManagedBlockchain::NodeProperties`

  Type: "AWS::ManagedBlockchain::Node"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ManagedBlockchain::NodeProperties` {
  MemberId: String?

  NetworkId: String

  NodeConfiguration: `AWS::ManagedBlockchain::NodeNodeConfiguration`
}

class `AWS::ManagedBlockchain::NodeNodeConfiguration` {
  AvailabilityZone: String

  InstanceType: String
}

class `AWS::MediaConnect::Bridge` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaConnect::BridgeProperties`

  Type: "AWS::MediaConnect::Bridge"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaConnect::BridgeProperties` {
  EgressGatewayBridge: `AWS::MediaConnect::BridgeEgressGatewayBridge`?

  IngressGatewayBridge: `AWS::MediaConnect::BridgeIngressGatewayBridge`?

  Name: String

  Outputs: Listing<`AWS::MediaConnect::BridgeBridgeOutput`>?

  PlacementArn: String

  SourceFailoverConfig: `AWS::MediaConnect::BridgeFailoverConfig`?

  Sources: Listing<`AWS::MediaConnect::BridgeBridgeSource`>
}

class `AWS::MediaConnect::BridgeBridgeFlowSource` {
  FlowArn: String

  FlowVpcInterfaceAttachment: `AWS::MediaConnect::FlowSourceVpcInterfaceAttachment`?

  Name: String
}

class `AWS::MediaConnect::BridgeBridgeNetworkOutput` {
  IpAddress: String

  Name: String

  NetworkName: String

  Port: Number

  Protocol: String

  Ttl: Number
}

class `AWS::MediaConnect::BridgeBridgeNetworkSource` {
  MulticastIp: String

  Name: String

  NetworkName: String

  Port: Number

  Protocol: String
}

class `AWS::MediaConnect::BridgeBridgeOutput` {
  NetworkOutput: `AWS::MediaConnect::BridgeBridgeNetworkOutput`?
}

class `AWS::MediaConnect::BridgeBridgeSource` {
  FlowSource: `AWS::MediaConnect::BridgeBridgeFlowSource`?

  NetworkSource: `AWS::MediaConnect::BridgeBridgeNetworkSource`?
}

class `AWS::MediaConnect::BridgeEgressGatewayBridge` {
  MaxBitrate: Number
}

class `AWS::MediaConnect::BridgeFailoverConfig` {
  FailoverMode: String

  SourcePriority: `AWS::MediaConnect::BridgeSourcePriority`?

  State: String?
}

class `AWS::MediaConnect::BridgeIngressGatewayBridge` {
  MaxBitrate: Number

  MaxOutputs: Number
}

class `AWS::MediaConnect::BridgeSourcePriority` {
  PrimarySource: String?
}

class `AWS::MediaConnect::FlowSourceVpcInterfaceAttachment` {
  VpcInterfaceName: String?
}

class `AWS::MediaConnect::BridgeOutput` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaConnect::BridgeOutputProperties`

  Type: "AWS::MediaConnect::BridgeOutput"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaConnect::BridgeOutputProperties` {
  BridgeArn: String

  Name: String

  NetworkOutput: `AWS::MediaConnect::BridgeOutputBridgeNetworkOutput`
}

class `AWS::MediaConnect::BridgeOutputBridgeNetworkOutput` {
  IpAddress: String

  NetworkName: String

  Port: Number

  Protocol: String

  Ttl: Number
}

class `AWS::MediaConnect::BridgeSource` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaConnect::BridgeSourceProperties`

  Type: "AWS::MediaConnect::BridgeSource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaConnect::BridgeSourceProperties` {
  BridgeArn: String

  FlowSource: `AWS::MediaConnect::BridgeSourceBridgeFlowSource`?

  Name: String

  NetworkSource: `AWS::MediaConnect::BridgeSourceBridgeNetworkSource`?
}

class `AWS::MediaConnect::BridgeSourceBridgeFlowSource` {
  FlowArn: String

  FlowVpcInterfaceAttachment: `AWS::MediaConnect::FlowSourceVpcInterfaceAttachment`?
}

class `AWS::MediaConnect::BridgeSourceBridgeNetworkSource` {
  MulticastIp: String

  NetworkName: String

  Port: Number

  Protocol: String
}

class `AWS::MediaConnect::Flow` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaConnect::FlowProperties`

  Type: "AWS::MediaConnect::Flow"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaConnect::FlowProperties` {
  AvailabilityZone: String?

  Name: String

  Source: `AWS::MediaConnect::FlowSource`

  SourceFailoverConfig: `AWS::MediaConnect::FlowFailoverConfig`?
}

class `AWS::MediaConnect::FlowSourceEncryption` {
  Algorithm: String?

  ConstantInitializationVector: String?

  DeviceId: String?

  KeyType: String?

  Region: String?

  ResourceId: String?

  RoleArn: String

  SecretArn: String?

  Url: String?
}

class `AWS::MediaConnect::FlowFailoverConfig` {
  FailoverMode: String?

  RecoveryWindow: Number?

  SourcePriority: `AWS::MediaConnect::FlowSourcePriority`?

  State: String?
}

class `AWS::MediaConnect::FlowGatewayBridgeSource` {
  BridgeArn: String

  VpcInterfaceAttachment: `AWS::MediaConnect::FlowSourceVpcInterfaceAttachment`?
}

class `AWS::MediaConnect::FlowSource` {
  Decryption: `AWS::MediaConnect::FlowSourceEncryption`?

  Description: String?

  EntitlementArn: String?

  GatewayBridgeSource: `AWS::MediaConnect::FlowGatewayBridgeSource`?

  IngestIp: String?

  IngestPort: Number?

  MaxBitrate: Number?

  MaxLatency: Number?

  MinLatency: Number?

  Name: String?

  Protocol: String?

  SenderControlPort: Number?

  SenderIpAddress: String?

  SourceArn: String?

  SourceIngestPort: String?

  SourceListenerAddress: String?

  SourceListenerPort: Number?

  StreamId: String?

  VpcInterfaceName: String?

  WhitelistCidr: String?
}

class `AWS::MediaConnect::FlowSourcePriority` {
  PrimarySource: String
}

class `AWS::MediaConnect::FlowEntitlement` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaConnect::FlowEntitlementProperties`

  Type: "AWS::MediaConnect::FlowEntitlement"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaConnect::FlowEntitlementProperties` {
  DataTransferSubscriberFeePercent: Number?

  Description: String

  Encryption: `AWS::MediaConnect::FlowEntitlementEncryption`?

  EntitlementStatus: String?

  FlowArn: String

  Name: String

  Subscribers: Listing<String>
}

class `AWS::MediaConnect::FlowEntitlementEncryption` {
  Algorithm: String

  ConstantInitializationVector: String?

  DeviceId: String?

  KeyType: String?

  Region: String?

  ResourceId: String?

  RoleArn: String

  SecretArn: String?

  Url: String?
}

class `AWS::MediaConnect::FlowOutput` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaConnect::FlowOutputProperties`

  Type: "AWS::MediaConnect::FlowOutput"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaConnect::FlowOutputProperties` {
  CidrAllowList: Listing<String>?

  Description: String?

  Destination: String?

  Encryption: `AWS::MediaConnect::FlowOutputEncryption`?

  FlowArn: String

  MaxLatency: Number?

  MinLatency: Number?

  Name: String?

  Port: Number?

  Protocol: String

  RemoteId: String?

  SmoothingLatency: Number?

  StreamId: String?

  VpcInterfaceAttachment: `AWS::MediaConnect::FlowSourceVpcInterfaceAttachment`?
}

class `AWS::MediaConnect::FlowOutputEncryption` {
  Algorithm: String?

  KeyType: String?

  RoleArn: String

  SecretArn: String
}

class `AWS::MediaConnect::FlowSource0` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaConnect::FlowSourceProperties`

  Type: "AWS::MediaConnect::FlowSource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaConnect::FlowSourceProperties` {
  Decryption: `AWS::MediaConnect::FlowSourceEncryption`?

  Description: String

  EntitlementArn: String?

  FlowArn: String?

  GatewayBridgeSource: `AWS::MediaConnect::FlowSourceGatewayBridgeSource`?

  IngestPort: Number?

  MaxBitrate: Number?

  MaxLatency: Number?

  MinLatency: Number?

  Name: String

  Protocol: String?

  SenderControlPort: Number?

  SenderIpAddress: String?

  SourceListenerAddress: String?

  SourceListenerPort: Number?

  StreamId: String?

  VpcInterfaceName: String?

  WhitelistCidr: String?
}

class `AWS::MediaConnect::FlowSourceGatewayBridgeSource` {
  BridgeArn: String

  VpcInterfaceAttachment: `AWS::MediaConnect::FlowSourceVpcInterfaceAttachment`?
}

class `AWS::MediaConnect::FlowVpcInterface` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaConnect::FlowVpcInterfaceProperties`

  Type: "AWS::MediaConnect::FlowVpcInterface"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaConnect::FlowVpcInterfaceProperties` {
  FlowArn: String

  Name: String

  RoleArn: String

  SecurityGroupIds: Listing<String>

  SubnetId: String
}

class `AWS::MediaConnect::Gateway` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaConnect::GatewayProperties`

  Type: "AWS::MediaConnect::Gateway"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaConnect::GatewayProperties` {
  EgressCidrBlocks: Listing<String>

  Name: String

  Networks: Listing<`AWS::MediaConnect::GatewayGatewayNetwork`>
}

class `AWS::MediaConnect::GatewayGatewayNetwork` {
  CidrBlock: String

  Name: String
}

class `AWS::MediaConvert::JobTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaConvert::JobTemplateProperties`

  Type: "AWS::MediaConvert::JobTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaConvert::JobTemplateProperties` {
  AccelerationSettings: `AWS::VerifiedPermissions::PolicyStoreValidationSettings`?

  Category: String?

  Description: String?

  HopDestinations: Listing<`AWS::MediaConvert::JobTemplateHopDestination`>?

  Name: String?

  Priority: Number?

  Queue: String?

  SettingsJson: Dynamic

  StatusUpdateInterval: String?

  Tags: Dynamic?
}

class `AWS::VerifiedPermissions::PolicyStoreValidationSettings` {
  Mode: String
}

class `AWS::MediaConvert::JobTemplateHopDestination` {
  Priority: Number?

  Queue: String?

  WaitMinutes: Number?
}

class `AWS::MediaConvert::Preset` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaConvert::PresetProperties`

  Type: "AWS::MediaConvert::Preset"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaConvert::PresetProperties` {
  Category: String?

  Description: String?

  Name: String?

  SettingsJson: Dynamic

  Tags: Dynamic?
}

class `AWS::MediaConvert::Queue` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaConvert::QueueProperties`?

  Type: "AWS::MediaConvert::Queue"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaConvert::QueueProperties` {
  Description: String?

  Name: String?

  PricingPlan: String?

  Status: String?

  Tags: Dynamic?
}

class `AWS::MediaLive::Channel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaLive::ChannelProperties`?

  Type: "AWS::MediaLive::Channel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaLive::ChannelProperties` {
  CdiInputSpecification: `AWS::MediaLive::ChannelCdiInputSpecification`?

  ChannelClass: String?

  Destinations: Listing<`AWS::MediaLive::ChannelOutputDestination`>?

  EncoderSettings: `AWS::MediaLive::ChannelEncoderSettings`?

  InputAttachments: Listing<`AWS::MediaLive::ChannelInputAttachment`>?

  InputSpecification: `AWS::MediaLive::ChannelInputSpecification`?

  LogLevel: String?

  Maintenance: `AWS::MediaLive::ChannelMaintenanceCreateSettings`?

  Name: String?

  RoleArn: String?

  Tags: Dynamic?

  Vpc: `AWS::MediaLive::ChannelVpcOutputSettings`?
}

class `AWS::MediaLive::ChannelAacSettings` {
  Bitrate: Number?

  CodingMode: String?

  InputType: String?

  Profile: String?

  RateControlMode: String?

  RawFormat: String?

  SampleRate: Number?

  Spec: String?

  VbrQuality: String?
}

class `AWS::MediaLive::ChannelAc3Settings` {
  AttenuationControl: String?

  Bitrate: Number?

  BitstreamMode: String?

  CodingMode: String?

  Dialnorm: Number?

  DrcProfile: String?

  LfeFilter: String?

  MetadataControl: String?
}

class `AWS::MediaLive::ChannelAncillarySourceSettings` {
  SourceAncillaryChannelNumber: Number?
}

class `AWS::MediaLive::ChannelArchiveCdnSettings` {
  ArchiveS3Settings: `AWS::MediaLive::ChannelHlsS3Settings`?
}

class `AWS::MediaLive::ChannelArchiveContainerSettings` {
  M2tsSettings: `AWS::MediaLive::ChannelM2tsSettings`?

  RawSettings: `AWS::Transfer::UserSshPublicKey`?
}

class `AWS::MediaLive::ChannelArchiveGroupSettings` {
  ArchiveCdnSettings: `AWS::MediaLive::ChannelArchiveCdnSettings`?

  Destination: `AWS::MediaLive::ChannelOutputLocationRef`?

  RolloverInterval: Number?
}

class `AWS::MediaLive::ChannelArchiveOutputSettings` {
  ContainerSettings: `AWS::MediaLive::ChannelArchiveContainerSettings`?

  Extension: String?

  NameModifier: String?
}

class `AWS::MediaLive::ChannelHlsS3Settings` {
  CannedAcl: String?
}

class `AWS::MediaLive::ChannelAudioChannelMapping` {
  InputChannelLevels: Listing<`AWS::MediaLive::ChannelInputChannelLevel`>?

  OutputChannel: Number?
}

class `AWS::MediaLive::ChannelAudioCodecSettings` {
  AacSettings: `AWS::MediaLive::ChannelAacSettings`?

  Ac3Settings: `AWS::MediaLive::ChannelAc3Settings`?

  Eac3AtmosSettings: `AWS::MediaLive::ChannelEac3AtmosSettings`?

  Eac3Settings: `AWS::MediaLive::ChannelEac3Settings`?

  Mp2Settings: `AWS::MediaLive::ChannelMp2Settings`?

  PassThroughSettings: `AWS::Transfer::UserSshPublicKey`?

  WavSettings: `AWS::MediaLive::ChannelWavSettings`?
}

class `AWS::MediaLive::ChannelAudioDescription` {
  AudioNormalizationSettings: `AWS::MediaLive::ChannelAudioNormalizationSettings`?

  AudioSelectorName: String?

  AudioType: String?

  AudioTypeControl: String?

  AudioWatermarkingSettings: `AWS::MediaLive::ChannelAudioWatermarkSettings`?

  CodecSettings: `AWS::MediaLive::ChannelAudioCodecSettings`?

  LanguageCode: String?

  LanguageCodeControl: String?

  Name: String?

  RemixSettings: `AWS::MediaLive::ChannelRemixSettings`?

  StreamName: String?
}

class `AWS::MediaLive::ChannelAudioDolbyEDecode` {
  ProgramSelection: String?
}

class `AWS::MediaLive::ChannelAudioHlsRenditionSelection` {
  GroupId: String?

  Name: String?
}

class `AWS::MediaLive::ChannelAudioLanguageSelection` {
  LanguageCode: String?

  LanguageSelectionPolicy: String?
}

class `AWS::MediaLive::ChannelAudioNormalizationSettings` {
  Algorithm: String?

  AlgorithmControl: String?

  TargetLkfs: Number?
}

class `AWS::MediaLive::ChannelAudioOnlyHlsSettings` {
  AudioGroupId: String?

  AudioOnlyImage: `AWS::MediaLive::ChannelInputLocation`?

  AudioTrackType: String?

  SegmentType: String?
}

class `AWS::MediaLive::ChannelVideoSelectorPid` {
  Pid: Number?
}

class `AWS::MediaLive::ChannelAudioSelector` {
  Name: String?

  SelectorSettings: `AWS::MediaLive::ChannelAudioSelectorSettings`?
}

class `AWS::MediaLive::ChannelAudioSelectorSettings` {
  AudioHlsRenditionSelection: `AWS::MediaLive::ChannelAudioHlsRenditionSelection`?

  AudioLanguageSelection: `AWS::MediaLive::ChannelAudioLanguageSelection`?

  AudioPidSelection: `AWS::MediaLive::ChannelVideoSelectorPid`?

  AudioTrackSelection: `AWS::MediaLive::ChannelAudioTrackSelection`?
}

class `AWS::MediaLive::ChannelAudioSilenceFailoverSettings` {
  AudioSelectorName: String?

  AudioSilenceThresholdMsec: Number?
}

class `AWS::MediaLive::ChannelAudioTrack` {
  Track: Number?
}

class `AWS::MediaLive::ChannelAudioTrackSelection` {
  DolbyEDecode: `AWS::MediaLive::ChannelAudioDolbyEDecode`?

  Tracks: Listing<`AWS::MediaLive::ChannelAudioTrack`>?
}

class `AWS::MediaLive::ChannelAudioWatermarkSettings` {
  NielsenWatermarksSettings: `AWS::MediaLive::ChannelNielsenWatermarksSettings`?
}

class `AWS::MediaLive::ChannelAutomaticInputFailoverSettings` {
  ErrorClearTimeMsec: Number?

  FailoverConditions: Listing<`AWS::MediaLive::ChannelFailoverCondition`>?

  InputPreference: String?

  SecondaryInputId: String?
}

class `AWS::MediaLive::ChannelAvailBlanking` {
  AvailBlankingImage: `AWS::MediaLive::ChannelInputLocation`?

  State: String?
}

class `AWS::MediaLive::ChannelAvailConfiguration` {
  AvailSettings: `AWS::MediaLive::ChannelAvailSettings`?
}

class `AWS::MediaLive::ChannelAvailSettings` {
  Esam: `AWS::MediaLive::ChannelEsam`?

  Scte35SpliceInsert: `AWS::MediaLive::ChannelScte35TimeSignalApos`?

  Scte35TimeSignalApos: `AWS::MediaLive::ChannelScte35TimeSignalApos`?
}

class `AWS::MediaLive::ChannelBlackoutSlate` {
  BlackoutSlateImage: `AWS::MediaLive::ChannelInputLocation`?

  NetworkEndBlackout: String?

  NetworkEndBlackoutImage: `AWS::MediaLive::ChannelInputLocation`?

  NetworkId: String?

  State: String?
}

class `AWS::MediaLive::ChannelDvbSubDestinationSettings` {
  Alignment: String?

  BackgroundColor: String?

  BackgroundOpacity: Number?

  Font: `AWS::MediaLive::ChannelInputLocation`?

  FontColor: String?

  FontOpacity: Number?

  FontResolution: Number?

  FontSize: String?

  OutlineColor: String?

  OutlineSize: Number?

  ShadowColor: String?

  ShadowOpacity: Number?

  ShadowXOffset: Number?

  ShadowYOffset: Number?

  TeletextGridControl: String?

  XPosition: Number?

  YPosition: Number?
}

class `AWS::MediaLive::ChannelCaptionDescription` {
  Accessibility: String?

  CaptionSelectorName: String?

  DestinationSettings: `AWS::MediaLive::ChannelCaptionDestinationSettings`?

  LanguageCode: String?

  LanguageDescription: String?

  Name: String?
}

class `AWS::MediaLive::ChannelCaptionDestinationSettings` {
  AribDestinationSettings: `AWS::Transfer::UserSshPublicKey`?

  BurnInDestinationSettings: `AWS::MediaLive::ChannelDvbSubDestinationSettings`?

  DvbSubDestinationSettings: `AWS::MediaLive::ChannelDvbSubDestinationSettings`?

  EbuTtDDestinationSettings: `AWS::MediaLive::ChannelEbuTtDDestinationSettings`?

  EmbeddedDestinationSettings: `AWS::Transfer::UserSshPublicKey`?

  EmbeddedPlusScte20DestinationSettings: `AWS::Transfer::UserSshPublicKey`?

  RtmpCaptionInfoDestinationSettings: `AWS::Transfer::UserSshPublicKey`?

  Scte20PlusEmbeddedDestinationSettings: `AWS::Transfer::UserSshPublicKey`?

  Scte27DestinationSettings: `AWS::Transfer::UserSshPublicKey`?

  SmpteTtDestinationSettings: `AWS::Transfer::UserSshPublicKey`?

  TeletextDestinationSettings: `AWS::Transfer::UserSshPublicKey`?

  TtmlDestinationSettings: `AWS::MediaLive::ChannelWebvttDestinationSettings`?

  WebvttDestinationSettings: `AWS::MediaLive::ChannelWebvttDestinationSettings`?
}

class `AWS::MediaLive::ChannelCaptionLanguageMapping` {
  CaptionChannel: Number?

  LanguageCode: String?

  LanguageDescription: String?
}

class `AWS::MediaLive::ChannelCaptionRectangle` {
  Height: Number?

  LeftOffset: Number?

  TopOffset: Number?

  Width: Number?
}

class `AWS::MediaLive::ChannelCaptionSelector` {
  LanguageCode: String?

  Name: String?

  SelectorSettings: `AWS::MediaLive::ChannelCaptionSelectorSettings`?
}

class `AWS::MediaLive::ChannelCaptionSelectorSettings` {
  AncillarySourceSettings: `AWS::MediaLive::ChannelAncillarySourceSettings`?

  AribSourceSettings: `AWS::Transfer::UserSshPublicKey`?

  DvbSubSourceSettings: `AWS::MediaLive::ChannelScte27SourceSettings`?

  EmbeddedSourceSettings: `AWS::MediaLive::ChannelEmbeddedSourceSettings`?

  Scte20SourceSettings: `AWS::MediaLive::ChannelScte20SourceSettings`?

  Scte27SourceSettings: `AWS::MediaLive::ChannelScte27SourceSettings`?

  TeletextSourceSettings: `AWS::MediaLive::ChannelTeletextSourceSettings`?
}

class `AWS::MediaLive::ChannelCdiInputSpecification` {
  Resolution: String?
}

class `AWS::MediaLive::ChannelColorCorrection` {
  InputColorSpace: String?

  OutputColorSpace: String?

  Uri: String?
}

class `AWS::MediaLive::ChannelColorCorrectionSettings` {
  GlobalColorCorrections: Listing<`AWS::MediaLive::ChannelColorCorrection`>?
}

class `AWS::MediaLive::ChannelDvbNitSettings` {
  NetworkId: Number?

  NetworkName: String?

  RepInterval: Number?
}

class `AWS::MediaLive::ChannelDvbSdtSettings` {
  OutputSdt: String?

  RepInterval: Number?

  ServiceName: String?

  ServiceProviderName: String?
}

class `AWS::MediaLive::ChannelScte27SourceSettings` {
  OcrLanguage: String?

  Pid: Number?
}

class `AWS::MediaLive::ChannelDvbTdtSettings` {
  RepInterval: Number?
}

class `AWS::MediaLive::ChannelEac3AtmosSettings` {
  Bitrate: Number?

  CodingMode: String?

  Dialnorm: Number?

  DrcLine: String?

  DrcRf: String?

  HeightTrim: Number?

  SurroundTrim: Number?
}

class `AWS::MediaLive::ChannelEac3Settings` {
  AttenuationControl: String?

  Bitrate: Number?

  BitstreamMode: String?

  CodingMode: String?

  DcFilter: String?

  Dialnorm: Number?

  DrcLine: String?

  DrcRf: String?

  LfeControl: String?

  LfeFilter: String?

  LoRoCenterMixLevel: Number?

  LoRoSurroundMixLevel: Number?

  LtRtCenterMixLevel: Number?

  LtRtSurroundMixLevel: Number?

  MetadataControl: String?

  PassthroughControl: String?

  PhaseControl: String?

  StereoDownmix: String?

  SurroundExMode: String?

  SurroundMode: String?
}

class `AWS::MediaLive::ChannelEbuTtDDestinationSettings` {
  CopyrightHolder: String?

  FillLineGap: String?

  FontFamily: String?

  StyleControl: String?
}

class `AWS::MediaLive::ChannelEmbeddedSourceSettings` {
  Convert608To708: String?

  Scte20Detection: String?

  Source608ChannelNumber: Number?

  Source608TrackNumber: Number?
}

class `AWS::MediaLive::ChannelEncoderSettings` {
  AudioDescriptions: Listing<`AWS::MediaLive::ChannelAudioDescription`>?

  AvailBlanking: `AWS::MediaLive::ChannelAvailBlanking`?

  AvailConfiguration: `AWS::MediaLive::ChannelAvailConfiguration`?

  BlackoutSlate: `AWS::MediaLive::ChannelBlackoutSlate`?

  CaptionDescriptions: Listing<`AWS::MediaLive::ChannelCaptionDescription`>?

  ColorCorrectionSettings: `AWS::MediaLive::ChannelColorCorrectionSettings`?

  FeatureActivations: `AWS::MediaLive::ChannelFeatureActivations`?

  GlobalConfiguration: `AWS::MediaLive::ChannelGlobalConfiguration`?

  MotionGraphicsConfiguration: `AWS::MediaLive::ChannelMotionGraphicsConfiguration`?

  NielsenConfiguration: `AWS::MediaLive::ChannelNielsenConfiguration`?

  OutputGroups: Listing<`AWS::MediaLive::ChannelOutputGroup`>?

  ThumbnailConfiguration: `AWS::MediaLive::ChannelThumbnailConfiguration`?

  TimecodeConfig: `AWS::MediaLive::ChannelTimecodeConfig`?

  VideoDescriptions: Listing<`AWS::MediaLive::ChannelVideoDescription`>?
}

class `AWS::MediaLive::ChannelEpochLockingSettings` {
  CustomEpoch: String?

  JamSyncTime: String?
}

class `AWS::MediaLive::ChannelEsam` {
  AcquisitionPointId: String?

  AdAvailOffset: Number?

  PasswordParam: String?

  PoisEndpoint: String?

  Username: String?

  ZoneIdentity: String?
}

class `AWS::MediaLive::ChannelFailoverCondition` {
  FailoverConditionSettings: `AWS::MediaLive::ChannelFailoverConditionSettings`?
}

class `AWS::MediaLive::ChannelFailoverConditionSettings` {
  AudioSilenceSettings: `AWS::MediaLive::ChannelAudioSilenceFailoverSettings`?

  InputLossSettings: `AWS::MediaLive::ChannelInputLossFailoverSettings`?

  VideoBlackSettings: `AWS::MediaLive::ChannelVideoBlackFailoverSettings`?
}

class `AWS::MediaLive::ChannelFeatureActivations` {
  InputPrepareScheduleActions: String?

  OutputStaticImageOverlayScheduleActions: String?
}

class `AWS::MediaLive::ChannelFecOutputSettings` {
  ColumnDepth: Number?

  IncludeFec: String?

  RowLength: Number?
}

class `AWS::MediaLive::ChannelFmp4HlsSettings` {
  AudioRenditionSets: String?

  NielsenId3Behavior: String?

  TimedMetadataBehavior: String?
}

class `AWS::MediaLive::ChannelFrameCaptureCdnSettings` {
  FrameCaptureS3Settings: `AWS::MediaLive::ChannelHlsS3Settings`?
}

class `AWS::MediaLive::ChannelFrameCaptureGroupSettings` {
  Destination: `AWS::MediaLive::ChannelOutputLocationRef`?

  FrameCaptureCdnSettings: `AWS::MediaLive::ChannelFrameCaptureCdnSettings`?
}

class `AWS::MediaLive::ChannelFrameCaptureOutputSettings` {
  NameModifier: String?
}

class `AWS::MediaLive::ChannelFrameCaptureSettings` {
  CaptureInterval: Number?

  CaptureIntervalUnits: String?

  TimecodeBurninSettings: `AWS::MediaLive::ChannelTimecodeBurninSettings`?
}

class `AWS::MediaLive::ChannelGlobalConfiguration` {
  InitialAudioGain: Number?

  InputEndAction: String?

  InputLossBehavior: `AWS::MediaLive::ChannelInputLossBehavior`?

  OutputLockingMode: String?

  OutputLockingSettings: `AWS::MediaLive::ChannelOutputLockingSettings`?

  OutputTimingSource: String?

  SupportLowFramerateInputs: String?
}

class `AWS::MediaLive::ChannelH264ColorSpaceSettings` {
  ColorSpacePassthroughSettings: `AWS::Transfer::UserSshPublicKey`?

  Rec601Settings: `AWS::Transfer::UserSshPublicKey`?

  Rec709Settings: `AWS::Transfer::UserSshPublicKey`?
}

class `AWS::MediaLive::ChannelMpeg2FilterSettings` {
  TemporalFilterSettings: `AWS::MediaLive::ChannelTemporalFilterSettings`?
}

class `AWS::MediaLive::ChannelH264Settings` {
  AdaptiveQuantization: String?

  AfdSignaling: String?

  Bitrate: Number?

  BufFillPct: Number?

  BufSize: Number?

  ColorMetadata: String?

  ColorSpaceSettings: `AWS::MediaLive::ChannelH264ColorSpaceSettings`?

  EntropyEncoding: String?

  FilterSettings: `AWS::MediaLive::ChannelMpeg2FilterSettings`?

  FixedAfd: String?

  FlickerAq: String?

  ForceFieldPictures: String?

  FramerateControl: String?

  FramerateDenominator: Number?

  FramerateNumerator: Number?

  GopBReference: String?

  GopClosedCadence: Number?

  GopNumBFrames: Number?

  GopSize: Number?

  GopSizeUnits: String?

  Level: String?

  LookAheadRateControl: String?

  MaxBitrate: Number?

  MinIInterval: Number?

  NumRefFrames: Number?

  ParControl: String?

  ParDenominator: Number?

  ParNumerator: Number?

  Profile: String?

  QualityLevel: String?

  QvbrQualityLevel: Number?

  RateControlMode: String?

  ScanType: String?

  SceneChangeDetect: String?

  Slices: Number?

  Softness: Number?

  SpatialAq: String?

  SubgopLength: String?

  Syntax: String?

  TemporalAq: String?

  TimecodeBurninSettings: `AWS::MediaLive::ChannelTimecodeBurninSettings`?

  TimecodeInsertion: String?
}

class `AWS::MediaLive::ChannelH265ColorSpaceSettings` {
  ColorSpacePassthroughSettings: `AWS::Transfer::UserSshPublicKey`?

  DolbyVision81Settings: `AWS::Transfer::UserSshPublicKey`?

  Hdr10Settings: `AWS::MediaLive::ChannelHdr10Settings`?

  Rec601Settings: `AWS::Transfer::UserSshPublicKey`?

  Rec709Settings: `AWS::Transfer::UserSshPublicKey`?
}

class `AWS::MediaLive::ChannelH265Settings` {
  AdaptiveQuantization: String?

  AfdSignaling: String?

  AlternativeTransferFunction: String?

  Bitrate: Number?

  BufSize: Number?

  ColorMetadata: String?

  ColorSpaceSettings: `AWS::MediaLive::ChannelH265ColorSpaceSettings`?

  FilterSettings: `AWS::MediaLive::ChannelMpeg2FilterSettings`?

  FixedAfd: String?

  FlickerAq: String?

  FramerateDenominator: Number?

  FramerateNumerator: Number?

  GopClosedCadence: Number?

  GopSize: Number?

  GopSizeUnits: String?

  Level: String?

  LookAheadRateControl: String?

  MaxBitrate: Number?

  MinIInterval: Number?

  ParDenominator: Number?

  ParNumerator: Number?

  Profile: String?

  QvbrQualityLevel: Number?

  RateControlMode: String?

  ScanType: String?

  SceneChangeDetect: String?

  Slices: Number?

  Tier: String?

  TimecodeBurninSettings: `AWS::MediaLive::ChannelTimecodeBurninSettings`?

  TimecodeInsertion: String?
}

class `AWS::MediaLive::ChannelHdr10Settings` {
  MaxCll: Number?

  MaxFall: Number?
}

class `AWS::MediaLive::ChannelHlsAkamaiSettings` {
  ConnectionRetryInterval: Number?

  FilecacheDuration: Number?

  HttpTransferMode: String?

  NumRetries: Number?

  RestartDelay: Number?

  Salt: String?

  Token: String?
}

class `AWS::MediaLive::ChannelHlsBasicPutSettings` {
  ConnectionRetryInterval: Number?

  FilecacheDuration: Number?

  NumRetries: Number?

  RestartDelay: Number?
}

class `AWS::MediaLive::ChannelHlsCdnSettings` {
  HlsAkamaiSettings: `AWS::MediaLive::ChannelHlsAkamaiSettings`?

  HlsBasicPutSettings: `AWS::MediaLive::ChannelHlsBasicPutSettings`?

  HlsMediaStoreSettings: `AWS::MediaLive::ChannelHlsMediaStoreSettings`?

  HlsS3Settings: `AWS::MediaLive::ChannelHlsS3Settings`?

  HlsWebdavSettings: `AWS::MediaLive::ChannelHlsWebdavSettings`?
}

class `AWS::MediaLive::ChannelHlsGroupSettings` {
  AdMarkers: Listing<String>?

  BaseUrlContent: String?

  BaseUrlContent1: String?

  BaseUrlManifest: String?

  BaseUrlManifest1: String?

  CaptionLanguageMappings: Listing<`AWS::MediaLive::ChannelCaptionLanguageMapping`>?

  CaptionLanguageSetting: String?

  ClientCache: String?

  CodecSpecification: String?

  ConstantIv: String?

  Destination: `AWS::MediaLive::ChannelOutputLocationRef`?

  DirectoryStructure: String?

  DiscontinuityTags: String?

  EncryptionType: String?

  HlsCdnSettings: `AWS::MediaLive::ChannelHlsCdnSettings`?

  HlsId3SegmentTagging: String?

  IFrameOnlyPlaylists: String?

  IncompleteSegmentBehavior: String?

  IndexNSegments: Number?

  InputLossAction: String?

  IvInManifest: String?

  IvSource: String?

  KeepSegments: Number?

  KeyFormat: String?

  KeyFormatVersions: String?

  KeyProviderSettings: `AWS::MediaLive::ChannelKeyProviderSettings`?

  ManifestCompression: String?

  ManifestDurationFormat: String?

  MinSegmentLength: Number?

  Mode: String?

  OutputSelection: String?

  ProgramDateTime: String?

  ProgramDateTimeClock: String?

  ProgramDateTimePeriod: Number?

  RedundantManifest: String?

  SegmentLength: Number?

  SegmentationMode: String?

  SegmentsPerSubdirectory: Number?

  StreamInfResolution: String?

  TimedMetadataId3Frame: String?

  TimedMetadataId3Period: Number?

  TimestampDeltaMilliseconds: Number?

  TsFileMode: String?
}

class `AWS::MediaLive::ChannelHlsInputSettings` {
  Bandwidth: Number?

  BufferSegments: Number?

  Retries: Number?

  RetryInterval: Number?

  Scte35Source: String?
}

class `AWS::MediaLive::ChannelHlsMediaStoreSettings` {
  ConnectionRetryInterval: Number?

  FilecacheDuration: Number?

  MediaStoreStorageClass: String?

  NumRetries: Number?

  RestartDelay: Number?
}

class `AWS::MediaLive::ChannelHlsOutputSettings` {
  H265PackagingType: String?

  HlsSettings: `AWS::MediaLive::ChannelHlsSettings`?

  NameModifier: String?

  SegmentModifier: String?
}

class `AWS::MediaLive::ChannelHlsSettings` {
  AudioOnlyHlsSettings: `AWS::MediaLive::ChannelAudioOnlyHlsSettings`?

  Fmp4HlsSettings: `AWS::MediaLive::ChannelFmp4HlsSettings`?

  FrameCaptureHlsSettings: `AWS::Transfer::UserSshPublicKey`?

  StandardHlsSettings: `AWS::MediaLive::ChannelStandardHlsSettings`?
}

class `AWS::MediaLive::ChannelHlsWebdavSettings` {
  ConnectionRetryInterval: Number?

  FilecacheDuration: Number?

  HttpTransferMode: String?

  NumRetries: Number?

  RestartDelay: Number?
}

class `AWS::MediaLive::ChannelInputAttachment` {
  AutomaticInputFailoverSettings: `AWS::MediaLive::ChannelAutomaticInputFailoverSettings`?

  InputAttachmentName: String?

  InputId: String?

  InputSettings: `AWS::MediaLive::ChannelInputSettings`?
}

class `AWS::MediaLive::ChannelInputChannelLevel` {
  Gain: Number?

  InputChannel: Number?
}

class `AWS::MediaLive::ChannelInputLocation` {
  PasswordParam: String?

  Uri: String?

  Username: String?
}

class `AWS::MediaLive::ChannelInputLossBehavior` {
  BlackFrameMsec: Number?

  InputLossImageColor: String?

  InputLossImageSlate: `AWS::MediaLive::ChannelInputLocation`?

  InputLossImageType: String?

  RepeatFrameMsec: Number?
}

class `AWS::MediaLive::ChannelInputLossFailoverSettings` {
  InputLossThresholdMsec: Number?
}

class `AWS::MediaLive::ChannelInputSettings` {
  AudioSelectors: Listing<`AWS::MediaLive::ChannelAudioSelector`>?

  CaptionSelectors: Listing<`AWS::MediaLive::ChannelCaptionSelector`>?

  DeblockFilter: String?

  DenoiseFilter: String?

  FilterStrength: Number?

  InputFilter: String?

  NetworkInputSettings: `AWS::MediaLive::ChannelNetworkInputSettings`?

  Scte35Pid: Number?

  Smpte2038DataPreference: String?

  SourceEndBehavior: String?

  VideoSelector: `AWS::MediaLive::ChannelVideoSelector`?
}

class `AWS::MediaLive::ChannelInputSpecification` {
  Codec: String?

  MaximumBitrate: String?

  Resolution: String?
}

class `AWS::MediaLive::ChannelKeyProviderSettings` {
  StaticKeySettings: `AWS::MediaLive::ChannelStaticKeySettings`?
}

class `AWS::MediaLive::ChannelM2tsSettings` {
  AbsentInputAudioBehavior: String?

  Arib: String?

  AribCaptionsPid: String?

  AribCaptionsPidControl: String?

  AudioBufferModel: String?

  AudioFramesPerPes: Number?

  AudioPids: String?

  AudioStreamType: String?

  Bitrate: Number?

  BufferModel: String?

  CcDescriptor: String?

  DvbNitSettings: `AWS::MediaLive::ChannelDvbNitSettings`?

  DvbSdtSettings: `AWS::MediaLive::ChannelDvbSdtSettings`?

  DvbSubPids: String?

  DvbTdtSettings: `AWS::MediaLive::ChannelDvbTdtSettings`?

  DvbTeletextPid: String?

  Ebif: String?

  EbpAudioInterval: String?

  EbpLookaheadMs: Number?

  EbpPlacement: String?

  EcmPid: String?

  EsRateInPes: String?

  EtvPlatformPid: String?

  EtvSignalPid: String?

  FragmentTime: Number?

  Klv: String?

  KlvDataPids: String?

  NielsenId3Behavior: String?

  NullPacketBitrate: Number?

  PatInterval: Number?

  PcrControl: String?

  PcrPeriod: Number?

  PcrPid: String?

  PmtInterval: Number?

  PmtPid: String?

  ProgramNum: Number?

  RateMode: String?

  Scte27Pids: String?

  Scte35Control: String?

  Scte35Pid: String?

  Scte35PrerollPullupMilliseconds: Number?

  SegmentationMarkers: String?

  SegmentationStyle: String?

  SegmentationTime: Number?

  TimedMetadataBehavior: String?

  TimedMetadataPid: String?

  TransportStreamId: Number?

  VideoPid: String?
}

class `AWS::MediaLive::ChannelM3u8Settings` {
  AudioFramesPerPes: Number?

  AudioPids: String?

  EcmPid: String?

  KlvBehavior: String?

  KlvDataPids: String?

  NielsenId3Behavior: String?

  PatInterval: Number?

  PcrControl: String?

  PcrPeriod: Number?

  PcrPid: String?

  PmtInterval: Number?

  PmtPid: String?

  ProgramNum: Number?

  Scte35Behavior: String?

  Scte35Pid: String?

  TimedMetadataBehavior: String?

  TimedMetadataPid: String?

  TransportStreamId: Number?

  VideoPid: String?
}

class `AWS::MediaLive::ChannelMaintenanceCreateSettings` {
  MaintenanceDay: String?

  MaintenanceStartTime: String?
}

class `AWS::MediaLive::ChannelMaintenanceUpdateSettings` {
  MaintenanceDay: String?

  MaintenanceScheduledDate: String?

  MaintenanceStartTime: String?
}

class `AWS::MediaLive::ChannelMultiplexOutputSettings` {
  Destination: `AWS::MediaLive::ChannelOutputLocationRef`?
}

class `AWS::MediaLive::ChannelMediaPackageOutputDestinationSettings` {
  ChannelId: String?
}

class `AWS::MediaLive::ChannelMotionGraphicsConfiguration` {
  MotionGraphicsInsertion: String?

  MotionGraphicsSettings: `AWS::MediaLive::ChannelMotionGraphicsSettings`?
}

class `AWS::MediaLive::ChannelMotionGraphicsSettings` {
  HtmlMotionGraphicsSettings: `AWS::Transfer::UserSshPublicKey`?
}

class `AWS::MediaLive::ChannelMp2Settings` {
  Bitrate: Number?

  CodingMode: String?

  SampleRate: Number?
}

class `AWS::MediaLive::ChannelMpeg2Settings` {
  AdaptiveQuantization: String?

  AfdSignaling: String?

  ColorMetadata: String?

  ColorSpace: String?

  DisplayAspectRatio: String?

  FilterSettings: `AWS::MediaLive::ChannelMpeg2FilterSettings`?

  FixedAfd: String?

  FramerateDenominator: Number?

  FramerateNumerator: Number?

  GopClosedCadence: Number?

  GopNumBFrames: Number?

  GopSize: Number?

  GopSizeUnits: String?

  ScanType: String?

  SubgopLength: String?

  TimecodeBurninSettings: `AWS::MediaLive::ChannelTimecodeBurninSettings`?

  TimecodeInsertion: String?
}

class `AWS::MediaLive::ChannelMsSmoothGroupSettings` {
  AcquisitionPointId: String?

  AudioOnlyTimecodeControl: String?

  CertificateMode: String?

  ConnectionRetryInterval: Number?

  Destination: `AWS::MediaLive::ChannelOutputLocationRef`?

  EventId: String?

  EventIdMode: String?

  EventStopBehavior: String?

  FilecacheDuration: Number?

  FragmentLength: Number?

  InputLossAction: String?

  NumRetries: Number?

  RestartDelay: Number?

  SegmentationMode: String?

  SendDelayMs: Number?

  SparseTrackType: String?

  StreamManifestBehavior: String?

  TimestampOffset: String?

  TimestampOffsetMode: String?
}

class `AWS::MediaLive::ChannelMsSmoothOutputSettings` {
  H265PackagingType: String?

  NameModifier: String?
}

class `AWS::MediaLive::ChannelMultiplexProgramChannelDestinationSettings` {
  MultiplexId: String?

  ProgramName: String?
}

class `AWS::MediaLive::ChannelNetworkInputSettings` {
  HlsInputSettings: `AWS::MediaLive::ChannelHlsInputSettings`?

  ServerValidation: String?
}

class `AWS::MediaLive::ChannelNielsenCBET` {
  CbetCheckDigitString: String?

  CbetStepaside: String?

  Csid: String?
}

class `AWS::MediaLive::ChannelNielsenConfiguration` {
  DistributorId: String?

  NielsenPcmToId3Tagging: String?
}

class `AWS::MediaLive::ChannelNielsenNaesIiNw` {
  CheckDigitString: String?

  Sid: Number?

  Timezone: String?
}

class `AWS::MediaLive::ChannelNielsenWatermarksSettings` {
  NielsenCbetSettings: `AWS::MediaLive::ChannelNielsenCBET`?

  NielsenDistributionType: String?

  NielsenNaesIiNwSettings: `AWS::MediaLive::ChannelNielsenNaesIiNw`?
}

class `AWS::MediaLive::ChannelOutput` {
  AudioDescriptionNames: Listing<String>?

  CaptionDescriptionNames: Listing<String>?

  OutputName: String?

  OutputSettings: `AWS::MediaLive::ChannelOutputSettings`?

  VideoDescriptionName: String?
}

class `AWS::MediaLive::ChannelOutputDestination` {
  Id: String?

  MediaPackageSettings: Listing<`AWS::MediaLive::ChannelMediaPackageOutputDestinationSettings`>?

  MultiplexSettings: `AWS::MediaLive::ChannelMultiplexProgramChannelDestinationSettings`?

  Settings: Listing<`AWS::MediaLive::ChannelOutputDestinationSettings`>?
}

class `AWS::MediaLive::ChannelOutputDestinationSettings` {
  PasswordParam: String?

  StreamName: String?

  Url: String?

  Username: String?
}

class `AWS::MediaLive::ChannelOutputGroup` {
  Name: String?

  OutputGroupSettings: `AWS::MediaLive::ChannelOutputGroupSettings`?

  Outputs: Listing<`AWS::MediaLive::ChannelOutput`>?
}

class `AWS::MediaLive::ChannelOutputGroupSettings` {
  ArchiveGroupSettings: `AWS::MediaLive::ChannelArchiveGroupSettings`?

  FrameCaptureGroupSettings: `AWS::MediaLive::ChannelFrameCaptureGroupSettings`?

  HlsGroupSettings: `AWS::MediaLive::ChannelHlsGroupSettings`?

  MediaPackageGroupSettings: `AWS::MediaLive::ChannelMultiplexOutputSettings`?

  MsSmoothGroupSettings: `AWS::MediaLive::ChannelMsSmoothGroupSettings`?

  MultiplexGroupSettings: `AWS::Transfer::UserSshPublicKey`?

  RtmpGroupSettings: `AWS::MediaLive::ChannelRtmpGroupSettings`?

  UdpGroupSettings: `AWS::MediaLive::ChannelUdpGroupSettings`?
}

class `AWS::MediaLive::ChannelOutputLocationRef` {
  DestinationRefId: String?
}

class `AWS::MediaLive::ChannelOutputLockingSettings` {
  EpochLockingSettings: `AWS::MediaLive::ChannelEpochLockingSettings`?

  PipelineLockingSettings: `AWS::Transfer::UserSshPublicKey`?
}

class `AWS::MediaLive::ChannelOutputSettings` {
  ArchiveOutputSettings: `AWS::MediaLive::ChannelArchiveOutputSettings`?

  FrameCaptureOutputSettings: `AWS::MediaLive::ChannelFrameCaptureOutputSettings`?

  HlsOutputSettings: `AWS::MediaLive::ChannelHlsOutputSettings`?

  MediaPackageOutputSettings: `AWS::Transfer::UserSshPublicKey`?

  MsSmoothOutputSettings: `AWS::MediaLive::ChannelMsSmoothOutputSettings`?

  MultiplexOutputSettings: `AWS::MediaLive::ChannelMultiplexOutputSettings`?

  RtmpOutputSettings: `AWS::MediaLive::ChannelRtmpOutputSettings`?

  UdpOutputSettings: `AWS::MediaLive::ChannelUdpOutputSettings`?
}

class `AWS::MediaLive::ChannelRemixSettings` {
  ChannelMappings: Listing<`AWS::MediaLive::ChannelAudioChannelMapping`>?

  ChannelsIn: Number?

  ChannelsOut: Number?
}

class `AWS::MediaLive::ChannelRtmpGroupSettings` {
  AdMarkers: Listing<String>?

  AuthenticationScheme: String?

  CacheFullBehavior: String?

  CacheLength: Number?

  CaptionData: String?

  IncludeFillerNalUnits: String?

  InputLossAction: String?

  RestartDelay: Number?
}

class `AWS::MediaLive::ChannelRtmpOutputSettings` {
  CertificateMode: String?

  ConnectionRetryInterval: Number?

  Destination: `AWS::MediaLive::ChannelOutputLocationRef`?

  NumRetries: Number?
}

class `AWS::MediaLive::ChannelScte20SourceSettings` {
  Convert608To708: String?

  Source608ChannelNumber: Number?
}

class `AWS::MediaLive::ChannelScte35TimeSignalApos` {
  AdAvailOffset: Number?

  NoRegionalBlackoutFlag: String?

  WebDeliveryAllowedFlag: String?
}

class `AWS::MediaLive::ChannelStandardHlsSettings` {
  AudioRenditionSets: String?

  M3u8Settings: `AWS::MediaLive::ChannelM3u8Settings`?
}

class `AWS::MediaLive::ChannelStaticKeySettings` {
  KeyProviderServer: `AWS::MediaLive::ChannelInputLocation`?

  StaticKeyValue: String?
}

class `AWS::MediaLive::ChannelTeletextSourceSettings` {
  OutputRectangle: `AWS::MediaLive::ChannelCaptionRectangle`?

  PageNumber: String?
}

class `AWS::MediaLive::ChannelTemporalFilterSettings` {
  PostFilterSharpening: String?

  Strength: String?
}

class `AWS::MediaLive::ChannelThumbnailConfiguration` {
  State: String?
}

class `AWS::MediaLive::ChannelTimecodeBurninSettings` {
  FontSize: String?

  Position: String?

  Prefix: String?
}

class `AWS::MediaLive::ChannelTimecodeConfig` {
  Source: String?

  SyncThreshold: Number?
}

class `AWS::MediaLive::ChannelWebvttDestinationSettings` {
  StyleControl: String?
}

class `AWS::MediaLive::ChannelUdpContainerSettings` {
  M2tsSettings: `AWS::MediaLive::ChannelM2tsSettings`?
}

class `AWS::MediaLive::ChannelUdpGroupSettings` {
  InputLossAction: String?

  TimedMetadataId3Frame: String?

  TimedMetadataId3Period: Number?
}

class `AWS::MediaLive::ChannelUdpOutputSettings` {
  BufferMsec: Number?

  ContainerSettings: `AWS::MediaLive::ChannelUdpContainerSettings`?

  Destination: `AWS::MediaLive::ChannelOutputLocationRef`?

  FecOutputSettings: `AWS::MediaLive::ChannelFecOutputSettings`?
}

class `AWS::MediaLive::ChannelVideoBlackFailoverSettings` {
  BlackDetectThreshold: Number?

  VideoBlackThresholdMsec: Number?
}

class `AWS::MediaLive::ChannelVideoCodecSettings` {
  FrameCaptureSettings: `AWS::MediaLive::ChannelFrameCaptureSettings`?

  H264Settings: `AWS::MediaLive::ChannelH264Settings`?

  H265Settings: `AWS::MediaLive::ChannelH265Settings`?

  Mpeg2Settings: `AWS::MediaLive::ChannelMpeg2Settings`?
}

class `AWS::MediaLive::ChannelVideoDescription` {
  CodecSettings: `AWS::MediaLive::ChannelVideoCodecSettings`?

  Height: Number?

  Name: String?

  RespondToAfd: String?

  ScalingBehavior: String?

  Sharpness: Number?

  Width: Number?
}

class `AWS::MediaLive::ChannelVideoSelector` {
  ColorSpace: String?

  ColorSpaceSettings: `AWS::MediaLive::ChannelVideoSelectorColorSpaceSettings`?

  ColorSpaceUsage: String?

  SelectorSettings: `AWS::MediaLive::ChannelVideoSelectorSettings`?
}

class `AWS::MediaLive::ChannelVideoSelectorColorSpaceSettings` {
  Hdr10Settings: `AWS::MediaLive::ChannelHdr10Settings`?
}

class `AWS::MediaLive::ChannelVideoSelectorProgramId` {
  ProgramId: Number?
}

class `AWS::MediaLive::ChannelVideoSelectorSettings` {
  VideoSelectorPid: `AWS::MediaLive::ChannelVideoSelectorPid`?

  VideoSelectorProgramId: `AWS::MediaLive::ChannelVideoSelectorProgramId`?
}

class `AWS::MediaLive::ChannelVpcOutputSettings` {
  PublicAddressAllocationIds: Listing<String>?

  SecurityGroupIds: Listing<String>?

  SubnetIds: Listing<String>?
}

class `AWS::MediaLive::ChannelWavSettings` {
  BitDepth: Number?

  CodingMode: String?

  SampleRate: Number?
}

class `AWS::MediaLive::Input` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaLive::InputProperties`?

  Type: "AWS::MediaLive::Input"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaLive::InputProperties` {
  Destinations: Listing<`AWS::MediaLive::InputInputDestinationRequest`>?

  InputDevices: Listing<`AWS::MediaLive::InputInputDeviceSettings`>?

  InputSecurityGroups: Listing<String>?

  MediaConnectFlows: Listing<`AWS::MediaLive::InputMediaConnectFlowRequest`>?

  Name: String?

  RoleArn: String?

  Sources: Listing<`AWS::MediaLive::InputInputSourceRequest`>?

  Tags: Dynamic?

  Type: String?

  Vpc: `AWS::OpenSearchService::DomainVPCOptions`?
}

class `AWS::MediaLive::InputInputDestinationRequest` {
  StreamName: String?
}

class `AWS::MediaLive::InputInputDeviceSettings` {
  Id: String?
}

class `AWS::MediaLive::InputInputSourceRequest` {
  PasswordParam: String?

  Url: String?

  Username: String?
}

class `AWS::MediaLive::InputMediaConnectFlowRequest` {
  FlowArn: String?
}

class `AWS::MediaLive::InputSecurityGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaLive::InputSecurityGroupProperties`?

  Type: "AWS::MediaLive::InputSecurityGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaLive::InputSecurityGroupProperties` {
  Tags: Dynamic?

  WhitelistRules: Listing<`AWS::MediaLive::InputSecurityGroupInputWhitelistRuleCidr`>?
}

class `AWS::MediaLive::InputSecurityGroupInputWhitelistRuleCidr` {
  Cidr: String?
}

class `AWS::MediaLive::Multiplex` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaLive::MultiplexProperties`

  Type: "AWS::MediaLive::Multiplex"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaLive::MultiplexProperties` {
  AvailabilityZones: Listing<String>

  Destinations: Listing<`AWS::MediaLive::MultiplexMultiplexOutputDestination`>?

  MultiplexSettings: `AWS::MediaLive::MultiplexMultiplexSettings`

  Name: String

  Tags: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?
}

class `AWS::MediaLive::MultiplexMultiplexMediaConnectOutputDestinationSettings` {
  EntitlementArn: String?
}

class `AWS::MediaLive::MultiplexMultiplexOutputDestination` {
  MultiplexMediaConnectOutputDestinationSettings: `AWS::MediaLive::MultiplexMultiplexMediaConnectOutputDestinationSettings`?
}

class `AWS::MediaLive::MultiplexMultiplexSettings` {
  MaximumVideoBufferDelayMilliseconds: Number?

  TransportStreamBitrate: Number

  TransportStreamId: Number

  TransportStreamReservedBitrate: Number?
}

class `AWS::MediaLive::Multiplexprogram` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaLive::MultiplexprogramProperties`?

  Type: "AWS::MediaLive::Multiplexprogram"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaLive::MultiplexprogramProperties` {
  ChannelId: String?

  MultiplexId: String?

  MultiplexProgramSettings: `AWS::MediaLive::MultiplexprogramMultiplexProgramSettings`?

  PacketIdentifiersMap: `AWS::MediaLive::MultiplexprogramMultiplexProgramPacketIdentifiersMap`?

  PipelineDetails: Listing<`AWS::MediaLive::MultiplexprogramMultiplexProgramPipelineDetail`>?

  PreferredChannelPipeline: String?

  ProgramName: String?
}

class `AWS::MediaLive::MultiplexprogramMultiplexProgramPacketIdentifiersMap` {
  AudioPids: Listing<Number>?

  DvbSubPids: Listing<Number>?

  DvbTeletextPid: Number?

  EtvPlatformPid: Number?

  EtvSignalPid: Number?

  KlvDataPids: Listing<Number>?

  PcrPid: Number?

  PmtPid: Number?

  PrivateMetadataPid: Number?

  Scte27Pids: Listing<Number>?

  Scte35Pid: Number?

  TimedMetadataPid: Number?

  VideoPid: Number?
}

class `AWS::MediaLive::MultiplexprogramMultiplexProgramPipelineDetail` {
  ActiveChannelPipeline: String?

  PipelineId: String?
}

class `AWS::MediaLive::MultiplexprogramMultiplexProgramServiceDescriptor` {
  ProviderName: String

  ServiceName: String
}

class `AWS::MediaLive::MultiplexprogramMultiplexProgramSettings` {
  PreferredChannelPipeline: String?

  ProgramNumber: Number

  ServiceDescriptor: `AWS::MediaLive::MultiplexprogramMultiplexProgramServiceDescriptor`?

  VideoSettings: `AWS::MediaLive::MultiplexprogramMultiplexVideoSettings`?
}

class `AWS::MediaLive::MultiplexprogramMultiplexStatmuxVideoSettings` {
  MaximumBitrate: Number?

  MinimumBitrate: Number?

  Priority: Number?
}

class `AWS::MediaLive::MultiplexprogramMultiplexVideoSettings` {
  ConstantBitrate: Number?

  StatmuxSettings: `AWS::MediaLive::MultiplexprogramMultiplexStatmuxVideoSettings`?
}

class `AWS::MediaPackage::Asset` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaPackage::AssetProperties`

  Type: "AWS::MediaPackage::Asset"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaPackage::AssetProperties` {
  EgressEndpoints: Listing<`AWS::MediaPackage::AssetEgressEndpoint`>?

  Id: String

  PackagingGroupId: String

  ResourceId: String?

  SourceArn: String

  SourceRoleArn: String

  Tags: Listing<Tag>?
}

class `AWS::MediaPackage::AssetEgressEndpoint` {
  PackagingConfigurationId: String

  Url: String
}

class `AWS::MediaPackage::Channel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaPackage::ChannelProperties`

  Type: "AWS::MediaPackage::Channel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaPackage::ChannelProperties` {
  Description: String?

  EgressAccessLogs: `AWS::MediaPackage::PackagingGroupLogConfiguration`?

  HlsIngest: `AWS::MediaPackage::ChannelHlsIngest`?

  Id: String

  IngressAccessLogs: `AWS::MediaPackage::PackagingGroupLogConfiguration`?

  Tags: Listing<Tag>?
}

class `AWS::MediaPackage::ChannelHlsIngest` {
  ingestEndpoints: Listing<`AWS::MediaPackage::ChannelIngestEndpoint`>?
}

class `AWS::MediaPackage::ChannelIngestEndpoint` {
  Id: String

  Password: String

  Url: String

  Username: String
}

class `AWS::MediaPackage::PackagingGroupLogConfiguration` {
  LogGroupName: String?
}

class `AWS::MediaPackage::OriginEndpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaPackage::OriginEndpointProperties`

  Type: "AWS::MediaPackage::OriginEndpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaPackage::OriginEndpointProperties` {
  Authorization: `AWS::MediaPackage::PackagingGroupAuthorization`?

  ChannelId: String

  CmafPackage: `AWS::MediaPackage::OriginEndpointCmafPackage`?

  DashPackage: `AWS::MediaPackage::OriginEndpointDashPackage`?

  Description: String?

  HlsPackage: `AWS::MediaPackage::OriginEndpointHlsPackage`?

  Id: String

  ManifestName: String?

  MssPackage: `AWS::MediaPackage::OriginEndpointMssPackage`?

  Origination: String?

  StartoverWindowSeconds: Number?

  Tags: Listing<Tag>?

  TimeDelaySeconds: Number?

  Whitelist: Listing<String>?
}

class `AWS::MediaPackage::PackagingGroupAuthorization` {
  CdnIdentifierSecret: String

  SecretsRoleArn: String
}

class `AWS::MediaPackage::OriginEndpointCmafEncryption` {
  ConstantInitializationVector: String?

  EncryptionMethod: String?

  KeyRotationIntervalSeconds: Number?

  SpekeKeyProvider: `AWS::MediaPackage::OriginEndpointSpekeKeyProvider`
}

class `AWS::MediaPackage::OriginEndpointCmafPackage` {
  Encryption: `AWS::MediaPackage::OriginEndpointCmafEncryption`?

  HlsManifests: Listing<`AWS::MediaPackage::OriginEndpointHlsManifest`>?

  SegmentDurationSeconds: Number?

  SegmentPrefix: String?

  StreamSelection: `AWS::MediaPackage::PackagingConfigurationStreamSelection`?
}

class `AWS::MediaPackage::OriginEndpointDashEncryption` {
  KeyRotationIntervalSeconds: Number?

  SpekeKeyProvider: `AWS::MediaPackage::OriginEndpointSpekeKeyProvider`
}

class `AWS::MediaPackage::OriginEndpointDashPackage` {
  AdTriggers: Listing<String>?

  AdsOnDeliveryRestrictions: String?

  Encryption: `AWS::MediaPackage::OriginEndpointDashEncryption`?

  IncludeIframeOnlyStream: Boolean?

  ManifestLayout: String?

  ManifestWindowSeconds: Number?

  MinBufferTimeSeconds: Number?

  MinUpdatePeriodSeconds: Number?

  PeriodTriggers: Listing<String>?

  Profile: String?

  SegmentDurationSeconds: Number?

  SegmentTemplateFormat: String?

  StreamSelection: `AWS::MediaPackage::PackagingConfigurationStreamSelection`?

  SuggestedPresentationDelaySeconds: Number?

  UtcTiming: String?

  UtcTimingUri: String?
}

class `AWS::MediaPackage::OriginEndpointHlsEncryption` {
  ConstantInitializationVector: String?

  EncryptionMethod: String?

  KeyRotationIntervalSeconds: Number?

  RepeatExtXKey: Boolean?

  SpekeKeyProvider: `AWS::MediaPackage::OriginEndpointSpekeKeyProvider`
}

class `AWS::MediaPackage::OriginEndpointHlsManifest` {
  AdMarkers: String?

  AdTriggers: Listing<String>?

  AdsOnDeliveryRestrictions: String?

  Id: String

  IncludeIframeOnlyStream: Boolean?

  ManifestName: String?

  PlaylistType: String?

  PlaylistWindowSeconds: Number?

  ProgramDateTimeIntervalSeconds: Number?

  Url: String?
}

class `AWS::MediaPackage::OriginEndpointHlsPackage` {
  AdMarkers: String?

  AdTriggers: Listing<String>?

  AdsOnDeliveryRestrictions: String?

  Encryption: `AWS::MediaPackage::OriginEndpointHlsEncryption`?

  IncludeDvbSubtitles: Boolean?

  IncludeIframeOnlyStream: Boolean?

  PlaylistType: String?

  PlaylistWindowSeconds: Number?

  ProgramDateTimeIntervalSeconds: Number?

  SegmentDurationSeconds: Number?

  StreamSelection: `AWS::MediaPackage::PackagingConfigurationStreamSelection`?

  UseAudioRenditionGroup: Boolean?
}

class `AWS::MediaPackage::OriginEndpointMssEncryption` {
  SpekeKeyProvider: `AWS::MediaPackage::OriginEndpointSpekeKeyProvider`
}

class `AWS::MediaPackage::OriginEndpointMssPackage` {
  Encryption: `AWS::MediaPackage::OriginEndpointMssEncryption`?

  ManifestWindowSeconds: Number?

  SegmentDurationSeconds: Number?

  StreamSelection: `AWS::MediaPackage::PackagingConfigurationStreamSelection`?
}

class `AWS::MediaPackage::OriginEndpointSpekeKeyProvider` {
  CertificateArn: String?

  EncryptionContractConfiguration: `AWS::Transfer::UserSshPublicKey`?

  ResourceId: String

  RoleArn: String

  SystemIds: Listing<String>

  Url: String
}

class `AWS::MediaPackage::PackagingConfigurationStreamSelection` {
  MaxVideoBitsPerSecond: Number?

  MinVideoBitsPerSecond: Number?

  StreamOrder: String?
}

class `AWS::MediaPackage::PackagingConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaPackage::PackagingConfigurationProperties`

  Type: "AWS::MediaPackage::PackagingConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaPackage::PackagingConfigurationProperties` {
  CmafPackage: `AWS::MediaPackage::PackagingConfigurationCmafPackage`?

  DashPackage: `AWS::MediaPackage::PackagingConfigurationDashPackage`?

  HlsPackage: `AWS::MediaPackage::PackagingConfigurationHlsPackage`?

  Id: String

  MssPackage: `AWS::MediaPackage::PackagingConfigurationMssPackage`?

  PackagingGroupId: String

  Tags: Listing<Tag>?
}

class `AWS::MediaPackage::PackagingConfigurationMssEncryption` {
  SpekeKeyProvider: `AWS::MediaPackage::PackagingConfigurationSpekeKeyProvider`
}

class `AWS::MediaPackage::PackagingConfigurationCmafPackage` {
  Encryption: `AWS::MediaPackage::PackagingConfigurationMssEncryption`?

  HlsManifests: Listing<`AWS::MediaPackage::PackagingConfigurationHlsManifest`>

  IncludeEncoderConfigurationInSegments: Boolean?

  SegmentDurationSeconds: Number?
}

class `AWS::MediaPackage::PackagingConfigurationDashManifest` {
  ManifestLayout: String?

  ManifestName: String?

  MinBufferTimeSeconds: Number?

  Profile: String?

  ScteMarkersSource: String?

  StreamSelection: `AWS::MediaPackage::PackagingConfigurationStreamSelection`?
}

class `AWS::MediaPackage::PackagingConfigurationDashPackage` {
  DashManifests: Listing<`AWS::MediaPackage::PackagingConfigurationDashManifest`>

  Encryption: `AWS::MediaPackage::PackagingConfigurationMssEncryption`?

  IncludeEncoderConfigurationInSegments: Boolean?

  IncludeIframeOnlyStream: Boolean?

  PeriodTriggers: Listing<String>?

  SegmentDurationSeconds: Number?

  SegmentTemplateFormat: String?
}

class `AWS::MediaPackageV2::OriginEndpointEncryptionContractConfiguration` {
  PresetSpeke20Audio: String

  PresetSpeke20Video: String
}

class `AWS::MediaPackage::PackagingConfigurationHlsEncryption` {
  ConstantInitializationVector: String?

  EncryptionMethod: String?

  SpekeKeyProvider: `AWS::MediaPackage::PackagingConfigurationSpekeKeyProvider`
}

class `AWS::MediaPackage::PackagingConfigurationHlsManifest` {
  AdMarkers: String?

  IncludeIframeOnlyStream: Boolean?

  ManifestName: String?

  ProgramDateTimeIntervalSeconds: Number?

  RepeatExtXKey: Boolean?

  StreamSelection: `AWS::MediaPackage::PackagingConfigurationStreamSelection`?
}

class `AWS::MediaPackage::PackagingConfigurationHlsPackage` {
  Encryption: `AWS::MediaPackage::PackagingConfigurationHlsEncryption`?

  HlsManifests: Listing<`AWS::MediaPackage::PackagingConfigurationHlsManifest`>

  IncludeDvbSubtitles: Boolean?

  SegmentDurationSeconds: Number?

  UseAudioRenditionGroup: Boolean?
}

class `AWS::MediaPackage::PackagingConfigurationMssManifest` {
  ManifestName: String?

  StreamSelection: `AWS::MediaPackage::PackagingConfigurationStreamSelection`?
}

class `AWS::MediaPackage::PackagingConfigurationMssPackage` {
  Encryption: `AWS::MediaPackage::PackagingConfigurationMssEncryption`?

  MssManifests: Listing<`AWS::MediaPackage::PackagingConfigurationMssManifest`>

  SegmentDurationSeconds: Number?
}

class `AWS::MediaPackage::PackagingConfigurationSpekeKeyProvider` {
  EncryptionContractConfiguration: `AWS::MediaPackageV2::OriginEndpointEncryptionContractConfiguration`?

  RoleArn: String

  SystemIds: Listing<String>

  Url: String
}

class `AWS::MediaPackage::PackagingGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaPackage::PackagingGroupProperties`

  Type: "AWS::MediaPackage::PackagingGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaPackage::PackagingGroupProperties` {
  Authorization: `AWS::MediaPackage::PackagingGroupAuthorization`?

  EgressAccessLogs: `AWS::MediaPackage::PackagingGroupLogConfiguration`?

  Id: String

  Tags: Listing<Tag>?
}

class `AWS::MediaPackageV2::Channel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaPackageV2::ChannelProperties`?

  Type: "AWS::MediaPackageV2::Channel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaPackageV2::ChannelProperties` {
  ChannelGroupName: String?

  ChannelName: String?

  Description: String?

  Tags: Listing<Tag>?
}

class `AWS::MediaPackageV2::ChannelIngestEndpoint` {
  Id: String?

  Url: String?
}

class `AWS::MediaPackageV2::ChannelGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaPackageV2::ChannelGroupProperties`?

  Type: "AWS::MediaPackageV2::ChannelGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaPackageV2::ChannelGroupProperties` {
  ChannelGroupName: String?

  Description: String?

  Tags: Listing<Tag>?
}

class `AWS::MediaPackageV2::ChannelPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaPackageV2::ChannelPolicyProperties`

  Type: "AWS::MediaPackageV2::ChannelPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaPackageV2::ChannelPolicyProperties` {
  ChannelGroupName: String?

  ChannelName: String?

  Policy: Dynamic
}

class `AWS::MediaPackageV2::OriginEndpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaPackageV2::OriginEndpointProperties`

  Type: "AWS::MediaPackageV2::OriginEndpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaPackageV2::OriginEndpointProperties` {
  ChannelGroupName: String?

  ChannelName: String?

  ContainerType: String

  Description: String?

  HlsManifests: Listing<`AWS::MediaPackageV2::OriginEndpointLowLatencyHlsManifestConfiguration`>?

  LowLatencyHlsManifests: Listing<`AWS::MediaPackageV2::OriginEndpointLowLatencyHlsManifestConfiguration`>?

  OriginEndpointName: String?

  Segment: `AWS::MediaPackageV2::OriginEndpointSegment`?

  StartoverWindowSeconds: Number?

  Tags: Listing<Tag>?
}

class `AWS::MediaPackageV2::OriginEndpointEncryption` {
  ConstantInitializationVector: String?

  EncryptionMethod: `AWS::MediaPackageV2::OriginEndpointEncryptionMethod`

  KeyRotationIntervalSeconds: Number?

  SpekeKeyProvider: `AWS::MediaPackageV2::OriginEndpointSpekeKeyProvider`
}

class `AWS::MediaPackageV2::OriginEndpointEncryptionMethod` {
  CmafEncryptionMethod: String?

  TsEncryptionMethod: String?
}

class `AWS::MediaPackageV2::OriginEndpointFilterConfiguration` {
  End: String?

  ManifestFilter: String?

  Start: String?

  TimeDelaySeconds: Number?
}

class `AWS::MediaPackageV2::OriginEndpointLowLatencyHlsManifestConfiguration` {
  ChildManifestName: String?

  FilterConfiguration: `AWS::MediaPackageV2::OriginEndpointFilterConfiguration`?

  ManifestName: String

  ManifestWindowSeconds: Number?

  ProgramDateTimeIntervalSeconds: Number?

  ScteHls: `AWS::MediaPackageV2::OriginEndpointScteHls`?

  Url: String?
}

class `AWS::MediaPackageV2::OriginEndpointScte` {
  ScteFilter: Listing<String>?
}

class `AWS::MediaPackageV2::OriginEndpointScteHls` {
  AdMarkerHls: String?
}

class `AWS::MediaPackageV2::OriginEndpointSegment` {
  Encryption: `AWS::MediaPackageV2::OriginEndpointEncryption`?

  IncludeIframeOnlyStreams: Boolean?

  Scte: `AWS::MediaPackageV2::OriginEndpointScte`?

  SegmentDurationSeconds: Number?

  SegmentName: String?

  TsIncludeDvbSubtitles: Boolean?

  TsUseAudioRenditionGroup: Boolean?
}

class `AWS::MediaPackageV2::OriginEndpointSpekeKeyProvider` {
  DrmSystems: Listing<String>

  EncryptionContractConfiguration: `AWS::MediaPackageV2::OriginEndpointEncryptionContractConfiguration`

  ResourceId: String

  RoleArn: String

  Url: String
}

class `AWS::MediaPackageV2::OriginEndpointPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaPackageV2::OriginEndpointPolicyProperties`

  Type: "AWS::MediaPackageV2::OriginEndpointPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaPackageV2::OriginEndpointPolicyProperties` {
  ChannelGroupName: String?

  ChannelName: String?

  OriginEndpointName: String?

  Policy: Dynamic
}

class `AWS::MediaStore::Container` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaStore::ContainerProperties`

  Type: "AWS::MediaStore::Container"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaStore::ContainerProperties` {
  AccessLoggingEnabled: Boolean?

  ContainerName: String

  CorsPolicy: Listing<`AWS::MediaStore::ContainerCorsRule`>?

  LifecyclePolicy: String?

  MetricPolicy: `AWS::MediaStore::ContainerMetricPolicy`?

  Policy: String?

  Tags: Listing<Tag>?
}

class `AWS::MediaStore::ContainerCorsRule` {
  AllowedHeaders: Listing<String>?

  AllowedMethods: Listing<String>?

  AllowedOrigins: Listing<String>?

  ExposeHeaders: Listing<String>?

  MaxAgeSeconds: Number?
}

class `AWS::MediaStore::ContainerMetricPolicy` {
  ContainerLevelMetrics: String

  MetricPolicyRules: Listing<`AWS::MediaStore::ContainerMetricPolicyRule`>?
}

class `AWS::MediaStore::ContainerMetricPolicyRule` {
  ObjectGroup: String

  ObjectGroupName: String
}

class `AWS::MediaTailor::Channel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaTailor::ChannelProperties`

  Type: "AWS::MediaTailor::Channel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaTailor::ChannelProperties` {
  ChannelName: String

  FillerSlate: `AWS::MediaTailor::ChannelSlateSource`?

  LogConfiguration: `AWS::MediaTailor::ChannelLogConfigurationForChannel`?

  Outputs: Listing<`AWS::MediaTailor::ChannelRequestOutputItem`>

  PlaybackMode: String

  Tags: Listing<Tag>?

  Tier: String?

  TimeShiftConfiguration: `AWS::MediaTailor::ChannelTimeShiftConfiguration`?
}

class `AWS::MediaTailor::ChannelDashPlaylistSettings` {
  ManifestWindowSeconds: Number?

  MinBufferTimeSeconds: Number?

  MinUpdatePeriodSeconds: Number?

  SuggestedPresentationDelaySeconds: Number?
}

class `AWS::MediaTailor::ChannelHlsPlaylistSettings` {
  AdMarkupType: Listing<String>?

  ManifestWindowSeconds: Number?
}

class `AWS::MediaTailor::ChannelLogConfigurationForChannel` {
  LogTypes: Listing<String>?
}

class `AWS::MediaTailor::ChannelRequestOutputItem` {
  DashPlaylistSettings: `AWS::MediaTailor::ChannelDashPlaylistSettings`?

  HlsPlaylistSettings: `AWS::MediaTailor::ChannelHlsPlaylistSettings`?

  ManifestName: String

  SourceGroup: String
}

class `AWS::MediaTailor::ChannelSlateSource` {
  SourceLocationName: String?

  VodSourceName: String?
}

class `AWS::MediaTailor::ChannelTimeShiftConfiguration` {
  MaxTimeDelaySeconds: Number
}

class `AWS::MediaTailor::ChannelPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaTailor::ChannelPolicyProperties`

  Type: "AWS::MediaTailor::ChannelPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaTailor::ChannelPolicyProperties` {
  ChannelName: String

  Policy: Dynamic
}

class `AWS::MediaTailor::LiveSource` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaTailor::LiveSourceProperties`

  Type: "AWS::MediaTailor::LiveSource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaTailor::LiveSourceProperties` {
  HttpPackageConfigurations: Listing<`AWS::MediaTailor::VodSourceHttpPackageConfiguration`>

  LiveSourceName: String

  SourceLocationName: String

  Tags: Listing<Tag>?
}

class `AWS::MediaTailor::VodSourceHttpPackageConfiguration` {
  Path: String

  SourceGroup: String

  Type: String
}

class `AWS::MediaTailor::PlaybackConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaTailor::PlaybackConfigurationProperties`

  Type: "AWS::MediaTailor::PlaybackConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaTailor::PlaybackConfigurationProperties` {
  AdDecisionServerUrl: String

  AvailSuppression: `AWS::MediaTailor::PlaybackConfigurationAvailSuppression`?

  Bumper: `AWS::MediaTailor::PlaybackConfigurationBumper`?

  CdnConfiguration: `AWS::MediaTailor::PlaybackConfigurationCdnConfiguration`?

  ConfigurationAliases: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), Dynamic>?

  DashConfiguration: `AWS::MediaTailor::PlaybackConfigurationDashConfiguration`?

  HlsConfiguration: `AWS::MediaTailor::PlaybackConfigurationHlsConfiguration`?

  LivePreRollConfiguration: `AWS::MediaTailor::PlaybackConfigurationLivePreRollConfiguration`?

  ManifestProcessingRules: `AWS::MediaTailor::PlaybackConfigurationManifestProcessingRules`?

  Name: String

  PersonalizationThresholdSeconds: Number?

  SlateAdUrl: String?

  Tags: Listing<Tag>?

  TranscodeProfileName: String?

  VideoContentSourceUrl: String
}

class `AWS::MediaTailor::PlaybackConfigurationAvailSuppression` {
  Mode: String?

  Value: String?
}

class `AWS::MediaTailor::PlaybackConfigurationBumper` {
  EndUrl: String?

  StartUrl: String?
}

class `AWS::MediaTailor::PlaybackConfigurationCdnConfiguration` {
  AdSegmentUrlPrefix: String?

  ContentSegmentUrlPrefix: String?
}

class `AWS::MediaTailor::PlaybackConfigurationDashConfiguration` {
  ManifestEndpointPrefix: String?

  MpdLocation: String?

  OriginManifestType: String?
}

class `AWS::MediaTailor::PlaybackConfigurationHlsConfiguration` {
  ManifestEndpointPrefix: String?
}

class `AWS::MediaTailor::PlaybackConfigurationLivePreRollConfiguration` {
  AdDecisionServerUrl: String?

  MaxDurationSeconds: Number?
}

class `AWS::MediaTailor::PlaybackConfigurationManifestProcessingRules` {
  AdMarkerPassthrough: `AWS::StepFunctions::StateMachineTracingConfiguration`?
}

class `AWS::MediaTailor::SourceLocation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaTailor::SourceLocationProperties`

  Type: "AWS::MediaTailor::SourceLocation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaTailor::SourceLocationProperties` {
  AccessConfiguration: `AWS::MediaTailor::SourceLocationAccessConfiguration`?

  DefaultSegmentDeliveryConfiguration: `AWS::MediaTailor::SourceLocationDefaultSegmentDeliveryConfiguration`?

  HttpConfiguration: `AWS::MediaTailor::SourceLocationHttpConfiguration`

  SegmentDeliveryConfigurations: Listing<`AWS::MediaTailor::SourceLocationSegmentDeliveryConfiguration`>?

  SourceLocationName: String

  Tags: Listing<Tag>?
}

class `AWS::MediaTailor::SourceLocationAccessConfiguration` {
  AccessType: String?

  SecretsManagerAccessTokenConfiguration: `AWS::MediaTailor::SourceLocationSecretsManagerAccessTokenConfiguration`?
}

class `AWS::MediaTailor::SourceLocationDefaultSegmentDeliveryConfiguration` {
  BaseUrl: String?
}

class `AWS::MediaTailor::SourceLocationHttpConfiguration` {
  BaseUrl: String
}

class `AWS::MediaTailor::SourceLocationSecretsManagerAccessTokenConfiguration` {
  HeaderName: String?

  SecretArn: String?

  SecretStringKey: String?
}

class `AWS::MediaTailor::SourceLocationSegmentDeliveryConfiguration` {
  BaseUrl: String?

  Name: String?
}

class `AWS::MediaTailor::VodSource` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MediaTailor::VodSourceProperties`

  Type: "AWS::MediaTailor::VodSource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MediaTailor::VodSourceProperties` {
  HttpPackageConfigurations: Listing<`AWS::MediaTailor::VodSourceHttpPackageConfiguration`>

  SourceLocationName: String

  Tags: Listing<Tag>?

  VodSourceName: String
}

class `AWS::MemoryDB::ACL` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MemoryDB::ACLProperties`

  Type: "AWS::MemoryDB::ACL"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MemoryDB::ACLProperties` {
  ACLName: String

  Tags: Listing<Tag>?

  UserNames: Listing<String>?
}

class `AWS::MemoryDB::Cluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MemoryDB::ClusterProperties`

  Type: "AWS::MemoryDB::Cluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MemoryDB::ClusterProperties` {
  ACLName: String

  AutoMinorVersionUpgrade: Boolean?

  ClusterEndpoint: `AWS::MemoryDB::ClusterEndpoint`?

  ClusterName: String

  DataTiering: String?

  Description: String?

  EngineVersion: String?

  FinalSnapshotName: String?

  KmsKeyId: String?

  MaintenanceWindow: String?

  NodeType: String

  NumReplicasPerShard: Number?

  NumShards: Number?

  ParameterGroupName: String?

  Port: Number?

  SecurityGroupIds: Listing<String>?

  SnapshotArns: Listing<String>?

  SnapshotName: String?

  SnapshotRetentionLimit: Number?

  SnapshotWindow: String?

  SnsTopicArn: String?

  SnsTopicStatus: String?

  SubnetGroupName: String?

  TLSEnabled: Boolean?

  Tags: Listing<Tag>?
}

class `AWS::MemoryDB::ParameterGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MemoryDB::ParameterGroupProperties`

  Type: "AWS::MemoryDB::ParameterGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MemoryDB::ParameterGroupProperties` {
  Description: String?

  Family: String

  ParameterGroupName: String

  Parameters: Dynamic?

  Tags: Listing<Tag>?
}

class `AWS::MemoryDB::SubnetGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MemoryDB::SubnetGroupProperties`

  Type: "AWS::MemoryDB::SubnetGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MemoryDB::SubnetGroupProperties` {
  Description: String?

  SubnetGroupName: String

  SubnetIds: Listing<String>

  Tags: Listing<Tag>?
}

class `AWS::MemoryDB::User` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::MemoryDB::UserProperties`

  Type: "AWS::MemoryDB::User"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::MemoryDB::UserProperties` {
  AccessString: String?

  AuthenticationMode: `AWS::MemoryDB::UserAuthenticationMode`?

  Tags: Listing<Tag>?

  UserName: String
}

class `AWS::MemoryDB::UserAuthenticationMode` {
  Passwords: Listing<String>?

  Type: String?
}

class `AWS::Neptune::DBCluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Neptune::DBClusterProperties`?

  Type: "AWS::Neptune::DBCluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Neptune::DBClusterProperties` {
  AssociatedRoles: Listing<`AWS::RDS::DBClusterDBClusterRole`>?

  AvailabilityZones: Listing<String>?

  BackupRetentionPeriod: Number?

  CopyTagsToSnapshot: Boolean?

  DBClusterIdentifier: String?

  DBClusterParameterGroupName: String?

  DBInstanceParameterGroupName: String?

  DBPort: Number?

  DBSubnetGroupName: String?

  DeletionProtection: Boolean?

  EnableCloudwatchLogsExports: Listing<String>?

  EngineVersion: String?

  IamAuthEnabled: Boolean?

  KmsKeyId: String?

  PreferredBackupWindow: String?

  PreferredMaintenanceWindow: String?

  RestoreToTime: String?

  RestoreType: String?

  ServerlessScalingConfiguration: `AWS::Neptune::DBClusterServerlessScalingConfiguration`?

  SnapshotIdentifier: String?

  SourceDBClusterIdentifier: String?

  StorageEncrypted: Boolean?

  Tags: Listing<Tag>?

  UseLatestRestorableTime: Boolean?

  VpcSecurityGroupIds: Listing<String>?
}

class `AWS::RDS::DBClusterDBClusterRole` {
  FeatureName: String?

  RoleArn: String
}

class `AWS::Neptune::DBClusterParameterGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Neptune::DBParameterGroupProperties`

  Type: "AWS::Neptune::DBClusterParameterGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Neptune::DBInstance` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Neptune::DBInstanceProperties`

  Type: "AWS::Neptune::DBInstance"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Neptune::DBInstanceProperties` {
  AllowMajorVersionUpgrade: Boolean?

  AutoMinorVersionUpgrade: Boolean?

  AvailabilityZone: String?

  DBClusterIdentifier: String?

  DBInstanceClass: String

  DBInstanceIdentifier: String?

  DBParameterGroupName: String?

  DBSnapshotIdentifier: String?

  DBSubnetGroupName: String?

  PreferredMaintenanceWindow: String?

  Tags: Listing<Tag>?
}

class `AWS::Neptune::DBParameterGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Neptune::DBParameterGroupProperties`

  Type: "AWS::Neptune::DBParameterGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Neptune::DBSubnetGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::DBSubnetGroupProperties`

  Type: "AWS::Neptune::DBSubnetGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NeptuneGraph::Graph` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NeptuneGraph::GraphProperties`

  Type: "AWS::NeptuneGraph::Graph"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NeptuneGraph::GraphProperties` {
  DeletionProtection: Boolean?

  GraphName: String?

  ProvisionedMemory: Number

  PublicConnectivity: Boolean?

  ReplicaCount: Number?

  Tags: Listing<Tag>?

  VectorSearchConfiguration: `AWS::NeptuneGraph::GraphVectorSearchConfiguration`?
}

class `AWS::NeptuneGraph::GraphVectorSearchConfiguration` {
  VectorSearchDimension: Number
}

class `AWS::NeptuneGraph::PrivateGraphEndpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NeptuneGraph::PrivateGraphEndpointProperties`

  Type: "AWS::NeptuneGraph::PrivateGraphEndpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NeptuneGraph::PrivateGraphEndpointProperties` {
  GraphIdentifier: String

  SecurityGroupIds: Listing<String>?

  SubnetIds: Listing<String>?

  VpcId: String
}

class `AWS::NetworkFirewall::Firewall` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkFirewall::FirewallProperties`

  Type: "AWS::NetworkFirewall::Firewall"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkFirewall::FirewallProperties` {
  DeleteProtection: Boolean?

  Description: String?

  FirewallName: String

  FirewallPolicyArn: String

  FirewallPolicyChangeProtection: Boolean?

  SubnetChangeProtection: Boolean?

  SubnetMappings: Listing<`AWS::NetworkFirewall::FirewallSubnetMapping`>

  Tags: Listing<Tag>?

  VpcId: String
}

class `AWS::NetworkFirewall::FirewallSubnetMapping` {
  IPAddressType: String?

  SubnetId: String
}

class `AWS::NetworkFirewall::FirewallPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkFirewall::FirewallPolicyProperties`

  Type: "AWS::NetworkFirewall::FirewallPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkFirewall::FirewallPolicyProperties` {
  Description: String?

  FirewallPolicy: `AWS::NetworkFirewall::FirewallPolicyFirewallPolicy`

  FirewallPolicyName: String

  Tags: Listing<Tag>?
}

class `AWS::NetworkFirewall::FirewallPolicyActionDefinition` {
  PublishMetricAction: `AWS::NetworkFirewall::FirewallPolicyPublishMetricAction`?
}

class `AWS::NetworkFirewall::FirewallPolicyCustomAction` {
  ActionDefinition: `AWS::NetworkFirewall::FirewallPolicyActionDefinition`

  ActionName: String
}

class `AWS::NetworkFirewall::FirewallPolicyFirewallPolicy` {
  PolicyVariables: `AWS::NetworkFirewall::FirewallPolicyPolicyVariables`?

  StatefulDefaultActions: Listing<String>?

  StatefulEngineOptions: `AWS::NetworkFirewall::FirewallPolicyStatefulEngineOptions`?

  StatefulRuleGroupReferences: Listing<`AWS::NetworkFirewall::FirewallPolicyStatefulRuleGroupReference`>?

  StatelessCustomActions: Listing<`AWS::NetworkFirewall::FirewallPolicyCustomAction`>?

  StatelessDefaultActions: Listing<String>

  StatelessFragmentDefaultActions: Listing<String>

  StatelessRuleGroupReferences: Listing<`AWS::NetworkFirewall::FirewallPolicyStatelessRuleGroupReference`>?

  TLSInspectionConfigurationArn: String?
}

class `AWS::NetworkFirewall::RuleGroupPortSet` {
  Definition: Listing<String>?
}

class `AWS::NetworkFirewall::FirewallPolicyPolicyVariables` {
  RuleVariables: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::NetworkFirewall::RuleGroupPortSet`>?
}

class `AWS::NetworkFirewall::FirewallPolicyPublishMetricAction` {
  Dimensions: Listing<`AWS::NetworkFirewall::RuleGroupDimension`>
}

class `AWS::NetworkFirewall::FirewallPolicyStatefulEngineOptions` {
  RuleOrder: String?

  StreamExceptionPolicy: String?
}

class `AWS::NetworkFirewall::FirewallPolicyStatefulRuleGroupReference` {
  Override: `AWS::NetworkFirewall::FirewallPolicyStatefulRuleGroupOverride`?

  Priority: Number?

  ResourceArn: String
}

class `AWS::NetworkFirewall::FirewallPolicyStatelessRuleGroupReference` {
  Priority: Number

  ResourceArn: String
}

class `AWS::NetworkFirewall::LoggingConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkFirewall::LoggingConfigurationProperties`

  Type: "AWS::NetworkFirewall::LoggingConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkFirewall::LoggingConfigurationProperties` {
  FirewallArn: String

  FirewallName: String?

  LoggingConfiguration: `AWS::NetworkFirewall::LoggingConfigurationLoggingConfiguration`
}

class `AWS::NetworkFirewall::LoggingConfigurationLogDestinationConfig` {
  LogDestination: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>

  LogDestinationType: String

  LogType: String
}

class `AWS::NetworkFirewall::LoggingConfigurationLoggingConfiguration` {
  LogDestinationConfigs: Listing<`AWS::NetworkFirewall::LoggingConfigurationLogDestinationConfig`>
}

class `AWS::NetworkFirewall::RuleGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkFirewall::RuleGroupProperties`

  Type: "AWS::NetworkFirewall::RuleGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkFirewall::RuleGroupProperties` {
  Capacity: Number

  Description: String?

  RuleGroup: `AWS::NetworkFirewall::RuleGroupRuleGroup`?

  RuleGroupName: String

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::NetworkFirewall::RuleGroupActionDefinition` {
  PublishMetricAction: `AWS::NetworkFirewall::RuleGroupPublishMetricAction`?
}

class `AWS::NetworkFirewall::TLSInspectionConfigurationAddress` {
  AddressDefinition: String
}

class `AWS::NetworkFirewall::RuleGroupCustomAction` {
  ActionDefinition: `AWS::NetworkFirewall::RuleGroupActionDefinition`

  ActionName: String
}

class `AWS::NetworkFirewall::RuleGroupHeader` {
  Destination: String

  DestinationPort: String

  Direction: String

  Protocol: String

  Source: String

  SourcePort: String
}

class `AWS::NetworkFirewall::RuleGroupIPSetReference` {
  ReferenceArn: String?
}

class `AWS::NetworkFirewall::RuleGroupMatchAttributes` {
  DestinationPorts: Listing<`AWS::NetworkFirewall::TLSInspectionConfigurationPortRange`>?

  Destinations: Listing<`AWS::NetworkFirewall::TLSInspectionConfigurationAddress`>?

  Protocols: Listing<Number>?

  SourcePorts: Listing<`AWS::NetworkFirewall::TLSInspectionConfigurationPortRange`>?

  Sources: Listing<`AWS::NetworkFirewall::TLSInspectionConfigurationAddress`>?

  TCPFlags: Listing<`AWS::NetworkFirewall::RuleGroupTCPFlagField`>?
}

class `AWS::NetworkFirewall::RuleGroupPublishMetricAction` {
  Dimensions: Listing<`AWS::NetworkFirewall::RuleGroupDimension`>
}

class `AWS::NetworkFirewall::RuleGroupReferenceSets` {
  IPSetReferences: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::NetworkFirewall::RuleGroupIPSetReference`>?
}

class `AWS::NetworkFirewall::RuleGroupRuleDefinition` {
  Actions: Listing<String>

  MatchAttributes: `AWS::NetworkFirewall::RuleGroupMatchAttributes`
}

class `AWS::NetworkFirewall::RuleGroupRuleGroup` {
  ReferenceSets: `AWS::NetworkFirewall::RuleGroupReferenceSets`?

  RuleVariables: `AWS::NetworkFirewall::RuleGroupRuleVariables`?

  RulesSource: `AWS::NetworkFirewall::RuleGroupRulesSource`

  StatefulRuleOptions: `AWS::NetworkFirewall::RuleGroupStatefulRuleOptions`?
}

class `AWS::NetworkFirewall::RuleGroupRuleOption` {
  Keyword: String

  Settings: Listing<String>?
}

class `AWS::NetworkFirewall::RuleGroupRuleVariables` {
  IPSets: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::NetworkFirewall::RuleGroupPortSet`>?

  PortSets: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::NetworkFirewall::RuleGroupPortSet`>?
}

class `AWS::NetworkFirewall::RuleGroupRulesSource` {
  RulesSourceList: `AWS::NetworkFirewall::RuleGroupRulesSourceList`?

  RulesString: String?

  StatefulRules: Listing<`AWS::NetworkFirewall::RuleGroupStatefulRule`>?

  StatelessRulesAndCustomActions: `AWS::NetworkFirewall::RuleGroupStatelessRulesAndCustomActions`?
}

class `AWS::NetworkFirewall::RuleGroupRulesSourceList` {
  GeneratedRulesType: String

  TargetTypes: Listing<String>

  Targets: Listing<String>
}

class `AWS::NetworkFirewall::RuleGroupStatefulRule` {
  Action: String

  Header: `AWS::NetworkFirewall::RuleGroupHeader`

  RuleOptions: Listing<`AWS::NetworkFirewall::RuleGroupRuleOption`>
}

class `AWS::NetworkFirewall::RuleGroupStatefulRuleOptions` {
  RuleOrder: String?
}

class `AWS::NetworkFirewall::RuleGroupStatelessRule` {
  Priority: Number

  RuleDefinition: `AWS::NetworkFirewall::RuleGroupRuleDefinition`
}

class `AWS::NetworkFirewall::RuleGroupStatelessRulesAndCustomActions` {
  CustomActions: Listing<`AWS::NetworkFirewall::RuleGroupCustomAction`>?

  StatelessRules: Listing<`AWS::NetworkFirewall::RuleGroupStatelessRule`>
}

class `AWS::NetworkFirewall::RuleGroupTCPFlagField` {
  Flags: Listing<String>

  Masks: Listing<String>?
}

class `AWS::NetworkFirewall::TLSInspectionConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkFirewall::TLSInspectionConfigurationProperties`

  Type: "AWS::NetworkFirewall::TLSInspectionConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkFirewall::TLSInspectionConfigurationProperties` {
  Description: String?

  TLSInspectionConfiguration: `AWS::NetworkFirewall::TLSInspectionConfigurationTLSInspectionConfiguration`

  TLSInspectionConfigurationName: String

  Tags: Listing<Tag>?
}

class `AWS::NetworkFirewall::TLSInspectionConfigurationCheckCertificateRevocationStatus` {
  RevokedStatusAction: String?

  UnknownStatusAction: String?
}

class `AWS::NetworkFirewall::TLSInspectionConfigurationServerCertificate` {
  ResourceArn: String?
}

class `AWS::NetworkFirewall::TLSInspectionConfigurationServerCertificateConfiguration` {
  CertificateAuthorityArn: String?

  CheckCertificateRevocationStatus: `AWS::NetworkFirewall::TLSInspectionConfigurationCheckCertificateRevocationStatus`?

  Scopes: Listing<`AWS::NetworkFirewall::TLSInspectionConfigurationServerCertificateScope`>?

  ServerCertificates: Listing<`AWS::NetworkFirewall::TLSInspectionConfigurationServerCertificate`>?
}

class `AWS::NetworkFirewall::TLSInspectionConfigurationServerCertificateScope` {
  DestinationPorts: Listing<`AWS::NetworkFirewall::TLSInspectionConfigurationPortRange`>?

  Destinations: Listing<`AWS::NetworkFirewall::TLSInspectionConfigurationAddress`>?

  Protocols: Listing<Number>?

  SourcePorts: Listing<`AWS::NetworkFirewall::TLSInspectionConfigurationPortRange`>?

  Sources: Listing<`AWS::NetworkFirewall::TLSInspectionConfigurationAddress`>?
}

class `AWS::NetworkFirewall::TLSInspectionConfigurationTLSInspectionConfiguration` {
  ServerCertificateConfigurations: Listing<`AWS::NetworkFirewall::TLSInspectionConfigurationServerCertificateConfiguration`>?
}

class `AWS::NetworkManager::ConnectAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkManager::ConnectAttachmentProperties`

  Type: "AWS::NetworkManager::ConnectAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkManager::ConnectAttachmentProperties` {
  CoreNetworkId: String

  EdgeLocation: String

  Options: `AWS::NetworkManager::ConnectAttachmentConnectAttachmentOptions`

  ProposedSegmentChange: `AWS::NetworkManager::VpcAttachmentProposedSegmentChange`?

  Tags: Listing<Tag>?

  TransportAttachmentId: String
}

class `AWS::NetworkManager::VpcAttachmentProposedSegmentChange` {
  AttachmentPolicyRuleNumber: Number?

  SegmentName: String?

  Tags: Listing<Tag>?
}

class `AWS::NetworkManager::ConnectPeer` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkManager::ConnectPeerProperties`

  Type: "AWS::NetworkManager::ConnectPeer"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkManager::ConnectPeerProperties` {
  BgpOptions: `AWS::NetworkManager::ConnectPeerBgpOptions`?

  ConnectAttachmentId: String

  CoreNetworkAddress: String?

  InsideCidrBlocks: Listing<String>?

  PeerAddress: String

  SubnetArn: String?

  Tags: Listing<Tag>?
}

class `AWS::NetworkManager::ConnectPeerBgpOptions` {
  PeerAsn: Number?
}

class `AWS::NetworkManager::ConnectPeerConnectPeerBgpConfiguration` {
  CoreNetworkAddress: String?

  CoreNetworkAsn: Number?

  PeerAddress: String?

  PeerAsn: Number?
}

class `AWS::NetworkManager::ConnectPeerConnectPeerConfiguration` {
  BgpConfigurations: Listing<`AWS::NetworkManager::ConnectPeerConnectPeerBgpConfiguration`>?

  CoreNetworkAddress: String?

  InsideCidrBlocks: Listing<String>?

  PeerAddress: String?

  Protocol: String?
}

class `AWS::NetworkManager::CoreNetwork` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkManager::CoreNetworkProperties`

  Type: "AWS::NetworkManager::CoreNetwork"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkManager::CoreNetworkProperties` {
  Description: String?

  GlobalNetworkId: String

  PolicyDocument: Dynamic?

  Tags: Listing<Tag>?
}

class `AWS::NetworkManager::CoreNetworkCoreNetworkEdge` {
  Asn: Number?

  EdgeLocation: String?

  InsideCidrBlocks: Listing<String>?
}

class `AWS::NetworkManager::CoreNetworkCoreNetworkSegment` {
  EdgeLocations: Listing<String>?

  Name: String?

  SharedSegments: Listing<String>?
}

class `AWS::NetworkManager::CustomerGatewayAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkManager::CustomerGatewayAssociationProperties`

  Type: "AWS::NetworkManager::CustomerGatewayAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkManager::CustomerGatewayAssociationProperties` {
  CustomerGatewayArn: String

  DeviceId: String

  GlobalNetworkId: String

  LinkId: String?
}

class `AWS::NetworkManager::Device` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkManager::DeviceProperties`

  Type: "AWS::NetworkManager::Device"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkManager::DeviceProperties` {
  AWSLocation: `AWS::NetworkManager::DeviceAWSLocation`?

  Description: String?

  GlobalNetworkId: String

  Location: `AWS::NetworkManager::SiteLocation`?

  Model: String?

  SerialNumber: String?

  SiteId: String?

  Tags: Listing<Tag>?

  Type: String?

  Vendor: String?
}

class `AWS::NetworkManager::DeviceAWSLocation` {
  SubnetArn: String?

  Zone: String?
}

class `AWS::NetworkManager::SiteLocation` {
  Address: String?

  Latitude: String?

  Longitude: String?
}

class `AWS::NetworkManager::GlobalNetwork` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkManager::GlobalNetworkProperties`?

  Type: "AWS::NetworkManager::GlobalNetwork"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkManager::GlobalNetworkProperties` {
  CreatedAt: String?

  Description: String?

  State: String?

  Tags: Listing<Tag>?
}

class `AWS::NetworkManager::Link` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkManager::LinkProperties`

  Type: "AWS::NetworkManager::Link"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkManager::LinkProperties` {
  Bandwidth: `AWS::NetworkManager::LinkBandwidth`

  Description: String?

  GlobalNetworkId: String

  Provider: String?

  SiteId: String

  Tags: Listing<Tag>?

  Type: String?
}

class `AWS::NetworkManager::LinkBandwidth` {
  DownloadSpeed: Number?

  UploadSpeed: Number?
}

class `AWS::NetworkManager::LinkAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkManager::LinkAssociationProperties`

  Type: "AWS::NetworkManager::LinkAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkManager::LinkAssociationProperties` {
  DeviceId: String

  GlobalNetworkId: String

  LinkId: String
}

class `AWS::NetworkManager::Site` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkManager::SiteProperties`

  Type: "AWS::NetworkManager::Site"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkManager::SiteProperties` {
  Description: String?

  GlobalNetworkId: String

  Location: `AWS::NetworkManager::SiteLocation`?

  Tags: Listing<Tag>?
}

class `AWS::NetworkManager::SiteToSiteVpnAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkManager::SiteToSiteVpnAttachmentProperties`

  Type: "AWS::NetworkManager::SiteToSiteVpnAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkManager::SiteToSiteVpnAttachmentProperties` {
  CoreNetworkId: String

  ProposedSegmentChange: `AWS::NetworkManager::VpcAttachmentProposedSegmentChange`?

  Tags: Listing<Tag>?

  VpnConnectionArn: String
}

class `AWS::NetworkManager::TransitGatewayPeering` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkManager::TransitGatewayPeeringProperties`

  Type: "AWS::NetworkManager::TransitGatewayPeering"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkManager::TransitGatewayPeeringProperties` {
  CoreNetworkId: String

  Tags: Listing<Tag>?

  TransitGatewayArn: String
}

class `AWS::NetworkManager::TransitGatewayRegistration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkManager::TransitGatewayRegistrationProperties`

  Type: "AWS::NetworkManager::TransitGatewayRegistration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkManager::TransitGatewayRegistrationProperties` {
  GlobalNetworkId: String

  TransitGatewayArn: String
}

class `AWS::NetworkManager::TransitGatewayRouteTableAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkManager::TransitGatewayRouteTableAttachmentProperties`

  Type: "AWS::NetworkManager::TransitGatewayRouteTableAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkManager::TransitGatewayRouteTableAttachmentProperties` {
  PeeringId: String

  ProposedSegmentChange: `AWS::NetworkManager::VpcAttachmentProposedSegmentChange`?

  Tags: Listing<Tag>?

  TransitGatewayRouteTableArn: String
}

class `AWS::NetworkManager::VpcAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NetworkManager::VpcAttachmentProperties`

  Type: "AWS::NetworkManager::VpcAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NetworkManager::VpcAttachmentProperties` {
  CoreNetworkId: String

  Options: `AWS::NetworkManager::VpcAttachmentVpcOptions`?

  ProposedSegmentChange: `AWS::NetworkManager::VpcAttachmentProposedSegmentChange`?

  SubnetArns: Listing<String>

  Tags: Listing<Tag>?

  VpcArn: String
}

class `AWS::NetworkManager::VpcAttachmentVpcOptions` {
  ApplianceModeSupport: Boolean?

  Ipv6Support: Boolean?
}

class `AWS::NimbleStudio::LaunchProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NimbleStudio::LaunchProfileProperties`

  Type: "AWS::NimbleStudio::LaunchProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NimbleStudio::LaunchProfileProperties` {
  Description: String?

  Ec2SubnetIds: Listing<String>

  LaunchProfileProtocolVersions: Listing<String>

  Name: String

  StreamConfiguration: `AWS::NimbleStudio::LaunchProfileStreamConfiguration`

  StudioComponentIds: Listing<String>

  StudioId: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::NimbleStudio::LaunchProfileStreamConfiguration` {
  AutomaticTerminationMode: String?

  ClipboardMode: String

  Ec2InstanceTypes: Listing<String>

  MaxSessionLengthInMinutes: Number?

  MaxStoppedSessionLengthInMinutes: Number?

  SessionBackup: `AWS::NimbleStudio::LaunchProfileStreamConfigurationSessionBackup`?

  SessionPersistenceMode: String?

  SessionStorage: `AWS::NimbleStudio::LaunchProfileStreamConfigurationSessionStorage`?

  StreamingImageIds: Listing<String>

  VolumeConfiguration: `AWS::NimbleStudio::LaunchProfileVolumeConfiguration`?
}

class `AWS::NimbleStudio::LaunchProfileStreamConfigurationSessionBackup` {
  MaxBackupsToRetain: Number?

  Mode: String?
}

class `AWS::NimbleStudio::LaunchProfileStreamConfigurationSessionStorage` {
  Mode: Listing<String>

  Root: `AWS::NimbleStudio::LaunchProfileStreamingSessionStorageRoot`?
}

class `AWS::NimbleStudio::LaunchProfileStreamingSessionStorageRoot` {
  Linux: String?

  Windows: String?
}

class `AWS::NimbleStudio::LaunchProfileVolumeConfiguration` {
  Iops: Number?

  Size: Number?

  Throughput: Number?
}

class `AWS::NimbleStudio::StreamingImage` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NimbleStudio::StreamingImageProperties`

  Type: "AWS::NimbleStudio::StreamingImage"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NimbleStudio::StreamingImageProperties` {
  Description: String?

  Ec2ImageId: String

  Name: String

  StudioId: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::NimbleStudio::StudioStudioEncryptionConfiguration` {
  KeyArn: String?

  KeyType: String
}

class `AWS::NimbleStudio::Studio` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NimbleStudio::StudioProperties`

  Type: "AWS::NimbleStudio::Studio"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NimbleStudio::StudioProperties` {
  AdminRoleArn: String

  DisplayName: String

  StudioEncryptionConfiguration: `AWS::NimbleStudio::StudioStudioEncryptionConfiguration`?

  StudioName: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  UserRoleArn: String
}

class `AWS::NimbleStudio::StudioComponent` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::NimbleStudio::StudioComponentProperties`

  Type: "AWS::NimbleStudio::StudioComponent"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::NimbleStudio::StudioComponentProperties` {
  Configuration: `AWS::NimbleStudio::StudioComponentStudioComponentConfiguration`?

  Description: String?

  Ec2SecurityGroupIds: Listing<String>?

  InitializationScripts: Listing<`AWS::NimbleStudio::StudioComponentStudioComponentInitializationScript`>?

  Name: String

  ScriptParameters: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?

  StudioId: String

  Subtype: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Type: String
}

class `AWS::NimbleStudio::StudioComponentActiveDirectoryConfiguration` {
  ComputerAttributes: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  DirectoryId: String?

  OrganizationalUnitDistinguishedName: String?
}

class `AWS::NimbleStudio::StudioComponentComputeFarmConfiguration` {
  ActiveDirectoryUser: String?

  Endpoint: String?
}

class `AWS::NimbleStudio::StudioComponentLicenseServiceConfiguration` {
  Endpoint: String?
}

class `AWS::NimbleStudio::StudioComponentSharedFileSystemConfiguration` {
  Endpoint: String?

  FileSystemId: String?

  LinuxMountPoint: String?

  ShareName: String?

  WindowsMountDrive: String?
}

class `AWS::NimbleStudio::StudioComponentStudioComponentConfiguration` {
  ActiveDirectoryConfiguration: `AWS::NimbleStudio::StudioComponentActiveDirectoryConfiguration`?

  ComputeFarmConfiguration: `AWS::NimbleStudio::StudioComponentComputeFarmConfiguration`?

  LicenseServiceConfiguration: `AWS::NimbleStudio::StudioComponentLicenseServiceConfiguration`?

  SharedFileSystemConfiguration: `AWS::NimbleStudio::StudioComponentSharedFileSystemConfiguration`?
}

class `AWS::NimbleStudio::StudioComponentStudioComponentInitializationScript` {
  LaunchProfileProtocolVersion: String?

  Platform: String?

  RunContext: String?

  Script: String?
}

class `AWS::OSIS::Pipeline` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OSIS::PipelineProperties`

  Type: "AWS::OSIS::Pipeline"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OSIS::PipelineProperties` {
  BufferOptions: `AWS::OSIS::PipelineBufferOptions`?

  EncryptionAtRestOptions: `AWS::OSIS::PipelineEncryptionAtRestOptions`?

  LogPublishingOptions: `AWS::OSIS::PipelineLogPublishingOptions`?

  MaxUnits: Number

  MinUnits: Number

  PipelineConfigurationBody: String

  PipelineName: String

  Tags: Listing<Tag>?

  VpcOptions: `AWS::OSIS::PipelineVpcOptions`?
}

class `AWS::OSIS::PipelineBufferOptions` {
  PersistentBufferEnabled: Boolean
}

class `AWS::OSIS::PipelineEncryptionAtRestOptions` {
  KmsKeyArn: String
}

class `AWS::OSIS::PipelineLogPublishingOptions` {
  CloudWatchLogDestination: `AWS::OSIS::PipelineCloudWatchLogDestination`?

  IsLoggingEnabled: Boolean?
}

class `AWS::OSIS::PipelineVpcEndpoint` {
  VpcEndpointId: String?

  VpcId: String?

  VpcOptions: `AWS::OSIS::PipelineVpcOptions`?
}

class `AWS::Oam::Link` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Oam::LinkProperties`

  Type: "AWS::Oam::Link"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Oam::LinkProperties` {
  LabelTemplate: String?

  ResourceTypes: Listing<String>

  SinkIdentifier: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Oam::Sink` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Oam::SinkProperties`

  Type: "AWS::Oam::Sink"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Oam::SinkProperties` {
  Name: String

  Policy: Dynamic?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Omics::AnnotationStore` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Omics::AnnotationStoreProperties`

  Type: "AWS::Omics::AnnotationStore"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Omics::AnnotationStoreProperties` {
  Description: String?

  Name: String

  Reference: `AWS::Omics::VariantStoreReferenceItem`?

  SseConfig: `AWS::Omics::VariantStoreSseConfig`?

  StoreFormat: String

  StoreOptions: `AWS::Omics::AnnotationStoreStoreOptions`?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Omics::VariantStoreReferenceItem` {
  ReferenceArn: String
}

class `AWS::Omics::VariantStoreSseConfig` {
  KeyArn: String?

  Type: String
}

class `AWS::Omics::AnnotationStoreStoreOptions` {
  TsvStoreOptions: `AWS::Omics::AnnotationStoreTsvStoreOptions`
}

class `AWS::Omics::AnnotationStoreTsvStoreOptions` {
  AnnotationType: String?

  FormatToHeader: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Schema: Dynamic?
}

class `AWS::Omics::ReferenceStore` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Omics::ReferenceStoreProperties`

  Type: "AWS::Omics::ReferenceStore"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Omics::ReferenceStoreProperties` {
  Description: String?

  Name: String

  SseConfig: `AWS::Omics::VariantStoreSseConfig`?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Omics::RunGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Omics::RunGroupProperties`?

  Type: "AWS::Omics::RunGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Omics::RunGroupProperties` {
  MaxCpus: Number?

  MaxDuration: Number?

  MaxGpus: Number?

  MaxRuns: Number?

  Name: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Omics::SequenceStore` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Omics::SequenceStoreProperties`

  Type: "AWS::Omics::SequenceStore"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Omics::SequenceStoreProperties` {
  Description: String?

  FallbackLocation: String?

  Name: String

  SseConfig: `AWS::Omics::VariantStoreSseConfig`?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Omics::VariantStore` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Omics::VariantStoreProperties`

  Type: "AWS::Omics::VariantStore"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Omics::VariantStoreProperties` {
  Description: String?

  Name: String

  Reference: `AWS::Omics::VariantStoreReferenceItem`

  SseConfig: `AWS::Omics::VariantStoreSseConfig`?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Omics::Workflow` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Omics::WorkflowProperties`?

  Type: "AWS::Omics::Workflow"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Omics::WorkflowProperties` {
  Accelerators: String?

  DefinitionUri: String?

  Description: String?

  Engine: String?

  Main: String?

  Name: String?

  ParameterTemplate: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::Omics::WorkflowWorkflowParameter`>?

  StorageCapacity: Number?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::Omics::WorkflowWorkflowParameter` {
  Description: String?

  Optional: Boolean?
}

class `AWS::OpenSearchServerless::AccessPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpenSearchServerless::SecurityPolicyProperties`

  Type: "AWS::OpenSearchServerless::AccessPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpenSearchServerless::SecurityPolicyProperties` {
  Description: String?

  Name: String

  Policy: String

  Type: String
}

class `AWS::OpenSearchServerless::Collection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpenSearchServerless::CollectionProperties`

  Type: "AWS::OpenSearchServerless::Collection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpenSearchServerless::CollectionProperties` {
  Description: String?

  Name: String

  StandbyReplicas: String?

  Tags: Listing<Tag>?

  Type: String?
}

class `AWS::OpenSearchServerless::LifecyclePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpenSearchServerless::SecurityPolicyProperties`

  Type: "AWS::OpenSearchServerless::LifecyclePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpenSearchServerless::SecurityConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpenSearchServerless::SecurityConfigProperties`?

  Type: "AWS::OpenSearchServerless::SecurityConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpenSearchServerless::SecurityConfigProperties` {
  Description: String?

  Name: String?

  SamlOptions: `AWS::OpenSearchServerless::SecurityConfigSamlConfigOptions`?

  Type: String?
}

class `AWS::OpenSearchServerless::SecurityConfigSamlConfigOptions` {
  GroupAttribute: String?

  Metadata: String

  SessionTimeout: Number?

  UserAttribute: String?
}

class `AWS::OpenSearchServerless::SecurityPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpenSearchServerless::SecurityPolicyProperties`

  Type: "AWS::OpenSearchServerless::SecurityPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpenSearchServerless::VpcEndpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpenSearchServerless::VpcEndpointProperties`

  Type: "AWS::OpenSearchServerless::VpcEndpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpenSearchServerless::VpcEndpointProperties` {
  Name: String

  SecurityGroupIds: Listing<String>?

  SubnetIds: Listing<String>

  VpcId: String
}

class `AWS::OpenSearchService::Domain` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpenSearchService::DomainProperties`?

  Type: "AWS::OpenSearchService::Domain"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpenSearchService::DomainProperties` {
  AccessPolicies: Dynamic?

  AdvancedOptions: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  AdvancedSecurityOptions: `AWS::OpenSearchService::DomainAdvancedSecurityOptionsInput`?

  ClusterConfig: `AWS::OpenSearchService::DomainClusterConfig`?

  CognitoOptions: `AWS::OpenSearchService::DomainCognitoOptions`?

  DomainEndpointOptions: `AWS::OpenSearchService::DomainDomainEndpointOptions`?

  DomainName: String?

  EBSOptions: `AWS::OpenSearchService::DomainEBSOptions`?

  EncryptionAtRestOptions: `AWS::OpenSearchService::DomainEncryptionAtRestOptions`?

  EngineVersion: String?

  IPAddressType: String?

  LogPublishingOptions: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::OpenSearchService::DomainLogPublishingOption`>?

  NodeToNodeEncryptionOptions: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  OffPeakWindowOptions: `AWS::OpenSearchService::DomainOffPeakWindowOptions`?

  SnapshotOptions: `AWS::OpenSearchService::DomainSnapshotOptions`?

  SoftwareUpdateOptions: `AWS::OpenSearchService::DomainSoftwareUpdateOptions`?

  Tags: Listing<Tag>?

  VPCOptions: `AWS::OpenSearchService::DomainVPCOptions`?
}

class `AWS::OpenSearchService::DomainAdvancedSecurityOptionsInput` {
  AnonymousAuthDisableDate: String?

  AnonymousAuthEnabled: Boolean?

  Enabled: Boolean?

  InternalUserDatabaseEnabled: Boolean?

  MasterUserOptions: `AWS::OpenSearchService::DomainMasterUserOptions`?

  SAMLOptions: `AWS::OpenSearchService::DomainSAMLOptions`?
}

class `AWS::OpenSearchService::DomainClusterConfig` {
  ColdStorageOptions: `AWS::StepFunctions::StateMachineTracingConfiguration`?

  DedicatedMasterCount: Number?

  DedicatedMasterEnabled: Boolean?

  DedicatedMasterType: String?

  InstanceCount: Number?

  InstanceType: String?

  MultiAZWithStandbyEnabled: Boolean?

  WarmCount: Number?

  WarmEnabled: Boolean?

  WarmType: String?

  ZoneAwarenessConfig: `AWS::OpenSearchService::DomainZoneAwarenessConfig`?

  ZoneAwarenessEnabled: Boolean?
}

class `AWS::OpenSearchService::DomainEBSOptions` {
  EBSEnabled: Boolean?

  Iops: Number?

  Throughput: Number?

  VolumeSize: Number?

  VolumeType: String?
}

class `AWS::OpenSearchService::DomainIdp` {
  EntityId: String

  MetadataContent: String
}

class `AWS::OpenSearchService::DomainOffPeakWindow` {
  WindowStartTime: `AWS::OpenSearchService::DomainWindowStartTime`?
}

class `AWS::OpenSearchService::DomainOffPeakWindowOptions` {
  Enabled: Boolean?

  OffPeakWindow: `AWS::OpenSearchService::DomainOffPeakWindow`?
}

class `AWS::OpenSearchService::DomainSAMLOptions` {
  Enabled: Boolean?

  Idp: `AWS::OpenSearchService::DomainIdp`?

  MasterBackendRole: String?

  MasterUserName: String?

  RolesKey: String?

  SessionTimeoutMinutes: Number?

  SubjectKey: String?
}

class `AWS::OpenSearchService::DomainServiceSoftwareOptions` {
  AutomatedUpdateDate: String?

  Cancellable: Boolean?

  CurrentVersion: String?

  Description: String?

  NewVersion: String?

  OptionalDeployment: Boolean?

  UpdateAvailable: Boolean?

  UpdateStatus: String?
}

class `AWS::OpenSearchService::DomainSoftwareUpdateOptions` {
  AutoSoftwareUpdateEnabled: Boolean?
}

class `AWS::OpsWorks::App` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpsWorks::AppProperties`

  Type: "AWS::OpsWorks::App"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpsWorks::AppProperties` {
  AppSource: `AWS::OpsWorks::StackSource`?

  Attributes: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  DataSources: Listing<`AWS::OpsWorks::AppDataSource`>?

  Description: String?

  Domains: Listing<String>?

  EnableSsl: Boolean?

  Environment: Listing<`AWS::OpsWorks::AppEnvironmentVariable`>?

  Name: String

  Shortname: String?

  SslConfiguration: `AWS::OpsWorks::AppSslConfiguration`?

  StackId: String

  Type: String
}

class `AWS::OpsWorks::AppDataSource` {
  Arn: String?

  DatabaseName: String?

  Type: String?
}

class `AWS::OpsWorks::AppEnvironmentVariable` {
  Key: String

  Secure: Boolean?

  Value: String
}

class `AWS::OpsWorks::StackSource` {
  Password: String?

  Revision: String?

  SshKey: String?

  Type: String?

  Url: String?

  Username: String?
}

class `AWS::OpsWorks::AppSslConfiguration` {
  Certificate: String?

  Chain: String?

  PrivateKey: String?
}

class `AWS::OpsWorks::ElasticLoadBalancerAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpsWorks::ElasticLoadBalancerAttachmentProperties`

  Type: "AWS::OpsWorks::ElasticLoadBalancerAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpsWorks::ElasticLoadBalancerAttachmentProperties` {
  ElasticLoadBalancerName: String

  LayerId: String
}

class `AWS::OpsWorks::Instance` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpsWorks::InstanceProperties`

  Type: "AWS::OpsWorks::Instance"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpsWorks::InstanceProperties` {
  AgentVersion: String?

  AmiId: String?

  Architecture: String?

  AutoScalingType: String?

  AvailabilityZone: String?

  BlockDeviceMappings: Listing<`AWS::OpsWorks::InstanceBlockDeviceMapping`>?

  EbsOptimized: Boolean?

  ElasticIps: Listing<String>?

  Hostname: String?

  InstallUpdatesOnBoot: Boolean?

  InstanceType: String

  LayerIds: Listing<String>

  Os: String?

  RootDeviceType: String?

  SshKeyName: String?

  StackId: String

  SubnetId: String?

  Tenancy: String?

  TimeBasedAutoScaling: `AWS::OpsWorks::InstanceTimeBasedAutoScaling`?

  VirtualizationType: String?

  Volumes: Listing<String>?
}

class `AWS::OpsWorks::InstanceBlockDeviceMapping` {
  DeviceName: String?

  Ebs: `AWS::OpsWorks::InstanceEbsBlockDevice`?

  NoDevice: String?

  VirtualName: String?
}

class `AWS::OpsWorks::InstanceEbsBlockDevice` {
  DeleteOnTermination: Boolean?

  Iops: Number?

  SnapshotId: String?

  VolumeSize: Number?

  VolumeType: String?
}

class `AWS::OpsWorks::InstanceTimeBasedAutoScaling` {
  Friday: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Monday: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Saturday: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Sunday: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Thursday: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Tuesday: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Wednesday: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::OpsWorks::Layer` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpsWorks::LayerProperties`

  Type: "AWS::OpsWorks::Layer"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpsWorks::LayerProperties` {
  Attributes: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  AutoAssignElasticIps: Boolean

  AutoAssignPublicIps: Boolean

  CustomInstanceProfileArn: String?

  CustomJson: Dynamic?

  CustomRecipes: `AWS::OpsWorks::LayerRecipes`?

  CustomSecurityGroupIds: Listing<String>?

  EnableAutoHealing: Boolean

  InstallUpdatesOnBoot: Boolean?

  LifecycleEventConfiguration: `AWS::OpsWorks::LayerLifecycleEventConfiguration`?

  LoadBasedAutoScaling: `AWS::OpsWorks::LayerLoadBasedAutoScaling`?

  Name: String

  Packages: Listing<String>?

  Shortname: String

  StackId: String

  Tags: Listing<Tag>?

  Type: String

  UseEbsOptimizedInstances: Boolean?

  VolumeConfigurations: Listing<`AWS::OpsWorks::LayerVolumeConfiguration`>?
}

class `AWS::OpsWorks::LayerAutoScalingThresholds` {
  CpuThreshold: Number?

  IgnoreMetricsTime: Number?

  InstanceCount: Number?

  LoadThreshold: Number?

  MemoryThreshold: Number?

  ThresholdsWaitTime: Number?
}

class `AWS::OpsWorks::LayerLifecycleEventConfiguration` {
  ShutdownEventConfiguration: `AWS::OpsWorks::LayerShutdownEventConfiguration`?
}

class `AWS::OpsWorks::LayerLoadBasedAutoScaling` {
  DownScaling: `AWS::OpsWorks::LayerAutoScalingThresholds`?

  Enable: Boolean?

  UpScaling: `AWS::OpsWorks::LayerAutoScalingThresholds`?
}

class `AWS::OpsWorks::LayerRecipes` {
  Configure: Listing<String>?

  Deploy: Listing<String>?

  Setup: Listing<String>?

  Shutdown: Listing<String>?

  Undeploy: Listing<String>?
}

class `AWS::OpsWorks::LayerShutdownEventConfiguration` {
  DelayUntilElbConnectionsDrained: Boolean?

  ExecutionTimeout: Number?
}

class `AWS::OpsWorks::LayerVolumeConfiguration` {
  Encrypted: Boolean?

  Iops: Number?

  MountPoint: String?

  NumberOfDisks: Number?

  RaidLevel: Number?

  Size: Number?

  VolumeType: String?
}

class `AWS::OpsWorks::Stack` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpsWorks::StackProperties`

  Type: "AWS::OpsWorks::Stack"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpsWorks::StackProperties` {
  AgentVersion: String?

  Attributes: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ChefConfiguration: `AWS::OpsWorks::StackChefConfiguration`?

  CloneAppIds: Listing<String>?

  ClonePermissions: Boolean?

  ConfigurationManager: `AWS::SSM::DocumentDocumentRequires`?

  CustomCookbooksSource: `AWS::OpsWorks::StackSource`?

  CustomJson: Dynamic?

  DefaultAvailabilityZone: String?

  DefaultInstanceProfileArn: String

  DefaultOs: String?

  DefaultRootDeviceType: String?

  DefaultSshKeyName: String?

  DefaultSubnetId: String?

  EcsClusterArn: String?

  ElasticIps: Listing<`AWS::OpsWorks::StackElasticIp`>?

  HostnameTheme: String?

  Name: String

  RdsDbInstances: Listing<`AWS::OpsWorks::StackRdsDbInstance`>?

  ServiceRoleArn: String

  SourceStackId: String?

  Tags: Listing<Tag>?

  UseCustomCookbooks: Boolean?

  UseOpsworksSecurityGroups: Boolean?

  VpcId: String?
}

class `AWS::OpsWorks::StackChefConfiguration` {
  BerkshelfVersion: String?

  ManageBerkshelf: Boolean?
}

class `AWS::OpsWorks::StackElasticIp` {
  Ip: String

  Name: String?
}

class `AWS::OpsWorks::StackRdsDbInstance` {
  DbPassword: String

  DbUser: String

  RdsDbInstanceArn: String
}

class `AWS::SSM::DocumentDocumentRequires` {
  Name: String?

  Version: String?
}

class `AWS::OpsWorks::UserProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpsWorks::UserProfileProperties`

  Type: "AWS::OpsWorks::UserProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpsWorks::UserProfileProperties` {
  AllowSelfManagement: Boolean?

  IamUserArn: String

  SshPublicKey: String?

  SshUsername: String?
}

class `AWS::OpsWorks::Volume` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpsWorks::VolumeProperties`

  Type: "AWS::OpsWorks::Volume"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpsWorks::VolumeProperties` {
  Ec2VolumeId: String

  MountPoint: String?

  Name: String?

  StackId: String
}

class `AWS::OpsWorksCM::Server` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::OpsWorksCM::ServerProperties`

  Type: "AWS::OpsWorksCM::Server"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::OpsWorksCM::ServerProperties` {
  AssociatePublicIpAddress: Boolean?

  BackupId: String?

  BackupRetentionCount: Number?

  CustomCertificate: String?

  CustomDomain: String?

  CustomPrivateKey: String?

  DisableAutomatedBackup: Boolean?

  Engine: String?

  EngineAttributes: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  EngineModel: String?

  EngineVersion: String?

  InstanceProfileArn: String

  InstanceType: String

  KeyPair: String?

  PreferredBackupWindow: String?

  PreferredMaintenanceWindow: String?

  SecurityGroupIds: Listing<String>?

  ServiceRoleArn: String

  SubnetIds: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::Organizations::Account` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Organizations::AccountProperties`

  Type: "AWS::Organizations::Account"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Organizations::AccountProperties` {
  AccountName: String

  Email: String

  ParentIds: Listing<String>?

  RoleName: String?

  Tags: Listing<Tag>?
}

class `AWS::Organizations::Organization` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Organizations::OrganizationProperties`?

  Type: "AWS::Organizations::Organization"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Organizations::OrganizationProperties` {
  FeatureSet: String?
}

class `AWS::Organizations::OrganizationalUnit` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Organizations::OrganizationalUnitProperties`

  Type: "AWS::Organizations::OrganizationalUnit"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Organizations::OrganizationalUnitProperties` {
  Name: String

  ParentId: String

  Tags: Listing<Tag>?
}

class `AWS::Organizations::Policy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Organizations::PolicyProperties`

  Type: "AWS::Organizations::Policy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Organizations::PolicyProperties` {
  Content: Dynamic

  Description: String?

  Name: String

  Tags: Listing<Tag>?

  TargetIds: Listing<String>?

  Type: String
}

class `AWS::Organizations::ResourcePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Organizations::ResourcePolicyProperties`

  Type: "AWS::Organizations::ResourcePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Organizations::ResourcePolicyProperties` {
  Content: Dynamic

  Tags: Listing<Tag>?
}

class `AWS::PCAConnectorAD::Connector` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::PCAConnectorAD::ConnectorProperties`

  Type: "AWS::PCAConnectorAD::Connector"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::PCAConnectorAD::ConnectorProperties` {
  CertificateAuthorityArn: String

  DirectoryId: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  VpcInformation: `AWS::PCAConnectorAD::ConnectorVpcInformation`
}

class `AWS::PCAConnectorAD::ConnectorVpcInformation` {
  SecurityGroupIds: Listing<String>
}

class `AWS::PCAConnectorAD::DirectoryRegistration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::PCAConnectorAD::DirectoryRegistrationProperties`

  Type: "AWS::PCAConnectorAD::DirectoryRegistration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::PCAConnectorAD::DirectoryRegistrationProperties` {
  DirectoryId: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::PCAConnectorAD::ServicePrincipalName` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::PCAConnectorAD::ServicePrincipalNameProperties`?

  Type: "AWS::PCAConnectorAD::ServicePrincipalName"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::PCAConnectorAD::ServicePrincipalNameProperties` {
  ConnectorArn: String?

  DirectoryRegistrationArn: String?
}

class `AWS::PCAConnectorAD::Template` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::PCAConnectorAD::TemplateProperties`

  Type: "AWS::PCAConnectorAD::Template"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::PCAConnectorAD::TemplateProperties` {
  ConnectorArn: String

  Definition: `AWS::PCAConnectorAD::TemplateTemplateDefinition`

  Name: String

  ReenrollAllCertificateHolders: Boolean?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::PCAConnectorAD::TemplateApplicationPolicies` {
  Critical: Boolean?

  Policies: Listing<`AWS::PCAConnectorAD::TemplateApplicationPolicy`>
}

class `AWS::PCAConnectorAD::TemplateApplicationPolicy` {
  PolicyObjectIdentifier: String?

  PolicyType: String?
}

class `AWS::PCAConnectorAD::TemplateCertificateValidity` {
  RenewalPeriod: `AWS::PCAConnectorAD::TemplateValidityPeriod`

  ValidityPeriod: `AWS::PCAConnectorAD::TemplateValidityPeriod`
}

class `AWS::PCAConnectorAD::TemplateEnrollmentFlagsV4` {
  EnableKeyReuseOnNtTokenKeysetStorageFull: Boolean?

  IncludeSymmetricAlgorithms: Boolean?

  NoSecurityExtension: Boolean?

  RemoveInvalidCertificateFromPersonalStore: Boolean?

  UserInteractionRequired: Boolean?
}

class `AWS::PCAConnectorAD::TemplateExtensionsV4` {
  ApplicationPolicies: `AWS::PCAConnectorAD::TemplateApplicationPolicies`?

  KeyUsage: `AWS::PCAConnectorAD::TemplateKeyUsage`
}

class `AWS::PCAConnectorAD::TemplateGeneralFlagsV4` {
  AutoEnrollment: Boolean?

  MachineType: Boolean?
}

class `AWS::PCAConnectorAD::TemplateKeyUsage` {
  Critical: Boolean?

  UsageFlags: `AWS::PCAConnectorAD::TemplateKeyUsageFlags`
}

class `AWS::PCAConnectorAD::TemplateKeyUsageFlags` {
  DataEncipherment: Boolean?

  DigitalSignature: Boolean?

  KeyAgreement: Boolean?

  KeyEncipherment: Boolean?

  NonRepudiation: Boolean?
}

class `AWS::PCAConnectorAD::TemplateKeyUsageProperty` {
  PropertyFlags: `AWS::PCAConnectorAD::TemplateKeyUsagePropertyFlags`?

  PropertyType: String?
}

class `AWS::PCAConnectorAD::TemplateKeyUsagePropertyFlags` {
  Decrypt: Boolean?

  KeyAgreement: Boolean?

  Sign: Boolean?
}

class `AWS::PCAConnectorAD::TemplatePrivateKeyAttributesV2` {
  CryptoProviders: Listing<String>?

  KeySpec: String

  MinimalKeyLength: Number
}

class `AWS::PCAConnectorAD::TemplatePrivateKeyAttributesV3` {
  Algorithm: String

  CryptoProviders: Listing<String>?

  KeySpec: String

  KeyUsageProperty: `AWS::PCAConnectorAD::TemplateKeyUsageProperty`

  MinimalKeyLength: Number
}

class `AWS::PCAConnectorAD::TemplatePrivateKeyAttributesV4` {
  Algorithm: String?

  CryptoProviders: Listing<String>?

  KeySpec: String

  KeyUsageProperty: `AWS::PCAConnectorAD::TemplateKeyUsageProperty`?

  MinimalKeyLength: Number
}

class `AWS::PCAConnectorAD::TemplatePrivateKeyFlagsV2` {
  ClientVersion: String

  ExportableKey: Boolean?

  StrongKeyProtectionRequired: Boolean?
}

class `AWS::PCAConnectorAD::TemplatePrivateKeyFlagsV3` {
  ClientVersion: String

  ExportableKey: Boolean?

  RequireAlternateSignatureAlgorithm: Boolean?

  StrongKeyProtectionRequired: Boolean?
}

class `AWS::PCAConnectorAD::TemplatePrivateKeyFlagsV4` {
  ClientVersion: String

  ExportableKey: Boolean?

  RequireAlternateSignatureAlgorithm: Boolean?

  RequireSameKeyRenewal: Boolean?

  StrongKeyProtectionRequired: Boolean?

  UseLegacyProvider: Boolean?
}

class `AWS::PCAConnectorAD::TemplateSubjectNameFlagsV4` {
  RequireCommonName: Boolean?

  RequireDirectoryPath: Boolean?

  RequireDnsAsCn: Boolean?

  RequireEmail: Boolean?

  SanRequireDirectoryGuid: Boolean?

  SanRequireDns: Boolean?

  SanRequireDomainDns: Boolean?

  SanRequireEmail: Boolean?

  SanRequireSpn: Boolean?

  SanRequireUpn: Boolean?
}

class `AWS::PCAConnectorAD::TemplateTemplateDefinition` {
  TemplateV2: `AWS::PCAConnectorAD::TemplateTemplateV2`?

  TemplateV3: `AWS::PCAConnectorAD::TemplateTemplateV3`?

  TemplateV4: `AWS::PCAConnectorAD::TemplateTemplateV4`?
}

class `AWS::PCAConnectorAD::TemplateTemplateV2` {
  CertificateValidity: `AWS::PCAConnectorAD::TemplateCertificateValidity`

  EnrollmentFlags: `AWS::PCAConnectorAD::TemplateEnrollmentFlagsV4`

  Extensions: `AWS::PCAConnectorAD::TemplateExtensionsV4`

  GeneralFlags: `AWS::PCAConnectorAD::TemplateGeneralFlagsV4`

  PrivateKeyAttributes: `AWS::PCAConnectorAD::TemplatePrivateKeyAttributesV2`

  PrivateKeyFlags: `AWS::PCAConnectorAD::TemplatePrivateKeyFlagsV2`

  SubjectNameFlags: `AWS::PCAConnectorAD::TemplateSubjectNameFlagsV4`

  SupersededTemplates: Listing<String>?
}

class `AWS::PCAConnectorAD::TemplateTemplateV3` {
  CertificateValidity: `AWS::PCAConnectorAD::TemplateCertificateValidity`

  EnrollmentFlags: `AWS::PCAConnectorAD::TemplateEnrollmentFlagsV4`

  Extensions: `AWS::PCAConnectorAD::TemplateExtensionsV4`

  GeneralFlags: `AWS::PCAConnectorAD::TemplateGeneralFlagsV4`

  HashAlgorithm: String

  PrivateKeyAttributes: `AWS::PCAConnectorAD::TemplatePrivateKeyAttributesV3`

  PrivateKeyFlags: `AWS::PCAConnectorAD::TemplatePrivateKeyFlagsV3`

  SubjectNameFlags: `AWS::PCAConnectorAD::TemplateSubjectNameFlagsV4`

  SupersededTemplates: Listing<String>?
}

class `AWS::PCAConnectorAD::TemplateTemplateV4` {
  CertificateValidity: `AWS::PCAConnectorAD::TemplateCertificateValidity`

  EnrollmentFlags: `AWS::PCAConnectorAD::TemplateEnrollmentFlagsV4`

  Extensions: `AWS::PCAConnectorAD::TemplateExtensionsV4`

  GeneralFlags: `AWS::PCAConnectorAD::TemplateGeneralFlagsV4`

  HashAlgorithm: String?

  PrivateKeyAttributes: `AWS::PCAConnectorAD::TemplatePrivateKeyAttributesV4`

  PrivateKeyFlags: `AWS::PCAConnectorAD::TemplatePrivateKeyFlagsV4`

  SubjectNameFlags: `AWS::PCAConnectorAD::TemplateSubjectNameFlagsV4`

  SupersededTemplates: Listing<String>?
}

class `AWS::PCAConnectorAD::TemplateValidityPeriod` {
  Period: Number

  PeriodType: String
}

class `AWS::PCAConnectorAD::TemplateGroupAccessControlEntry` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::PCAConnectorAD::TemplateGroupAccessControlEntryProperties`

  Type: "AWS::PCAConnectorAD::TemplateGroupAccessControlEntry"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::PCAConnectorAD::TemplateGroupAccessControlEntryProperties` {
  AccessRights: `AWS::PCAConnectorAD::TemplateGroupAccessControlEntryAccessRights`

  GroupDisplayName: String

  GroupSecurityIdentifier: String?

  TemplateArn: String?
}

class `AWS::PCAConnectorAD::TemplateGroupAccessControlEntryAccessRights` {
  AutoEnroll: String?

  Enroll: String?
}

class `AWS::Panorama::ApplicationInstance` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Panorama::ApplicationInstanceProperties`

  Type: "AWS::Panorama::ApplicationInstance"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Panorama::ApplicationInstanceProperties` {
  ApplicationInstanceIdToReplace: String?

  DefaultRuntimeContextDevice: String

  Description: String?

  ManifestOverridesPayload: `AWS::Panorama::ApplicationInstanceManifestPayload`?

  ManifestPayload: `AWS::Panorama::ApplicationInstanceManifestPayload`

  Name: String?

  RuntimeRoleArn: String?

  Tags: Listing<Tag>?
}

class `AWS::Panorama::ApplicationInstanceManifestPayload` {
  PayloadData: String?
}

class `AWS::Panorama::Package` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Panorama::PackageProperties`

  Type: "AWS::Panorama::Package"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Panorama::PackageProperties` {
  PackageName: String

  StorageLocation: `AWS::Panorama::PackageStorageLocation`?

  Tags: Listing<Tag>?
}

class `AWS::Panorama::PackageStorageLocation` {
  BinaryPrefixLocation: String?

  Bucket: String?

  GeneratedPrefixLocation: String?

  ManifestPrefixLocation: String?

  RepoPrefixLocation: String?
}

class `AWS::Panorama::PackageVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Panorama::PackageVersionProperties`

  Type: "AWS::Panorama::PackageVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Panorama::PackageVersionProperties` {
  MarkLatest: Boolean?

  OwnerAccount: String?

  PackageId: String

  PackageVersion: String

  PatchVersion: String

  UpdatedLatestPatchVersion: String?
}

class `AWS::Personalize::Dataset` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Personalize::DatasetProperties`

  Type: "AWS::Personalize::Dataset"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Personalize::DatasetProperties` {
  DatasetGroupArn: String

  DatasetImportJob: `AWS::Personalize::DatasetDatasetImportJob`?

  DatasetType: String

  Name: String

  SchemaArn: String
}

class `AWS::Personalize::DatasetDataSource` {
  DataLocation: String?
}

class `AWS::Personalize::DatasetDatasetImportJob` {
  DataSource: `AWS::Personalize::DatasetDataSource`?

  DatasetArn: String?

  DatasetImportJobArn: String?

  JobName: String?

  RoleArn: String?
}

class `AWS::Personalize::DatasetGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Personalize::DatasetGroupProperties`

  Type: "AWS::Personalize::DatasetGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Personalize::DatasetGroupProperties` {
  Domain: String?

  KmsKeyArn: String?

  Name: String

  RoleArn: String?
}

class `AWS::Personalize::Schema` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Personalize::SchemaProperties`

  Type: "AWS::Personalize::Schema"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Personalize::SchemaProperties` {
  Domain: String?

  Name: String

  Schema: String
}

class `AWS::Personalize::Solution` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Personalize::SolutionProperties`

  Type: "AWS::Personalize::Solution"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Personalize::SolutionProperties` {
  DatasetGroupArn: String

  EventType: String?

  Name: String

  PerformAutoML: Boolean?

  PerformHPO: Boolean?

  RecipeArn: String?

  SolutionConfig: `AWS::Personalize::SolutionSolutionConfig`?
}

class `AWS::Personalize::SolutionAlgorithmHyperParameterRanges` {
  CategoricalHyperParameterRanges: Listing<`AWS::ResourceGroups::GroupConfigurationParameter`>?

  ContinuousHyperParameterRanges: Listing<`AWS::Personalize::SolutionIntegerHyperParameterRange`>?

  IntegerHyperParameterRanges: Listing<`AWS::Personalize::SolutionIntegerHyperParameterRange`>?
}

class `AWS::Personalize::SolutionAutoMLConfig` {
  MetricName: String?

  RecipeList: Listing<String>?
}

class `AWS::ResourceGroups::GroupConfigurationParameter` {
  Name: String?

  Values: Listing<String>?
}

class `AWS::Personalize::SolutionIntegerHyperParameterRange` {
  MaxValue: Number?

  MinValue: Number?

  Name: String?
}

class `AWS::Personalize::SolutionHpoConfig` {
  AlgorithmHyperParameterRanges: `AWS::Personalize::SolutionAlgorithmHyperParameterRanges`?

  HpoObjective: `AWS::Personalize::SolutionHpoObjective`?

  HpoResourceConfig: `AWS::Personalize::SolutionHpoResourceConfig`?
}

class `AWS::Personalize::SolutionHpoObjective` {
  MetricName: String?

  MetricRegex: String?

  Type: String?
}

class `AWS::Personalize::SolutionHpoResourceConfig` {
  MaxNumberOfTrainingJobs: String?

  MaxParallelTrainingJobs: String?
}

class `AWS::Personalize::SolutionSolutionConfig` {
  AlgorithmHyperParameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  AutoMLConfig: `AWS::Personalize::SolutionAutoMLConfig`?

  EventValueThreshold: String?

  FeatureTransformationParameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  HpoConfig: `AWS::Personalize::SolutionHpoConfig`?
}

class `AWS::Pinpoint::ADMChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::ADMChannelProperties`

  Type: "AWS::Pinpoint::ADMChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::ADMChannelProperties` {
  ApplicationId: String

  ClientId: String

  ClientSecret: String

  Enabled: Boolean?
}

class `AWS::Pinpoint::APNSChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::APNSVoipSandboxChannelProperties`

  Type: "AWS::Pinpoint::APNSChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::APNSVoipSandboxChannelProperties` {
  ApplicationId: String

  BundleId: String?

  Certificate: String?

  DefaultAuthenticationMethod: String?

  Enabled: Boolean?

  PrivateKey: String?

  TeamId: String?

  TokenKey: String?

  TokenKeyId: String?
}

class `AWS::Pinpoint::APNSSandboxChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::APNSVoipSandboxChannelProperties`

  Type: "AWS::Pinpoint::APNSSandboxChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::APNSVoipChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::APNSVoipSandboxChannelProperties`

  Type: "AWS::Pinpoint::APNSVoipChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::APNSVoipSandboxChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::APNSVoipSandboxChannelProperties`

  Type: "AWS::Pinpoint::APNSVoipSandboxChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::App` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::AppProperties`

  Type: "AWS::Pinpoint::App"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::AppProperties` {
  Name: String

  Tags: Dynamic?
}

class `AWS::Pinpoint::ApplicationSettings` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::ApplicationSettingsProperties`

  Type: "AWS::Pinpoint::ApplicationSettings"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::ApplicationSettingsProperties` {
  ApplicationId: String

  CampaignHook: `AWS::Pinpoint::CampaignCampaignHook`?

  CloudWatchMetricsEnabled: Boolean?

  Limits: `AWS::Pinpoint::ApplicationSettingsLimits`?

  QuietTime: `AWS::Pinpoint::CampaignQuietTime`?
}

class `AWS::Pinpoint::CampaignCampaignHook` {
  LambdaFunctionName: String?

  Mode: String?

  WebUrl: String?
}

class `AWS::Pinpoint::ApplicationSettingsLimits` {
  Daily: Number?

  MaximumDuration: Number?

  MessagesPerSecond: Number?

  Total: Number?
}

class `AWS::Pinpoint::CampaignQuietTime` {
  End: String

  Start: String
}

class `AWS::Pinpoint::BaiduChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::BaiduChannelProperties`

  Type: "AWS::Pinpoint::BaiduChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::BaiduChannelProperties` {
  ApiKey: String

  ApplicationId: String

  Enabled: Boolean?

  SecretKey: String
}

class `AWS::Pinpoint::Campaign` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::CampaignProperties`

  Type: "AWS::Pinpoint::Campaign"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::CampaignProperties` {
  AdditionalTreatments: Listing<`AWS::Pinpoint::CampaignWriteTreatmentResource`>?

  ApplicationId: String

  CampaignHook: `AWS::Pinpoint::CampaignCampaignHook`?

  CustomDeliveryConfiguration: `AWS::Pinpoint::CampaignCustomDeliveryConfiguration`?

  Description: String?

  HoldoutPercent: Number?

  IsPaused: Boolean?

  Limits: `AWS::Pinpoint::CampaignLimits`?

  MessageConfiguration: `AWS::Pinpoint::CampaignMessageConfiguration`?

  Name: String

  Priority: Number?

  Schedule: `AWS::Pinpoint::CampaignSchedule`

  SegmentId: String

  SegmentVersion: Number?

  Tags: Dynamic?

  TemplateConfiguration: `AWS::Pinpoint::CampaignTemplateConfiguration`?

  TreatmentDescription: String?

  TreatmentName: String?
}

class `AWS::Pinpoint::SegmentAttributeDimension` {
  AttributeType: String?

  Values: Listing<String>?
}

class `AWS::Pinpoint::CampaignCampaignCustomMessage` {
  Data: String?
}

class `AWS::Pinpoint::CampaignCampaignEmailMessage` {
  Body: String?

  FromAddress: String?

  HtmlBody: String?

  Title: String?
}

class `AWS::Pinpoint::CampaignCampaignEventFilter` {
  Dimensions: `AWS::Pinpoint::CampaignEventDimensions`?

  FilterType: String?
}

class `AWS::Pinpoint::CampaignCampaignInAppMessage` {
  Content: Listing<`AWS::Pinpoint::CampaignInAppMessageContent`>?

  CustomConfig: Dynamic?

  Layout: String?
}

class `AWS::Pinpoint::CampaignCampaignSmsMessage` {
  Body: String?

  EntityId: String?

  MessageType: String?

  OriginationNumber: String?

  SenderId: String?

  TemplateId: String?
}

class `AWS::Pinpoint::CampaignCustomDeliveryConfiguration` {
  DeliveryUri: String?

  EndpointTypes: Listing<String>?
}

class `AWS::Pinpoint::InAppTemplateDefaultButtonConfiguration` {
  BackgroundColor: String?

  BorderRadius: Number?

  ButtonAction: String?

  Link: String?

  Text: String?

  TextColor: String?
}

class `AWS::Pinpoint::CampaignEventDimensions` {
  Attributes: Dynamic?

  EventType: `AWS::Pinpoint::SegmentSetDimension`?

  Metrics: Dynamic?
}

class `AWS::Pinpoint::InAppTemplateBodyConfig` {
  Alignment: String?

  Body: String?

  TextColor: String?
}

class `AWS::Pinpoint::CampaignInAppMessageButton` {
  Android: `AWS::Pinpoint::InAppTemplateOverrideButtonConfiguration`?

  DefaultConfig: `AWS::Pinpoint::InAppTemplateDefaultButtonConfiguration`?

  IOS: `AWS::Pinpoint::InAppTemplateOverrideButtonConfiguration`?

  Web: `AWS::Pinpoint::InAppTemplateOverrideButtonConfiguration`?
}

class `AWS::Pinpoint::CampaignInAppMessageContent` {
  BackgroundColor: String?

  BodyConfig: `AWS::Pinpoint::InAppTemplateBodyConfig`?

  HeaderConfig: `AWS::Pinpoint::InAppTemplateHeaderConfig`?

  ImageUrl: String?

  PrimaryBtn: `AWS::Pinpoint::CampaignInAppMessageButton`?

  SecondaryBtn: `AWS::Pinpoint::CampaignInAppMessageButton`?
}

class `AWS::Pinpoint::InAppTemplateHeaderConfig` {
  Alignment: String?

  Header: String?

  TextColor: String?
}

class `AWS::Pinpoint::CampaignLimits` {
  Daily: Number?

  MaximumDuration: Number?

  MessagesPerSecond: Number?

  Session: Number?

  Total: Number?
}

class `AWS::Pinpoint::CampaignMessage` {
  Action: String?

  Body: String?

  ImageIconUrl: String?

  ImageSmallIconUrl: String?

  ImageUrl: String?

  JsonBody: String?

  MediaUrl: String?

  RawContent: String?

  SilentPush: Boolean?

  TimeToLive: Number?

  Title: String?

  Url: String?
}

class `AWS::Pinpoint::CampaignMessageConfiguration` {
  ADMMessage: `AWS::Pinpoint::CampaignMessage`?

  APNSMessage: `AWS::Pinpoint::CampaignMessage`?

  BaiduMessage: `AWS::Pinpoint::CampaignMessage`?

  CustomMessage: `AWS::Pinpoint::CampaignCampaignCustomMessage`?

  DefaultMessage: `AWS::Pinpoint::CampaignMessage`?

  EmailMessage: `AWS::Pinpoint::CampaignCampaignEmailMessage`?

  GCMMessage: `AWS::Pinpoint::CampaignMessage`?

  InAppMessage: `AWS::Pinpoint::CampaignCampaignInAppMessage`?

  SMSMessage: `AWS::Pinpoint::CampaignCampaignSmsMessage`?
}

class `AWS::Pinpoint::CampaignMetricDimension` {
  ComparisonOperator: String?

  Value: Number?
}

class `AWS::Pinpoint::InAppTemplateOverrideButtonConfiguration` {
  ButtonAction: String?

  Link: String?
}

class `AWS::Pinpoint::CampaignSchedule` {
  EndTime: String?

  EventFilter: `AWS::Pinpoint::CampaignCampaignEventFilter`?

  Frequency: String?

  IsLocalTime: Boolean?

  QuietTime: `AWS::Pinpoint::CampaignQuietTime`?

  StartTime: String?

  TimeZone: String?
}

class `AWS::Pinpoint::SegmentSetDimension` {
  DimensionType: String?

  Values: Listing<String>?
}

class `AWS::Pinpoint::CampaignTemplateConfiguration` {
  EmailTemplate: `AWS::SSM::DocumentDocumentRequires`?

  PushTemplate: `AWS::SSM::DocumentDocumentRequires`?

  SMSTemplate: `AWS::SSM::DocumentDocumentRequires`?

  VoiceTemplate: `AWS::SSM::DocumentDocumentRequires`?
}

class `AWS::Pinpoint::CampaignWriteTreatmentResource` {
  CustomDeliveryConfiguration: `AWS::Pinpoint::CampaignCustomDeliveryConfiguration`?

  MessageConfiguration: `AWS::Pinpoint::CampaignMessageConfiguration`?

  Schedule: `AWS::Pinpoint::CampaignSchedule`?

  SizePercent: Number?

  TemplateConfiguration: `AWS::Pinpoint::CampaignTemplateConfiguration`?

  TreatmentDescription: String?

  TreatmentName: String?
}

class `AWS::Pinpoint::EmailChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::EmailChannelProperties`

  Type: "AWS::Pinpoint::EmailChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::EmailChannelProperties` {
  ApplicationId: String

  ConfigurationSet: String?

  Enabled: Boolean?

  FromAddress: String

  Identity: String

  RoleArn: String?
}

class `AWS::Pinpoint::EmailTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::EmailTemplateProperties`

  Type: "AWS::Pinpoint::EmailTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::EmailTemplateProperties` {
  DefaultSubstitutions: String?

  HtmlPart: String?

  Subject: String

  Tags: Dynamic?

  TemplateDescription: String?

  TemplateName: String

  TextPart: String?
}

class `AWS::Pinpoint::EventStream` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::EventStreamProperties`

  Type: "AWS::Pinpoint::EventStream"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::EventStreamProperties` {
  ApplicationId: String

  DestinationStreamArn: String

  RoleArn: String
}

class `AWS::Pinpoint::GCMChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::GCMChannelProperties`

  Type: "AWS::Pinpoint::GCMChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::GCMChannelProperties` {
  ApiKey: String?

  ApplicationId: String

  DefaultAuthenticationMethod: String?

  Enabled: Boolean?

  ServiceJson: String?
}

class `AWS::Pinpoint::InAppTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::InAppTemplateProperties`

  Type: "AWS::Pinpoint::InAppTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::InAppTemplateProperties` {
  Content: Listing<`AWS::Pinpoint::InAppTemplateInAppMessageContent`>?

  CustomConfig: Dynamic?

  Layout: String?

  Tags: Dynamic?

  TemplateDescription: String?

  TemplateName: String
}

class `AWS::Pinpoint::InAppTemplateButtonConfig` {
  Android: `AWS::Pinpoint::InAppTemplateOverrideButtonConfiguration`?

  DefaultConfig: `AWS::Pinpoint::InAppTemplateDefaultButtonConfiguration`?

  IOS: `AWS::Pinpoint::InAppTemplateOverrideButtonConfiguration`?

  Web: `AWS::Pinpoint::InAppTemplateOverrideButtonConfiguration`?
}

class `AWS::Pinpoint::InAppTemplateInAppMessageContent` {
  BackgroundColor: String?

  BodyConfig: `AWS::Pinpoint::InAppTemplateBodyConfig`?

  HeaderConfig: `AWS::Pinpoint::InAppTemplateHeaderConfig`?

  ImageUrl: String?

  PrimaryBtn: `AWS::Pinpoint::InAppTemplateButtonConfig`?

  SecondaryBtn: `AWS::Pinpoint::InAppTemplateButtonConfig`?
}

class `AWS::Pinpoint::PushTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::PushTemplateProperties`

  Type: "AWS::Pinpoint::PushTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::PushTemplateProperties` {
  ADM: `AWS::Pinpoint::PushTemplateAndroidPushNotificationTemplate`?

  APNS: `AWS::Pinpoint::PushTemplateAPNSPushNotificationTemplate`?

  Baidu: `AWS::Pinpoint::PushTemplateAndroidPushNotificationTemplate`?

  Default: `AWS::Pinpoint::PushTemplateDefaultPushNotificationTemplate`?

  DefaultSubstitutions: String?

  GCM: `AWS::Pinpoint::PushTemplateAndroidPushNotificationTemplate`?

  Tags: Dynamic?

  TemplateDescription: String?

  TemplateName: String
}

class `AWS::Pinpoint::PushTemplateAPNSPushNotificationTemplate` {
  Action: String?

  Body: String?

  MediaUrl: String?

  Sound: String?

  Title: String?

  Url: String?
}

class `AWS::Pinpoint::PushTemplateAndroidPushNotificationTemplate` {
  Action: String?

  Body: String?

  ImageIconUrl: String?

  ImageUrl: String?

  SmallImageIconUrl: String?

  Sound: String?

  Title: String?

  Url: String?
}

class `AWS::Pinpoint::PushTemplateDefaultPushNotificationTemplate` {
  Action: String?

  Body: String?

  Sound: String?

  Title: String?

  Url: String?
}

class `AWS::Pinpoint::SMSChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::SMSChannelProperties`

  Type: "AWS::Pinpoint::SMSChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::SMSChannelProperties` {
  ApplicationId: String

  Enabled: Boolean?

  SenderId: String?

  ShortCode: String?
}

class `AWS::Pinpoint::Segment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::SegmentProperties`

  Type: "AWS::Pinpoint::Segment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::SegmentProperties` {
  ApplicationId: String

  Dimensions: `AWS::Pinpoint::SegmentSegmentDimensions`?

  Name: String

  SegmentGroups: `AWS::Pinpoint::SegmentSegmentGroups`?

  Tags: Dynamic?
}

class `AWS::Pinpoint::SegmentBehavior` {
  Recency: `AWS::Pinpoint::SegmentRecency`?
}

class `AWS::Pinpoint::SegmentCoordinates` {
  Latitude: Number

  Longitude: Number
}

class `AWS::Pinpoint::SegmentDemographic` {
  AppVersion: `AWS::Pinpoint::SegmentSetDimension`?

  Channel: `AWS::Pinpoint::SegmentSetDimension`?

  DeviceType: `AWS::Pinpoint::SegmentSetDimension`?

  Make: `AWS::Pinpoint::SegmentSetDimension`?

  Model: `AWS::Pinpoint::SegmentSetDimension`?

  Platform: `AWS::Pinpoint::SegmentSetDimension`?
}

class `AWS::Pinpoint::SegmentGPSPoint` {
  Coordinates: `AWS::Pinpoint::SegmentCoordinates`

  RangeInKilometers: Number
}

class `AWS::Pinpoint::SegmentGroups` {
  Dimensions: Listing<`AWS::Pinpoint::SegmentSegmentDimensions`>?

  SourceSegments: Listing<`AWS::Pinpoint::SegmentSourceSegments`>?

  SourceType: String?

  Type: String?
}

class `AWS::Pinpoint::SegmentLocation` {
  Country: `AWS::Pinpoint::SegmentSetDimension`?

  GPSPoint: `AWS::Pinpoint::SegmentGPSPoint`?
}

class `AWS::Pinpoint::SegmentRecency` {
  Duration: String

  RecencyType: String
}

class `AWS::Pinpoint::SegmentSegmentDimensions` {
  Attributes: Dynamic?

  Behavior: `AWS::Pinpoint::SegmentBehavior`?

  Demographic: `AWS::Pinpoint::SegmentDemographic`?

  Location: `AWS::Pinpoint::SegmentLocation`?

  Metrics: Dynamic?

  UserAttributes: Dynamic?
}

class `AWS::Pinpoint::SegmentSegmentGroups` {
  Groups: Listing<`AWS::Pinpoint::SegmentGroups`>?

  Include: String?
}

class `AWS::Pinpoint::SegmentSourceSegments` {
  Id: String

  Version: Number?
}

class `AWS::Pinpoint::SmsTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::SmsTemplateProperties`

  Type: "AWS::Pinpoint::SmsTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::SmsTemplateProperties` {
  Body: String

  DefaultSubstitutions: String?

  Tags: Dynamic?

  TemplateDescription: String?

  TemplateName: String
}

class `AWS::Pinpoint::VoiceChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pinpoint::VoiceChannelProperties`

  Type: "AWS::Pinpoint::VoiceChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pinpoint::VoiceChannelProperties` {
  ApplicationId: String

  Enabled: Boolean?
}

class `AWS::PinpointEmail::ConfigurationSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::PinpointEmail::ConfigurationSetProperties`

  Type: "AWS::PinpointEmail::ConfigurationSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::PinpointEmail::ConfigurationSetProperties` {
  DeliveryOptions: `AWS::PinpointEmail::ConfigurationSetDeliveryOptions`?

  Name: String

  ReputationOptions: `AWS::SES::ConfigurationSetReputationOptions`?

  SendingOptions: `AWS::SES::ConfigurationSetSendingOptions`?

  Tags: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?

  TrackingOptions: `AWS::SES::ConfigurationSetTrackingOptions`?
}

class `AWS::PinpointEmail::ConfigurationSetDeliveryOptions` {
  SendingPoolName: String?
}

class `AWS::SES::ConfigurationSetReputationOptions` {
  ReputationMetricsEnabled: Boolean?
}

class `AWS::SES::ConfigurationSetSendingOptions` {
  SendingEnabled: Boolean?
}

class `AWS::SES::ConfigurationSetTrackingOptions` {
  CustomRedirectDomain: String?
}

class `AWS::PinpointEmail::ConfigurationSetEventDestination` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::PinpointEmail::ConfigurationSetEventDestinationProperties`

  Type: "AWS::PinpointEmail::ConfigurationSetEventDestination"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::PinpointEmail::ConfigurationSetEventDestinationProperties` {
  ConfigurationSetName: String

  EventDestination: `AWS::PinpointEmail::ConfigurationSetEventDestinationEventDestination`?

  EventDestinationName: String
}

class `AWS::PinpointEmail::ConfigurationSetEventDestinationCloudWatchDestination` {
  DimensionConfigurations: Listing<`AWS::SES::ConfigurationSetEventDestinationDimensionConfiguration`>?
}

class `AWS::SES::ConfigurationSetEventDestinationDimensionConfiguration` {
  DefaultDimensionValue: String

  DimensionName: String

  DimensionValueSource: String
}

class `AWS::PinpointEmail::ConfigurationSetEventDestinationEventDestination` {
  CloudWatchDestination: `AWS::PinpointEmail::ConfigurationSetEventDestinationCloudWatchDestination`?

  Enabled: Boolean?

  KinesisFirehoseDestination: `AWS::PinpointEmail::ConfigurationSetEventDestinationKinesisFirehoseDestination`?

  MatchingEventTypes: Listing<String>

  PinpointDestination: `AWS::PinpointEmail::ConfigurationSetEventDestinationPinpointDestination`?

  SnsDestination: `AWS::Timestream::ScheduledQuerySnsConfiguration`?
}

class `AWS::PinpointEmail::ConfigurationSetEventDestinationKinesisFirehoseDestination` {
  DeliveryStreamArn: String

  IamRoleArn: String
}

class `AWS::PinpointEmail::ConfigurationSetEventDestinationPinpointDestination` {
  ApplicationArn: String?
}

class `AWS::PinpointEmail::DedicatedIpPool` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::PinpointEmail::DedicatedIpPoolProperties`?

  Type: "AWS::PinpointEmail::DedicatedIpPool"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::PinpointEmail::DedicatedIpPoolProperties` {
  PoolName: String?

  Tags: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?
}

class `AWS::PinpointEmail::Identity` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::PinpointEmail::IdentityProperties`

  Type: "AWS::PinpointEmail::Identity"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::PinpointEmail::IdentityProperties` {
  DkimSigningEnabled: Boolean?

  FeedbackForwardingEnabled: Boolean?

  MailFromAttributes: `AWS::SES::EmailIdentityMailFromAttributes`?

  Name: String

  Tags: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?
}

class `AWS::SES::EmailIdentityMailFromAttributes` {
  BehaviorOnMxFailure: String?

  MailFromDomain: String?
}

class `AWS::Pipes::Pipe` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Pipes::PipeProperties`

  Type: "AWS::Pipes::Pipe"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Pipes::PipeProperties` {
  Description: String?

  DesiredState: String?

  Enrichment: String?

  EnrichmentParameters: `AWS::Pipes::PipePipeEnrichmentParameters`?

  LogConfiguration: `AWS::Pipes::PipePipeLogConfiguration`?

  Name: String?

  RoleArn: String

  Source: String

  SourceParameters: `AWS::Pipes::PipePipeSourceParameters`?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Target: String

  TargetParameters: `AWS::Pipes::PipePipeTargetParameters`?
}

class `AWS::Pipes::PipeBatchContainerOverrides` {
  Command: Listing<String>?

  Environment: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  InstanceType: String?

  ResourceRequirements: Listing<`AWS::WAFRegional::IPSetIPSetDescriptor`>?
}

class `AWS::Pipes::PipeBatchJobDependency` {
  JobId: String?

  Type: String?
}

class `AWS::Pipes::PipeEcsContainerOverride` {
  Command: Listing<String>?

  Cpu: Number?

  Environment: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  EnvironmentFiles: Listing<`AWS::WAFRegional::IPSetIPSetDescriptor`>?

  Memory: Number?

  MemoryReservation: Number?

  Name: String?

  ResourceRequirements: Listing<`AWS::WAFRegional::IPSetIPSetDescriptor`>?
}

class `AWS::Pipes::PipeEcsTaskOverride` {
  ContainerOverrides: Listing<`AWS::Pipes::PipeEcsContainerOverride`>?

  Cpu: String?

  EphemeralStorage: `AWS::Pipes::PipeEcsEphemeralStorage`?

  ExecutionRoleArn: String?

  InferenceAcceleratorOverrides: Listing<`AWS::Pipes::PipeEcsInferenceAcceleratorOverride`>?

  Memory: String?

  TaskRoleArn: String?
}

class `AWS::Pipes::PipeFilterCriteria` {
  Filters: Listing<`AWS::Pipes::PipeFilter`>?
}

class `AWS::Pipes::PipeFirehoseLogDestination` {
  DeliveryStreamArn: String?
}

class `AWS::Pipes::PipeMQBrokerAccessCredentials` {
  BasicAuth: String
}

class `AWS::Pipes::PipeMSKAccessCredentials` {
  ClientCertificateTlsAuth: String?

  SaslScram512Auth: String?
}

class `AWS::Pipes::PipeNetworkConfiguration` {
  AwsvpcConfiguration: `AWS::Scheduler::ScheduleAwsVpcConfiguration`?
}

class `AWS::Pipes::PipePipeEnrichmentParameters` {
  HttpParameters: `AWS::Pipes::PipePipeTargetHttpParameters`?

  InputTemplate: String?
}

class `AWS::Pipes::PipePipeLogConfiguration` {
  CloudwatchLogsLogDestination: `AWS::StepFunctions::StateMachineCloudWatchLogsLogGroup`?

  FirehoseLogDestination: `AWS::Pipes::PipeFirehoseLogDestination`?

  IncludeExecutionData: Listing<String>?

  Level: String?

  S3LogDestination: `AWS::Pipes::PipeS3LogDestination`?
}

class `AWS::Pipes::PipePipeSourceActiveMQBrokerParameters` {
  BatchSize: Number?

  Credentials: `AWS::Pipes::PipeMQBrokerAccessCredentials`

  MaximumBatchingWindowInSeconds: Number?

  QueueName: String
}

class `AWS::Pipes::PipePipeSourceDynamoDBStreamParameters` {
  BatchSize: Number?

  DeadLetterConfig: `AWS::Scheduler::ScheduleDeadLetterConfig`?

  MaximumBatchingWindowInSeconds: Number?

  MaximumRecordAgeInSeconds: Number?

  MaximumRetryAttempts: Number?

  OnPartialBatchItemFailure: String?

  ParallelizationFactor: Number?

  StartingPosition: String
}

class `AWS::Pipes::PipePipeSourceKinesisStreamParameters` {
  BatchSize: Number?

  DeadLetterConfig: `AWS::Scheduler::ScheduleDeadLetterConfig`?

  MaximumBatchingWindowInSeconds: Number?

  MaximumRecordAgeInSeconds: Number?

  MaximumRetryAttempts: Number?

  OnPartialBatchItemFailure: String?

  ParallelizationFactor: Number?

  StartingPosition: String

  StartingPositionTimestamp: String?
}

class `AWS::Pipes::PipePipeSourceManagedStreamingKafkaParameters` {
  BatchSize: Number?

  ConsumerGroupID: String?

  Credentials: `AWS::Pipes::PipeMSKAccessCredentials`?

  MaximumBatchingWindowInSeconds: Number?

  StartingPosition: String?

  TopicName: String
}

class `AWS::Pipes::PipePipeSourceParameters` {
  ActiveMQBrokerParameters: `AWS::Pipes::PipePipeSourceActiveMQBrokerParameters`?

  DynamoDBStreamParameters: `AWS::Pipes::PipePipeSourceDynamoDBStreamParameters`?

  FilterCriteria: `AWS::Pipes::PipeFilterCriteria`?

  KinesisStreamParameters: `AWS::Pipes::PipePipeSourceKinesisStreamParameters`?

  ManagedStreamingKafkaParameters: `AWS::Pipes::PipePipeSourceManagedStreamingKafkaParameters`?

  RabbitMQBrokerParameters: `AWS::Pipes::PipePipeSourceRabbitMQBrokerParameters`?

  SelfManagedKafkaParameters: `AWS::Pipes::PipePipeSourceSelfManagedKafkaParameters`?

  SqsQueueParameters: `AWS::Pipes::PipePipeSourceSqsQueueParameters`?
}

class `AWS::Pipes::PipePipeSourceRabbitMQBrokerParameters` {
  BatchSize: Number?

  Credentials: `AWS::Pipes::PipeMQBrokerAccessCredentials`

  MaximumBatchingWindowInSeconds: Number?

  QueueName: String

  VirtualHost: String?
}

class `AWS::Pipes::PipePipeSourceSelfManagedKafkaParameters` {
  AdditionalBootstrapServers: Listing<String>?

  BatchSize: Number?

  ConsumerGroupID: String?

  Credentials: `AWS::Pipes::PipeSelfManagedKafkaAccessConfigurationCredentials`?

  MaximumBatchingWindowInSeconds: Number?

  ServerRootCaCertificate: String?

  StartingPosition: String?

  TopicName: String

  Vpc: `AWS::Pipes::PipeSelfManagedKafkaAccessConfigurationVpc`?
}

class `AWS::Pipes::PipePipeSourceSqsQueueParameters` {
  BatchSize: Number?

  MaximumBatchingWindowInSeconds: Number?
}

class `AWS::Pipes::PipePipeTargetBatchJobParameters` {
  ArrayProperties: `AWS::Pipes::PipeBatchArrayProperties`?

  ContainerOverrides: `AWS::Pipes::PipeBatchContainerOverrides`?

  DependsOn: Listing<`AWS::Pipes::PipeBatchJobDependency`>?

  JobDefinition: String

  JobName: String

  Parameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  RetryStrategy: `AWS::Pipes::PipeBatchRetryStrategy`?
}

class `AWS::Pipes::PipePipeTargetCloudWatchLogsParameters` {
  LogStreamName: String?

  Timestamp: String?
}

class `AWS::Pipes::PipePipeTargetEcsTaskParameters` {
  CapacityProviderStrategy: Listing<`AWS::Scheduler::ScheduleCapacityProviderStrategyItem`>?

  EnableECSManagedTags: Boolean?

  EnableExecuteCommand: Boolean?

  Group: String?

  LaunchType: String?

  NetworkConfiguration: `AWS::Pipes::PipeNetworkConfiguration`?

  Overrides: `AWS::Pipes::PipeEcsTaskOverride`?

  PlacementConstraints: Listing<`AWS::Scheduler::SchedulePlacementConstraint`>?

  PlacementStrategy: Listing<`AWS::Scheduler::SchedulePlacementStrategy`>?

  PlatformVersion: String?

  PropagateTags: String?

  ReferenceId: String?

  Tags: Listing<Tag>?

  TaskCount: Number?

  TaskDefinitionArn: String
}

class `AWS::Pipes::PipePipeTargetEventBridgeEventBusParameters` {
  DetailType: String?

  EndpointId: String?

  Resources: Listing<String>?

  Source: String?

  Time: String?
}

class `AWS::Scheduler::ScheduleKinesisParameters` {
  PartitionKey: String
}

class `AWS::Pipes::PipePipeTargetStateMachineParameters` {
  InvocationType: String?
}

class `AWS::Pipes::PipePipeTargetParameters` {
  BatchJobParameters: `AWS::Pipes::PipePipeTargetBatchJobParameters`?

  CloudWatchLogsParameters: `AWS::Pipes::PipePipeTargetCloudWatchLogsParameters`?

  EcsTaskParameters: `AWS::Pipes::PipePipeTargetEcsTaskParameters`?

  EventBridgeEventBusParameters: `AWS::Pipes::PipePipeTargetEventBridgeEventBusParameters`?

  HttpParameters: `AWS::Pipes::PipePipeTargetHttpParameters`?

  InputTemplate: String?

  KinesisStreamParameters: `AWS::Scheduler::ScheduleKinesisParameters`?

  LambdaFunctionParameters: `AWS::Pipes::PipePipeTargetStateMachineParameters`?

  RedshiftDataParameters: `AWS::Pipes::PipePipeTargetRedshiftDataParameters`?

  SageMakerPipelineParameters: `AWS::Pipes::PipePipeTargetSageMakerPipelineParameters`?

  SqsQueueParameters: `AWS::Pipes::PipePipeTargetSqsQueueParameters`?

  StepFunctionStateMachineParameters: `AWS::Pipes::PipePipeTargetStateMachineParameters`?
}

class `AWS::Pipes::PipePipeTargetRedshiftDataParameters` {
  Database: String

  DbUser: String?

  SecretManagerArn: String?

  Sqls: Listing<String>

  StatementName: String?

  WithEvent: Boolean?
}

class `AWS::Pipes::PipePipeTargetSageMakerPipelineParameters` {
  PipelineParameterList: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?
}

class `AWS::Pipes::PipePipeTargetSqsQueueParameters` {
  MessageDeduplicationId: String?

  MessageGroupId: String?
}

class `AWS::Pipes::PipeS3LogDestination` {
  BucketName: String?

  BucketOwner: String?

  OutputFormat: String?

  Prefix: String?
}

class `AWS::Pipes::PipeSelfManagedKafkaAccessConfigurationCredentials` {
  BasicAuth: String?

  ClientCertificateTlsAuth: String?

  SaslScram256Auth: String?

  SaslScram512Auth: String?
}

class `AWS::Pipes::PipeSelfManagedKafkaAccessConfigurationVpc` {
  SecurityGroup: Listing<String>?

  Subnets: Listing<String>?
}

class `AWS::Proton::EnvironmentAccountConnection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Proton::EnvironmentAccountConnectionProperties`?

  Type: "AWS::Proton::EnvironmentAccountConnection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Proton::EnvironmentAccountConnectionProperties` {
  CodebuildRoleArn: String?

  ComponentRoleArn: String?

  EnvironmentAccountId: String?

  EnvironmentName: String?

  ManagementAccountId: String?

  RoleArn: String?

  Tags: Listing<Tag>?
}

class `AWS::Proton::EnvironmentTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Proton::EnvironmentTemplateProperties`?

  Type: "AWS::Proton::EnvironmentTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Proton::EnvironmentTemplateProperties` {
  Description: String?

  DisplayName: String?

  EncryptionKey: String?

  Name: String?

  Provisioning: String?

  Tags: Listing<Tag>?
}

class `AWS::Proton::ServiceTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Proton::ServiceTemplateProperties`?

  Type: "AWS::Proton::ServiceTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Proton::ServiceTemplateProperties` {
  Description: String?

  DisplayName: String?

  EncryptionKey: String?

  Name: String?

  PipelineProvisioning: String?

  Tags: Listing<Tag>?
}

class `AWS::QLDB::Ledger` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::QLDB::LedgerProperties`

  Type: "AWS::QLDB::Ledger"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::QLDB::LedgerProperties` {
  DeletionProtection: Boolean?

  KmsKey: String?

  Name: String?

  PermissionsMode: String

  Tags: Listing<Tag>?
}

class `AWS::QLDB::Stream` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::QLDB::StreamProperties`

  Type: "AWS::QLDB::Stream"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::QLDB::StreamProperties` {
  ExclusiveEndTime: String?

  InclusiveStartTime: String

  KinesisConfiguration: `AWS::QLDB::StreamKinesisConfiguration`

  LedgerName: String

  RoleArn: String

  StreamName: String

  Tags: Listing<Tag>?
}

class `AWS::QLDB::StreamKinesisConfiguration` {
  AggregationEnabled: Boolean?

  StreamArn: String?
}

class `AWS::QuickSight::Analysis` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::QuickSight::AnalysisProperties`

  Type: "AWS::QuickSight::Analysis"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::QuickSight::AnalysisProperties` {
  AnalysisId: String

  AwsAccountId: String

  Definition: `AWS::QuickSight::AnalysisAnalysisDefinition`?

  Errors: Listing<`AWS::QuickSight::AnalysisAnalysisError`>?

  Name: String

  Parameters: `AWS::QuickSight::AnalysisParameters`?

  Permissions: Listing<`AWS::QuickSight::ThemeResourcePermission`>?

  Sheets: Listing<`AWS::QuickSight::TemplateSheet`>?

  SourceEntity: `AWS::QuickSight::AnalysisAnalysisSourceEntity`?

  Status: String?

  Tags: Listing<Tag>?

  ThemeArn: String?

  ValidationStrategy: `AWS::VerifiedPermissions::PolicyStoreValidationSettings`?
}

class `AWS::QuickSight::AnalysisAggregationFunction` {
  AttributeAggregationFunction: `AWS::QuickSight::TemplateAttributeAggregationFunction`?

  CategoricalAggregationFunction: String?

  DateAggregationFunction: String?

  NumericalAggregationFunction: `AWS::QuickSight::AnalysisNumericalAggregationFunction`?
}

class `AWS::QuickSight::AnalysisAggregationSortConfiguration` {
  AggregationFunction: `AWS::QuickSight::AnalysisAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  SortDirection: String
}

class `AWS::QuickSight::AnalysisAnalysisDefaults` {
  DefaultNewSheetConfiguration: `AWS::QuickSight::AnalysisDefaultNewSheetConfiguration`
}

class `AWS::QuickSight::AnalysisAnalysisDefinition` {
  AnalysisDefaults: `AWS::QuickSight::AnalysisAnalysisDefaults`?

  CalculatedFields: Listing<`AWS::QuickSight::TemplateCalculatedField`>?

  ColumnConfigurations: Listing<`AWS::QuickSight::AnalysisColumnConfiguration`>?

  DataSetIdentifierDeclarations: Listing<`AWS::QuickSight::DashboardDataSetIdentifierDeclaration`>

  FilterGroups: Listing<`AWS::QuickSight::AnalysisFilterGroup`>?

  Options: `AWS::QuickSight::TemplateAssetOptions`?

  ParameterDeclarations: Listing<`AWS::QuickSight::AnalysisParameterDeclaration`>?

  Sheets: Listing<`AWS::QuickSight::AnalysisSheetDefinition`>?
}

class `AWS::QuickSight::AnalysisAnalysisError` {
  Message: String?

  Type: String?

  ViolatedEntities: Listing<`AWS::QuickSight::TemplateEntity`>?
}

class `AWS::QuickSight::AnalysisAnalysisSourceEntity` {
  SourceTemplate: `AWS::QuickSight::AnalysisAnalysisSourceTemplate`?
}

class `AWS::QuickSight::AnalysisAnalysisSourceTemplate` {
  Arn: String

  DataSetReferences: Listing<`AWS::QuickSight::TemplateDataSetReference`>
}

class `AWS::QuickSight::TemplateAnchorDateConfiguration` {
  AnchorOption: String?

  ParameterName: String?
}

class `AWS::QuickSight::AnalysisArcAxisConfiguration` {
  Range: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  ReserveRange: Number?
}

class `AWS::QuickSight::TemplateArcConfiguration` {
  ArcAngle: Number?

  ArcThickness: String?
}

class `AWS::QuickSight::TemplateArcOptions` {
  ArcThickness: String?
}

class `AWS::QuickSight::TemplateAssetOptions` {
  Timezone: String?

  WeekStart: String?
}

class `AWS::QuickSight::TemplateAttributeAggregationFunction` {
  SimpleAttributeAggregation: String?

  ValueForMultipleValues: String?
}

class `AWS::QuickSight::AnalysisAxisDataOptions` {
  DateAxisOptions: `AWS::QuickSight::TemplateDateAxisOptions`?

  NumericAxisOptions: `AWS::QuickSight::AnalysisNumericAxisOptions`?
}

class `AWS::QuickSight::AnalysisAxisDisplayOptions` {
  AxisLineVisibility: String?

  AxisOffset: String?

  DataOptions: `AWS::QuickSight::AnalysisAxisDataOptions`?

  GridLineVisibility: String?

  ScrollbarOptions: `AWS::QuickSight::AnalysisScrollBarOptions`?

  TickLabelOptions: `AWS::QuickSight::AnalysisAxisTickLabelOptions`?
}

class `AWS::QuickSight::AnalysisAxisDisplayRange` {
  DataDriven: Dynamic?

  MinMax: `AWS::QuickSight::TemplateAxisDisplayMinMaxRange`?
}

class `AWS::QuickSight::AnalysisAxisLabelOptions` {
  ApplyTo: `AWS::QuickSight::AnalysisAxisLabelReferenceOptions`?

  CustomLabel: String?

  FontConfiguration: `AWS::QuickSight::AnalysisFontConfiguration`?
}

class `AWS::QuickSight::AnalysisAxisLabelReferenceOptions` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String
}

class `AWS::QuickSight::TemplateAxisLinearScale` {
  StepCount: Number?

  StepSize: Number?
}

class `AWS::QuickSight::TemplateAxisLogarithmicScale` {
  Base: Number?
}

class `AWS::QuickSight::AnalysisAxisScale` {
  Linear: `AWS::QuickSight::TemplateAxisLinearScale`?

  Logarithmic: `AWS::QuickSight::TemplateAxisLogarithmicScale`?
}

class `AWS::QuickSight::AnalysisAxisTickLabelOptions` {
  LabelOptions: `AWS::QuickSight::AnalysisLabelOptions`?

  RotationAngle: Number?
}

class `AWS::QuickSight::AnalysisLineChartAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Colors: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  SmallMultiples: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Values: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisBarChartConfiguration` {
  BarsArrangement: String?

  CategoryAxis: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  CategoryLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  ColorLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  ContributionAnalysisDefaults: Listing<`AWS::QuickSight::AnalysisContributionAnalysisDefault`>?

  DataLabels: `AWS::QuickSight::AnalysisDataLabelOptions`?

  FieldWells: `AWS::QuickSight::AnalysisBarChartFieldWells`?

  Legend: `AWS::QuickSight::AnalysisLegendOptions`?

  Orientation: String?

  ReferenceLines: Listing<`AWS::QuickSight::AnalysisReferenceLine`>?

  SmallMultiplesOptions: `AWS::QuickSight::AnalysisSmallMultiplesOptions`?

  SortConfiguration: `AWS::QuickSight::AnalysisBarChartSortConfiguration`?

  Tooltip: `AWS::QuickSight::AnalysisTooltipOptions`?

  ValueAxis: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  ValueLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  VisualPalette: `AWS::QuickSight::AnalysisVisualPalette`?
}

class `AWS::QuickSight::AnalysisBarChartFieldWells` {
  BarChartAggregatedFieldWells: `AWS::QuickSight::AnalysisLineChartAggregatedFieldWells`?
}

class `AWS::QuickSight::AnalysisBarChartSortConfiguration` {
  CategoryItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?

  ColorItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  ColorSort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?

  SmallMultiplesLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SmallMultiplesSort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?
}

class `AWS::QuickSight::AnalysisBarChartVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisBarChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateBinCountOptions` {
  Value: Number?
}

class `AWS::QuickSight::TemplateBinWidthOptions` {
  BinCountLimit: Number?

  Value: Number?
}

class `AWS::QuickSight::AnalysisBodySectionConfiguration` {
  Content: `AWS::QuickSight::AnalysisBodySectionContent`

  PageBreakConfiguration: `AWS::QuickSight::AnalysisSectionPageBreakConfiguration`?

  SectionId: String

  Style: `AWS::QuickSight::AnalysisSectionStyle`?
}

class `AWS::QuickSight::AnalysisBodySectionContent` {
  Layout: `AWS::QuickSight::AnalysisSectionLayoutConfiguration`?
}

class `AWS::QuickSight::AnalysisTableAggregatedFieldWells` {
  GroupBy: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Values: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisBoxPlotChartConfiguration` {
  BoxPlotOptions: `AWS::QuickSight::AnalysisBoxPlotOptions`?

  CategoryAxis: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  CategoryLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  FieldWells: `AWS::QuickSight::AnalysisBoxPlotFieldWells`?

  Legend: `AWS::QuickSight::AnalysisLegendOptions`?

  PrimaryYAxisDisplayOptions: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  PrimaryYAxisLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  ReferenceLines: Listing<`AWS::QuickSight::AnalysisReferenceLine`>?

  SortConfiguration: `AWS::QuickSight::AnalysisBoxPlotSortConfiguration`?

  Tooltip: `AWS::QuickSight::AnalysisTooltipOptions`?

  VisualPalette: `AWS::QuickSight::AnalysisVisualPalette`?
}

class `AWS::QuickSight::AnalysisBoxPlotFieldWells` {
  BoxPlotAggregatedFieldWells: `AWS::QuickSight::AnalysisTableAggregatedFieldWells`?
}

class `AWS::QuickSight::AnalysisBoxPlotOptions` {
  AllDataPointsVisibility: String?

  OutlierVisibility: String?

  StyleOptions: `AWS::QuickSight::TemplateBoxPlotStyleOptions`?
}

class `AWS::QuickSight::AnalysisBoxPlotSortConfiguration` {
  CategorySort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?

  PaginationConfiguration: `AWS::QuickSight::TemplatePaginationConfiguration`?
}

class `AWS::QuickSight::TemplateBoxPlotStyleOptions` {
  FillStyle: String?
}

class `AWS::QuickSight::AnalysisBoxPlotVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisBoxPlotChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateCalculatedField` {
  DataSetIdentifier: String

  Expression: String

  Name: String
}

class `AWS::QuickSight::TemplateCalculatedMeasureField` {
  Expression: String

  FieldId: String
}

class `AWS::QuickSight::AnalysisCascadingControlConfiguration` {
  SourceControls: Listing<`AWS::QuickSight::AnalysisCascadingControlSource`>?
}

class `AWS::QuickSight::AnalysisCascadingControlSource` {
  ColumnToMatch: `AWS::QuickSight::TemplateColumnIdentifier`?

  SourceSheetControlId: String?
}

class `AWS::QuickSight::AnalysisCategoricalDimensionField` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::AnalysisStringFormatConfiguration`?

  HierarchyId: String?
}

class `AWS::QuickSight::AnalysisCategoricalMeasureField` {
  AggregationFunction: String?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::AnalysisStringFormatConfiguration`?
}

class `AWS::QuickSight::AnalysisCategoryDrillDownFilter` {
  CategoryValues: Listing<String>

  Column: `AWS::QuickSight::TemplateColumnIdentifier`
}

class `AWS::QuickSight::AnalysisCategoryFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  Configuration: `AWS::QuickSight::AnalysisCategoryFilterConfiguration`

  FilterId: String
}

class `AWS::QuickSight::AnalysisCategoryFilterConfiguration` {
  CustomFilterConfiguration: `AWS::QuickSight::TemplateCustomFilterConfiguration`?

  CustomFilterListConfiguration: `AWS::QuickSight::TemplateCustomFilterListConfiguration`?

  FilterListConfiguration: `AWS::QuickSight::TemplateFilterListConfiguration`?
}

class `AWS::QuickSight::AnalysisChartAxisLabelOptions` {
  AxisLabelOptions: Listing<`AWS::QuickSight::AnalysisAxisLabelOptions`>?

  SortIconVisibility: String?

  Visibility: String?
}

class `AWS::QuickSight::AnalysisClusterMarker` {
  SimpleClusterMarker: `AWS::QuickSight::TemplateSimpleClusterMarker`?
}

class `AWS::QuickSight::AnalysisClusterMarkerConfiguration` {
  ClusterMarker: `AWS::QuickSight::AnalysisClusterMarker`?
}

class `AWS::QuickSight::AnalysisColorScale` {
  ColorFillType: String

  Colors: Listing<`AWS::QuickSight::TemplateDataColor`>

  NullValueColor: `AWS::QuickSight::TemplateDataColor`?
}

class `AWS::QuickSight::AnalysisColorsConfiguration` {
  CustomColors: Listing<`AWS::QuickSight::TemplateCustomColor`>?
}

class `AWS::QuickSight::AnalysisColumnConfiguration` {
  ColorsConfiguration: `AWS::QuickSight::AnalysisColorsConfiguration`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FormatConfiguration: `AWS::QuickSight::AnalysisFormatConfiguration`?

  Role: String?
}

class `AWS::QuickSight::AnalysisColumnHierarchy` {
  DateTimeHierarchy: `AWS::QuickSight::AnalysisDateTimeHierarchy`?

  ExplicitHierarchy: `AWS::QuickSight::AnalysisPredefinedHierarchy`?

  PredefinedHierarchy: `AWS::QuickSight::AnalysisPredefinedHierarchy`?
}

class `AWS::QuickSight::TemplateColumnIdentifier` {
  ColumnName: String

  DataSetIdentifier: String
}

class `AWS::QuickSight::AnalysisColumnSort` {
  AggregationFunction: `AWS::QuickSight::AnalysisAggregationFunction`?

  Direction: String

  SortBy: `AWS::QuickSight::TemplateColumnIdentifier`
}

class `AWS::QuickSight::AnalysisColumnTooltipItem` {
  Aggregation: `AWS::QuickSight::AnalysisAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  Label: String?

  Visibility: String?
}

class `AWS::QuickSight::AnalysisComboChartAggregatedFieldWells` {
  BarValues: Listing<`AWS::QuickSight::AnalysisMeasureField`>?

  Category: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Colors: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  LineValues: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisComboChartConfiguration` {
  BarDataLabels: `AWS::QuickSight::AnalysisDataLabelOptions`?

  BarsArrangement: String?

  CategoryAxis: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  CategoryLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  ColorLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  FieldWells: `AWS::QuickSight::AnalysisComboChartFieldWells`?

  Legend: `AWS::QuickSight::AnalysisLegendOptions`?

  LineDataLabels: `AWS::QuickSight::AnalysisDataLabelOptions`?

  PrimaryYAxisDisplayOptions: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  PrimaryYAxisLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  ReferenceLines: Listing<`AWS::QuickSight::AnalysisReferenceLine`>?

  SecondaryYAxisDisplayOptions: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  SecondaryYAxisLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  SortConfiguration: `AWS::QuickSight::AnalysisRadarChartSortConfiguration`?

  Tooltip: `AWS::QuickSight::AnalysisTooltipOptions`?

  VisualPalette: `AWS::QuickSight::AnalysisVisualPalette`?
}

class `AWS::QuickSight::AnalysisComboChartFieldWells` {
  ComboChartAggregatedFieldWells: `AWS::QuickSight::AnalysisComboChartAggregatedFieldWells`?
}

class `AWS::QuickSight::AnalysisRadarChartSortConfiguration` {
  CategoryItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?

  ColorItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  ColorSort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?
}

class `AWS::QuickSight::AnalysisComboChartVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisComboChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisComparisonConfiguration` {
  ComparisonFormat: `AWS::QuickSight::AnalysisComparisonFormatConfiguration`?

  ComparisonMethod: String?
}

class `AWS::QuickSight::AnalysisComparisonFormatConfiguration` {
  NumberDisplayFormatConfiguration: `AWS::QuickSight::AnalysisNumberDisplayFormatConfiguration`?

  PercentageDisplayFormatConfiguration: `AWS::QuickSight::AnalysisPercentageDisplayFormatConfiguration`?
}

class `AWS::QuickSight::AnalysisComputation` {
  Forecast: `AWS::QuickSight::AnalysisForecastComputation`?

  GrowthRate: `AWS::QuickSight::AnalysisGrowthRateComputation`?

  MaximumMinimum: `AWS::QuickSight::AnalysisMaximumMinimumComputation`?

  MetricComparison: `AWS::QuickSight::AnalysisMetricComparisonComputation`?

  PeriodOverPeriod: `AWS::QuickSight::AnalysisPeriodOverPeriodComputation`?

  PeriodToDate: `AWS::QuickSight::AnalysisPeriodToDateComputation`?

  TopBottomMovers: `AWS::QuickSight::AnalysisTopBottomMoversComputation`?

  TopBottomRanked: `AWS::QuickSight::AnalysisTopBottomRankedComputation`?

  TotalAggregation: `AWS::QuickSight::AnalysisTotalAggregationComputation`?

  UniqueValues: `AWS::QuickSight::AnalysisUniqueValuesComputation`?
}

class `AWS::QuickSight::AnalysisConditionalFormattingColor` {
  Gradient: `AWS::QuickSight::AnalysisConditionalFormattingGradientColor`?

  Solid: `AWS::QuickSight::TemplateConditionalFormattingSolidColor`?
}

class `AWS::QuickSight::AnalysisConditionalFormattingCustomIconCondition` {
  Color: String?

  DisplayConfiguration: `AWS::QuickSight::TemplateConditionalFormattingIconDisplayConfiguration`?

  Expression: String

  IconOptions: `AWS::QuickSight::TemplateConditionalFormattingCustomIconOptions`
}

class `AWS::QuickSight::TemplateConditionalFormattingCustomIconOptions` {
  Icon: String?

  UnicodeIcon: String?
}

class `AWS::QuickSight::AnalysisConditionalFormattingGradientColor` {
  Color: `AWS::QuickSight::AnalysisGradientColor`

  Expression: String
}

class `AWS::QuickSight::AnalysisConditionalFormattingIcon` {
  CustomCondition: `AWS::QuickSight::AnalysisConditionalFormattingCustomIconCondition`?

  IconSet: `AWS::QuickSight::TemplateConditionalFormattingIconSet`?
}

class `AWS::QuickSight::TemplateConditionalFormattingIconDisplayConfiguration` {
  IconDisplayOption: String?
}

class `AWS::QuickSight::TemplateConditionalFormattingIconSet` {
  Expression: String

  IconSetType: String?
}

class `AWS::QuickSight::TemplateConditionalFormattingSolidColor` {
  Color: String?

  Expression: String
}

class `AWS::QuickSight::AnalysisContributionAnalysisDefault` {
  ContributorDimensions: Listing<`AWS::QuickSight::TemplateColumnIdentifier`>

  MeasureFieldId: String
}

class `AWS::QuickSight::AnalysisCurrencyDisplayFormatConfiguration` {
  DecimalPlacesConfiguration: `AWS::QuickSight::TemplateDecimalPlacesConfiguration`?

  NegativeValueConfiguration: `AWS::QuickSight::TemplateNegativeValueConfiguration`?

  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  NumberScale: String?

  Prefix: String?

  SeparatorConfiguration: `AWS::QuickSight::AnalysisNumericSeparatorConfiguration`?

  Suffix: String?

  Symbol: String?
}

class `AWS::QuickSight::AnalysisCustomActionFilterOperation` {
  SelectedFieldsConfiguration: `AWS::QuickSight::AnalysisFilterOperationSelectedFieldsConfiguration`

  TargetVisualsConfiguration: `AWS::QuickSight::AnalysisFilterOperationTargetVisualsConfiguration`
}

class `AWS::QuickSight::AnalysisCustomActionNavigationOperation` {
  LocalNavigationConfiguration: `AWS::QuickSight::TemplateLocalNavigationConfiguration`?
}

class `AWS::QuickSight::AnalysisCustomActionSetParametersOperation` {
  ParameterValueConfigurations: Listing<`AWS::QuickSight::AnalysisSetParameterValueConfiguration`>
}

class `AWS::QuickSight::TemplateCustomActionURLOperation` {
  URLTarget: String

  URLTemplate: String
}

class `AWS::QuickSight::TemplateCustomColor` {
  Color: String

  FieldValue: String?

  SpecialValue: String?
}

class `AWS::QuickSight::TemplateCustomContentConfiguration` {
  ContentType: String?

  ContentUrl: String?

  ImageScaling: String?
}

class `AWS::QuickSight::AnalysisCustomContentVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateCustomContentConfiguration`?

  DataSetIdentifier: String

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateCustomFilterConfiguration` {
  CategoryValue: String?

  MatchOperator: String

  NullOption: String

  ParameterName: String?

  SelectAllOptions: String?
}

class `AWS::QuickSight::TemplateCustomFilterListConfiguration` {
  CategoryValues: Listing<String>?

  MatchOperator: String

  NullOption: String

  SelectAllOptions: String?
}

class `AWS::QuickSight::TemplateCustomNarrativeOptions` {
  Narrative: String
}

class `AWS::QuickSight::TemplateCustomParameterValues` {
  DateTimeValues: Listing<String>?

  DecimalValues: Listing<Number>?

  IntegerValues: Listing<Number>?

  StringValues: Listing<String>?
}

class `AWS::QuickSight::AnalysisCustomValuesConfiguration` {
  CustomValues: `AWS::QuickSight::TemplateCustomParameterValues`

  IncludeNullValue: Boolean?
}

class `AWS::QuickSight::TemplateDataBarsOptions` {
  FieldId: String

  NegativeColor: String?

  PositiveColor: String?
}

class `AWS::QuickSight::TemplateDataColor` {
  Color: String?

  DataValue: Number?
}

class `AWS::QuickSight::AnalysisDataFieldSeriesItem` {
  AxisBinding: String

  FieldId: String

  FieldValue: String?

  Settings: `AWS::QuickSight::AnalysisLineChartSeriesSettings`?
}

class `AWS::QuickSight::AnalysisDataLabelOptions` {
  CategoryLabelVisibility: String?

  DataLabelTypes: Listing<`AWS::QuickSight::AnalysisDataLabelType`>?

  LabelColor: String?

  LabelContent: String?

  LabelFontConfiguration: `AWS::QuickSight::AnalysisFontConfiguration`?

  MeasureLabelVisibility: String?

  Overlap: String?

  Position: String?

  TotalsVisibility: String?

  Visibility: String?
}

class `AWS::QuickSight::AnalysisDataLabelType` {
  DataPathLabelType: `AWS::QuickSight::TemplateDataPathLabelType`?

  FieldLabelType: `AWS::QuickSight::TemplateFieldLabelType`?

  MaximumLabelType: `AWS::QuickSight::TemplateTrendArrowOptions`?

  MinimumLabelType: `AWS::QuickSight::TemplateTrendArrowOptions`?

  RangeEndsLabelType: `AWS::QuickSight::TemplateTrendArrowOptions`?
}

class `AWS::QuickSight::AnalysisDataPathColor` {
  Color: String

  Element: `AWS::QuickSight::AnalysisDataPathValue`

  TimeGranularity: String?
}

class `AWS::QuickSight::TemplateDataPathLabelType` {
  FieldId: String?

  FieldValue: String?

  Visibility: String?
}

class `AWS::QuickSight::AnalysisDataPathSort` {
  Direction: String

  SortPaths: Listing<`AWS::QuickSight::AnalysisDataPathValue`>
}

class `AWS::QuickSight::TemplateDataPathType` {
  PivotTableDataPathType: String?
}

class `AWS::QuickSight::AnalysisDataPathValue` {
  DataPathType: `AWS::QuickSight::TemplateDataPathType`?

  FieldId: String?

  FieldValue: String?
}

class `AWS::QuickSight::DashboardDataSetIdentifierDeclaration` {
  DataSetArn: String

  Identifier: String
}

class `AWS::QuickSight::TemplateDataSetReference` {
  DataSetArn: String

  DataSetPlaceholder: String
}

class `AWS::QuickSight::TemplateDateAxisOptions` {
  MissingDateVisibility: String?
}

class `AWS::QuickSight::AnalysisDateDimensionField` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  DateGranularity: String?

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::AnalysisDateTimeFormatConfiguration`?

  HierarchyId: String?
}

class `AWS::QuickSight::AnalysisDateMeasureField` {
  AggregationFunction: String?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::AnalysisDateTimeFormatConfiguration`?
}

class `AWS::QuickSight::AnalysisDateTimeDefaultValues` {
  DynamicValue: `AWS::QuickSight::AnalysisDynamicDefaultValue`?

  RollingDate: `AWS::QuickSight::TemplateRollingDateConfiguration`?

  StaticValues: Listing<String>?
}

class `AWS::QuickSight::AnalysisDateTimeFormatConfiguration` {
  DateTimeFormat: String?

  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  NumericFormatConfiguration: `AWS::QuickSight::AnalysisNumericFormatConfiguration`?
}

class `AWS::QuickSight::AnalysisDateTimeHierarchy` {
  DrillDownFilters: Listing<`AWS::QuickSight::AnalysisDrillDownFilter`>?

  HierarchyId: String
}

class `AWS::QuickSight::AnalysisDateTimeParameterDeclaration` {
  DefaultValues: `AWS::QuickSight::AnalysisDateTimeDefaultValues`?

  MappedDataSetParameters: Listing<`AWS::QuickSight::TemplateMappedDataSetParameter`>?

  Name: String

  TimeGranularity: String?

  ValueWhenUnset: `AWS::QuickSight::TemplateStringValueWhenUnsetConfiguration`?
}

class `AWS::QuickSight::AnalysisRelativeDateTimeControlDisplayOptions` {
  DateTimeFormat: String?

  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  TitleOptions: `AWS::QuickSight::AnalysisLabelOptions`?
}

class `AWS::QuickSight::TemplateStringValueWhenUnsetConfiguration` {
  CustomValue: String?

  ValueWhenUnsetOption: String?
}

class `AWS::QuickSight::AnalysisIntegerDefaultValues` {
  DynamicValue: `AWS::QuickSight::AnalysisDynamicDefaultValue`?

  StaticValues: Listing<Number>?
}

class `AWS::QuickSight::DashboardIntegerParameter` {
  Name: String

  Values: Listing<Number>
}

class `AWS::QuickSight::AnalysisDecimalParameterDeclaration` {
  DefaultValues: `AWS::QuickSight::AnalysisIntegerDefaultValues`?

  MappedDataSetParameters: Listing<`AWS::QuickSight::TemplateMappedDataSetParameter`>?

  Name: String

  ParameterValueType: String

  ValueWhenUnset: `AWS::QuickSight::TemplateIntegerValueWhenUnsetConfiguration`?
}

class `AWS::QuickSight::TemplateDecimalPlacesConfiguration` {
  DecimalPlaces: Number
}

class `AWS::QuickSight::TemplateIntegerValueWhenUnsetConfiguration` {
  CustomValue: Number?

  ValueWhenUnsetOption: String?
}

class `AWS::QuickSight::AnalysisDefaultFreeFormLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::AnalysisFreeFormLayoutCanvasSizeOptions`
}

class `AWS::QuickSight::AnalysisDefaultGridLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::AnalysisGridLayoutCanvasSizeOptions`
}

class `AWS::QuickSight::AnalysisDefaultInteractiveLayoutConfiguration` {
  FreeForm: `AWS::QuickSight::AnalysisDefaultFreeFormLayoutConfiguration`?

  Grid: `AWS::QuickSight::AnalysisDefaultGridLayoutConfiguration`?
}

class `AWS::QuickSight::AnalysisDefaultNewSheetConfiguration` {
  InteractiveLayoutConfiguration: `AWS::QuickSight::AnalysisDefaultInteractiveLayoutConfiguration`?

  PaginatedLayoutConfiguration: `AWS::QuickSight::AnalysisDefaultPaginatedLayoutConfiguration`?

  SheetContentType: String?
}

class `AWS::QuickSight::AnalysisDefaultPaginatedLayoutConfiguration` {
  SectionBased: `AWS::QuickSight::AnalysisDefaultSectionBasedLayoutConfiguration`?
}

class `AWS::QuickSight::AnalysisDefaultSectionBasedLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::AnalysisSectionBasedLayoutCanvasSizeOptions`
}

class `AWS::QuickSight::AnalysisDestinationParameterValueConfiguration` {
  CustomValuesConfiguration: `AWS::QuickSight::AnalysisCustomValuesConfiguration`?

  SelectAllValueOptions: String?

  SourceColumn: `AWS::QuickSight::TemplateColumnIdentifier`?

  SourceField: String?

  SourceParameterName: String?
}

class `AWS::QuickSight::AnalysisDimensionField` {
  CategoricalDimensionField: `AWS::QuickSight::AnalysisCategoricalDimensionField`?

  DateDimensionField: `AWS::QuickSight::AnalysisDateDimensionField`?

  NumericalDimensionField: `AWS::QuickSight::AnalysisNumericalDimensionField`?
}

class `AWS::QuickSight::TemplateDonutCenterOptions` {
  LabelVisibility: String?
}

class `AWS::QuickSight::AnalysisDonutOptions` {
  ArcOptions: `AWS::QuickSight::TemplateArcOptions`?

  DonutCenterOptions: `AWS::QuickSight::TemplateDonutCenterOptions`?
}

class `AWS::QuickSight::AnalysisDrillDownFilter` {
  CategoryFilter: `AWS::QuickSight::AnalysisCategoryDrillDownFilter`?

  NumericEqualityFilter: `AWS::QuickSight::AnalysisNumericEqualityDrillDownFilter`?

  TimeRangeFilter: `AWS::QuickSight::AnalysisTimeRangeDrillDownFilter`?
}

class `AWS::QuickSight::AnalysisDropDownControlDisplayOptions` {
  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  SelectAllOptions: `AWS::QuickSight::TemplateTrendArrowOptions`?

  TitleOptions: `AWS::QuickSight::AnalysisLabelOptions`?
}

class `AWS::QuickSight::AnalysisDynamicDefaultValue` {
  DefaultValueColumn: `AWS::QuickSight::TemplateColumnIdentifier`

  GroupNameColumn: `AWS::QuickSight::TemplateColumnIdentifier`?

  UserNameColumn: `AWS::QuickSight::TemplateColumnIdentifier`?
}

class `AWS::QuickSight::AnalysisEmptyVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  DataSetIdentifier: String

  VisualId: String
}

class `AWS::QuickSight::TemplateExcludePeriodConfiguration` {
  Amount: Number

  Granularity: String

  Status: String?
}

class `AWS::QuickSight::AnalysisPredefinedHierarchy` {
  Columns: Listing<`AWS::QuickSight::TemplateColumnIdentifier`>

  DrillDownFilters: Listing<`AWS::QuickSight::AnalysisDrillDownFilter`>?

  HierarchyId: String
}

class `AWS::QuickSight::AnalysisFieldBasedTooltip` {
  AggregationVisibility: String?

  TooltipFields: Listing<`AWS::QuickSight::AnalysisTooltipItem`>?

  TooltipTitleType: String?
}

class `AWS::QuickSight::TemplateFieldLabelType` {
  FieldId: String?

  Visibility: String?
}

class `AWS::QuickSight::AnalysisFieldSeriesItem` {
  AxisBinding: String

  FieldId: String

  Settings: `AWS::QuickSight::AnalysisLineChartSeriesSettings`?
}

class `AWS::QuickSight::TemplateFieldSort` {
  Direction: String

  FieldId: String
}

class `AWS::QuickSight::AnalysisFieldSortOptions` {
  ColumnSort: `AWS::QuickSight::AnalysisColumnSort`?

  FieldSort: `AWS::QuickSight::TemplateFieldSort`?
}

class `AWS::QuickSight::TemplateFieldTooltipItem` {
  FieldId: String

  Label: String?

  Visibility: String?
}

class `AWS::QuickSight::AnalysisFilledMapAggregatedFieldWells` {
  Geospatial: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Values: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisFilledMapConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::AnalysisFilledMapConditionalFormattingOption`>
}

class `AWS::QuickSight::AnalysisFilledMapConditionalFormattingOption` {
  Shape: `AWS::QuickSight::AnalysisFilledMapShapeConditionalFormatting`
}

class `AWS::QuickSight::AnalysisFilledMapConfiguration` {
  FieldWells: `AWS::QuickSight::AnalysisFilledMapFieldWells`?

  Legend: `AWS::QuickSight::AnalysisLegendOptions`?

  MapStyleOptions: `AWS::QuickSight::TemplateGeospatialMapStyleOptions`?

  SortConfiguration: `AWS::QuickSight::AnalysisFilledMapSortConfiguration`?

  Tooltip: `AWS::QuickSight::AnalysisTooltipOptions`?

  WindowOptions: `AWS::QuickSight::AnalysisGeospatialWindowOptions`?
}

class `AWS::QuickSight::AnalysisFilledMapFieldWells` {
  FilledMapAggregatedFieldWells: `AWS::QuickSight::AnalysisFilledMapAggregatedFieldWells`?
}

class `AWS::QuickSight::AnalysisFilledMapShapeConditionalFormatting` {
  FieldId: String

  Format: `AWS::QuickSight::AnalysisShapeConditionalFormat`?
}

class `AWS::QuickSight::AnalysisFilledMapSortConfiguration` {
  CategorySort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?
}

class `AWS::QuickSight::AnalysisFilledMapVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisFilledMapConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  ConditionalFormatting: `AWS::QuickSight::AnalysisFilledMapConditionalFormatting`?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisFilter` {
  CategoryFilter: `AWS::QuickSight::AnalysisCategoryFilter`?

  NumericEqualityFilter: `AWS::QuickSight::AnalysisNumericEqualityFilter`?

  NumericRangeFilter: `AWS::QuickSight::AnalysisNumericRangeFilter`?

  RelativeDatesFilter: `AWS::QuickSight::AnalysisRelativeDatesFilter`?

  TimeEqualityFilter: `AWS::QuickSight::AnalysisTimeEqualityFilter`?

  TimeRangeFilter: `AWS::QuickSight::AnalysisTimeRangeFilter`?

  TopBottomFilter: `AWS::QuickSight::AnalysisTopBottomFilter`?
}

class `AWS::QuickSight::AnalysisFilterControl` {
  DateTimePicker: `AWS::QuickSight::AnalysisFilterDateTimePickerControl`?

  Dropdown: `AWS::QuickSight::AnalysisFilterDropDownControl`?

  List: `AWS::QuickSight::AnalysisFilterListControl`?

  RelativeDateTime: `AWS::QuickSight::AnalysisFilterRelativeDateTimeControl`?

  Slider: `AWS::QuickSight::AnalysisFilterSliderControl`?

  TextArea: `AWS::QuickSight::AnalysisFilterTextAreaControl`?

  TextField: `AWS::QuickSight::AnalysisFilterTextFieldControl`?
}

class `AWS::QuickSight::AnalysisFilterDateTimePickerControl` {
  DisplayOptions: `AWS::QuickSight::AnalysisRelativeDateTimeControlDisplayOptions`?

  FilterControlId: String

  SourceFilterId: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::AnalysisFilterDropDownControl` {
  CascadingControlConfiguration: `AWS::QuickSight::AnalysisCascadingControlConfiguration`?

  DisplayOptions: `AWS::QuickSight::AnalysisDropDownControlDisplayOptions`?

  FilterControlId: String

  SelectableValues: `AWS::QuickSight::TemplateFilterSelectableValues`?

  SourceFilterId: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::AnalysisFilterGroup` {
  CrossDataset: String

  FilterGroupId: String

  Filters: Listing<`AWS::QuickSight::AnalysisFilter`>

  ScopeConfiguration: `AWS::QuickSight::AnalysisFilterScopeConfiguration`

  Status: String?
}

class `AWS::QuickSight::TemplateFilterListConfiguration` {
  CategoryValues: Listing<String>?

  MatchOperator: String

  NullOption: String?

  SelectAllOptions: String?
}

class `AWS::QuickSight::AnalysisFilterListControl` {
  CascadingControlConfiguration: `AWS::QuickSight::AnalysisCascadingControlConfiguration`?

  DisplayOptions: `AWS::QuickSight::AnalysisListControlDisplayOptions`?

  FilterControlId: String

  SelectableValues: `AWS::QuickSight::TemplateFilterSelectableValues`?

  SourceFilterId: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::AnalysisFilterOperationSelectedFieldsConfiguration` {
  SelectedColumns: Listing<`AWS::QuickSight::TemplateColumnIdentifier`>?

  SelectedFieldOptions: String?

  SelectedFields: Listing<String>?
}

class `AWS::QuickSight::AnalysisFilterOperationTargetVisualsConfiguration` {
  SameSheetTargetVisualConfiguration: `AWS::QuickSight::TemplateSameSheetTargetVisualConfiguration`?
}

class `AWS::QuickSight::AnalysisFilterRelativeDateTimeControl` {
  DisplayOptions: `AWS::QuickSight::AnalysisRelativeDateTimeControlDisplayOptions`?

  FilterControlId: String

  SourceFilterId: String

  Title: String
}

class `AWS::QuickSight::AnalysisFilterScopeConfiguration` {
  AllSheets: Dynamic?

  SelectedSheets: `AWS::QuickSight::AnalysisSelectedSheetsFilterScopeConfiguration`?
}

class `AWS::QuickSight::AnalysisFilterSliderControl` {
  DisplayOptions: `AWS::QuickSight::AnalysisSliderControlDisplayOptions`?

  FilterControlId: String

  MaximumValue: Number

  MinimumValue: Number

  SourceFilterId: String

  StepSize: Number

  Title: String

  Type: String?
}

class `AWS::QuickSight::AnalysisFilterTextAreaControl` {
  Delimiter: String?

  DisplayOptions: `AWS::QuickSight::AnalysisTextFieldControlDisplayOptions`?

  FilterControlId: String

  SourceFilterId: String

  Title: String
}

class `AWS::QuickSight::AnalysisFilterTextFieldControl` {
  DisplayOptions: `AWS::QuickSight::AnalysisTextFieldControlDisplayOptions`?

  FilterControlId: String

  SourceFilterId: String

  Title: String
}

class `AWS::QuickSight::AnalysisFontConfiguration` {
  FontColor: String?

  FontDecoration: String?

  FontSize: `AWS::QuickSight::TemplateFontSize`?

  FontStyle: String?

  FontWeight: `AWS::WAFv2::RuleGroupLabelSummary`?
}

class `AWS::QuickSight::TemplateFontSize` {
  Relative: String?
}

class `AWS::QuickSight::AnalysisForecastComputation` {
  ComputationId: String

  CustomSeasonalityValue: Number?

  LowerBoundary: Number?

  Name: String?

  PeriodsBackward: Number?

  PeriodsForward: Number?

  PredictionInterval: Number?

  Seasonality: String?

  Time: `AWS::QuickSight::AnalysisDimensionField`?

  UpperBoundary: Number?

  Value: `AWS::QuickSight::AnalysisMeasureField`?
}

class `AWS::QuickSight::AnalysisForecastConfiguration` {
  ForecastProperties: `AWS::QuickSight::TemplateTimeBasedForecastProperties`?

  Scenario: `AWS::QuickSight::AnalysisForecastScenario`?
}

class `AWS::QuickSight::AnalysisForecastScenario` {
  WhatIfPointScenario: `AWS::QuickSight::TemplateWhatIfPointScenario`?

  WhatIfRangeScenario: `AWS::QuickSight::TemplateWhatIfRangeScenario`?
}

class `AWS::QuickSight::AnalysisFormatConfiguration` {
  DateTimeFormatConfiguration: `AWS::QuickSight::AnalysisDateTimeFormatConfiguration`?

  NumberFormatConfiguration: `AWS::QuickSight::AnalysisNumberFormatConfiguration`?

  StringFormatConfiguration: `AWS::QuickSight::AnalysisStringFormatConfiguration`?
}

class `AWS::QuickSight::AnalysisFreeFormLayoutCanvasSizeOptions` {
  ScreenCanvasSizeOptions: `AWS::QuickSight::TemplateFreeFormLayoutScreenCanvasSizeOptions`?
}

class `AWS::QuickSight::AnalysisFreeFormLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::AnalysisFreeFormLayoutCanvasSizeOptions`?

  Elements: Listing<`AWS::QuickSight::AnalysisFreeFormLayoutElement`>
}

class `AWS::QuickSight::AnalysisFreeFormLayoutElement` {
  BackgroundStyle: `AWS::QuickSight::TemplateFreeFormLayoutElementBorderStyle`?

  BorderStyle: `AWS::QuickSight::TemplateFreeFormLayoutElementBorderStyle`?

  ElementId: String

  ElementType: String

  Height: String

  LoadingAnimation: `AWS::QuickSight::TemplateTrendArrowOptions`?

  RenderingRules: Listing<`AWS::QuickSight::AnalysisSheetElementRenderingRule`>?

  SelectedBorderStyle: `AWS::QuickSight::TemplateFreeFormLayoutElementBorderStyle`?

  Visibility: String?

  Width: String

  XAxisLocation: String

  YAxisLocation: String
}

class `AWS::QuickSight::TemplateFreeFormLayoutElementBorderStyle` {
  Color: String?

  Visibility: String?
}

class `AWS::QuickSight::TemplateFreeFormLayoutScreenCanvasSizeOptions` {
  OptimizedViewPortWidth: String
}

class `AWS::QuickSight::AnalysisFreeFormSectionLayoutConfiguration` {
  Elements: Listing<`AWS::QuickSight::AnalysisFreeFormLayoutElement`>
}

class `AWS::QuickSight::AnalysisFunnelChartAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Values: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisFunnelChartConfiguration` {
  CategoryLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  DataLabelOptions: `AWS::QuickSight::AnalysisFunnelChartDataLabelOptions`?

  FieldWells: `AWS::QuickSight::AnalysisFunnelChartFieldWells`?

  SortConfiguration: `AWS::QuickSight::AnalysisWordCloudSortConfiguration`?

  Tooltip: `AWS::QuickSight::AnalysisTooltipOptions`?

  ValueLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  VisualPalette: `AWS::QuickSight::AnalysisVisualPalette`?
}

class `AWS::QuickSight::AnalysisFunnelChartDataLabelOptions` {
  CategoryLabelVisibility: String?

  LabelColor: String?

  LabelFontConfiguration: `AWS::QuickSight::AnalysisFontConfiguration`?

  MeasureDataLabelStyle: String?

  MeasureLabelVisibility: String?

  Position: String?

  Visibility: String?
}

class `AWS::QuickSight::AnalysisFunnelChartFieldWells` {
  FunnelChartAggregatedFieldWells: `AWS::QuickSight::AnalysisFunnelChartAggregatedFieldWells`?
}

class `AWS::QuickSight::AnalysisWordCloudSortConfiguration` {
  CategoryItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?
}

class `AWS::QuickSight::AnalysisFunnelChartVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisFunnelChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisKPIProgressBarConditionalFormatting` {
  ForegroundColor: `AWS::QuickSight::AnalysisConditionalFormattingColor`?
}

class `AWS::QuickSight::AnalysisGaugeChartConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::AnalysisGaugeChartConditionalFormattingOption`>?
}

class `AWS::QuickSight::AnalysisGaugeChartConditionalFormattingOption` {
  Arc: `AWS::QuickSight::AnalysisKPIProgressBarConditionalFormatting`?

  PrimaryValue: `AWS::QuickSight::AnalysisKPIPrimaryValueConditionalFormatting`?
}

class `AWS::QuickSight::AnalysisGaugeChartConfiguration` {
  DataLabels: `AWS::QuickSight::AnalysisDataLabelOptions`?

  FieldWells: `AWS::QuickSight::AnalysisGaugeChartFieldWells`?

  GaugeChartOptions: `AWS::QuickSight::AnalysisGaugeChartOptions`?

  TooltipOptions: `AWS::QuickSight::AnalysisTooltipOptions`?

  VisualPalette: `AWS::QuickSight::AnalysisVisualPalette`?
}

class `AWS::QuickSight::AnalysisGaugeChartFieldWells` {
  TargetValues: Listing<`AWS::QuickSight::AnalysisMeasureField`>?

  Values: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisGaugeChartOptions` {
  Arc: `AWS::QuickSight::TemplateArcConfiguration`?

  ArcAxis: `AWS::QuickSight::AnalysisArcAxisConfiguration`?

  Comparison: `AWS::QuickSight::AnalysisComparisonConfiguration`?

  PrimaryValueDisplayType: String?

  PrimaryValueFontConfiguration: `AWS::QuickSight::AnalysisFontConfiguration`?
}

class `AWS::QuickSight::AnalysisKPIPrimaryValueConditionalFormatting` {
  Icon: `AWS::QuickSight::AnalysisConditionalFormattingIcon`?

  TextColor: `AWS::QuickSight::AnalysisConditionalFormattingColor`?
}

class `AWS::QuickSight::AnalysisGaugeChartVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisGaugeChartConfiguration`?

  ConditionalFormatting: `AWS::QuickSight::AnalysisGaugeChartConditionalFormatting`?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateGeospatialCoordinateBounds` {
  East: Number

  North: Number

  South: Number

  West: Number
}

class `AWS::QuickSight::AnalysisGeospatialHeatmapColorScale` {
  Colors: Listing<`AWS::QuickSight::TemplateGeospatialHeatmapDataColor`>?
}

class `AWS::QuickSight::AnalysisGeospatialHeatmapConfiguration` {
  HeatmapColor: `AWS::QuickSight::AnalysisGeospatialHeatmapColorScale`?
}

class `AWS::QuickSight::TemplateGeospatialHeatmapDataColor` {
  Color: String
}

class `AWS::QuickSight::AnalysisGeospatialMapAggregatedFieldWells` {
  Colors: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Geospatial: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Values: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisGeospatialMapConfiguration` {
  FieldWells: `AWS::QuickSight::AnalysisGeospatialMapFieldWells`?

  Legend: `AWS::QuickSight::AnalysisLegendOptions`?

  MapStyleOptions: `AWS::QuickSight::TemplateGeospatialMapStyleOptions`?

  PointStyleOptions: `AWS::QuickSight::AnalysisGeospatialPointStyleOptions`?

  Tooltip: `AWS::QuickSight::AnalysisTooltipOptions`?

  VisualPalette: `AWS::QuickSight::AnalysisVisualPalette`?

  WindowOptions: `AWS::QuickSight::AnalysisGeospatialWindowOptions`?
}

class `AWS::QuickSight::AnalysisGeospatialMapFieldWells` {
  GeospatialMapAggregatedFieldWells: `AWS::QuickSight::AnalysisGeospatialMapAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateGeospatialMapStyleOptions` {
  BaseMapStyle: String?
}

class `AWS::QuickSight::AnalysisGeospatialMapVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisGeospatialMapConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisGeospatialPointStyleOptions` {
  ClusterMarkerConfiguration: `AWS::QuickSight::AnalysisClusterMarkerConfiguration`?

  HeatmapConfiguration: `AWS::QuickSight::AnalysisGeospatialHeatmapConfiguration`?

  SelectedPointStyle: String?
}

class `AWS::QuickSight::AnalysisGeospatialWindowOptions` {
  Bounds: `AWS::QuickSight::TemplateGeospatialCoordinateBounds`?

  MapZoomMode: String?
}

class `AWS::QuickSight::AnalysisGlobalTableBorderOptions` {
  SideSpecificBorder: `AWS::QuickSight::AnalysisTableSideBorderOptions`?

  UniformBorder: `AWS::QuickSight::TemplateTableBorderOptions`?
}

class `AWS::QuickSight::AnalysisGradientColor` {
  Stops: Listing<`AWS::QuickSight::TemplateGradientStop`>?
}

class `AWS::QuickSight::TemplateGradientStop` {
  Color: String?

  DataValue: Number?

  GradientOffset: Number
}

class `AWS::QuickSight::AnalysisGridLayoutCanvasSizeOptions` {
  ScreenCanvasSizeOptions: `AWS::QuickSight::TemplateGridLayoutScreenCanvasSizeOptions`?
}

class `AWS::QuickSight::AnalysisGridLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::AnalysisGridLayoutCanvasSizeOptions`?

  Elements: Listing<`AWS::QuickSight::TemplateGridLayoutElement`>
}

class `AWS::QuickSight::TemplateGridLayoutElement` {
  ColumnIndex: Number?

  ColumnSpan: Number

  ElementId: String

  ElementType: String

  RowIndex: Number?

  RowSpan: Number
}

class `AWS::QuickSight::TemplateGridLayoutScreenCanvasSizeOptions` {
  OptimizedViewPortWidth: String?

  ResizeOption: String
}

class `AWS::QuickSight::AnalysisGrowthRateComputation` {
  ComputationId: String

  Name: String?

  PeriodSize: Number?

  Time: `AWS::QuickSight::AnalysisDimensionField`?

  Value: `AWS::QuickSight::AnalysisMeasureField`?
}

class `AWS::QuickSight::AnalysisHeaderFooterSectionConfiguration` {
  Layout: `AWS::QuickSight::AnalysisSectionLayoutConfiguration`

  SectionId: String

  Style: `AWS::QuickSight::AnalysisSectionStyle`?
}

class `AWS::QuickSight::AnalysisPivotTableAggregatedFieldWells` {
  Columns: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Rows: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Values: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisHeatMapConfiguration` {
  ColorScale: `AWS::QuickSight::AnalysisColorScale`?

  ColumnLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  DataLabels: `AWS::QuickSight::AnalysisDataLabelOptions`?

  FieldWells: `AWS::QuickSight::AnalysisHeatMapFieldWells`?

  Legend: `AWS::QuickSight::AnalysisLegendOptions`?

  RowLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  SortConfiguration: `AWS::QuickSight::AnalysisHeatMapSortConfiguration`?

  Tooltip: `AWS::QuickSight::AnalysisTooltipOptions`?
}

class `AWS::QuickSight::AnalysisHeatMapFieldWells` {
  HeatMapAggregatedFieldWells: `AWS::QuickSight::AnalysisPivotTableAggregatedFieldWells`?
}

class `AWS::QuickSight::AnalysisHeatMapSortConfiguration` {
  HeatMapColumnItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  HeatMapColumnSort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?

  HeatMapRowItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  HeatMapRowSort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?
}

class `AWS::QuickSight::AnalysisHeatMapVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisHeatMapConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisHistogramAggregatedFieldWells` {
  Values: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisHistogramBinOptions` {
  BinCount: `AWS::QuickSight::TemplateBinCountOptions`?

  BinWidth: `AWS::QuickSight::TemplateBinWidthOptions`?

  SelectedBinType: String?

  StartValue: Number?
}

class `AWS::QuickSight::AnalysisHistogramConfiguration` {
  BinOptions: `AWS::QuickSight::AnalysisHistogramBinOptions`?

  DataLabels: `AWS::QuickSight::AnalysisDataLabelOptions`?

  FieldWells: `AWS::QuickSight::AnalysisHistogramFieldWells`?

  Tooltip: `AWS::QuickSight::AnalysisTooltipOptions`?

  VisualPalette: `AWS::QuickSight::AnalysisVisualPalette`?

  XAxisDisplayOptions: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  XAxisLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  YAxisDisplayOptions: `AWS::QuickSight::AnalysisAxisDisplayOptions`?
}

class `AWS::QuickSight::AnalysisHistogramFieldWells` {
  HistogramAggregatedFieldWells: `AWS::QuickSight::AnalysisHistogramAggregatedFieldWells`?
}

class `AWS::QuickSight::AnalysisHistogramVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisHistogramConfiguration`?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisInsightConfiguration` {
  Computations: Listing<`AWS::QuickSight::AnalysisComputation`>?

  CustomNarrative: `AWS::QuickSight::TemplateCustomNarrativeOptions`?
}

class `AWS::QuickSight::AnalysisInsightVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  DataSetIdentifier: String

  InsightConfiguration: `AWS::QuickSight::AnalysisInsightConfiguration`?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisIntegerParameterDeclaration` {
  DefaultValues: `AWS::QuickSight::AnalysisIntegerDefaultValues`?

  MappedDataSetParameters: Listing<`AWS::QuickSight::TemplateMappedDataSetParameter`>?

  Name: String

  ParameterValueType: String

  ValueWhenUnset: `AWS::QuickSight::TemplateIntegerValueWhenUnsetConfiguration`?
}

class `AWS::QuickSight::TemplateItemsLimitConfiguration` {
  ItemsLimit: Number?

  OtherCategories: String?
}

class `AWS::QuickSight::AnalysisKPIConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::AnalysisKPIConditionalFormattingOption`>?
}

class `AWS::QuickSight::AnalysisKPIConditionalFormattingOption` {
  ActualValue: `AWS::QuickSight::AnalysisKPIPrimaryValueConditionalFormatting`?

  ComparisonValue: `AWS::QuickSight::AnalysisKPIPrimaryValueConditionalFormatting`?

  PrimaryValue: `AWS::QuickSight::AnalysisKPIPrimaryValueConditionalFormatting`?

  ProgressBar: `AWS::QuickSight::AnalysisKPIProgressBarConditionalFormatting`?
}

class `AWS::QuickSight::AnalysisKPIConfiguration` {
  FieldWells: `AWS::QuickSight::AnalysisKPIFieldWells`?

  KPIOptions: `AWS::QuickSight::AnalysisKPIOptions`?

  SortConfiguration: `AWS::QuickSight::AnalysisKPISortConfiguration`?
}

class `AWS::QuickSight::AnalysisKPIFieldWells` {
  TargetValues: Listing<`AWS::QuickSight::AnalysisMeasureField`>?

  TrendGroups: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Values: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisKPIOptions` {
  Comparison: `AWS::QuickSight::AnalysisComparisonConfiguration`?

  PrimaryValueDisplayType: String?

  PrimaryValueFontConfiguration: `AWS::QuickSight::AnalysisFontConfiguration`?

  ProgressBar: `AWS::QuickSight::TemplateTrendArrowOptions`?

  SecondaryValue: `AWS::QuickSight::TemplateTrendArrowOptions`?

  SecondaryValueFontConfiguration: `AWS::QuickSight::AnalysisFontConfiguration`?

  Sparkline: `AWS::QuickSight::TemplateKPISparklineOptions`?

  TrendArrows: `AWS::QuickSight::TemplateTrendArrowOptions`?

  VisualLayoutOptions: `AWS::QuickSight::AnalysisKPIVisualLayoutOptions`?
}

class `AWS::QuickSight::AnalysisKPISortConfiguration` {
  TrendGroupSort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?
}

class `AWS::QuickSight::TemplateKPISparklineOptions` {
  Color: String?

  TooltipVisibility: String?

  Type: String

  Visibility: String?
}

class `AWS::QuickSight::AnalysisKPIVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisKPIConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  ConditionalFormatting: `AWS::QuickSight::AnalysisKPIConditionalFormatting`?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisKPIVisualLayoutOptions` {
  StandardLayout: `AWS::WAFRegional::WebACLAction`?
}

class `AWS::QuickSight::AnalysisLabelOptions` {
  CustomLabel: String?

  FontConfiguration: `AWS::QuickSight::AnalysisFontConfiguration`?

  Visibility: String?
}

class `AWS::QuickSight::AnalysisLayout` {
  Configuration: `AWS::QuickSight::AnalysisLayoutConfiguration`
}

class `AWS::QuickSight::AnalysisLayoutConfiguration` {
  FreeFormLayout: `AWS::QuickSight::AnalysisFreeFormLayoutConfiguration`?

  GridLayout: `AWS::QuickSight::AnalysisGridLayoutConfiguration`?

  SectionBasedLayout: `AWS::QuickSight::AnalysisSectionBasedLayoutConfiguration`?
}

class `AWS::QuickSight::AnalysisLegendOptions` {
  Height: String?

  Position: String?

  Title: `AWS::QuickSight::AnalysisLabelOptions`?

  Visibility: String?

  Width: String?
}

class `AWS::QuickSight::AnalysisLineChartConfiguration` {
  ContributionAnalysisDefaults: Listing<`AWS::QuickSight::AnalysisContributionAnalysisDefault`>?

  DataLabels: `AWS::QuickSight::AnalysisDataLabelOptions`?

  DefaultSeriesSettings: `AWS::QuickSight::AnalysisLineChartDefaultSeriesSettings`?

  FieldWells: `AWS::QuickSight::AnalysisLineChartFieldWells`?

  ForecastConfigurations: Listing<`AWS::QuickSight::AnalysisForecastConfiguration`>?

  Legend: `AWS::QuickSight::AnalysisLegendOptions`?

  PrimaryYAxisDisplayOptions: `AWS::QuickSight::AnalysisLineSeriesAxisDisplayOptions`?

  PrimaryYAxisLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  ReferenceLines: Listing<`AWS::QuickSight::AnalysisReferenceLine`>?

  SecondaryYAxisDisplayOptions: `AWS::QuickSight::AnalysisLineSeriesAxisDisplayOptions`?

  SecondaryYAxisLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  Series: Listing<`AWS::QuickSight::AnalysisSeriesItem`>?

  SmallMultiplesOptions: `AWS::QuickSight::AnalysisSmallMultiplesOptions`?

  SortConfiguration: `AWS::QuickSight::AnalysisLineChartSortConfiguration`?

  Tooltip: `AWS::QuickSight::AnalysisTooltipOptions`?

  Type: String?

  VisualPalette: `AWS::QuickSight::AnalysisVisualPalette`?

  XAxisDisplayOptions: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  XAxisLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?
}

class `AWS::QuickSight::AnalysisLineChartDefaultSeriesSettings` {
  AxisBinding: String?

  LineStyleSettings: `AWS::QuickSight::TemplateLineChartLineStyleSettings`?

  MarkerStyleSettings: `AWS::QuickSight::TemplateLineChartMarkerStyleSettings`?
}

class `AWS::QuickSight::AnalysisLineChartFieldWells` {
  LineChartAggregatedFieldWells: `AWS::QuickSight::AnalysisLineChartAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateLineChartLineStyleSettings` {
  LineInterpolation: String?

  LineStyle: String?

  LineVisibility: String?

  LineWidth: String?
}

class `AWS::QuickSight::TemplateLineChartMarkerStyleSettings` {
  MarkerColor: String?

  MarkerShape: String?

  MarkerSize: String?

  MarkerVisibility: String?
}

class `AWS::QuickSight::AnalysisLineChartSeriesSettings` {
  LineStyleSettings: `AWS::QuickSight::TemplateLineChartLineStyleSettings`?

  MarkerStyleSettings: `AWS::QuickSight::TemplateLineChartMarkerStyleSettings`?
}

class `AWS::QuickSight::AnalysisLineChartSortConfiguration` {
  CategoryItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?

  ColorItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SmallMultiplesLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SmallMultiplesSort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?
}

class `AWS::QuickSight::AnalysisLineChartVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisLineChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisLineSeriesAxisDisplayOptions` {
  AxisOptions: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  MissingDataConfigurations: Listing<`AWS::QuickSight::TemplateMissingDataConfiguration`>?
}

class `AWS::QuickSight::AnalysisListControlDisplayOptions` {
  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  SearchOptions: `AWS::QuickSight::TemplateTrendArrowOptions`?

  SelectAllOptions: `AWS::QuickSight::TemplateTrendArrowOptions`?

  TitleOptions: `AWS::QuickSight::AnalysisLabelOptions`?
}

class `AWS::QuickSight::TemplateTrendArrowOptions` {
  Visibility: String?
}

class `AWS::QuickSight::TemplateLocalNavigationConfiguration` {
  TargetSheetId: String
}

class `AWS::QuickSight::TemplateShortFormatText` {
  PlainText: String?

  RichText: String?
}

class `AWS::QuickSight::TemplateMappedDataSetParameter` {
  DataSetIdentifier: String

  DataSetParameterName: String
}

class `AWS::QuickSight::AnalysisMaximumMinimumComputation` {
  ComputationId: String

  Name: String?

  Time: `AWS::QuickSight::AnalysisDimensionField`?

  Type: String

  Value: `AWS::QuickSight::AnalysisMeasureField`?
}

class `AWS::QuickSight::AnalysisMeasureField` {
  CalculatedMeasureField: `AWS::QuickSight::TemplateCalculatedMeasureField`?

  CategoricalMeasureField: `AWS::QuickSight::AnalysisCategoricalMeasureField`?

  DateMeasureField: `AWS::QuickSight::AnalysisDateMeasureField`?

  NumericalMeasureField: `AWS::QuickSight::AnalysisNumericalMeasureField`?
}

class `AWS::QuickSight::AnalysisMetricComparisonComputation` {
  ComputationId: String

  FromValue: `AWS::QuickSight::AnalysisMeasureField`?

  Name: String?

  TargetValue: `AWS::QuickSight::AnalysisMeasureField`?

  Time: `AWS::QuickSight::AnalysisDimensionField`?
}

class `AWS::QuickSight::TemplateMissingDataConfiguration` {
  TreatmentOption: String?
}

class `AWS::QuickSight::TemplateNegativeValueConfiguration` {
  DisplayMode: String
}

class `AWS::QuickSight::TemplateNullValueFormatConfiguration` {
  NullString: String
}

class `AWS::QuickSight::AnalysisNumberDisplayFormatConfiguration` {
  DecimalPlacesConfiguration: `AWS::QuickSight::TemplateDecimalPlacesConfiguration`?

  NegativeValueConfiguration: `AWS::QuickSight::TemplateNegativeValueConfiguration`?

  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  NumberScale: String?

  Prefix: String?

  SeparatorConfiguration: `AWS::QuickSight::AnalysisNumericSeparatorConfiguration`?

  Suffix: String?
}

class `AWS::QuickSight::AnalysisNumberFormatConfiguration` {
  FormatConfiguration: `AWS::QuickSight::AnalysisNumericFormatConfiguration`?
}

class `AWS::QuickSight::AnalysisNumericAxisOptions` {
  Range: `AWS::QuickSight::AnalysisAxisDisplayRange`?

  Scale: `AWS::QuickSight::AnalysisAxisScale`?
}

class `AWS::QuickSight::AnalysisNumericEqualityDrillDownFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  Value: Number
}

class `AWS::QuickSight::AnalysisNumericEqualityFilter` {
  AggregationFunction: `AWS::QuickSight::AnalysisAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FilterId: String

  MatchOperator: String

  NullOption: String

  ParameterName: String?

  SelectAllOptions: String?

  Value: Number?
}

class `AWS::QuickSight::AnalysisNumericFormatConfiguration` {
  CurrencyDisplayFormatConfiguration: `AWS::QuickSight::AnalysisCurrencyDisplayFormatConfiguration`?

  NumberDisplayFormatConfiguration: `AWS::QuickSight::AnalysisNumberDisplayFormatConfiguration`?

  PercentageDisplayFormatConfiguration: `AWS::QuickSight::AnalysisPercentageDisplayFormatConfiguration`?
}

class `AWS::QuickSight::AnalysisNumericRangeFilter` {
  AggregationFunction: `AWS::QuickSight::AnalysisAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FilterId: String

  IncludeMaximum: Boolean?

  IncludeMinimum: Boolean?

  NullOption: String

  RangeMaximum: `AWS::QuickSight::TemplateNumericRangeFilterValue`?

  RangeMinimum: `AWS::QuickSight::TemplateNumericRangeFilterValue`?

  SelectAllOptions: String?
}

class `AWS::QuickSight::TemplateNumericRangeFilterValue` {
  Parameter: String?

  StaticValue: Number?
}

class `AWS::QuickSight::AnalysisNumericSeparatorConfiguration` {
  DecimalSeparator: String?

  ThousandsSeparator: `AWS::QuickSight::TemplateThousandSeparatorOptions`?
}

class `AWS::QuickSight::AnalysisNumericalAggregationFunction` {
  PercentileAggregation: `AWS::QuickSight::TemplatePercentileAggregation`?

  SimpleNumericalAggregation: String?
}

class `AWS::QuickSight::AnalysisNumericalDimensionField` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::AnalysisNumberFormatConfiguration`?

  HierarchyId: String?
}

class `AWS::QuickSight::AnalysisNumericalMeasureField` {
  AggregationFunction: `AWS::QuickSight::AnalysisNumericalAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::AnalysisNumberFormatConfiguration`?
}

class `AWS::QuickSight::TemplatePaginationConfiguration` {
  PageNumber: Number

  PageSize: Number
}

class `AWS::QuickSight::AnalysisPanelConfiguration` {
  BackgroundColor: String?

  BackgroundVisibility: String?

  BorderColor: String?

  BorderStyle: String?

  BorderThickness: String?

  BorderVisibility: String?

  GutterSpacing: String?

  GutterVisibility: String?

  Title: `AWS::QuickSight::AnalysisPanelTitleOptions`?
}

class `AWS::QuickSight::AnalysisPanelTitleOptions` {
  FontConfiguration: `AWS::QuickSight::AnalysisFontConfiguration`?

  HorizontalTextAlignment: String?

  Visibility: String?
}

class `AWS::QuickSight::AnalysisParameterControl` {
  DateTimePicker: `AWS::QuickSight::AnalysisParameterDateTimePickerControl`?

  Dropdown: `AWS::QuickSight::AnalysisParameterDropDownControl`?

  List: `AWS::QuickSight::AnalysisParameterListControl`?

  Slider: `AWS::QuickSight::AnalysisParameterSliderControl`?

  TextArea: `AWS::QuickSight::AnalysisParameterTextAreaControl`?

  TextField: `AWS::QuickSight::AnalysisParameterTextFieldControl`?
}

class `AWS::QuickSight::AnalysisParameterDateTimePickerControl` {
  DisplayOptions: `AWS::QuickSight::AnalysisRelativeDateTimeControlDisplayOptions`?

  ParameterControlId: String

  SourceParameterName: String

  Title: String
}

class `AWS::QuickSight::AnalysisParameterDeclaration` {
  DateTimeParameterDeclaration: `AWS::QuickSight::AnalysisDateTimeParameterDeclaration`?

  DecimalParameterDeclaration: `AWS::QuickSight::AnalysisDecimalParameterDeclaration`?

  IntegerParameterDeclaration: `AWS::QuickSight::AnalysisIntegerParameterDeclaration`?

  StringParameterDeclaration: `AWS::QuickSight::AnalysisStringParameterDeclaration`?
}

class `AWS::QuickSight::AnalysisParameterDropDownControl` {
  CascadingControlConfiguration: `AWS::QuickSight::AnalysisCascadingControlConfiguration`?

  DisplayOptions: `AWS::QuickSight::AnalysisDropDownControlDisplayOptions`?

  ParameterControlId: String

  SelectableValues: `AWS::QuickSight::AnalysisParameterSelectableValues`?

  SourceParameterName: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::AnalysisParameterListControl` {
  CascadingControlConfiguration: `AWS::QuickSight::AnalysisCascadingControlConfiguration`?

  DisplayOptions: `AWS::QuickSight::AnalysisListControlDisplayOptions`?

  ParameterControlId: String

  SelectableValues: `AWS::QuickSight::AnalysisParameterSelectableValues`?

  SourceParameterName: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::AnalysisParameterSelectableValues` {
  LinkToDataSetColumn: `AWS::QuickSight::TemplateColumnIdentifier`?

  Values: Listing<String>?
}

class `AWS::QuickSight::AnalysisParameterSliderControl` {
  DisplayOptions: `AWS::QuickSight::AnalysisSliderControlDisplayOptions`?

  MaximumValue: Number

  MinimumValue: Number

  ParameterControlId: String

  SourceParameterName: String

  StepSize: Number

  Title: String
}

class `AWS::QuickSight::AnalysisParameterTextAreaControl` {
  Delimiter: String?

  DisplayOptions: `AWS::QuickSight::AnalysisTextFieldControlDisplayOptions`?

  ParameterControlId: String

  SourceParameterName: String

  Title: String
}

class `AWS::QuickSight::AnalysisParameterTextFieldControl` {
  DisplayOptions: `AWS::QuickSight::AnalysisTextFieldControlDisplayOptions`?

  ParameterControlId: String

  SourceParameterName: String

  Title: String
}

class `AWS::QuickSight::AnalysisParameters` {
  DateTimeParameters: Listing<`AWS::QuickSight::DashboardStringParameter`>?

  DecimalParameters: Listing<`AWS::QuickSight::DashboardIntegerParameter`>?

  IntegerParameters: Listing<`AWS::QuickSight::DashboardIntegerParameter`>?

  StringParameters: Listing<`AWS::QuickSight::DashboardStringParameter`>?
}

class `AWS::QuickSight::AnalysisPercentageDisplayFormatConfiguration` {
  DecimalPlacesConfiguration: `AWS::QuickSight::TemplateDecimalPlacesConfiguration`?

  NegativeValueConfiguration: `AWS::QuickSight::TemplateNegativeValueConfiguration`?

  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  Prefix: String?

  SeparatorConfiguration: `AWS::QuickSight::AnalysisNumericSeparatorConfiguration`?

  Suffix: String?
}

class `AWS::QuickSight::TemplatePercentileAggregation` {
  PercentileValue: Number?
}

class `AWS::QuickSight::AnalysisPeriodOverPeriodComputation` {
  ComputationId: String

  Name: String?

  Time: `AWS::QuickSight::AnalysisDimensionField`?

  Value: `AWS::QuickSight::AnalysisMeasureField`?
}

class `AWS::QuickSight::AnalysisPeriodToDateComputation` {
  ComputationId: String

  Name: String?

  PeriodTimeGranularity: String?

  Time: `AWS::QuickSight::AnalysisDimensionField`?

  Value: `AWS::QuickSight::AnalysisMeasureField`?
}

class `AWS::QuickSight::AnalysisPieChartAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  SmallMultiples: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Values: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisPieChartConfiguration` {
  CategoryLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  ContributionAnalysisDefaults: Listing<`AWS::QuickSight::AnalysisContributionAnalysisDefault`>?

  DataLabels: `AWS::QuickSight::AnalysisDataLabelOptions`?

  DonutOptions: `AWS::QuickSight::AnalysisDonutOptions`?

  FieldWells: `AWS::QuickSight::AnalysisPieChartFieldWells`?

  Legend: `AWS::QuickSight::AnalysisLegendOptions`?

  SmallMultiplesOptions: `AWS::QuickSight::AnalysisSmallMultiplesOptions`?

  SortConfiguration: `AWS::QuickSight::AnalysisPieChartSortConfiguration`?

  Tooltip: `AWS::QuickSight::AnalysisTooltipOptions`?

  ValueLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  VisualPalette: `AWS::QuickSight::AnalysisVisualPalette`?
}

class `AWS::QuickSight::AnalysisPieChartFieldWells` {
  PieChartAggregatedFieldWells: `AWS::QuickSight::AnalysisPieChartAggregatedFieldWells`?
}

class `AWS::QuickSight::AnalysisPieChartSortConfiguration` {
  CategoryItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?

  SmallMultiplesLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SmallMultiplesSort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?
}

class `AWS::QuickSight::AnalysisPieChartVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisPieChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisPivotFieldSortOptions` {
  FieldId: String

  SortBy: `AWS::QuickSight::AnalysisPivotTableSortBy`
}

class `AWS::QuickSight::AnalysisPivotTableCellConditionalFormatting` {
  FieldId: String

  Scope: `AWS::QuickSight::TemplatePivotTableConditionalFormattingScope`?

  Scopes: Listing<`AWS::QuickSight::TemplatePivotTableConditionalFormattingScope`>?

  TextFormat: `AWS::QuickSight::AnalysisTextConditionalFormat`?
}

class `AWS::QuickSight::AnalysisPivotTableConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::AnalysisPivotTableConditionalFormattingOption`>?
}

class `AWS::QuickSight::AnalysisPivotTableConditionalFormattingOption` {
  Cell: `AWS::QuickSight::AnalysisPivotTableCellConditionalFormatting`?
}

class `AWS::QuickSight::TemplatePivotTableConditionalFormattingScope` {
  Role: String?
}

class `AWS::QuickSight::AnalysisPivotTableConfiguration` {
  FieldOptions: `AWS::QuickSight::AnalysisPivotTableFieldOptions`?

  FieldWells: `AWS::QuickSight::AnalysisPivotTableFieldWells`?

  PaginatedReportOptions: `AWS::QuickSight::TemplateTablePaginatedReportOptions`?

  SortConfiguration: `AWS::QuickSight::AnalysisPivotTableSortConfiguration`?

  TableOptions: `AWS::QuickSight::AnalysisPivotTableOptions`?

  TotalOptions: `AWS::QuickSight::AnalysisPivotTableTotalOptions`?
}

class `AWS::QuickSight::AnalysisPivotTableDataPathOption` {
  DataPathList: Listing<`AWS::QuickSight::AnalysisDataPathValue`>

  Width: String?
}

class `AWS::QuickSight::AnalysisPivotTableFieldCollapseStateOption` {
  State: String?

  Target: `AWS::QuickSight::AnalysisPivotTableFieldCollapseStateTarget`
}

class `AWS::QuickSight::AnalysisPivotTableFieldCollapseStateTarget` {
  FieldDataPathValues: Listing<`AWS::QuickSight::AnalysisDataPathValue`>?

  FieldId: String?
}

class `AWS::QuickSight::TemplatePivotTableFieldOption` {
  CustomLabel: String?

  FieldId: String

  Visibility: String?
}

class `AWS::QuickSight::AnalysisPivotTableFieldOptions` {
  CollapseStateOptions: Listing<`AWS::QuickSight::AnalysisPivotTableFieldCollapseStateOption`>?

  DataPathOptions: Listing<`AWS::QuickSight::AnalysisPivotTableDataPathOption`>?

  SelectedFieldOptions: Listing<`AWS::QuickSight::TemplatePivotTableFieldOption`>?
}

class `AWS::QuickSight::TemplatePivotTableFieldSubtotalOptions` {
  FieldId: String?
}

class `AWS::QuickSight::AnalysisPivotTableFieldWells` {
  PivotTableAggregatedFieldWells: `AWS::QuickSight::AnalysisPivotTableAggregatedFieldWells`?
}

class `AWS::QuickSight::AnalysisPivotTableOptions` {
  CellStyle: `AWS::QuickSight::AnalysisTableCellStyle`?

  CollapsedRowDimensionsVisibility: String?

  ColumnHeaderStyle: `AWS::QuickSight::AnalysisTableCellStyle`?

  ColumnNamesVisibility: String?

  DefaultCellWidth: String?

  MetricPlacement: String?

  RowAlternateColorOptions: `AWS::QuickSight::TemplateRowAlternateColorOptions`?

  RowFieldNamesStyle: `AWS::QuickSight::AnalysisTableCellStyle`?

  RowHeaderStyle: `AWS::QuickSight::AnalysisTableCellStyle`?

  RowsLabelOptions: `AWS::QuickSight::TemplatePivotTableRowsLabelOptions`?

  RowsLayout: String?

  SingleMetricVisibility: String?

  ToggleButtonsVisibility: String?
}

class `AWS::QuickSight::TemplateTablePaginatedReportOptions` {
  OverflowColumnHeaderVisibility: String?

  VerticalOverflowVisibility: String?
}

class `AWS::QuickSight::TemplatePivotTableRowsLabelOptions` {
  CustomLabel: String?

  Visibility: String?
}

class `AWS::QuickSight::AnalysisPivotTableSortBy` {
  Column: `AWS::QuickSight::AnalysisColumnSort`?

  DataPath: `AWS::QuickSight::AnalysisDataPathSort`?

  Field: `AWS::QuickSight::TemplateFieldSort`?
}

class `AWS::QuickSight::AnalysisPivotTableSortConfiguration` {
  FieldSortOptions: Listing<`AWS::QuickSight::AnalysisPivotFieldSortOptions`>?
}

class `AWS::QuickSight::AnalysisPivotTableTotalOptions` {
  ColumnSubtotalOptions: `AWS::QuickSight::AnalysisSubtotalOptions`?

  ColumnTotalOptions: `AWS::QuickSight::AnalysisPivotTotalOptions`?

  RowSubtotalOptions: `AWS::QuickSight::AnalysisSubtotalOptions`?

  RowTotalOptions: `AWS::QuickSight::AnalysisPivotTotalOptions`?
}

class `AWS::QuickSight::AnalysisPivotTableVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisPivotTableConfiguration`?

  ConditionalFormatting: `AWS::QuickSight::AnalysisPivotTableConditionalFormatting`?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisPivotTotalOptions` {
  CustomLabel: String?

  MetricHeaderCellStyle: `AWS::QuickSight::AnalysisTableCellStyle`?

  Placement: String?

  ScrollStatus: String?

  TotalAggregationOptions: Listing<`AWS::QuickSight::AnalysisTotalAggregationOption`>?

  TotalCellStyle: `AWS::QuickSight::AnalysisTableCellStyle`?

  TotalsVisibility: String?

  ValueCellStyle: `AWS::QuickSight::AnalysisTableCellStyle`?
}

class `AWS::QuickSight::AnalysisRadarChartAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Color: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Values: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisRadarChartConfiguration` {
  AlternateBandColorsVisibility: String?

  AlternateBandEvenColor: String?

  AlternateBandOddColor: String?

  AxesRangeScale: String?

  BaseSeriesSettings: `AWS::QuickSight::AnalysisRadarChartSeriesSettings`?

  CategoryAxis: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  CategoryLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  ColorAxis: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  ColorLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  FieldWells: `AWS::QuickSight::AnalysisRadarChartFieldWells`?

  Legend: `AWS::QuickSight::AnalysisLegendOptions`?

  Shape: String?

  SortConfiguration: `AWS::QuickSight::AnalysisRadarChartSortConfiguration`?

  StartAngle: Number?

  VisualPalette: `AWS::QuickSight::AnalysisVisualPalette`?
}

class `AWS::QuickSight::AnalysisRadarChartFieldWells` {
  RadarChartAggregatedFieldWells: `AWS::QuickSight::AnalysisRadarChartAggregatedFieldWells`?
}

class `AWS::QuickSight::AnalysisRadarChartSeriesSettings` {
  AreaStyleSettings: `AWS::QuickSight::TemplateTrendArrowOptions`?
}

class `AWS::QuickSight::AnalysisRadarChartVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisRadarChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisReferenceLine` {
  DataConfiguration: `AWS::QuickSight::AnalysisReferenceLineDataConfiguration`

  LabelConfiguration: `AWS::QuickSight::AnalysisReferenceLineLabelConfiguration`?

  Status: String?

  StyleConfiguration: `AWS::QuickSight::TemplateReferenceLineStyleConfiguration`?
}

class `AWS::QuickSight::TemplateReferenceLineCustomLabelConfiguration` {
  CustomLabel: String
}

class `AWS::QuickSight::AnalysisReferenceLineDataConfiguration` {
  AxisBinding: String?

  DynamicConfiguration: `AWS::QuickSight::AnalysisReferenceLineDynamicDataConfiguration`?

  SeriesType: String?

  StaticConfiguration: `AWS::QuickSight::TemplateReferenceLineStaticDataConfiguration`?
}

class `AWS::QuickSight::AnalysisReferenceLineDynamicDataConfiguration` {
  Calculation: `AWS::QuickSight::AnalysisNumericalAggregationFunction`

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  MeasureAggregationFunction: `AWS::QuickSight::AnalysisAggregationFunction`?
}

class `AWS::QuickSight::AnalysisReferenceLineLabelConfiguration` {
  CustomLabelConfiguration: `AWS::QuickSight::TemplateReferenceLineCustomLabelConfiguration`?

  FontColor: String?

  FontConfiguration: `AWS::QuickSight::AnalysisFontConfiguration`?

  HorizontalPosition: String?

  ValueLabelConfiguration: `AWS::QuickSight::AnalysisReferenceLineValueLabelConfiguration`?

  VerticalPosition: String?
}

class `AWS::QuickSight::TemplateReferenceLineStaticDataConfiguration` {
  Value: Number
}

class `AWS::QuickSight::TemplateReferenceLineStyleConfiguration` {
  Color: String?

  Pattern: String?
}

class `AWS::QuickSight::AnalysisReferenceLineValueLabelConfiguration` {
  FormatConfiguration: `AWS::QuickSight::AnalysisNumericFormatConfiguration`?

  RelativePosition: String?
}

class `AWS::QuickSight::AnalysisRelativeDatesFilter` {
  AnchorDateConfiguration: `AWS::QuickSight::TemplateAnchorDateConfiguration`

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  ExcludePeriodConfiguration: `AWS::QuickSight::TemplateExcludePeriodConfiguration`?

  FilterId: String

  MinimumGranularity: String?

  NullOption: String

  ParameterName: String?

  RelativeDateType: String

  RelativeDateValue: Number?

  TimeGranularity: String
}

class `AWS::QuickSight::ThemeResourcePermission` {
  Actions: Listing<String>

  Principal: String
}

class `AWS::QuickSight::TemplateRollingDateConfiguration` {
  DataSetIdentifier: String?

  Expression: String
}

class `AWS::QuickSight::TemplateRowAlternateColorOptions` {
  RowAlternateColors: Listing<String>?

  Status: String?

  UsePrimaryBackgroundColor: String?
}

class `AWS::QuickSight::TemplateSameSheetTargetVisualConfiguration` {
  TargetVisualOptions: String?

  TargetVisuals: Listing<String>?
}

class `AWS::QuickSight::AnalysisSankeyDiagramAggregatedFieldWells` {
  Destination: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Source: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Weight: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisSankeyDiagramChartConfiguration` {
  DataLabels: `AWS::QuickSight::AnalysisDataLabelOptions`?

  FieldWells: `AWS::QuickSight::AnalysisSankeyDiagramFieldWells`?

  SortConfiguration: `AWS::QuickSight::AnalysisSankeyDiagramSortConfiguration`?
}

class `AWS::QuickSight::AnalysisSankeyDiagramFieldWells` {
  SankeyDiagramAggregatedFieldWells: `AWS::QuickSight::AnalysisSankeyDiagramAggregatedFieldWells`?
}

class `AWS::QuickSight::AnalysisSankeyDiagramSortConfiguration` {
  DestinationItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SourceItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  WeightSort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?
}

class `AWS::QuickSight::AnalysisSankeyDiagramVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisSankeyDiagramChartConfiguration`?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisScatterPlotCategoricallyAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Label: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Size: Listing<`AWS::QuickSight::AnalysisMeasureField`>?

  XAxis: Listing<`AWS::QuickSight::AnalysisMeasureField`>?

  YAxis: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisScatterPlotConfiguration` {
  DataLabels: `AWS::QuickSight::AnalysisDataLabelOptions`?

  FieldWells: `AWS::QuickSight::AnalysisScatterPlotFieldWells`?

  Legend: `AWS::QuickSight::AnalysisLegendOptions`?

  Tooltip: `AWS::QuickSight::AnalysisTooltipOptions`?

  VisualPalette: `AWS::QuickSight::AnalysisVisualPalette`?

  XAxisDisplayOptions: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  XAxisLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  YAxisDisplayOptions: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  YAxisLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?
}

class `AWS::QuickSight::AnalysisScatterPlotFieldWells` {
  ScatterPlotCategoricallyAggregatedFieldWells: `AWS::QuickSight::AnalysisScatterPlotCategoricallyAggregatedFieldWells`?

  ScatterPlotUnaggregatedFieldWells: `AWS::QuickSight::AnalysisScatterPlotUnaggregatedFieldWells`?
}

class `AWS::QuickSight::AnalysisScatterPlotUnaggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Label: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Size: Listing<`AWS::QuickSight::AnalysisMeasureField`>?

  XAxis: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  YAxis: Listing<`AWS::QuickSight::AnalysisDimensionField`>?
}

class `AWS::QuickSight::AnalysisScatterPlotVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisScatterPlotConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisScrollBarOptions` {
  Visibility: String?

  VisibleRange: `AWS::QuickSight::AnalysisVisibleRangeOptions`?
}

class `AWS::S3::BucketDeleteMarkerReplication` {
  Status: String?
}

class `AWS::QuickSight::AnalysisSectionBasedLayoutCanvasSizeOptions` {
  PaperCanvasSizeOptions: `AWS::QuickSight::AnalysisSectionBasedLayoutPaperCanvasSizeOptions`?
}

class `AWS::QuickSight::AnalysisSectionBasedLayoutConfiguration` {
  BodySections: Listing<`AWS::QuickSight::AnalysisBodySectionConfiguration`>

  CanvasSizeOptions: `AWS::QuickSight::AnalysisSectionBasedLayoutCanvasSizeOptions`

  FooterSections: Listing<`AWS::QuickSight::AnalysisHeaderFooterSectionConfiguration`>

  HeaderSections: Listing<`AWS::QuickSight::AnalysisHeaderFooterSectionConfiguration`>
}

class `AWS::QuickSight::AnalysisSectionBasedLayoutPaperCanvasSizeOptions` {
  PaperMargin: `AWS::QuickSight::TemplateSpacing`?

  PaperOrientation: String?

  PaperSize: String?
}

class `AWS::QuickSight::AnalysisSectionLayoutConfiguration` {
  FreeFormLayout: `AWS::QuickSight::AnalysisFreeFormSectionLayoutConfiguration`
}

class `AWS::QuickSight::AnalysisSectionPageBreakConfiguration` {
  After: `AWS::S3::BucketDeleteMarkerReplication`?
}

class `AWS::QuickSight::AnalysisSectionStyle` {
  Height: String?

  Padding: `AWS::QuickSight::TemplateSpacing`?
}

class `AWS::QuickSight::AnalysisSelectedSheetsFilterScopeConfiguration` {
  SheetVisualScopingConfigurations: Listing<`AWS::QuickSight::TemplateSheetVisualScopingConfiguration`>?
}

class `AWS::QuickSight::AnalysisSeriesItem` {
  DataFieldSeriesItem: `AWS::QuickSight::AnalysisDataFieldSeriesItem`?

  FieldSeriesItem: `AWS::QuickSight::AnalysisFieldSeriesItem`?
}

class `AWS::QuickSight::AnalysisSetParameterValueConfiguration` {
  DestinationParameterName: String

  Value: `AWS::QuickSight::AnalysisDestinationParameterValueConfiguration`
}

class `AWS::QuickSight::AnalysisShapeConditionalFormat` {
  BackgroundColor: `AWS::QuickSight::AnalysisConditionalFormattingColor`
}

class `AWS::QuickSight::TemplateSheet` {
  Name: String?

  SheetId: String?
}

class `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions` {
  InfoIconText: String?

  Visibility: String?
}

class `AWS::QuickSight::AnalysisSheetControlLayout` {
  Configuration: `AWS::QuickSight::AnalysisSheetControlLayoutConfiguration`
}

class `AWS::QuickSight::AnalysisSheetControlLayoutConfiguration` {
  GridLayout: `AWS::QuickSight::AnalysisGridLayoutConfiguration`?
}

class `AWS::QuickSight::AnalysisSheetDefinition` {
  ContentType: String?

  Description: String?

  FilterControls: Listing<`AWS::QuickSight::AnalysisFilterControl`>?

  Layouts: Listing<`AWS::QuickSight::AnalysisLayout`>?

  Name: String?

  ParameterControls: Listing<`AWS::QuickSight::AnalysisParameterControl`>?

  SheetControlLayouts: Listing<`AWS::QuickSight::AnalysisSheetControlLayout`>?

  SheetId: String

  TextBoxes: Listing<`AWS::QuickSight::TemplateSheetTextBox`>?

  Title: String?

  Visuals: Listing<`AWS::QuickSight::AnalysisVisual`>?
}

class `AWS::QuickSight::AnalysisSheetElementRenderingRule` {
  ConfigurationOverrides: `AWS::QuickSight::TemplateTrendArrowOptions`

  Expression: String
}

class `AWS::QuickSight::TemplateSheetTextBox` {
  Content: String?

  SheetTextBoxId: String
}

class `AWS::QuickSight::TemplateSheetVisualScopingConfiguration` {
  Scope: String

  SheetId: String

  VisualIds: Listing<String>?
}

class `AWS::QuickSight::TemplateSimpleClusterMarker` {
  Color: String?
}

class `AWS::QuickSight::AnalysisSliderControlDisplayOptions` {
  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  TitleOptions: `AWS::QuickSight::AnalysisLabelOptions`?
}

class `AWS::QuickSight::TemplateSmallMultiplesAxisProperties` {
  Placement: String?

  Scale: String?
}

class `AWS::QuickSight::AnalysisSmallMultiplesOptions` {
  MaxVisibleColumns: Number?

  MaxVisibleRows: Number?

  PanelConfiguration: `AWS::QuickSight::AnalysisPanelConfiguration`?

  XAxis: `AWS::QuickSight::TemplateSmallMultiplesAxisProperties`?

  YAxis: `AWS::QuickSight::TemplateSmallMultiplesAxisProperties`?
}

class `AWS::QuickSight::TemplateSpacing` {
  Bottom: String?

  Left: String?

  Right: String?

  Top: String?
}

class `AWS::QuickSight::AnalysisStringDefaultValues` {
  DynamicValue: `AWS::QuickSight::AnalysisDynamicDefaultValue`?

  StaticValues: Listing<String>?
}

class `AWS::QuickSight::AnalysisStringFormatConfiguration` {
  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  NumericFormatConfiguration: `AWS::QuickSight::AnalysisNumericFormatConfiguration`?
}

class `AWS::QuickSight::AnalysisStringParameterDeclaration` {
  DefaultValues: `AWS::QuickSight::AnalysisStringDefaultValues`?

  MappedDataSetParameters: Listing<`AWS::QuickSight::TemplateMappedDataSetParameter`>?

  Name: String

  ParameterValueType: String

  ValueWhenUnset: `AWS::QuickSight::TemplateStringValueWhenUnsetConfiguration`?
}

class `AWS::QuickSight::AnalysisSubtotalOptions` {
  CustomLabel: String?

  FieldLevel: String?

  FieldLevelOptions: Listing<`AWS::QuickSight::TemplatePivotTableFieldSubtotalOptions`>?

  MetricHeaderCellStyle: `AWS::QuickSight::AnalysisTableCellStyle`?

  StyleTargets: Listing<`AWS::QuickSight::TemplateTableStyleTarget`>?

  TotalCellStyle: `AWS::QuickSight::AnalysisTableCellStyle`?

  TotalsVisibility: String?

  ValueCellStyle: `AWS::QuickSight::AnalysisTableCellStyle`?
}

class `AWS::QuickSight::TemplateTableBorderOptions` {
  Color: String?

  Style: String?

  Thickness: Number?
}

class `AWS::QuickSight::AnalysisTableCellConditionalFormatting` {
  FieldId: String

  TextFormat: `AWS::QuickSight::AnalysisTextConditionalFormat`?
}

class `AWS::QuickSight::TemplateTableCellImageSizingConfiguration` {
  TableCellImageScalingConfiguration: String?
}

class `AWS::QuickSight::AnalysisTableCellStyle` {
  BackgroundColor: String?

  Border: `AWS::QuickSight::AnalysisGlobalTableBorderOptions`?

  FontConfiguration: `AWS::QuickSight::AnalysisFontConfiguration`?

  Height: Number?

  HorizontalTextAlignment: String?

  TextWrap: String?

  VerticalTextAlignment: String?

  Visibility: String?
}

class `AWS::QuickSight::AnalysisTableConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::AnalysisTableConditionalFormattingOption`>?
}

class `AWS::QuickSight::AnalysisTableConditionalFormattingOption` {
  Cell: `AWS::QuickSight::AnalysisTableCellConditionalFormatting`?

  Row: `AWS::QuickSight::AnalysisTableRowConditionalFormatting`?
}

class `AWS::QuickSight::AnalysisTableConfiguration` {
  FieldOptions: `AWS::QuickSight::AnalysisTableFieldOptions`?

  FieldWells: `AWS::QuickSight::AnalysisTableFieldWells`?

  PaginatedReportOptions: `AWS::QuickSight::TemplateTablePaginatedReportOptions`?

  SortConfiguration: `AWS::QuickSight::AnalysisTableSortConfiguration`?

  TableInlineVisualizations: Listing<`AWS::QuickSight::AnalysisTableInlineVisualization`>?

  TableOptions: `AWS::QuickSight::AnalysisTableOptions`?

  TotalOptions: `AWS::QuickSight::AnalysisTotalOptions`?
}

class `AWS::QuickSight::TemplateTableFieldCustomIconContent` {
  Icon: String?
}

class `AWS::QuickSight::AnalysisTableFieldCustomTextContent` {
  FontConfiguration: `AWS::QuickSight::AnalysisFontConfiguration`

  Value: String?
}

class `AWS::QuickSight::AnalysisTableFieldImageConfiguration` {
  SizingOptions: `AWS::QuickSight::TemplateTableCellImageSizingConfiguration`?
}

class `AWS::QuickSight::AnalysisTableFieldLinkConfiguration` {
  Content: `AWS::QuickSight::AnalysisTableFieldLinkContentConfiguration`

  Target: String
}

class `AWS::QuickSight::AnalysisTableFieldLinkContentConfiguration` {
  CustomIconContent: `AWS::QuickSight::TemplateTableFieldCustomIconContent`?

  CustomTextContent: `AWS::QuickSight::AnalysisTableFieldCustomTextContent`?
}

class `AWS::QuickSight::AnalysisTableFieldOption` {
  CustomLabel: String?

  FieldId: String

  URLStyling: `AWS::QuickSight::AnalysisTableFieldURLConfiguration`?

  Visibility: String?

  Width: String?
}

class `AWS::QuickSight::AnalysisTableFieldOptions` {
  Order: Listing<String>?

  PinnedFieldOptions: `AWS::QuickSight::TemplateTablePinnedFieldOptions`?

  SelectedFieldOptions: Listing<`AWS::QuickSight::AnalysisTableFieldOption`>?
}

class `AWS::QuickSight::AnalysisTableFieldURLConfiguration` {
  ImageConfiguration: `AWS::QuickSight::AnalysisTableFieldImageConfiguration`?

  LinkConfiguration: `AWS::QuickSight::AnalysisTableFieldLinkConfiguration`?
}

class `AWS::QuickSight::AnalysisTableFieldWells` {
  TableAggregatedFieldWells: `AWS::QuickSight::AnalysisTableAggregatedFieldWells`?

  TableUnaggregatedFieldWells: `AWS::QuickSight::AnalysisTableUnaggregatedFieldWells`?
}

class `AWS::QuickSight::AnalysisTableInlineVisualization` {
  DataBars: `AWS::QuickSight::TemplateDataBarsOptions`?
}

class `AWS::QuickSight::AnalysisTableOptions` {
  CellStyle: `AWS::QuickSight::AnalysisTableCellStyle`?

  HeaderStyle: `AWS::QuickSight::AnalysisTableCellStyle`?

  Orientation: String?

  RowAlternateColorOptions: `AWS::QuickSight::TemplateRowAlternateColorOptions`?
}

class `AWS::QuickSight::TemplateTablePinnedFieldOptions` {
  PinnedLeftFields: Listing<String>?
}

class `AWS::QuickSight::AnalysisTableRowConditionalFormatting` {
  BackgroundColor: `AWS::QuickSight::AnalysisConditionalFormattingColor`?

  TextColor: `AWS::QuickSight::AnalysisConditionalFormattingColor`?
}

class `AWS::QuickSight::AnalysisTableSideBorderOptions` {
  Bottom: `AWS::QuickSight::TemplateTableBorderOptions`?

  InnerHorizontal: `AWS::QuickSight::TemplateTableBorderOptions`?

  InnerVertical: `AWS::QuickSight::TemplateTableBorderOptions`?

  Left: `AWS::QuickSight::TemplateTableBorderOptions`?

  Right: `AWS::QuickSight::TemplateTableBorderOptions`?

  Top: `AWS::QuickSight::TemplateTableBorderOptions`?
}

class `AWS::QuickSight::AnalysisTableSortConfiguration` {
  PaginationConfiguration: `AWS::QuickSight::TemplatePaginationConfiguration`?

  RowSort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?
}

class `AWS::QuickSight::TemplateTableStyleTarget` {
  CellType: String
}

class `AWS::QuickSight::AnalysisTableUnaggregatedFieldWells` {
  Values: Listing<`AWS::QuickSight::AnalysisUnaggregatedField`>?
}

class `AWS::QuickSight::AnalysisTableVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisTableConfiguration`?

  ConditionalFormatting: `AWS::QuickSight::AnalysisTableConditionalFormatting`?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisTextFieldControlDisplayOptions` {
  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  PlaceholderOptions: `AWS::QuickSight::TemplateTrendArrowOptions`?

  TitleOptions: `AWS::QuickSight::AnalysisLabelOptions`?
}

class `AWS::QuickSight::AnalysisTextConditionalFormat` {
  BackgroundColor: `AWS::QuickSight::AnalysisConditionalFormattingColor`?

  Icon: `AWS::QuickSight::AnalysisConditionalFormattingIcon`?

  TextColor: `AWS::QuickSight::AnalysisConditionalFormattingColor`?
}

class `AWS::QuickSight::TemplateThousandSeparatorOptions` {
  Symbol: String?

  Visibility: String?
}

class `AWS::QuickSight::TemplateTimeBasedForecastProperties` {
  LowerBoundary: Number?

  PeriodsBackward: Number?

  PeriodsForward: Number?

  PredictionInterval: Number?

  Seasonality: Number?

  UpperBoundary: Number?
}

class `AWS::QuickSight::AnalysisTimeEqualityFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FilterId: String

  ParameterName: String?

  RollingDate: `AWS::QuickSight::TemplateRollingDateConfiguration`?

  TimeGranularity: String?

  Value: String?
}

class `AWS::QuickSight::AnalysisTimeRangeDrillDownFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  RangeMaximum: String

  RangeMinimum: String

  TimeGranularity: String
}

class `AWS::QuickSight::AnalysisTimeRangeFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  ExcludePeriodConfiguration: `AWS::QuickSight::TemplateExcludePeriodConfiguration`?

  FilterId: String

  IncludeMaximum: Boolean?

  IncludeMinimum: Boolean?

  NullOption: String

  RangeMaximumValue: `AWS::QuickSight::AnalysisTimeRangeFilterValue`?

  RangeMinimumValue: `AWS::QuickSight::AnalysisTimeRangeFilterValue`?

  TimeGranularity: String?
}

class `AWS::QuickSight::AnalysisTimeRangeFilterValue` {
  Parameter: String?

  RollingDate: `AWS::QuickSight::TemplateRollingDateConfiguration`?

  StaticValue: String?
}

class `AWS::QuickSight::AnalysisTooltipItem` {
  ColumnTooltipItem: `AWS::QuickSight::AnalysisColumnTooltipItem`?

  FieldTooltipItem: `AWS::QuickSight::TemplateFieldTooltipItem`?
}

class `AWS::QuickSight::AnalysisTooltipOptions` {
  FieldBasedTooltip: `AWS::QuickSight::AnalysisFieldBasedTooltip`?

  SelectedTooltipType: String?

  TooltipVisibility: String?
}

class `AWS::QuickSight::AnalysisTopBottomFilter` {
  AggregationSortConfigurations: Listing<`AWS::QuickSight::AnalysisAggregationSortConfiguration`>

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FilterId: String

  Limit: Number?

  ParameterName: String?

  TimeGranularity: String?
}

class `AWS::QuickSight::AnalysisTopBottomMoversComputation` {
  Category: `AWS::QuickSight::AnalysisDimensionField`?

  ComputationId: String

  MoverSize: Number?

  Name: String?

  SortOrder: String?

  Time: `AWS::QuickSight::AnalysisDimensionField`?

  Type: String

  Value: `AWS::QuickSight::AnalysisMeasureField`?
}

class `AWS::QuickSight::AnalysisTopBottomRankedComputation` {
  Category: `AWS::QuickSight::AnalysisDimensionField`?

  ComputationId: String

  Name: String?

  ResultSize: Number?

  Type: String

  Value: `AWS::QuickSight::AnalysisMeasureField`?
}

class `AWS::QuickSight::AnalysisTotalAggregationComputation` {
  ComputationId: String

  Name: String?

  Value: `AWS::QuickSight::AnalysisMeasureField`?
}

class `AWS::QuickSight::TemplateTotalAggregationFunction` {
  SimpleTotalAggregationFunction: String?
}

class `AWS::QuickSight::AnalysisTotalAggregationOption` {
  FieldId: String

  TotalAggregationFunction: `AWS::QuickSight::TemplateTotalAggregationFunction`
}

class `AWS::QuickSight::AnalysisTotalOptions` {
  CustomLabel: String?

  Placement: String?

  ScrollStatus: String?

  TotalAggregationOptions: Listing<`AWS::QuickSight::AnalysisTotalAggregationOption`>?

  TotalCellStyle: `AWS::QuickSight::AnalysisTableCellStyle`?

  TotalsVisibility: String?
}

class `AWS::QuickSight::AnalysisTreeMapAggregatedFieldWells` {
  Colors: Listing<`AWS::QuickSight::AnalysisMeasureField`>?

  Groups: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Sizes: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisTreeMapConfiguration` {
  ColorLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  ColorScale: `AWS::QuickSight::AnalysisColorScale`?

  DataLabels: `AWS::QuickSight::AnalysisDataLabelOptions`?

  FieldWells: `AWS::QuickSight::AnalysisTreeMapFieldWells`?

  GroupLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  Legend: `AWS::QuickSight::AnalysisLegendOptions`?

  SizeLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  SortConfiguration: `AWS::QuickSight::AnalysisTreeMapSortConfiguration`?

  Tooltip: `AWS::QuickSight::AnalysisTooltipOptions`?
}

class `AWS::QuickSight::AnalysisTreeMapFieldWells` {
  TreeMapAggregatedFieldWells: `AWS::QuickSight::AnalysisTreeMapAggregatedFieldWells`?
}

class `AWS::QuickSight::AnalysisTreeMapSortConfiguration` {
  TreeMapGroupItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  TreeMapSort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?
}

class `AWS::QuickSight::AnalysisTreeMapVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisTreeMapConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::AnalysisUnaggregatedField` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::AnalysisFormatConfiguration`?
}

class `AWS::QuickSight::AnalysisUniqueValuesComputation` {
  Category: `AWS::QuickSight::AnalysisDimensionField`?

  ComputationId: String

  Name: String?
}

class `AWS::QuickSight::AnalysisVisibleRangeOptions` {
  PercentRange: `AWS::QuickSight::TemplatePercentVisibleRange`?
}

class `AWS::QuickSight::AnalysisVisual` {
  BarChartVisual: `AWS::QuickSight::AnalysisBarChartVisual`?

  BoxPlotVisual: `AWS::QuickSight::AnalysisBoxPlotVisual`?

  ComboChartVisual: `AWS::QuickSight::AnalysisComboChartVisual`?

  CustomContentVisual: `AWS::QuickSight::AnalysisCustomContentVisual`?

  EmptyVisual: `AWS::QuickSight::AnalysisEmptyVisual`?

  FilledMapVisual: `AWS::QuickSight::AnalysisFilledMapVisual`?

  FunnelChartVisual: `AWS::QuickSight::AnalysisFunnelChartVisual`?

  GaugeChartVisual: `AWS::QuickSight::AnalysisGaugeChartVisual`?

  GeospatialMapVisual: `AWS::QuickSight::AnalysisGeospatialMapVisual`?

  HeatMapVisual: `AWS::QuickSight::AnalysisHeatMapVisual`?

  HistogramVisual: `AWS::QuickSight::AnalysisHistogramVisual`?

  InsightVisual: `AWS::QuickSight::AnalysisInsightVisual`?

  KPIVisual: `AWS::QuickSight::AnalysisKPIVisual`?

  LineChartVisual: `AWS::QuickSight::AnalysisLineChartVisual`?

  PieChartVisual: `AWS::QuickSight::AnalysisPieChartVisual`?

  PivotTableVisual: `AWS::QuickSight::AnalysisPivotTableVisual`?

  RadarChartVisual: `AWS::QuickSight::AnalysisRadarChartVisual`?

  SankeyDiagramVisual: `AWS::QuickSight::AnalysisSankeyDiagramVisual`?

  ScatterPlotVisual: `AWS::QuickSight::AnalysisScatterPlotVisual`?

  TableVisual: `AWS::QuickSight::AnalysisTableVisual`?

  TreeMapVisual: `AWS::QuickSight::AnalysisTreeMapVisual`?

  WaterfallVisual: `AWS::QuickSight::AnalysisWaterfallVisual`?

  WordCloudVisual: `AWS::QuickSight::AnalysisWordCloudVisual`?
}

class `AWS::QuickSight::AnalysisVisualCustomAction` {
  ActionOperations: Listing<`AWS::QuickSight::AnalysisVisualCustomActionOperation`>

  CustomActionId: String

  Name: String

  Status: String?

  Trigger: String
}

class `AWS::QuickSight::AnalysisVisualCustomActionOperation` {
  FilterOperation: `AWS::QuickSight::AnalysisCustomActionFilterOperation`?

  NavigationOperation: `AWS::QuickSight::AnalysisCustomActionNavigationOperation`?

  SetParametersOperation: `AWS::QuickSight::AnalysisCustomActionSetParametersOperation`?

  URLOperation: `AWS::QuickSight::TemplateCustomActionURLOperation`?
}

class `AWS::QuickSight::AnalysisVisualPalette` {
  ChartColor: String?

  ColorMap: Listing<`AWS::QuickSight::AnalysisDataPathColor`>?
}

class `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions` {
  FormatText: `AWS::QuickSight::TemplateShortFormatText`?

  Visibility: String?
}

class `AWS::QuickSight::AnalysisVisualTitleLabelOptions` {
  FormatText: `AWS::QuickSight::TemplateShortFormatText`?

  Visibility: String?
}

class `AWS::QuickSight::AnalysisWaterfallChartAggregatedFieldWells` {
  Breakdowns: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Categories: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Values: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisWaterfallChartConfiguration` {
  CategoryAxisDisplayOptions: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  CategoryAxisLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  DataLabels: `AWS::QuickSight::AnalysisDataLabelOptions`?

  FieldWells: `AWS::QuickSight::AnalysisWaterfallChartFieldWells`?

  Legend: `AWS::QuickSight::AnalysisLegendOptions`?

  PrimaryYAxisDisplayOptions: `AWS::QuickSight::AnalysisAxisDisplayOptions`?

  PrimaryYAxisLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  SortConfiguration: `AWS::QuickSight::AnalysisWaterfallChartSortConfiguration`?

  VisualPalette: `AWS::QuickSight::AnalysisVisualPalette`?

  WaterfallChartOptions: `AWS::QuickSight::TemplateWaterfallChartOptions`?
}

class `AWS::QuickSight::AnalysisWaterfallChartFieldWells` {
  WaterfallChartAggregatedFieldWells: `AWS::QuickSight::AnalysisWaterfallChartAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateWaterfallChartOptions` {
  TotalBarLabel: String?
}

class `AWS::QuickSight::AnalysisWaterfallChartSortConfiguration` {
  BreakdownItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::AnalysisFieldSortOptions`>?
}

class `AWS::QuickSight::AnalysisWaterfallVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisWaterfallChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateWhatIfPointScenario` {
  Date: String

  Value: Number
}

class `AWS::QuickSight::TemplateWhatIfRangeScenario` {
  EndDate: String

  StartDate: String

  Value: Number
}

class `AWS::QuickSight::AnalysisWordCloudAggregatedFieldWells` {
  GroupBy: Listing<`AWS::QuickSight::AnalysisDimensionField`>?

  Size: Listing<`AWS::QuickSight::AnalysisMeasureField`>?
}

class `AWS::QuickSight::AnalysisWordCloudChartConfiguration` {
  CategoryLabelOptions: `AWS::QuickSight::AnalysisChartAxisLabelOptions`?

  FieldWells: `AWS::QuickSight::AnalysisWordCloudFieldWells`?

  SortConfiguration: `AWS::QuickSight::AnalysisWordCloudSortConfiguration`?

  WordCloudOptions: `AWS::QuickSight::TemplateWordCloudOptions`?
}

class `AWS::QuickSight::AnalysisWordCloudFieldWells` {
  WordCloudAggregatedFieldWells: `AWS::QuickSight::AnalysisWordCloudAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateWordCloudOptions` {
  CloudLayout: String?

  MaximumStringLength: Number?

  WordCasing: String?

  WordOrientation: String?

  WordPadding: String?

  WordScaling: String?
}

class `AWS::QuickSight::AnalysisWordCloudVisual` {
  Actions: Listing<`AWS::QuickSight::AnalysisVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::AnalysisWordCloudChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::AnalysisColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::AnalysisVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::AnalysisVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::Dashboard` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::QuickSight::DashboardProperties`

  Type: "AWS::QuickSight::Dashboard"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::QuickSight::DashboardProperties` {
  AwsAccountId: String

  DashboardId: String

  DashboardPublishOptions: `AWS::QuickSight::DashboardDashboardPublishOptions`?

  Definition: `AWS::QuickSight::DashboardDashboardVersionDefinition`?

  LinkSharingConfiguration: `AWS::QuickSight::DashboardLinkSharingConfiguration`?

  Name: String

  Parameters: `AWS::QuickSight::DashboardParameters`?

  Permissions: Listing<`AWS::QuickSight::ThemeResourcePermission`>?

  SourceEntity: `AWS::QuickSight::DashboardDashboardSourceEntity`?

  Tags: Listing<Tag>?

  ThemeArn: String?

  ValidationStrategy: `AWS::VerifiedPermissions::PolicyStoreValidationSettings`?

  VersionDescription: String?
}

class `AWS::QuickSight::DashboardVisualMenuOption` {
  AvailabilityStatus: String?
}

class `AWS::QuickSight::DashboardAggregationFunction` {
  AttributeAggregationFunction: `AWS::QuickSight::TemplateAttributeAggregationFunction`?

  CategoricalAggregationFunction: String?

  DateAggregationFunction: String?

  NumericalAggregationFunction: `AWS::QuickSight::DashboardNumericalAggregationFunction`?
}

class `AWS::QuickSight::DashboardAggregationSortConfiguration` {
  AggregationFunction: `AWS::QuickSight::DashboardAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  SortDirection: String
}

class `AWS::QuickSight::DashboardAnalysisDefaults` {
  DefaultNewSheetConfiguration: `AWS::QuickSight::DashboardDefaultNewSheetConfiguration`
}

class `AWS::QuickSight::DashboardArcAxisConfiguration` {
  Range: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  ReserveRange: Number?
}

class `AWS::QuickSight::DashboardAxisDataOptions` {
  DateAxisOptions: `AWS::QuickSight::TemplateDateAxisOptions`?

  NumericAxisOptions: `AWS::QuickSight::DashboardNumericAxisOptions`?
}

class `AWS::QuickSight::DashboardAxisDisplayOptions` {
  AxisLineVisibility: String?

  AxisOffset: String?

  DataOptions: `AWS::QuickSight::DashboardAxisDataOptions`?

  GridLineVisibility: String?

  ScrollbarOptions: `AWS::QuickSight::DashboardScrollBarOptions`?

  TickLabelOptions: `AWS::QuickSight::DashboardAxisTickLabelOptions`?
}

class `AWS::QuickSight::DashboardAxisDisplayRange` {
  DataDriven: Dynamic?

  MinMax: `AWS::QuickSight::TemplateAxisDisplayMinMaxRange`?
}

class `AWS::QuickSight::DashboardAxisLabelOptions` {
  ApplyTo: `AWS::QuickSight::DashboardAxisLabelReferenceOptions`?

  CustomLabel: String?

  FontConfiguration: `AWS::QuickSight::DashboardFontConfiguration`?
}

class `AWS::QuickSight::DashboardAxisLabelReferenceOptions` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String
}

class `AWS::QuickSight::DashboardAxisScale` {
  Linear: `AWS::QuickSight::TemplateAxisLinearScale`?

  Logarithmic: `AWS::QuickSight::TemplateAxisLogarithmicScale`?
}

class `AWS::QuickSight::DashboardAxisTickLabelOptions` {
  LabelOptions: `AWS::QuickSight::DashboardLabelOptions`?

  RotationAngle: Number?
}

class `AWS::QuickSight::DashboardLineChartAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Colors: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  SmallMultiples: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Values: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardBarChartConfiguration` {
  BarsArrangement: String?

  CategoryAxis: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  CategoryLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  ColorLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  ContributionAnalysisDefaults: Listing<`AWS::QuickSight::DashboardContributionAnalysisDefault`>?

  DataLabels: `AWS::QuickSight::DashboardDataLabelOptions`?

  FieldWells: `AWS::QuickSight::DashboardBarChartFieldWells`?

  Legend: `AWS::QuickSight::DashboardLegendOptions`?

  Orientation: String?

  ReferenceLines: Listing<`AWS::QuickSight::DashboardReferenceLine`>?

  SmallMultiplesOptions: `AWS::QuickSight::DashboardSmallMultiplesOptions`?

  SortConfiguration: `AWS::QuickSight::DashboardBarChartSortConfiguration`?

  Tooltip: `AWS::QuickSight::DashboardTooltipOptions`?

  ValueAxis: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  ValueLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  VisualPalette: `AWS::QuickSight::DashboardVisualPalette`?
}

class `AWS::QuickSight::DashboardBarChartFieldWells` {
  BarChartAggregatedFieldWells: `AWS::QuickSight::DashboardLineChartAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardBarChartSortConfiguration` {
  CategoryItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?

  ColorItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  ColorSort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?

  SmallMultiplesLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SmallMultiplesSort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?
}

class `AWS::QuickSight::DashboardBarChartVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardBarChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardBodySectionConfiguration` {
  Content: `AWS::QuickSight::DashboardBodySectionContent`

  PageBreakConfiguration: `AWS::QuickSight::DashboardSectionPageBreakConfiguration`?

  SectionId: String

  Style: `AWS::QuickSight::DashboardSectionStyle`?
}

class `AWS::QuickSight::DashboardBodySectionContent` {
  Layout: `AWS::QuickSight::DashboardSectionLayoutConfiguration`?
}

class `AWS::QuickSight::DashboardTableAggregatedFieldWells` {
  GroupBy: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Values: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardBoxPlotChartConfiguration` {
  BoxPlotOptions: `AWS::QuickSight::DashboardBoxPlotOptions`?

  CategoryAxis: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  CategoryLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  FieldWells: `AWS::QuickSight::DashboardBoxPlotFieldWells`?

  Legend: `AWS::QuickSight::DashboardLegendOptions`?

  PrimaryYAxisDisplayOptions: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  PrimaryYAxisLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  ReferenceLines: Listing<`AWS::QuickSight::DashboardReferenceLine`>?

  SortConfiguration: `AWS::QuickSight::DashboardBoxPlotSortConfiguration`?

  Tooltip: `AWS::QuickSight::DashboardTooltipOptions`?

  VisualPalette: `AWS::QuickSight::DashboardVisualPalette`?
}

class `AWS::QuickSight::DashboardBoxPlotFieldWells` {
  BoxPlotAggregatedFieldWells: `AWS::QuickSight::DashboardTableAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardBoxPlotOptions` {
  AllDataPointsVisibility: String?

  OutlierVisibility: String?

  StyleOptions: `AWS::QuickSight::TemplateBoxPlotStyleOptions`?
}

class `AWS::QuickSight::DashboardBoxPlotSortConfiguration` {
  CategorySort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?

  PaginationConfiguration: `AWS::QuickSight::TemplatePaginationConfiguration`?
}

class `AWS::QuickSight::DashboardBoxPlotVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardBoxPlotChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardCascadingControlConfiguration` {
  SourceControls: Listing<`AWS::QuickSight::DashboardCascadingControlSource`>?
}

class `AWS::QuickSight::DashboardCascadingControlSource` {
  ColumnToMatch: `AWS::QuickSight::TemplateColumnIdentifier`?

  SourceSheetControlId: String?
}

class `AWS::QuickSight::DashboardCategoricalDimensionField` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::DashboardStringFormatConfiguration`?

  HierarchyId: String?
}

class `AWS::QuickSight::DashboardCategoricalMeasureField` {
  AggregationFunction: String?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::DashboardStringFormatConfiguration`?
}

class `AWS::QuickSight::DashboardCategoryDrillDownFilter` {
  CategoryValues: Listing<String>

  Column: `AWS::QuickSight::TemplateColumnIdentifier`
}

class `AWS::QuickSight::DashboardCategoryFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  Configuration: `AWS::QuickSight::DashboardCategoryFilterConfiguration`

  FilterId: String
}

class `AWS::QuickSight::DashboardCategoryFilterConfiguration` {
  CustomFilterConfiguration: `AWS::QuickSight::TemplateCustomFilterConfiguration`?

  CustomFilterListConfiguration: `AWS::QuickSight::TemplateCustomFilterListConfiguration`?

  FilterListConfiguration: `AWS::QuickSight::TemplateFilterListConfiguration`?
}

class `AWS::QuickSight::DashboardChartAxisLabelOptions` {
  AxisLabelOptions: Listing<`AWS::QuickSight::DashboardAxisLabelOptions`>?

  SortIconVisibility: String?

  Visibility: String?
}

class `AWS::QuickSight::DashboardClusterMarker` {
  SimpleClusterMarker: `AWS::QuickSight::TemplateSimpleClusterMarker`?
}

class `AWS::QuickSight::DashboardClusterMarkerConfiguration` {
  ClusterMarker: `AWS::QuickSight::DashboardClusterMarker`?
}

class `AWS::QuickSight::DashboardColorScale` {
  ColorFillType: String

  Colors: Listing<`AWS::QuickSight::TemplateDataColor`>

  NullValueColor: `AWS::QuickSight::TemplateDataColor`?
}

class `AWS::QuickSight::DashboardColorsConfiguration` {
  CustomColors: Listing<`AWS::QuickSight::TemplateCustomColor`>?
}

class `AWS::QuickSight::DashboardColumnConfiguration` {
  ColorsConfiguration: `AWS::QuickSight::DashboardColorsConfiguration`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FormatConfiguration: `AWS::QuickSight::DashboardFormatConfiguration`?

  Role: String?
}

class `AWS::QuickSight::DashboardColumnHierarchy` {
  DateTimeHierarchy: `AWS::QuickSight::DashboardDateTimeHierarchy`?

  ExplicitHierarchy: `AWS::QuickSight::DashboardPredefinedHierarchy`?

  PredefinedHierarchy: `AWS::QuickSight::DashboardPredefinedHierarchy`?
}

class `AWS::QuickSight::DashboardColumnSort` {
  AggregationFunction: `AWS::QuickSight::DashboardAggregationFunction`?

  Direction: String

  SortBy: `AWS::QuickSight::TemplateColumnIdentifier`
}

class `AWS::QuickSight::DashboardColumnTooltipItem` {
  Aggregation: `AWS::QuickSight::DashboardAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  Label: String?

  Visibility: String?
}

class `AWS::QuickSight::DashboardComboChartAggregatedFieldWells` {
  BarValues: Listing<`AWS::QuickSight::DashboardMeasureField`>?

  Category: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Colors: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  LineValues: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardComboChartConfiguration` {
  BarDataLabels: `AWS::QuickSight::DashboardDataLabelOptions`?

  BarsArrangement: String?

  CategoryAxis: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  CategoryLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  ColorLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  FieldWells: `AWS::QuickSight::DashboardComboChartFieldWells`?

  Legend: `AWS::QuickSight::DashboardLegendOptions`?

  LineDataLabels: `AWS::QuickSight::DashboardDataLabelOptions`?

  PrimaryYAxisDisplayOptions: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  PrimaryYAxisLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  ReferenceLines: Listing<`AWS::QuickSight::DashboardReferenceLine`>?

  SecondaryYAxisDisplayOptions: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  SecondaryYAxisLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  SortConfiguration: `AWS::QuickSight::DashboardRadarChartSortConfiguration`?

  Tooltip: `AWS::QuickSight::DashboardTooltipOptions`?

  VisualPalette: `AWS::QuickSight::DashboardVisualPalette`?
}

class `AWS::QuickSight::DashboardComboChartFieldWells` {
  ComboChartAggregatedFieldWells: `AWS::QuickSight::DashboardComboChartAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardRadarChartSortConfiguration` {
  CategoryItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?

  ColorItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  ColorSort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?
}

class `AWS::QuickSight::DashboardComboChartVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardComboChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardComparisonConfiguration` {
  ComparisonFormat: `AWS::QuickSight::DashboardComparisonFormatConfiguration`?

  ComparisonMethod: String?
}

class `AWS::QuickSight::DashboardComparisonFormatConfiguration` {
  NumberDisplayFormatConfiguration: `AWS::QuickSight::DashboardNumberDisplayFormatConfiguration`?

  PercentageDisplayFormatConfiguration: `AWS::QuickSight::DashboardPercentageDisplayFormatConfiguration`?
}

class `AWS::QuickSight::DashboardComputation` {
  Forecast: `AWS::QuickSight::DashboardForecastComputation`?

  GrowthRate: `AWS::QuickSight::DashboardGrowthRateComputation`?

  MaximumMinimum: `AWS::QuickSight::DashboardMaximumMinimumComputation`?

  MetricComparison: `AWS::QuickSight::DashboardMetricComparisonComputation`?

  PeriodOverPeriod: `AWS::QuickSight::DashboardPeriodOverPeriodComputation`?

  PeriodToDate: `AWS::QuickSight::DashboardPeriodToDateComputation`?

  TopBottomMovers: `AWS::QuickSight::DashboardTopBottomMoversComputation`?

  TopBottomRanked: `AWS::QuickSight::DashboardTopBottomRankedComputation`?

  TotalAggregation: `AWS::QuickSight::DashboardTotalAggregationComputation`?

  UniqueValues: `AWS::QuickSight::DashboardUniqueValuesComputation`?
}

class `AWS::QuickSight::DashboardConditionalFormattingColor` {
  Gradient: `AWS::QuickSight::DashboardConditionalFormattingGradientColor`?

  Solid: `AWS::QuickSight::TemplateConditionalFormattingSolidColor`?
}

class `AWS::QuickSight::DashboardConditionalFormattingCustomIconCondition` {
  Color: String?

  DisplayConfiguration: `AWS::QuickSight::TemplateConditionalFormattingIconDisplayConfiguration`?

  Expression: String

  IconOptions: `AWS::QuickSight::TemplateConditionalFormattingCustomIconOptions`
}

class `AWS::QuickSight::DashboardConditionalFormattingGradientColor` {
  Color: `AWS::QuickSight::DashboardGradientColor`

  Expression: String
}

class `AWS::QuickSight::DashboardConditionalFormattingIcon` {
  CustomCondition: `AWS::QuickSight::DashboardConditionalFormattingCustomIconCondition`?

  IconSet: `AWS::QuickSight::TemplateConditionalFormattingIconSet`?
}

class `AWS::QuickSight::DashboardContributionAnalysisDefault` {
  ContributorDimensions: Listing<`AWS::QuickSight::TemplateColumnIdentifier`>

  MeasureFieldId: String
}

class `AWS::QuickSight::DashboardCurrencyDisplayFormatConfiguration` {
  DecimalPlacesConfiguration: `AWS::QuickSight::TemplateDecimalPlacesConfiguration`?

  NegativeValueConfiguration: `AWS::QuickSight::TemplateNegativeValueConfiguration`?

  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  NumberScale: String?

  Prefix: String?

  SeparatorConfiguration: `AWS::QuickSight::DashboardNumericSeparatorConfiguration`?

  Suffix: String?

  Symbol: String?
}

class `AWS::QuickSight::DashboardCustomActionFilterOperation` {
  SelectedFieldsConfiguration: `AWS::QuickSight::DashboardFilterOperationSelectedFieldsConfiguration`

  TargetVisualsConfiguration: `AWS::QuickSight::DashboardFilterOperationTargetVisualsConfiguration`
}

class `AWS::QuickSight::DashboardCustomActionNavigationOperation` {
  LocalNavigationConfiguration: `AWS::QuickSight::TemplateLocalNavigationConfiguration`?
}

class `AWS::QuickSight::DashboardCustomActionSetParametersOperation` {
  ParameterValueConfigurations: Listing<`AWS::QuickSight::DashboardSetParameterValueConfiguration`>
}

class `AWS::QuickSight::DashboardCustomContentVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateCustomContentConfiguration`?

  DataSetIdentifier: String

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardCustomValuesConfiguration` {
  CustomValues: `AWS::QuickSight::TemplateCustomParameterValues`

  IncludeNullValue: Boolean?
}

class `AWS::QuickSight::DashboardDashboardError` {
  Message: String?

  Type: String?

  ViolatedEntities: Listing<`AWS::QuickSight::TemplateEntity`>?
}

class `AWS::QuickSight::DashboardDashboardPublishOptions` {
  AdHocFilteringOption: `AWS::QuickSight::DashboardVisualMenuOption`?

  DataPointDrillUpDownOption: `AWS::QuickSight::DashboardVisualMenuOption`?

  DataPointMenuLabelOption: `AWS::QuickSight::DashboardVisualMenuOption`?

  DataPointTooltipOption: `AWS::QuickSight::DashboardVisualMenuOption`?

  ExportToCSVOption: `AWS::QuickSight::DashboardVisualMenuOption`?

  ExportWithHiddenFieldsOption: `AWS::QuickSight::DashboardVisualMenuOption`?

  SheetControlsOption: `AWS::QuickSight::DashboardSheetControlsOption`?

  SheetLayoutElementMaximizationOption: `AWS::QuickSight::DashboardVisualMenuOption`?

  VisualAxisSortOption: `AWS::QuickSight::DashboardVisualMenuOption`?

  VisualMenuOption: `AWS::QuickSight::DashboardVisualMenuOption`?

  VisualPublishOptions: `AWS::QuickSight::DashboardDashboardVisualPublishOptions`?
}

class `AWS::QuickSight::DashboardDashboardSourceEntity` {
  SourceTemplate: `AWS::QuickSight::DashboardDashboardSourceTemplate`?
}

class `AWS::QuickSight::DashboardDashboardSourceTemplate` {
  Arn: String

  DataSetReferences: Listing<`AWS::QuickSight::TemplateDataSetReference`>
}

class `AWS::QuickSight::DashboardDashboardVersion` {
  Arn: String?

  CreatedTime: String?

  DataSetArns: Listing<String>?

  Description: String?

  Errors: Listing<`AWS::QuickSight::DashboardDashboardError`>?

  Sheets: Listing<`AWS::QuickSight::TemplateSheet`>?

  SourceEntityArn: String?

  Status: String?

  ThemeArn: String?

  VersionNumber: Number?
}

class `AWS::QuickSight::DashboardDashboardVersionDefinition` {
  AnalysisDefaults: `AWS::QuickSight::DashboardAnalysisDefaults`?

  CalculatedFields: Listing<`AWS::QuickSight::TemplateCalculatedField`>?

  ColumnConfigurations: Listing<`AWS::QuickSight::DashboardColumnConfiguration`>?

  DataSetIdentifierDeclarations: Listing<`AWS::QuickSight::DashboardDataSetIdentifierDeclaration`>

  FilterGroups: Listing<`AWS::QuickSight::DashboardFilterGroup`>?

  Options: `AWS::QuickSight::TemplateAssetOptions`?

  ParameterDeclarations: Listing<`AWS::QuickSight::DashboardParameterDeclaration`>?

  Sheets: Listing<`AWS::QuickSight::DashboardSheetDefinition`>?
}

class `AWS::QuickSight::DashboardDashboardVisualPublishOptions` {
  ExportHiddenFieldsOption: `AWS::QuickSight::DashboardVisualMenuOption`?
}

class `AWS::QuickSight::DashboardDataFieldSeriesItem` {
  AxisBinding: String

  FieldId: String

  FieldValue: String?

  Settings: `AWS::QuickSight::DashboardLineChartSeriesSettings`?
}

class `AWS::QuickSight::DashboardDataLabelOptions` {
  CategoryLabelVisibility: String?

  DataLabelTypes: Listing<`AWS::QuickSight::DashboardDataLabelType`>?

  LabelColor: String?

  LabelContent: String?

  LabelFontConfiguration: `AWS::QuickSight::DashboardFontConfiguration`?

  MeasureLabelVisibility: String?

  Overlap: String?

  Position: String?

  TotalsVisibility: String?

  Visibility: String?
}

class `AWS::QuickSight::DashboardDataLabelType` {
  DataPathLabelType: `AWS::QuickSight::TemplateDataPathLabelType`?

  FieldLabelType: `AWS::QuickSight::TemplateFieldLabelType`?

  MaximumLabelType: `AWS::QuickSight::TemplateTrendArrowOptions`?

  MinimumLabelType: `AWS::QuickSight::TemplateTrendArrowOptions`?

  RangeEndsLabelType: `AWS::QuickSight::TemplateTrendArrowOptions`?
}

class `AWS::QuickSight::DashboardDataPathColor` {
  Color: String

  Element: `AWS::QuickSight::DashboardDataPathValue`

  TimeGranularity: String?
}

class `AWS::QuickSight::DashboardDataPathSort` {
  Direction: String

  SortPaths: Listing<`AWS::QuickSight::DashboardDataPathValue`>
}

class `AWS::QuickSight::DashboardDataPathValue` {
  DataPathType: `AWS::QuickSight::TemplateDataPathType`?

  FieldId: String?

  FieldValue: String?
}

class `AWS::QuickSight::DashboardDateDimensionField` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  DateGranularity: String?

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::DashboardDateTimeFormatConfiguration`?

  HierarchyId: String?
}

class `AWS::QuickSight::DashboardDateMeasureField` {
  AggregationFunction: String?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::DashboardDateTimeFormatConfiguration`?
}

class `AWS::QuickSight::DashboardDateTimeDefaultValues` {
  DynamicValue: `AWS::QuickSight::DashboardDynamicDefaultValue`?

  RollingDate: `AWS::QuickSight::TemplateRollingDateConfiguration`?

  StaticValues: Listing<String>?
}

class `AWS::QuickSight::DashboardDateTimeFormatConfiguration` {
  DateTimeFormat: String?

  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  NumericFormatConfiguration: `AWS::QuickSight::DashboardNumericFormatConfiguration`?
}

class `AWS::QuickSight::DashboardDateTimeHierarchy` {
  DrillDownFilters: Listing<`AWS::QuickSight::DashboardDrillDownFilter`>?

  HierarchyId: String
}

class `AWS::QuickSight::DashboardDateTimeParameterDeclaration` {
  DefaultValues: `AWS::QuickSight::DashboardDateTimeDefaultValues`?

  MappedDataSetParameters: Listing<`AWS::QuickSight::TemplateMappedDataSetParameter`>?

  Name: String

  TimeGranularity: String?

  ValueWhenUnset: `AWS::QuickSight::TemplateStringValueWhenUnsetConfiguration`?
}

class `AWS::QuickSight::DashboardRelativeDateTimeControlDisplayOptions` {
  DateTimeFormat: String?

  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  TitleOptions: `AWS::QuickSight::DashboardLabelOptions`?
}

class `AWS::QuickSight::DashboardIntegerDefaultValues` {
  DynamicValue: `AWS::QuickSight::DashboardDynamicDefaultValue`?

  StaticValues: Listing<Number>?
}

class `AWS::QuickSight::DashboardDecimalParameterDeclaration` {
  DefaultValues: `AWS::QuickSight::DashboardIntegerDefaultValues`?

  MappedDataSetParameters: Listing<`AWS::QuickSight::TemplateMappedDataSetParameter`>?

  Name: String

  ParameterValueType: String

  ValueWhenUnset: `AWS::QuickSight::TemplateIntegerValueWhenUnsetConfiguration`?
}

class `AWS::QuickSight::DashboardDefaultFreeFormLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::DashboardFreeFormLayoutCanvasSizeOptions`
}

class `AWS::QuickSight::DashboardDefaultGridLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::DashboardGridLayoutCanvasSizeOptions`
}

class `AWS::QuickSight::DashboardDefaultInteractiveLayoutConfiguration` {
  FreeForm: `AWS::QuickSight::DashboardDefaultFreeFormLayoutConfiguration`?

  Grid: `AWS::QuickSight::DashboardDefaultGridLayoutConfiguration`?
}

class `AWS::QuickSight::DashboardDefaultNewSheetConfiguration` {
  InteractiveLayoutConfiguration: `AWS::QuickSight::DashboardDefaultInteractiveLayoutConfiguration`?

  PaginatedLayoutConfiguration: `AWS::QuickSight::DashboardDefaultPaginatedLayoutConfiguration`?

  SheetContentType: String?
}

class `AWS::QuickSight::DashboardDefaultPaginatedLayoutConfiguration` {
  SectionBased: `AWS::QuickSight::DashboardDefaultSectionBasedLayoutConfiguration`?
}

class `AWS::QuickSight::DashboardDefaultSectionBasedLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::DashboardSectionBasedLayoutCanvasSizeOptions`
}

class `AWS::QuickSight::DashboardDestinationParameterValueConfiguration` {
  CustomValuesConfiguration: `AWS::QuickSight::DashboardCustomValuesConfiguration`?

  SelectAllValueOptions: String?

  SourceColumn: `AWS::QuickSight::TemplateColumnIdentifier`?

  SourceField: String?

  SourceParameterName: String?
}

class `AWS::QuickSight::DashboardDimensionField` {
  CategoricalDimensionField: `AWS::QuickSight::DashboardCategoricalDimensionField`?

  DateDimensionField: `AWS::QuickSight::DashboardDateDimensionField`?

  NumericalDimensionField: `AWS::QuickSight::DashboardNumericalDimensionField`?
}

class `AWS::QuickSight::DashboardDonutOptions` {
  ArcOptions: `AWS::QuickSight::TemplateArcOptions`?

  DonutCenterOptions: `AWS::QuickSight::TemplateDonutCenterOptions`?
}

class `AWS::QuickSight::DashboardDrillDownFilter` {
  CategoryFilter: `AWS::QuickSight::DashboardCategoryDrillDownFilter`?

  NumericEqualityFilter: `AWS::QuickSight::DashboardNumericEqualityDrillDownFilter`?

  TimeRangeFilter: `AWS::QuickSight::DashboardTimeRangeDrillDownFilter`?
}

class `AWS::QuickSight::DashboardDropDownControlDisplayOptions` {
  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  SelectAllOptions: `AWS::QuickSight::TemplateTrendArrowOptions`?

  TitleOptions: `AWS::QuickSight::DashboardLabelOptions`?
}

class `AWS::QuickSight::DashboardDynamicDefaultValue` {
  DefaultValueColumn: `AWS::QuickSight::TemplateColumnIdentifier`

  GroupNameColumn: `AWS::QuickSight::TemplateColumnIdentifier`?

  UserNameColumn: `AWS::QuickSight::TemplateColumnIdentifier`?
}

class `AWS::QuickSight::DashboardEmptyVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  DataSetIdentifier: String

  VisualId: String
}

class `AWS::QuickSight::DashboardPredefinedHierarchy` {
  Columns: Listing<`AWS::QuickSight::TemplateColumnIdentifier`>

  DrillDownFilters: Listing<`AWS::QuickSight::DashboardDrillDownFilter`>?

  HierarchyId: String
}

class `AWS::QuickSight::DashboardFieldBasedTooltip` {
  AggregationVisibility: String?

  TooltipFields: Listing<`AWS::QuickSight::DashboardTooltipItem`>?

  TooltipTitleType: String?
}

class `AWS::QuickSight::DashboardFieldSeriesItem` {
  AxisBinding: String

  FieldId: String

  Settings: `AWS::QuickSight::DashboardLineChartSeriesSettings`?
}

class `AWS::QuickSight::DashboardFieldSortOptions` {
  ColumnSort: `AWS::QuickSight::DashboardColumnSort`?

  FieldSort: `AWS::QuickSight::TemplateFieldSort`?
}

class `AWS::QuickSight::DashboardFilledMapAggregatedFieldWells` {
  Geospatial: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Values: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardFilledMapConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::DashboardFilledMapConditionalFormattingOption`>
}

class `AWS::QuickSight::DashboardFilledMapConditionalFormattingOption` {
  Shape: `AWS::QuickSight::DashboardFilledMapShapeConditionalFormatting`
}

class `AWS::QuickSight::DashboardFilledMapConfiguration` {
  FieldWells: `AWS::QuickSight::DashboardFilledMapFieldWells`?

  Legend: `AWS::QuickSight::DashboardLegendOptions`?

  MapStyleOptions: `AWS::QuickSight::TemplateGeospatialMapStyleOptions`?

  SortConfiguration: `AWS::QuickSight::DashboardFilledMapSortConfiguration`?

  Tooltip: `AWS::QuickSight::DashboardTooltipOptions`?

  WindowOptions: `AWS::QuickSight::DashboardGeospatialWindowOptions`?
}

class `AWS::QuickSight::DashboardFilledMapFieldWells` {
  FilledMapAggregatedFieldWells: `AWS::QuickSight::DashboardFilledMapAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardFilledMapShapeConditionalFormatting` {
  FieldId: String

  Format: `AWS::QuickSight::DashboardShapeConditionalFormat`?
}

class `AWS::QuickSight::DashboardFilledMapSortConfiguration` {
  CategorySort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?
}

class `AWS::QuickSight::DashboardFilledMapVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardFilledMapConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  ConditionalFormatting: `AWS::QuickSight::DashboardFilledMapConditionalFormatting`?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardFilter` {
  CategoryFilter: `AWS::QuickSight::DashboardCategoryFilter`?

  NumericEqualityFilter: `AWS::QuickSight::DashboardNumericEqualityFilter`?

  NumericRangeFilter: `AWS::QuickSight::DashboardNumericRangeFilter`?

  RelativeDatesFilter: `AWS::QuickSight::DashboardRelativeDatesFilter`?

  TimeEqualityFilter: `AWS::QuickSight::DashboardTimeEqualityFilter`?

  TimeRangeFilter: `AWS::QuickSight::DashboardTimeRangeFilter`?

  TopBottomFilter: `AWS::QuickSight::DashboardTopBottomFilter`?
}

class `AWS::QuickSight::DashboardFilterControl` {
  DateTimePicker: `AWS::QuickSight::DashboardFilterDateTimePickerControl`?

  Dropdown: `AWS::QuickSight::DashboardFilterDropDownControl`?

  List: `AWS::QuickSight::DashboardFilterListControl`?

  RelativeDateTime: `AWS::QuickSight::DashboardFilterRelativeDateTimeControl`?

  Slider: `AWS::QuickSight::DashboardFilterSliderControl`?

  TextArea: `AWS::QuickSight::DashboardFilterTextAreaControl`?

  TextField: `AWS::QuickSight::DashboardFilterTextFieldControl`?
}

class `AWS::QuickSight::DashboardFilterDateTimePickerControl` {
  DisplayOptions: `AWS::QuickSight::DashboardRelativeDateTimeControlDisplayOptions`?

  FilterControlId: String

  SourceFilterId: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::DashboardFilterDropDownControl` {
  CascadingControlConfiguration: `AWS::QuickSight::DashboardCascadingControlConfiguration`?

  DisplayOptions: `AWS::QuickSight::DashboardDropDownControlDisplayOptions`?

  FilterControlId: String

  SelectableValues: `AWS::QuickSight::TemplateFilterSelectableValues`?

  SourceFilterId: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::DashboardFilterGroup` {
  CrossDataset: String

  FilterGroupId: String

  Filters: Listing<`AWS::QuickSight::DashboardFilter`>

  ScopeConfiguration: `AWS::QuickSight::DashboardFilterScopeConfiguration`

  Status: String?
}

class `AWS::QuickSight::DashboardFilterListControl` {
  CascadingControlConfiguration: `AWS::QuickSight::DashboardCascadingControlConfiguration`?

  DisplayOptions: `AWS::QuickSight::DashboardListControlDisplayOptions`?

  FilterControlId: String

  SelectableValues: `AWS::QuickSight::TemplateFilterSelectableValues`?

  SourceFilterId: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::DashboardFilterOperationSelectedFieldsConfiguration` {
  SelectedColumns: Listing<`AWS::QuickSight::TemplateColumnIdentifier`>?

  SelectedFieldOptions: String?

  SelectedFields: Listing<String>?
}

class `AWS::QuickSight::DashboardFilterOperationTargetVisualsConfiguration` {
  SameSheetTargetVisualConfiguration: `AWS::QuickSight::TemplateSameSheetTargetVisualConfiguration`?
}

class `AWS::QuickSight::DashboardFilterRelativeDateTimeControl` {
  DisplayOptions: `AWS::QuickSight::DashboardRelativeDateTimeControlDisplayOptions`?

  FilterControlId: String

  SourceFilterId: String

  Title: String
}

class `AWS::QuickSight::DashboardFilterScopeConfiguration` {
  AllSheets: Dynamic?

  SelectedSheets: `AWS::QuickSight::DashboardSelectedSheetsFilterScopeConfiguration`?
}

class `AWS::QuickSight::DashboardFilterSliderControl` {
  DisplayOptions: `AWS::QuickSight::DashboardSliderControlDisplayOptions`?

  FilterControlId: String

  MaximumValue: Number

  MinimumValue: Number

  SourceFilterId: String

  StepSize: Number

  Title: String

  Type: String?
}

class `AWS::QuickSight::DashboardFilterTextAreaControl` {
  Delimiter: String?

  DisplayOptions: `AWS::QuickSight::DashboardTextFieldControlDisplayOptions`?

  FilterControlId: String

  SourceFilterId: String

  Title: String
}

class `AWS::QuickSight::DashboardFilterTextFieldControl` {
  DisplayOptions: `AWS::QuickSight::DashboardTextFieldControlDisplayOptions`?

  FilterControlId: String

  SourceFilterId: String

  Title: String
}

class `AWS::QuickSight::DashboardFontConfiguration` {
  FontColor: String?

  FontDecoration: String?

  FontSize: `AWS::QuickSight::TemplateFontSize`?

  FontStyle: String?

  FontWeight: `AWS::WAFv2::RuleGroupLabelSummary`?
}

class `AWS::QuickSight::DashboardForecastComputation` {
  ComputationId: String

  CustomSeasonalityValue: Number?

  LowerBoundary: Number?

  Name: String?

  PeriodsBackward: Number?

  PeriodsForward: Number?

  PredictionInterval: Number?

  Seasonality: String?

  Time: `AWS::QuickSight::DashboardDimensionField`?

  UpperBoundary: Number?

  Value: `AWS::QuickSight::DashboardMeasureField`?
}

class `AWS::QuickSight::DashboardForecastConfiguration` {
  ForecastProperties: `AWS::QuickSight::TemplateTimeBasedForecastProperties`?

  Scenario: `AWS::QuickSight::DashboardForecastScenario`?
}

class `AWS::QuickSight::DashboardForecastScenario` {
  WhatIfPointScenario: `AWS::QuickSight::TemplateWhatIfPointScenario`?

  WhatIfRangeScenario: `AWS::QuickSight::TemplateWhatIfRangeScenario`?
}

class `AWS::QuickSight::DashboardFormatConfiguration` {
  DateTimeFormatConfiguration: `AWS::QuickSight::DashboardDateTimeFormatConfiguration`?

  NumberFormatConfiguration: `AWS::QuickSight::DashboardNumberFormatConfiguration`?

  StringFormatConfiguration: `AWS::QuickSight::DashboardStringFormatConfiguration`?
}

class `AWS::QuickSight::DashboardFreeFormLayoutCanvasSizeOptions` {
  ScreenCanvasSizeOptions: `AWS::QuickSight::TemplateFreeFormLayoutScreenCanvasSizeOptions`?
}

class `AWS::QuickSight::DashboardFreeFormLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::DashboardFreeFormLayoutCanvasSizeOptions`?

  Elements: Listing<`AWS::QuickSight::DashboardFreeFormLayoutElement`>
}

class `AWS::QuickSight::DashboardFreeFormLayoutElement` {
  BackgroundStyle: `AWS::QuickSight::TemplateFreeFormLayoutElementBorderStyle`?

  BorderStyle: `AWS::QuickSight::TemplateFreeFormLayoutElementBorderStyle`?

  ElementId: String

  ElementType: String

  Height: String

  LoadingAnimation: `AWS::QuickSight::TemplateTrendArrowOptions`?

  RenderingRules: Listing<`AWS::QuickSight::DashboardSheetElementRenderingRule`>?

  SelectedBorderStyle: `AWS::QuickSight::TemplateFreeFormLayoutElementBorderStyle`?

  Visibility: String?

  Width: String

  XAxisLocation: String

  YAxisLocation: String
}

class `AWS::QuickSight::DashboardFreeFormSectionLayoutConfiguration` {
  Elements: Listing<`AWS::QuickSight::DashboardFreeFormLayoutElement`>
}

class `AWS::QuickSight::DashboardFunnelChartAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Values: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardFunnelChartConfiguration` {
  CategoryLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  DataLabelOptions: `AWS::QuickSight::DashboardFunnelChartDataLabelOptions`?

  FieldWells: `AWS::QuickSight::DashboardFunnelChartFieldWells`?

  SortConfiguration: `AWS::QuickSight::DashboardWordCloudSortConfiguration`?

  Tooltip: `AWS::QuickSight::DashboardTooltipOptions`?

  ValueLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  VisualPalette: `AWS::QuickSight::DashboardVisualPalette`?
}

class `AWS::QuickSight::DashboardFunnelChartDataLabelOptions` {
  CategoryLabelVisibility: String?

  LabelColor: String?

  LabelFontConfiguration: `AWS::QuickSight::DashboardFontConfiguration`?

  MeasureDataLabelStyle: String?

  MeasureLabelVisibility: String?

  Position: String?

  Visibility: String?
}

class `AWS::QuickSight::DashboardFunnelChartFieldWells` {
  FunnelChartAggregatedFieldWells: `AWS::QuickSight::DashboardFunnelChartAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardWordCloudSortConfiguration` {
  CategoryItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?
}

class `AWS::QuickSight::DashboardFunnelChartVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardFunnelChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardKPIProgressBarConditionalFormatting` {
  ForegroundColor: `AWS::QuickSight::DashboardConditionalFormattingColor`?
}

class `AWS::QuickSight::DashboardGaugeChartConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::DashboardGaugeChartConditionalFormattingOption`>?
}

class `AWS::QuickSight::DashboardGaugeChartConditionalFormattingOption` {
  Arc: `AWS::QuickSight::DashboardKPIProgressBarConditionalFormatting`?

  PrimaryValue: `AWS::QuickSight::DashboardKPIPrimaryValueConditionalFormatting`?
}

class `AWS::QuickSight::DashboardGaugeChartConfiguration` {
  DataLabels: `AWS::QuickSight::DashboardDataLabelOptions`?

  FieldWells: `AWS::QuickSight::DashboardGaugeChartFieldWells`?

  GaugeChartOptions: `AWS::QuickSight::DashboardGaugeChartOptions`?

  TooltipOptions: `AWS::QuickSight::DashboardTooltipOptions`?

  VisualPalette: `AWS::QuickSight::DashboardVisualPalette`?
}

class `AWS::QuickSight::DashboardGaugeChartFieldWells` {
  TargetValues: Listing<`AWS::QuickSight::DashboardMeasureField`>?

  Values: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardGaugeChartOptions` {
  Arc: `AWS::QuickSight::TemplateArcConfiguration`?

  ArcAxis: `AWS::QuickSight::DashboardArcAxisConfiguration`?

  Comparison: `AWS::QuickSight::DashboardComparisonConfiguration`?

  PrimaryValueDisplayType: String?

  PrimaryValueFontConfiguration: `AWS::QuickSight::DashboardFontConfiguration`?
}

class `AWS::QuickSight::DashboardKPIPrimaryValueConditionalFormatting` {
  Icon: `AWS::QuickSight::DashboardConditionalFormattingIcon`?

  TextColor: `AWS::QuickSight::DashboardConditionalFormattingColor`?
}

class `AWS::QuickSight::DashboardGaugeChartVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardGaugeChartConfiguration`?

  ConditionalFormatting: `AWS::QuickSight::DashboardGaugeChartConditionalFormatting`?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardGeospatialHeatmapColorScale` {
  Colors: Listing<`AWS::QuickSight::TemplateGeospatialHeatmapDataColor`>?
}

class `AWS::QuickSight::DashboardGeospatialHeatmapConfiguration` {
  HeatmapColor: `AWS::QuickSight::DashboardGeospatialHeatmapColorScale`?
}

class `AWS::QuickSight::DashboardGeospatialMapAggregatedFieldWells` {
  Colors: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Geospatial: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Values: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardGeospatialMapConfiguration` {
  FieldWells: `AWS::QuickSight::DashboardGeospatialMapFieldWells`?

  Legend: `AWS::QuickSight::DashboardLegendOptions`?

  MapStyleOptions: `AWS::QuickSight::TemplateGeospatialMapStyleOptions`?

  PointStyleOptions: `AWS::QuickSight::DashboardGeospatialPointStyleOptions`?

  Tooltip: `AWS::QuickSight::DashboardTooltipOptions`?

  VisualPalette: `AWS::QuickSight::DashboardVisualPalette`?

  WindowOptions: `AWS::QuickSight::DashboardGeospatialWindowOptions`?
}

class `AWS::QuickSight::DashboardGeospatialMapFieldWells` {
  GeospatialMapAggregatedFieldWells: `AWS::QuickSight::DashboardGeospatialMapAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardGeospatialMapVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardGeospatialMapConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardGeospatialPointStyleOptions` {
  ClusterMarkerConfiguration: `AWS::QuickSight::DashboardClusterMarkerConfiguration`?

  HeatmapConfiguration: `AWS::QuickSight::DashboardGeospatialHeatmapConfiguration`?

  SelectedPointStyle: String?
}

class `AWS::QuickSight::DashboardGeospatialWindowOptions` {
  Bounds: `AWS::QuickSight::TemplateGeospatialCoordinateBounds`?

  MapZoomMode: String?
}

class `AWS::QuickSight::DashboardGlobalTableBorderOptions` {
  SideSpecificBorder: `AWS::QuickSight::DashboardTableSideBorderOptions`?

  UniformBorder: `AWS::QuickSight::TemplateTableBorderOptions`?
}

class `AWS::QuickSight::DashboardGradientColor` {
  Stops: Listing<`AWS::QuickSight::TemplateGradientStop`>?
}

class `AWS::QuickSight::DashboardGridLayoutCanvasSizeOptions` {
  ScreenCanvasSizeOptions: `AWS::QuickSight::TemplateGridLayoutScreenCanvasSizeOptions`?
}

class `AWS::QuickSight::DashboardGridLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::DashboardGridLayoutCanvasSizeOptions`?

  Elements: Listing<`AWS::QuickSight::TemplateGridLayoutElement`>
}

class `AWS::QuickSight::DashboardGrowthRateComputation` {
  ComputationId: String

  Name: String?

  PeriodSize: Number?

  Time: `AWS::QuickSight::DashboardDimensionField`?

  Value: `AWS::QuickSight::DashboardMeasureField`?
}

class `AWS::QuickSight::DashboardHeaderFooterSectionConfiguration` {
  Layout: `AWS::QuickSight::DashboardSectionLayoutConfiguration`

  SectionId: String

  Style: `AWS::QuickSight::DashboardSectionStyle`?
}

class `AWS::QuickSight::DashboardPivotTableAggregatedFieldWells` {
  Columns: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Rows: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Values: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardHeatMapConfiguration` {
  ColorScale: `AWS::QuickSight::DashboardColorScale`?

  ColumnLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  DataLabels: `AWS::QuickSight::DashboardDataLabelOptions`?

  FieldWells: `AWS::QuickSight::DashboardHeatMapFieldWells`?

  Legend: `AWS::QuickSight::DashboardLegendOptions`?

  RowLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  SortConfiguration: `AWS::QuickSight::DashboardHeatMapSortConfiguration`?

  Tooltip: `AWS::QuickSight::DashboardTooltipOptions`?
}

class `AWS::QuickSight::DashboardHeatMapFieldWells` {
  HeatMapAggregatedFieldWells: `AWS::QuickSight::DashboardPivotTableAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardHeatMapSortConfiguration` {
  HeatMapColumnItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  HeatMapColumnSort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?

  HeatMapRowItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  HeatMapRowSort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?
}

class `AWS::QuickSight::DashboardHeatMapVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardHeatMapConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardHistogramAggregatedFieldWells` {
  Values: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardHistogramBinOptions` {
  BinCount: `AWS::QuickSight::TemplateBinCountOptions`?

  BinWidth: `AWS::QuickSight::TemplateBinWidthOptions`?

  SelectedBinType: String?

  StartValue: Number?
}

class `AWS::QuickSight::DashboardHistogramConfiguration` {
  BinOptions: `AWS::QuickSight::DashboardHistogramBinOptions`?

  DataLabels: `AWS::QuickSight::DashboardDataLabelOptions`?

  FieldWells: `AWS::QuickSight::DashboardHistogramFieldWells`?

  Tooltip: `AWS::QuickSight::DashboardTooltipOptions`?

  VisualPalette: `AWS::QuickSight::DashboardVisualPalette`?

  XAxisDisplayOptions: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  XAxisLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  YAxisDisplayOptions: `AWS::QuickSight::DashboardAxisDisplayOptions`?
}

class `AWS::QuickSight::DashboardHistogramFieldWells` {
  HistogramAggregatedFieldWells: `AWS::QuickSight::DashboardHistogramAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardHistogramVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardHistogramConfiguration`?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardInsightConfiguration` {
  Computations: Listing<`AWS::QuickSight::DashboardComputation`>?

  CustomNarrative: `AWS::QuickSight::TemplateCustomNarrativeOptions`?
}

class `AWS::QuickSight::DashboardInsightVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  DataSetIdentifier: String

  InsightConfiguration: `AWS::QuickSight::DashboardInsightConfiguration`?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardIntegerParameterDeclaration` {
  DefaultValues: `AWS::QuickSight::DashboardIntegerDefaultValues`?

  MappedDataSetParameters: Listing<`AWS::QuickSight::TemplateMappedDataSetParameter`>?

  Name: String

  ParameterValueType: String

  ValueWhenUnset: `AWS::QuickSight::TemplateIntegerValueWhenUnsetConfiguration`?
}

class `AWS::QuickSight::DashboardKPIConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::DashboardKPIConditionalFormattingOption`>?
}

class `AWS::QuickSight::DashboardKPIConditionalFormattingOption` {
  ActualValue: `AWS::QuickSight::DashboardKPIPrimaryValueConditionalFormatting`?

  ComparisonValue: `AWS::QuickSight::DashboardKPIPrimaryValueConditionalFormatting`?

  PrimaryValue: `AWS::QuickSight::DashboardKPIPrimaryValueConditionalFormatting`?

  ProgressBar: `AWS::QuickSight::DashboardKPIProgressBarConditionalFormatting`?
}

class `AWS::QuickSight::DashboardKPIConfiguration` {
  FieldWells: `AWS::QuickSight::DashboardKPIFieldWells`?

  KPIOptions: `AWS::QuickSight::DashboardKPIOptions`?

  SortConfiguration: `AWS::QuickSight::DashboardKPISortConfiguration`?
}

class `AWS::QuickSight::DashboardKPIFieldWells` {
  TargetValues: Listing<`AWS::QuickSight::DashboardMeasureField`>?

  TrendGroups: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Values: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardKPIOptions` {
  Comparison: `AWS::QuickSight::DashboardComparisonConfiguration`?

  PrimaryValueDisplayType: String?

  PrimaryValueFontConfiguration: `AWS::QuickSight::DashboardFontConfiguration`?

  ProgressBar: `AWS::QuickSight::TemplateTrendArrowOptions`?

  SecondaryValue: `AWS::QuickSight::TemplateTrendArrowOptions`?

  SecondaryValueFontConfiguration: `AWS::QuickSight::DashboardFontConfiguration`?

  Sparkline: `AWS::QuickSight::TemplateKPISparklineOptions`?

  TrendArrows: `AWS::QuickSight::TemplateTrendArrowOptions`?

  VisualLayoutOptions: `AWS::QuickSight::DashboardKPIVisualLayoutOptions`?
}

class `AWS::QuickSight::DashboardKPISortConfiguration` {
  TrendGroupSort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?
}

class `AWS::QuickSight::DashboardKPIVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardKPIConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  ConditionalFormatting: `AWS::QuickSight::DashboardKPIConditionalFormatting`?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardKPIVisualLayoutOptions` {
  StandardLayout: `AWS::WAFRegional::WebACLAction`?
}

class `AWS::QuickSight::DashboardLabelOptions` {
  CustomLabel: String?

  FontConfiguration: `AWS::QuickSight::DashboardFontConfiguration`?

  Visibility: String?
}

class `AWS::QuickSight::DashboardLayout` {
  Configuration: `AWS::QuickSight::DashboardLayoutConfiguration`
}

class `AWS::QuickSight::DashboardLayoutConfiguration` {
  FreeFormLayout: `AWS::QuickSight::DashboardFreeFormLayoutConfiguration`?

  GridLayout: `AWS::QuickSight::DashboardGridLayoutConfiguration`?

  SectionBasedLayout: `AWS::QuickSight::DashboardSectionBasedLayoutConfiguration`?
}

class `AWS::QuickSight::DashboardLegendOptions` {
  Height: String?

  Position: String?

  Title: `AWS::QuickSight::DashboardLabelOptions`?

  Visibility: String?

  Width: String?
}

class `AWS::QuickSight::DashboardLineChartConfiguration` {
  ContributionAnalysisDefaults: Listing<`AWS::QuickSight::DashboardContributionAnalysisDefault`>?

  DataLabels: `AWS::QuickSight::DashboardDataLabelOptions`?

  DefaultSeriesSettings: `AWS::QuickSight::DashboardLineChartDefaultSeriesSettings`?

  FieldWells: `AWS::QuickSight::DashboardLineChartFieldWells`?

  ForecastConfigurations: Listing<`AWS::QuickSight::DashboardForecastConfiguration`>?

  Legend: `AWS::QuickSight::DashboardLegendOptions`?

  PrimaryYAxisDisplayOptions: `AWS::QuickSight::DashboardLineSeriesAxisDisplayOptions`?

  PrimaryYAxisLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  ReferenceLines: Listing<`AWS::QuickSight::DashboardReferenceLine`>?

  SecondaryYAxisDisplayOptions: `AWS::QuickSight::DashboardLineSeriesAxisDisplayOptions`?

  SecondaryYAxisLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  Series: Listing<`AWS::QuickSight::DashboardSeriesItem`>?

  SmallMultiplesOptions: `AWS::QuickSight::DashboardSmallMultiplesOptions`?

  SortConfiguration: `AWS::QuickSight::DashboardLineChartSortConfiguration`?

  Tooltip: `AWS::QuickSight::DashboardTooltipOptions`?

  Type: String?

  VisualPalette: `AWS::QuickSight::DashboardVisualPalette`?

  XAxisDisplayOptions: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  XAxisLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?
}

class `AWS::QuickSight::DashboardLineChartDefaultSeriesSettings` {
  AxisBinding: String?

  LineStyleSettings: `AWS::QuickSight::TemplateLineChartLineStyleSettings`?

  MarkerStyleSettings: `AWS::QuickSight::TemplateLineChartMarkerStyleSettings`?
}

class `AWS::QuickSight::DashboardLineChartFieldWells` {
  LineChartAggregatedFieldWells: `AWS::QuickSight::DashboardLineChartAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardLineChartSeriesSettings` {
  LineStyleSettings: `AWS::QuickSight::TemplateLineChartLineStyleSettings`?

  MarkerStyleSettings: `AWS::QuickSight::TemplateLineChartMarkerStyleSettings`?
}

class `AWS::QuickSight::DashboardLineChartSortConfiguration` {
  CategoryItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?

  ColorItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SmallMultiplesLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SmallMultiplesSort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?
}

class `AWS::QuickSight::DashboardLineChartVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardLineChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardLineSeriesAxisDisplayOptions` {
  AxisOptions: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  MissingDataConfigurations: Listing<`AWS::QuickSight::TemplateMissingDataConfiguration`>?
}

class `AWS::QuickSight::DashboardLinkSharingConfiguration` {
  Permissions: Listing<`AWS::QuickSight::ThemeResourcePermission`>?
}

class `AWS::QuickSight::DashboardListControlDisplayOptions` {
  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  SearchOptions: `AWS::QuickSight::TemplateTrendArrowOptions`?

  SelectAllOptions: `AWS::QuickSight::TemplateTrendArrowOptions`?

  TitleOptions: `AWS::QuickSight::DashboardLabelOptions`?
}

class `AWS::QuickSight::DashboardMaximumMinimumComputation` {
  ComputationId: String

  Name: String?

  Time: `AWS::QuickSight::DashboardDimensionField`?

  Type: String

  Value: `AWS::QuickSight::DashboardMeasureField`?
}

class `AWS::QuickSight::DashboardMeasureField` {
  CalculatedMeasureField: `AWS::QuickSight::TemplateCalculatedMeasureField`?

  CategoricalMeasureField: `AWS::QuickSight::DashboardCategoricalMeasureField`?

  DateMeasureField: `AWS::QuickSight::DashboardDateMeasureField`?

  NumericalMeasureField: `AWS::QuickSight::DashboardNumericalMeasureField`?
}

class `AWS::QuickSight::DashboardMetricComparisonComputation` {
  ComputationId: String

  FromValue: `AWS::QuickSight::DashboardMeasureField`?

  Name: String?

  TargetValue: `AWS::QuickSight::DashboardMeasureField`?

  Time: `AWS::QuickSight::DashboardDimensionField`?
}

class `AWS::QuickSight::DashboardNumberDisplayFormatConfiguration` {
  DecimalPlacesConfiguration: `AWS::QuickSight::TemplateDecimalPlacesConfiguration`?

  NegativeValueConfiguration: `AWS::QuickSight::TemplateNegativeValueConfiguration`?

  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  NumberScale: String?

  Prefix: String?

  SeparatorConfiguration: `AWS::QuickSight::DashboardNumericSeparatorConfiguration`?

  Suffix: String?
}

class `AWS::QuickSight::DashboardNumberFormatConfiguration` {
  FormatConfiguration: `AWS::QuickSight::DashboardNumericFormatConfiguration`?
}

class `AWS::QuickSight::DashboardNumericAxisOptions` {
  Range: `AWS::QuickSight::DashboardAxisDisplayRange`?

  Scale: `AWS::QuickSight::DashboardAxisScale`?
}

class `AWS::QuickSight::DashboardNumericEqualityDrillDownFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  Value: Number
}

class `AWS::QuickSight::DashboardNumericEqualityFilter` {
  AggregationFunction: `AWS::QuickSight::DashboardAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FilterId: String

  MatchOperator: String

  NullOption: String

  ParameterName: String?

  SelectAllOptions: String?

  Value: Number?
}

class `AWS::QuickSight::DashboardNumericFormatConfiguration` {
  CurrencyDisplayFormatConfiguration: `AWS::QuickSight::DashboardCurrencyDisplayFormatConfiguration`?

  NumberDisplayFormatConfiguration: `AWS::QuickSight::DashboardNumberDisplayFormatConfiguration`?

  PercentageDisplayFormatConfiguration: `AWS::QuickSight::DashboardPercentageDisplayFormatConfiguration`?
}

class `AWS::QuickSight::DashboardNumericRangeFilter` {
  AggregationFunction: `AWS::QuickSight::DashboardAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FilterId: String

  IncludeMaximum: Boolean?

  IncludeMinimum: Boolean?

  NullOption: String

  RangeMaximum: `AWS::QuickSight::TemplateNumericRangeFilterValue`?

  RangeMinimum: `AWS::QuickSight::TemplateNumericRangeFilterValue`?

  SelectAllOptions: String?
}

class `AWS::QuickSight::DashboardNumericSeparatorConfiguration` {
  DecimalSeparator: String?

  ThousandsSeparator: `AWS::QuickSight::TemplateThousandSeparatorOptions`?
}

class `AWS::QuickSight::DashboardNumericalAggregationFunction` {
  PercentileAggregation: `AWS::QuickSight::TemplatePercentileAggregation`?

  SimpleNumericalAggregation: String?
}

class `AWS::QuickSight::DashboardNumericalDimensionField` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::DashboardNumberFormatConfiguration`?

  HierarchyId: String?
}

class `AWS::QuickSight::DashboardNumericalMeasureField` {
  AggregationFunction: `AWS::QuickSight::DashboardNumericalAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::DashboardNumberFormatConfiguration`?
}

class `AWS::QuickSight::DashboardPanelConfiguration` {
  BackgroundColor: String?

  BackgroundVisibility: String?

  BorderColor: String?

  BorderStyle: String?

  BorderThickness: String?

  BorderVisibility: String?

  GutterSpacing: String?

  GutterVisibility: String?

  Title: `AWS::QuickSight::DashboardPanelTitleOptions`?
}

class `AWS::QuickSight::DashboardPanelTitleOptions` {
  FontConfiguration: `AWS::QuickSight::DashboardFontConfiguration`?

  HorizontalTextAlignment: String?

  Visibility: String?
}

class `AWS::QuickSight::DashboardParameterControl` {
  DateTimePicker: `AWS::QuickSight::DashboardParameterDateTimePickerControl`?

  Dropdown: `AWS::QuickSight::DashboardParameterDropDownControl`?

  List: `AWS::QuickSight::DashboardParameterListControl`?

  Slider: `AWS::QuickSight::DashboardParameterSliderControl`?

  TextArea: `AWS::QuickSight::DashboardParameterTextAreaControl`?

  TextField: `AWS::QuickSight::DashboardParameterTextFieldControl`?
}

class `AWS::QuickSight::DashboardParameterDateTimePickerControl` {
  DisplayOptions: `AWS::QuickSight::DashboardRelativeDateTimeControlDisplayOptions`?

  ParameterControlId: String

  SourceParameterName: String

  Title: String
}

class `AWS::QuickSight::DashboardParameterDeclaration` {
  DateTimeParameterDeclaration: `AWS::QuickSight::DashboardDateTimeParameterDeclaration`?

  DecimalParameterDeclaration: `AWS::QuickSight::DashboardDecimalParameterDeclaration`?

  IntegerParameterDeclaration: `AWS::QuickSight::DashboardIntegerParameterDeclaration`?

  StringParameterDeclaration: `AWS::QuickSight::DashboardStringParameterDeclaration`?
}

class `AWS::QuickSight::DashboardParameterDropDownControl` {
  CascadingControlConfiguration: `AWS::QuickSight::DashboardCascadingControlConfiguration`?

  DisplayOptions: `AWS::QuickSight::DashboardDropDownControlDisplayOptions`?

  ParameterControlId: String

  SelectableValues: `AWS::QuickSight::DashboardParameterSelectableValues`?

  SourceParameterName: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::DashboardParameterListControl` {
  CascadingControlConfiguration: `AWS::QuickSight::DashboardCascadingControlConfiguration`?

  DisplayOptions: `AWS::QuickSight::DashboardListControlDisplayOptions`?

  ParameterControlId: String

  SelectableValues: `AWS::QuickSight::DashboardParameterSelectableValues`?

  SourceParameterName: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::DashboardParameterSelectableValues` {
  LinkToDataSetColumn: `AWS::QuickSight::TemplateColumnIdentifier`?

  Values: Listing<String>?
}

class `AWS::QuickSight::DashboardParameterSliderControl` {
  DisplayOptions: `AWS::QuickSight::DashboardSliderControlDisplayOptions`?

  MaximumValue: Number

  MinimumValue: Number

  ParameterControlId: String

  SourceParameterName: String

  StepSize: Number

  Title: String
}

class `AWS::QuickSight::DashboardParameterTextAreaControl` {
  Delimiter: String?

  DisplayOptions: `AWS::QuickSight::DashboardTextFieldControlDisplayOptions`?

  ParameterControlId: String

  SourceParameterName: String

  Title: String
}

class `AWS::QuickSight::DashboardParameterTextFieldControl` {
  DisplayOptions: `AWS::QuickSight::DashboardTextFieldControlDisplayOptions`?

  ParameterControlId: String

  SourceParameterName: String

  Title: String
}

class `AWS::QuickSight::DashboardParameters` {
  DateTimeParameters: Listing<`AWS::QuickSight::DashboardStringParameter`>?

  DecimalParameters: Listing<`AWS::QuickSight::DashboardIntegerParameter`>?

  IntegerParameters: Listing<`AWS::QuickSight::DashboardIntegerParameter`>?

  StringParameters: Listing<`AWS::QuickSight::DashboardStringParameter`>?
}

class `AWS::QuickSight::DashboardPercentageDisplayFormatConfiguration` {
  DecimalPlacesConfiguration: `AWS::QuickSight::TemplateDecimalPlacesConfiguration`?

  NegativeValueConfiguration: `AWS::QuickSight::TemplateNegativeValueConfiguration`?

  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  Prefix: String?

  SeparatorConfiguration: `AWS::QuickSight::DashboardNumericSeparatorConfiguration`?

  Suffix: String?
}

class `AWS::QuickSight::DashboardPeriodOverPeriodComputation` {
  ComputationId: String

  Name: String?

  Time: `AWS::QuickSight::DashboardDimensionField`?

  Value: `AWS::QuickSight::DashboardMeasureField`?
}

class `AWS::QuickSight::DashboardPeriodToDateComputation` {
  ComputationId: String

  Name: String?

  PeriodTimeGranularity: String?

  Time: `AWS::QuickSight::DashboardDimensionField`?

  Value: `AWS::QuickSight::DashboardMeasureField`?
}

class `AWS::QuickSight::DashboardPieChartAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  SmallMultiples: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Values: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardPieChartConfiguration` {
  CategoryLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  ContributionAnalysisDefaults: Listing<`AWS::QuickSight::DashboardContributionAnalysisDefault`>?

  DataLabels: `AWS::QuickSight::DashboardDataLabelOptions`?

  DonutOptions: `AWS::QuickSight::DashboardDonutOptions`?

  FieldWells: `AWS::QuickSight::DashboardPieChartFieldWells`?

  Legend: `AWS::QuickSight::DashboardLegendOptions`?

  SmallMultiplesOptions: `AWS::QuickSight::DashboardSmallMultiplesOptions`?

  SortConfiguration: `AWS::QuickSight::DashboardPieChartSortConfiguration`?

  Tooltip: `AWS::QuickSight::DashboardTooltipOptions`?

  ValueLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  VisualPalette: `AWS::QuickSight::DashboardVisualPalette`?
}

class `AWS::QuickSight::DashboardPieChartFieldWells` {
  PieChartAggregatedFieldWells: `AWS::QuickSight::DashboardPieChartAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardPieChartSortConfiguration` {
  CategoryItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?

  SmallMultiplesLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SmallMultiplesSort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?
}

class `AWS::QuickSight::DashboardPieChartVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardPieChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardPivotFieldSortOptions` {
  FieldId: String

  SortBy: `AWS::QuickSight::DashboardPivotTableSortBy`
}

class `AWS::QuickSight::DashboardPivotTableCellConditionalFormatting` {
  FieldId: String

  Scope: `AWS::QuickSight::TemplatePivotTableConditionalFormattingScope`?

  Scopes: Listing<`AWS::QuickSight::TemplatePivotTableConditionalFormattingScope`>?

  TextFormat: `AWS::QuickSight::DashboardTextConditionalFormat`?
}

class `AWS::QuickSight::DashboardPivotTableConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::DashboardPivotTableConditionalFormattingOption`>?
}

class `AWS::QuickSight::DashboardPivotTableConditionalFormattingOption` {
  Cell: `AWS::QuickSight::DashboardPivotTableCellConditionalFormatting`?
}

class `AWS::QuickSight::DashboardPivotTableConfiguration` {
  FieldOptions: `AWS::QuickSight::DashboardPivotTableFieldOptions`?

  FieldWells: `AWS::QuickSight::DashboardPivotTableFieldWells`?

  PaginatedReportOptions: `AWS::QuickSight::TemplateTablePaginatedReportOptions`?

  SortConfiguration: `AWS::QuickSight::DashboardPivotTableSortConfiguration`?

  TableOptions: `AWS::QuickSight::DashboardPivotTableOptions`?

  TotalOptions: `AWS::QuickSight::DashboardPivotTableTotalOptions`?
}

class `AWS::QuickSight::DashboardPivotTableDataPathOption` {
  DataPathList: Listing<`AWS::QuickSight::DashboardDataPathValue`>

  Width: String?
}

class `AWS::QuickSight::DashboardPivotTableFieldCollapseStateOption` {
  State: String?

  Target: `AWS::QuickSight::DashboardPivotTableFieldCollapseStateTarget`
}

class `AWS::QuickSight::DashboardPivotTableFieldCollapseStateTarget` {
  FieldDataPathValues: Listing<`AWS::QuickSight::DashboardDataPathValue`>?

  FieldId: String?
}

class `AWS::QuickSight::DashboardPivotTableFieldOptions` {
  CollapseStateOptions: Listing<`AWS::QuickSight::DashboardPivotTableFieldCollapseStateOption`>?

  DataPathOptions: Listing<`AWS::QuickSight::DashboardPivotTableDataPathOption`>?

  SelectedFieldOptions: Listing<`AWS::QuickSight::TemplatePivotTableFieldOption`>?
}

class `AWS::QuickSight::DashboardPivotTableFieldWells` {
  PivotTableAggregatedFieldWells: `AWS::QuickSight::DashboardPivotTableAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardPivotTableOptions` {
  CellStyle: `AWS::QuickSight::DashboardTableCellStyle`?

  CollapsedRowDimensionsVisibility: String?

  ColumnHeaderStyle: `AWS::QuickSight::DashboardTableCellStyle`?

  ColumnNamesVisibility: String?

  DefaultCellWidth: String?

  MetricPlacement: String?

  RowAlternateColorOptions: `AWS::QuickSight::TemplateRowAlternateColorOptions`?

  RowFieldNamesStyle: `AWS::QuickSight::DashboardTableCellStyle`?

  RowHeaderStyle: `AWS::QuickSight::DashboardTableCellStyle`?

  RowsLabelOptions: `AWS::QuickSight::TemplatePivotTableRowsLabelOptions`?

  RowsLayout: String?

  SingleMetricVisibility: String?

  ToggleButtonsVisibility: String?
}

class `AWS::QuickSight::DashboardPivotTableSortBy` {
  Column: `AWS::QuickSight::DashboardColumnSort`?

  DataPath: `AWS::QuickSight::DashboardDataPathSort`?

  Field: `AWS::QuickSight::TemplateFieldSort`?
}

class `AWS::QuickSight::DashboardPivotTableSortConfiguration` {
  FieldSortOptions: Listing<`AWS::QuickSight::DashboardPivotFieldSortOptions`>?
}

class `AWS::QuickSight::DashboardPivotTableTotalOptions` {
  ColumnSubtotalOptions: `AWS::QuickSight::DashboardSubtotalOptions`?

  ColumnTotalOptions: `AWS::QuickSight::DashboardPivotTotalOptions`?

  RowSubtotalOptions: `AWS::QuickSight::DashboardSubtotalOptions`?

  RowTotalOptions: `AWS::QuickSight::DashboardPivotTotalOptions`?
}

class `AWS::QuickSight::DashboardPivotTableVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardPivotTableConfiguration`?

  ConditionalFormatting: `AWS::QuickSight::DashboardPivotTableConditionalFormatting`?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardPivotTotalOptions` {
  CustomLabel: String?

  MetricHeaderCellStyle: `AWS::QuickSight::DashboardTableCellStyle`?

  Placement: String?

  ScrollStatus: String?

  TotalAggregationOptions: Listing<`AWS::QuickSight::DashboardTotalAggregationOption`>?

  TotalCellStyle: `AWS::QuickSight::DashboardTableCellStyle`?

  TotalsVisibility: String?

  ValueCellStyle: `AWS::QuickSight::DashboardTableCellStyle`?
}

class `AWS::QuickSight::DashboardRadarChartAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Color: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Values: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardRadarChartConfiguration` {
  AlternateBandColorsVisibility: String?

  AlternateBandEvenColor: String?

  AlternateBandOddColor: String?

  AxesRangeScale: String?

  BaseSeriesSettings: `AWS::QuickSight::DashboardRadarChartSeriesSettings`?

  CategoryAxis: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  CategoryLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  ColorAxis: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  ColorLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  FieldWells: `AWS::QuickSight::DashboardRadarChartFieldWells`?

  Legend: `AWS::QuickSight::DashboardLegendOptions`?

  Shape: String?

  SortConfiguration: `AWS::QuickSight::DashboardRadarChartSortConfiguration`?

  StartAngle: Number?

  VisualPalette: `AWS::QuickSight::DashboardVisualPalette`?
}

class `AWS::QuickSight::DashboardRadarChartFieldWells` {
  RadarChartAggregatedFieldWells: `AWS::QuickSight::DashboardRadarChartAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardRadarChartSeriesSettings` {
  AreaStyleSettings: `AWS::QuickSight::TemplateTrendArrowOptions`?
}

class `AWS::QuickSight::DashboardRadarChartVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardRadarChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardReferenceLine` {
  DataConfiguration: `AWS::QuickSight::DashboardReferenceLineDataConfiguration`

  LabelConfiguration: `AWS::QuickSight::DashboardReferenceLineLabelConfiguration`?

  Status: String?

  StyleConfiguration: `AWS::QuickSight::TemplateReferenceLineStyleConfiguration`?
}

class `AWS::QuickSight::DashboardReferenceLineDataConfiguration` {
  AxisBinding: String?

  DynamicConfiguration: `AWS::QuickSight::DashboardReferenceLineDynamicDataConfiguration`?

  SeriesType: String?

  StaticConfiguration: `AWS::QuickSight::TemplateReferenceLineStaticDataConfiguration`?
}

class `AWS::QuickSight::DashboardReferenceLineDynamicDataConfiguration` {
  Calculation: `AWS::QuickSight::DashboardNumericalAggregationFunction`

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  MeasureAggregationFunction: `AWS::QuickSight::DashboardAggregationFunction`?
}

class `AWS::QuickSight::DashboardReferenceLineLabelConfiguration` {
  CustomLabelConfiguration: `AWS::QuickSight::TemplateReferenceLineCustomLabelConfiguration`?

  FontColor: String?

  FontConfiguration: `AWS::QuickSight::DashboardFontConfiguration`?

  HorizontalPosition: String?

  ValueLabelConfiguration: `AWS::QuickSight::DashboardReferenceLineValueLabelConfiguration`?

  VerticalPosition: String?
}

class `AWS::QuickSight::DashboardReferenceLineValueLabelConfiguration` {
  FormatConfiguration: `AWS::QuickSight::DashboardNumericFormatConfiguration`?

  RelativePosition: String?
}

class `AWS::QuickSight::DashboardRelativeDatesFilter` {
  AnchorDateConfiguration: `AWS::QuickSight::TemplateAnchorDateConfiguration`

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  ExcludePeriodConfiguration: `AWS::QuickSight::TemplateExcludePeriodConfiguration`?

  FilterId: String

  MinimumGranularity: String?

  NullOption: String

  ParameterName: String?

  RelativeDateType: String

  RelativeDateValue: Number?

  TimeGranularity: String
}

class `AWS::QuickSight::DashboardSankeyDiagramAggregatedFieldWells` {
  Destination: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Source: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Weight: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardSankeyDiagramChartConfiguration` {
  DataLabels: `AWS::QuickSight::DashboardDataLabelOptions`?

  FieldWells: `AWS::QuickSight::DashboardSankeyDiagramFieldWells`?

  SortConfiguration: `AWS::QuickSight::DashboardSankeyDiagramSortConfiguration`?
}

class `AWS::QuickSight::DashboardSankeyDiagramFieldWells` {
  SankeyDiagramAggregatedFieldWells: `AWS::QuickSight::DashboardSankeyDiagramAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardSankeyDiagramSortConfiguration` {
  DestinationItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SourceItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  WeightSort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?
}

class `AWS::QuickSight::DashboardSankeyDiagramVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardSankeyDiagramChartConfiguration`?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardScatterPlotCategoricallyAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Label: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Size: Listing<`AWS::QuickSight::DashboardMeasureField`>?

  XAxis: Listing<`AWS::QuickSight::DashboardMeasureField`>?

  YAxis: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardScatterPlotConfiguration` {
  DataLabels: `AWS::QuickSight::DashboardDataLabelOptions`?

  FieldWells: `AWS::QuickSight::DashboardScatterPlotFieldWells`?

  Legend: `AWS::QuickSight::DashboardLegendOptions`?

  Tooltip: `AWS::QuickSight::DashboardTooltipOptions`?

  VisualPalette: `AWS::QuickSight::DashboardVisualPalette`?

  XAxisDisplayOptions: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  XAxisLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  YAxisDisplayOptions: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  YAxisLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?
}

class `AWS::QuickSight::DashboardScatterPlotFieldWells` {
  ScatterPlotCategoricallyAggregatedFieldWells: `AWS::QuickSight::DashboardScatterPlotCategoricallyAggregatedFieldWells`?

  ScatterPlotUnaggregatedFieldWells: `AWS::QuickSight::DashboardScatterPlotUnaggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardScatterPlotUnaggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Label: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Size: Listing<`AWS::QuickSight::DashboardMeasureField`>?

  XAxis: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  YAxis: Listing<`AWS::QuickSight::DashboardDimensionField`>?
}

class `AWS::QuickSight::DashboardScatterPlotVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardScatterPlotConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardScrollBarOptions` {
  Visibility: String?

  VisibleRange: `AWS::QuickSight::DashboardVisibleRangeOptions`?
}

class `AWS::QuickSight::DashboardSectionBasedLayoutCanvasSizeOptions` {
  PaperCanvasSizeOptions: `AWS::QuickSight::DashboardSectionBasedLayoutPaperCanvasSizeOptions`?
}

class `AWS::QuickSight::DashboardSectionBasedLayoutConfiguration` {
  BodySections: Listing<`AWS::QuickSight::DashboardBodySectionConfiguration`>

  CanvasSizeOptions: `AWS::QuickSight::DashboardSectionBasedLayoutCanvasSizeOptions`

  FooterSections: Listing<`AWS::QuickSight::DashboardHeaderFooterSectionConfiguration`>

  HeaderSections: Listing<`AWS::QuickSight::DashboardHeaderFooterSectionConfiguration`>
}

class `AWS::QuickSight::DashboardSectionBasedLayoutPaperCanvasSizeOptions` {
  PaperMargin: `AWS::QuickSight::TemplateSpacing`?

  PaperOrientation: String?

  PaperSize: String?
}

class `AWS::QuickSight::DashboardSectionLayoutConfiguration` {
  FreeFormLayout: `AWS::QuickSight::DashboardFreeFormSectionLayoutConfiguration`
}

class `AWS::QuickSight::DashboardSectionPageBreakConfiguration` {
  After: `AWS::S3::BucketDeleteMarkerReplication`?
}

class `AWS::QuickSight::DashboardSectionStyle` {
  Height: String?

  Padding: `AWS::QuickSight::TemplateSpacing`?
}

class `AWS::QuickSight::DashboardSelectedSheetsFilterScopeConfiguration` {
  SheetVisualScopingConfigurations: Listing<`AWS::QuickSight::TemplateSheetVisualScopingConfiguration`>?
}

class `AWS::QuickSight::DashboardSeriesItem` {
  DataFieldSeriesItem: `AWS::QuickSight::DashboardDataFieldSeriesItem`?

  FieldSeriesItem: `AWS::QuickSight::DashboardFieldSeriesItem`?
}

class `AWS::QuickSight::DashboardSetParameterValueConfiguration` {
  DestinationParameterName: String

  Value: `AWS::QuickSight::DashboardDestinationParameterValueConfiguration`
}

class `AWS::QuickSight::DashboardShapeConditionalFormat` {
  BackgroundColor: `AWS::QuickSight::DashboardConditionalFormattingColor`
}

class `AWS::QuickSight::DashboardSheetControlLayout` {
  Configuration: `AWS::QuickSight::DashboardSheetControlLayoutConfiguration`
}

class `AWS::QuickSight::DashboardSheetControlLayoutConfiguration` {
  GridLayout: `AWS::QuickSight::DashboardGridLayoutConfiguration`?
}

class `AWS::QuickSight::DashboardSheetControlsOption` {
  VisibilityState: String?
}

class `AWS::QuickSight::DashboardSheetDefinition` {
  ContentType: String?

  Description: String?

  FilterControls: Listing<`AWS::QuickSight::DashboardFilterControl`>?

  Layouts: Listing<`AWS::QuickSight::DashboardLayout`>?

  Name: String?

  ParameterControls: Listing<`AWS::QuickSight::DashboardParameterControl`>?

  SheetControlLayouts: Listing<`AWS::QuickSight::DashboardSheetControlLayout`>?

  SheetId: String

  TextBoxes: Listing<`AWS::QuickSight::TemplateSheetTextBox`>?

  Title: String?

  Visuals: Listing<`AWS::QuickSight::DashboardVisual`>?
}

class `AWS::QuickSight::DashboardSheetElementRenderingRule` {
  ConfigurationOverrides: `AWS::QuickSight::TemplateTrendArrowOptions`

  Expression: String
}

class `AWS::QuickSight::DashboardSliderControlDisplayOptions` {
  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  TitleOptions: `AWS::QuickSight::DashboardLabelOptions`?
}

class `AWS::QuickSight::DashboardSmallMultiplesOptions` {
  MaxVisibleColumns: Number?

  MaxVisibleRows: Number?

  PanelConfiguration: `AWS::QuickSight::DashboardPanelConfiguration`?

  XAxis: `AWS::QuickSight::TemplateSmallMultiplesAxisProperties`?

  YAxis: `AWS::QuickSight::TemplateSmallMultiplesAxisProperties`?
}

class `AWS::QuickSight::DashboardStringDefaultValues` {
  DynamicValue: `AWS::QuickSight::DashboardDynamicDefaultValue`?

  StaticValues: Listing<String>?
}

class `AWS::QuickSight::DashboardStringFormatConfiguration` {
  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  NumericFormatConfiguration: `AWS::QuickSight::DashboardNumericFormatConfiguration`?
}

class `AWS::QuickSight::DashboardStringParameterDeclaration` {
  DefaultValues: `AWS::QuickSight::DashboardStringDefaultValues`?

  MappedDataSetParameters: Listing<`AWS::QuickSight::TemplateMappedDataSetParameter`>?

  Name: String

  ParameterValueType: String

  ValueWhenUnset: `AWS::QuickSight::TemplateStringValueWhenUnsetConfiguration`?
}

class `AWS::QuickSight::DashboardSubtotalOptions` {
  CustomLabel: String?

  FieldLevel: String?

  FieldLevelOptions: Listing<`AWS::QuickSight::TemplatePivotTableFieldSubtotalOptions`>?

  MetricHeaderCellStyle: `AWS::QuickSight::DashboardTableCellStyle`?

  StyleTargets: Listing<`AWS::QuickSight::TemplateTableStyleTarget`>?

  TotalCellStyle: `AWS::QuickSight::DashboardTableCellStyle`?

  TotalsVisibility: String?

  ValueCellStyle: `AWS::QuickSight::DashboardTableCellStyle`?
}

class `AWS::QuickSight::DashboardTableCellConditionalFormatting` {
  FieldId: String

  TextFormat: `AWS::QuickSight::DashboardTextConditionalFormat`?
}

class `AWS::QuickSight::DashboardTableCellStyle` {
  BackgroundColor: String?

  Border: `AWS::QuickSight::DashboardGlobalTableBorderOptions`?

  FontConfiguration: `AWS::QuickSight::DashboardFontConfiguration`?

  Height: Number?

  HorizontalTextAlignment: String?

  TextWrap: String?

  VerticalTextAlignment: String?

  Visibility: String?
}

class `AWS::QuickSight::DashboardTableConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::DashboardTableConditionalFormattingOption`>?
}

class `AWS::QuickSight::DashboardTableConditionalFormattingOption` {
  Cell: `AWS::QuickSight::DashboardTableCellConditionalFormatting`?

  Row: `AWS::QuickSight::DashboardTableRowConditionalFormatting`?
}

class `AWS::QuickSight::DashboardTableConfiguration` {
  FieldOptions: `AWS::QuickSight::DashboardTableFieldOptions`?

  FieldWells: `AWS::QuickSight::DashboardTableFieldWells`?

  PaginatedReportOptions: `AWS::QuickSight::TemplateTablePaginatedReportOptions`?

  SortConfiguration: `AWS::QuickSight::DashboardTableSortConfiguration`?

  TableInlineVisualizations: Listing<`AWS::QuickSight::DashboardTableInlineVisualization`>?

  TableOptions: `AWS::QuickSight::DashboardTableOptions`?

  TotalOptions: `AWS::QuickSight::DashboardTotalOptions`?
}

class `AWS::QuickSight::DashboardTableFieldCustomTextContent` {
  FontConfiguration: `AWS::QuickSight::DashboardFontConfiguration`

  Value: String?
}

class `AWS::QuickSight::DashboardTableFieldImageConfiguration` {
  SizingOptions: `AWS::QuickSight::TemplateTableCellImageSizingConfiguration`?
}

class `AWS::QuickSight::DashboardTableFieldLinkConfiguration` {
  Content: `AWS::QuickSight::DashboardTableFieldLinkContentConfiguration`

  Target: String
}

class `AWS::QuickSight::DashboardTableFieldLinkContentConfiguration` {
  CustomIconContent: `AWS::QuickSight::TemplateTableFieldCustomIconContent`?

  CustomTextContent: `AWS::QuickSight::DashboardTableFieldCustomTextContent`?
}

class `AWS::QuickSight::DashboardTableFieldOption` {
  CustomLabel: String?

  FieldId: String

  URLStyling: `AWS::QuickSight::DashboardTableFieldURLConfiguration`?

  Visibility: String?

  Width: String?
}

class `AWS::QuickSight::DashboardTableFieldOptions` {
  Order: Listing<String>?

  PinnedFieldOptions: `AWS::QuickSight::TemplateTablePinnedFieldOptions`?

  SelectedFieldOptions: Listing<`AWS::QuickSight::DashboardTableFieldOption`>?
}

class `AWS::QuickSight::DashboardTableFieldURLConfiguration` {
  ImageConfiguration: `AWS::QuickSight::DashboardTableFieldImageConfiguration`?

  LinkConfiguration: `AWS::QuickSight::DashboardTableFieldLinkConfiguration`?
}

class `AWS::QuickSight::DashboardTableFieldWells` {
  TableAggregatedFieldWells: `AWS::QuickSight::DashboardTableAggregatedFieldWells`?

  TableUnaggregatedFieldWells: `AWS::QuickSight::DashboardTableUnaggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardTableInlineVisualization` {
  DataBars: `AWS::QuickSight::TemplateDataBarsOptions`?
}

class `AWS::QuickSight::DashboardTableOptions` {
  CellStyle: `AWS::QuickSight::DashboardTableCellStyle`?

  HeaderStyle: `AWS::QuickSight::DashboardTableCellStyle`?

  Orientation: String?

  RowAlternateColorOptions: `AWS::QuickSight::TemplateRowAlternateColorOptions`?
}

class `AWS::QuickSight::DashboardTableRowConditionalFormatting` {
  BackgroundColor: `AWS::QuickSight::DashboardConditionalFormattingColor`?

  TextColor: `AWS::QuickSight::DashboardConditionalFormattingColor`?
}

class `AWS::QuickSight::DashboardTableSideBorderOptions` {
  Bottom: `AWS::QuickSight::TemplateTableBorderOptions`?

  InnerHorizontal: `AWS::QuickSight::TemplateTableBorderOptions`?

  InnerVertical: `AWS::QuickSight::TemplateTableBorderOptions`?

  Left: `AWS::QuickSight::TemplateTableBorderOptions`?

  Right: `AWS::QuickSight::TemplateTableBorderOptions`?

  Top: `AWS::QuickSight::TemplateTableBorderOptions`?
}

class `AWS::QuickSight::DashboardTableSortConfiguration` {
  PaginationConfiguration: `AWS::QuickSight::TemplatePaginationConfiguration`?

  RowSort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?
}

class `AWS::QuickSight::DashboardTableUnaggregatedFieldWells` {
  Values: Listing<`AWS::QuickSight::DashboardUnaggregatedField`>?
}

class `AWS::QuickSight::DashboardTableVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardTableConfiguration`?

  ConditionalFormatting: `AWS::QuickSight::DashboardTableConditionalFormatting`?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardTextFieldControlDisplayOptions` {
  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  PlaceholderOptions: `AWS::QuickSight::TemplateTrendArrowOptions`?

  TitleOptions: `AWS::QuickSight::DashboardLabelOptions`?
}

class `AWS::QuickSight::DashboardTextConditionalFormat` {
  BackgroundColor: `AWS::QuickSight::DashboardConditionalFormattingColor`?

  Icon: `AWS::QuickSight::DashboardConditionalFormattingIcon`?

  TextColor: `AWS::QuickSight::DashboardConditionalFormattingColor`?
}

class `AWS::QuickSight::DashboardTimeEqualityFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FilterId: String

  ParameterName: String?

  RollingDate: `AWS::QuickSight::TemplateRollingDateConfiguration`?

  TimeGranularity: String?

  Value: String?
}

class `AWS::QuickSight::DashboardTimeRangeDrillDownFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  RangeMaximum: String

  RangeMinimum: String

  TimeGranularity: String
}

class `AWS::QuickSight::DashboardTimeRangeFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  ExcludePeriodConfiguration: `AWS::QuickSight::TemplateExcludePeriodConfiguration`?

  FilterId: String

  IncludeMaximum: Boolean?

  IncludeMinimum: Boolean?

  NullOption: String

  RangeMaximumValue: `AWS::QuickSight::DashboardTimeRangeFilterValue`?

  RangeMinimumValue: `AWS::QuickSight::DashboardTimeRangeFilterValue`?

  TimeGranularity: String?
}

class `AWS::QuickSight::DashboardTimeRangeFilterValue` {
  Parameter: String?

  RollingDate: `AWS::QuickSight::TemplateRollingDateConfiguration`?

  StaticValue: String?
}

class `AWS::QuickSight::DashboardTooltipItem` {
  ColumnTooltipItem: `AWS::QuickSight::DashboardColumnTooltipItem`?

  FieldTooltipItem: `AWS::QuickSight::TemplateFieldTooltipItem`?
}

class `AWS::QuickSight::DashboardTooltipOptions` {
  FieldBasedTooltip: `AWS::QuickSight::DashboardFieldBasedTooltip`?

  SelectedTooltipType: String?

  TooltipVisibility: String?
}

class `AWS::QuickSight::DashboardTopBottomFilter` {
  AggregationSortConfigurations: Listing<`AWS::QuickSight::DashboardAggregationSortConfiguration`>

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FilterId: String

  Limit: Number?

  ParameterName: String?

  TimeGranularity: String?
}

class `AWS::QuickSight::DashboardTopBottomMoversComputation` {
  Category: `AWS::QuickSight::DashboardDimensionField`?

  ComputationId: String

  MoverSize: Number?

  Name: String?

  SortOrder: String?

  Time: `AWS::QuickSight::DashboardDimensionField`?

  Type: String

  Value: `AWS::QuickSight::DashboardMeasureField`?
}

class `AWS::QuickSight::DashboardTopBottomRankedComputation` {
  Category: `AWS::QuickSight::DashboardDimensionField`?

  ComputationId: String

  Name: String?

  ResultSize: Number?

  Type: String

  Value: `AWS::QuickSight::DashboardMeasureField`?
}

class `AWS::QuickSight::DashboardTotalAggregationComputation` {
  ComputationId: String

  Name: String?

  Value: `AWS::QuickSight::DashboardMeasureField`?
}

class `AWS::QuickSight::DashboardTotalAggregationOption` {
  FieldId: String

  TotalAggregationFunction: `AWS::QuickSight::TemplateTotalAggregationFunction`
}

class `AWS::QuickSight::DashboardTotalOptions` {
  CustomLabel: String?

  Placement: String?

  ScrollStatus: String?

  TotalAggregationOptions: Listing<`AWS::QuickSight::DashboardTotalAggregationOption`>?

  TotalCellStyle: `AWS::QuickSight::DashboardTableCellStyle`?

  TotalsVisibility: String?
}

class `AWS::QuickSight::DashboardTreeMapAggregatedFieldWells` {
  Colors: Listing<`AWS::QuickSight::DashboardMeasureField`>?

  Groups: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Sizes: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardTreeMapConfiguration` {
  ColorLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  ColorScale: `AWS::QuickSight::DashboardColorScale`?

  DataLabels: `AWS::QuickSight::DashboardDataLabelOptions`?

  FieldWells: `AWS::QuickSight::DashboardTreeMapFieldWells`?

  GroupLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  Legend: `AWS::QuickSight::DashboardLegendOptions`?

  SizeLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  SortConfiguration: `AWS::QuickSight::DashboardTreeMapSortConfiguration`?

  Tooltip: `AWS::QuickSight::DashboardTooltipOptions`?
}

class `AWS::QuickSight::DashboardTreeMapFieldWells` {
  TreeMapAggregatedFieldWells: `AWS::QuickSight::DashboardTreeMapAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardTreeMapSortConfiguration` {
  TreeMapGroupItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  TreeMapSort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?
}

class `AWS::QuickSight::DashboardTreeMapVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardTreeMapConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardUnaggregatedField` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::DashboardFormatConfiguration`?
}

class `AWS::QuickSight::DashboardUniqueValuesComputation` {
  Category: `AWS::QuickSight::DashboardDimensionField`?

  ComputationId: String

  Name: String?
}

class `AWS::QuickSight::DashboardVisibleRangeOptions` {
  PercentRange: `AWS::QuickSight::TemplatePercentVisibleRange`?
}

class `AWS::QuickSight::DashboardVisual` {
  BarChartVisual: `AWS::QuickSight::DashboardBarChartVisual`?

  BoxPlotVisual: `AWS::QuickSight::DashboardBoxPlotVisual`?

  ComboChartVisual: `AWS::QuickSight::DashboardComboChartVisual`?

  CustomContentVisual: `AWS::QuickSight::DashboardCustomContentVisual`?

  EmptyVisual: `AWS::QuickSight::DashboardEmptyVisual`?

  FilledMapVisual: `AWS::QuickSight::DashboardFilledMapVisual`?

  FunnelChartVisual: `AWS::QuickSight::DashboardFunnelChartVisual`?

  GaugeChartVisual: `AWS::QuickSight::DashboardGaugeChartVisual`?

  GeospatialMapVisual: `AWS::QuickSight::DashboardGeospatialMapVisual`?

  HeatMapVisual: `AWS::QuickSight::DashboardHeatMapVisual`?

  HistogramVisual: `AWS::QuickSight::DashboardHistogramVisual`?

  InsightVisual: `AWS::QuickSight::DashboardInsightVisual`?

  KPIVisual: `AWS::QuickSight::DashboardKPIVisual`?

  LineChartVisual: `AWS::QuickSight::DashboardLineChartVisual`?

  PieChartVisual: `AWS::QuickSight::DashboardPieChartVisual`?

  PivotTableVisual: `AWS::QuickSight::DashboardPivotTableVisual`?

  RadarChartVisual: `AWS::QuickSight::DashboardRadarChartVisual`?

  SankeyDiagramVisual: `AWS::QuickSight::DashboardSankeyDiagramVisual`?

  ScatterPlotVisual: `AWS::QuickSight::DashboardScatterPlotVisual`?

  TableVisual: `AWS::QuickSight::DashboardTableVisual`?

  TreeMapVisual: `AWS::QuickSight::DashboardTreeMapVisual`?

  WaterfallVisual: `AWS::QuickSight::DashboardWaterfallVisual`?

  WordCloudVisual: `AWS::QuickSight::DashboardWordCloudVisual`?
}

class `AWS::QuickSight::DashboardVisualCustomAction` {
  ActionOperations: Listing<`AWS::QuickSight::DashboardVisualCustomActionOperation`>

  CustomActionId: String

  Name: String

  Status: String?

  Trigger: String
}

class `AWS::QuickSight::DashboardVisualCustomActionOperation` {
  FilterOperation: `AWS::QuickSight::DashboardCustomActionFilterOperation`?

  NavigationOperation: `AWS::QuickSight::DashboardCustomActionNavigationOperation`?

  SetParametersOperation: `AWS::QuickSight::DashboardCustomActionSetParametersOperation`?

  URLOperation: `AWS::QuickSight::TemplateCustomActionURLOperation`?
}

class `AWS::QuickSight::DashboardVisualPalette` {
  ChartColor: String?

  ColorMap: Listing<`AWS::QuickSight::DashboardDataPathColor`>?
}

class `AWS::QuickSight::DashboardVisualSubtitleLabelOptions` {
  FormatText: `AWS::QuickSight::TemplateShortFormatText`?

  Visibility: String?
}

class `AWS::QuickSight::DashboardVisualTitleLabelOptions` {
  FormatText: `AWS::QuickSight::TemplateShortFormatText`?

  Visibility: String?
}

class `AWS::QuickSight::DashboardWaterfallChartAggregatedFieldWells` {
  Breakdowns: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Categories: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Values: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardWaterfallChartConfiguration` {
  CategoryAxisDisplayOptions: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  CategoryAxisLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  DataLabels: `AWS::QuickSight::DashboardDataLabelOptions`?

  FieldWells: `AWS::QuickSight::DashboardWaterfallChartFieldWells`?

  Legend: `AWS::QuickSight::DashboardLegendOptions`?

  PrimaryYAxisDisplayOptions: `AWS::QuickSight::DashboardAxisDisplayOptions`?

  PrimaryYAxisLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  SortConfiguration: `AWS::QuickSight::DashboardWaterfallChartSortConfiguration`?

  VisualPalette: `AWS::QuickSight::DashboardVisualPalette`?

  WaterfallChartOptions: `AWS::QuickSight::TemplateWaterfallChartOptions`?
}

class `AWS::QuickSight::DashboardWaterfallChartFieldWells` {
  WaterfallChartAggregatedFieldWells: `AWS::QuickSight::DashboardWaterfallChartAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardWaterfallChartSortConfiguration` {
  BreakdownItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::DashboardFieldSortOptions`>?
}

class `AWS::QuickSight::DashboardWaterfallVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardWaterfallChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DashboardWordCloudAggregatedFieldWells` {
  GroupBy: Listing<`AWS::QuickSight::DashboardDimensionField`>?

  Size: Listing<`AWS::QuickSight::DashboardMeasureField`>?
}

class `AWS::QuickSight::DashboardWordCloudChartConfiguration` {
  CategoryLabelOptions: `AWS::QuickSight::DashboardChartAxisLabelOptions`?

  FieldWells: `AWS::QuickSight::DashboardWordCloudFieldWells`?

  SortConfiguration: `AWS::QuickSight::DashboardWordCloudSortConfiguration`?

  WordCloudOptions: `AWS::QuickSight::TemplateWordCloudOptions`?
}

class `AWS::QuickSight::DashboardWordCloudFieldWells` {
  WordCloudAggregatedFieldWells: `AWS::QuickSight::DashboardWordCloudAggregatedFieldWells`?
}

class `AWS::QuickSight::DashboardWordCloudVisual` {
  Actions: Listing<`AWS::QuickSight::DashboardVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::DashboardWordCloudChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::DashboardColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::DashboardVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::DashboardVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::DataSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::QuickSight::DataSetProperties`?

  Type: "AWS::QuickSight::DataSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::QuickSight::DataSetProperties` {
  AwsAccountId: String?

  ColumnGroups: Listing<`AWS::QuickSight::DataSetColumnGroup`>?

  ColumnLevelPermissionRules: Listing<`AWS::QuickSight::DataSetColumnLevelPermissionRule`>?

  DataSetId: String?

  DataSetRefreshProperties: `AWS::QuickSight::DataSetDataSetRefreshProperties`?

  DataSetUsageConfiguration: `AWS::QuickSight::DataSetDataSetUsageConfiguration`?

  DatasetParameters: Listing<`AWS::QuickSight::DataSetDatasetParameter`>?

  FieldFolders: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::QuickSight::DataSetFieldFolder`>?

  ImportMode: String?

  IngestionWaitPolicy: `AWS::QuickSight::DataSetIngestionWaitPolicy`?

  LogicalTableMap: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::QuickSight::DataSetLogicalTable`>?

  Name: String?

  Permissions: Listing<`AWS::QuickSight::ThemeResourcePermission`>?

  PhysicalTableMap: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::QuickSight::DataSetPhysicalTable`>?

  RowLevelPermissionDataSet: `AWS::QuickSight::DataSetRowLevelPermissionDataSet`?

  RowLevelPermissionTagConfiguration: `AWS::QuickSight::DataSetRowLevelPermissionTagConfiguration`?

  Tags: Listing<Tag>?
}

class `AWS::QuickSight::DataSetCalculatedColumn` {
  ColumnId: String

  ColumnName: String

  Expression: String
}

class `AWS::QuickSight::DataSetCastColumnTypeOperation` {
  ColumnName: String

  Format: String?

  NewColumnType: String

  SubType: String?
}

class `AWS::QuickSight::DataSetColumnDescription` {
  Text: String?
}

class `AWS::QuickSight::DataSetColumnGroup` {
  GeoSpatialColumnGroup: `AWS::QuickSight::DataSetGeoSpatialColumnGroup`?
}

class `AWS::QuickSight::DataSetColumnLevelPermissionRule` {
  ColumnNames: Listing<String>?

  Principals: Listing<String>?
}

class `AWS::QuickSight::DataSetColumnTag` {
  ColumnDescription: `AWS::QuickSight::DataSetColumnDescription`?

  ColumnGeographicRole: String?
}

class `AWS::QuickSight::DataSetCreateColumnsOperation` {
  Columns: Listing<`AWS::QuickSight::DataSetCalculatedColumn`>
}

class `AWS::QuickSight::DataSetCustomSql` {
  Columns: Listing<`AWS::QuickSight::DataSetInputColumn`>

  DataSourceArn: String

  Name: String

  SqlQuery: String
}

class `AWS::QuickSight::DataSetDataSetRefreshProperties` {
  RefreshConfiguration: `AWS::QuickSight::DataSetRefreshConfiguration`?
}

class `AWS::QuickSight::DataSetDataSetUsageConfiguration` {
  DisableUseAsDirectQuerySource: Boolean?

  DisableUseAsImportedSource: Boolean?
}

class `AWS::QuickSight::DataSetDatasetParameter` {
  DateTimeDatasetParameter: `AWS::QuickSight::DataSetDateTimeDatasetParameter`?

  DecimalDatasetParameter: `AWS::QuickSight::DataSetDecimalDatasetParameter`?

  IntegerDatasetParameter: `AWS::QuickSight::DataSetIntegerDatasetParameter`?

  StringDatasetParameter: `AWS::QuickSight::DataSetStringDatasetParameter`?
}

class `AWS::QuickSight::DataSetDateTimeDatasetParameter` {
  DefaultValues: `AWS::QuickSight::DataSetStringDatasetParameterDefaultValues`?

  Id: String

  Name: String

  TimeGranularity: String?

  ValueType: String
}

class `AWS::QuickSight::DataSetStringDatasetParameterDefaultValues` {
  StaticValues: Listing<String>?
}

class `AWS::QuickSight::DataSetDecimalDatasetParameter` {
  DefaultValues: `AWS::QuickSight::DataSetIntegerDatasetParameterDefaultValues`?

  Id: String

  Name: String

  ValueType: String
}

class `AWS::QuickSight::DataSetIntegerDatasetParameterDefaultValues` {
  StaticValues: Listing<Number>?
}

class `AWS::QuickSight::DataSetFieldFolder` {
  Columns: Listing<String>?

  Description: String?
}

class `AWS::QuickSight::DataSetFilterOperation` {
  ConditionExpression: String
}

class `AWS::QuickSight::DataSetGeoSpatialColumnGroup` {
  Columns: Listing<String>

  CountryCode: String?

  Name: String
}

class `AWS::QuickSight::DataSetIncrementalRefresh` {
  LookbackWindow: `AWS::QuickSight::DataSetLookbackWindow`?
}

class `AWS::QuickSight::DataSetIngestionWaitPolicy` {
  IngestionWaitTimeInHours: Number?

  WaitForSpiceIngestion: Boolean?
}

class `AWS::QuickSight::DataSetInputColumn` {
  Name: String

  SubType: String?

  Type: String
}

class `AWS::QuickSight::DataSetIntegerDatasetParameter` {
  DefaultValues: `AWS::QuickSight::DataSetIntegerDatasetParameterDefaultValues`?

  Id: String

  Name: String

  ValueType: String
}

class `AWS::QuickSight::DataSetJoinInstruction` {
  LeftJoinKeyProperties: `AWS::QuickSight::DataSetJoinKeyProperties`?

  LeftOperand: String

  OnClause: String

  RightJoinKeyProperties: `AWS::QuickSight::DataSetJoinKeyProperties`?

  RightOperand: String

  Type: String
}

class `AWS::QuickSight::DataSetJoinKeyProperties` {
  UniqueKey: Boolean?
}

class `AWS::QuickSight::DataSetLogicalTable` {
  Alias: String

  DataTransforms: Listing<`AWS::QuickSight::DataSetTransformOperation`>?

  Source: `AWS::QuickSight::DataSetLogicalTableSource`
}

class `AWS::QuickSight::DataSetLogicalTableSource` {
  DataSetArn: String?

  JoinInstruction: `AWS::QuickSight::DataSetJoinInstruction`?

  PhysicalTableId: String?
}

class `AWS::QuickSight::DataSetLookbackWindow` {
  ColumnName: String?

  Size: Number?

  SizeUnit: String?
}

class `AWS::QuickSight::DataSetNewDefaultValues` {
  DateTimeStaticValues: Listing<String>?

  DecimalStaticValues: Listing<Number>?

  IntegerStaticValues: Listing<Number>?

  StringStaticValues: Listing<String>?
}

class `AWS::QuickSight::DataSetOutputColumn` {
  Description: String?

  Name: String?

  SubType: String?

  Type: String?
}

class `AWS::QuickSight::DataSetOverrideDatasetParameterOperation` {
  NewDefaultValues: `AWS::QuickSight::DataSetNewDefaultValues`?

  NewParameterName: String?

  ParameterName: String
}

class `AWS::QuickSight::DataSetPhysicalTable` {
  CustomSql: `AWS::QuickSight::DataSetCustomSql`?

  RelationalTable: `AWS::QuickSight::DataSetRelationalTable`?

  S3Source: `AWS::QuickSight::DataSetS3Source`?
}

class `AWS::QuickSight::DataSetProjectOperation` {
  ProjectedColumns: Listing<String>
}

class `AWS::QuickSight::DataSetRefreshConfiguration` {
  IncrementalRefresh: `AWS::QuickSight::DataSetIncrementalRefresh`?
}

class `AWS::QuickSight::DataSetRelationalTable` {
  Catalog: String?

  DataSourceArn: String

  InputColumns: Listing<`AWS::QuickSight::DataSetInputColumn`>

  Name: String

  Schema: String?
}

class `AWS::QuickSight::DataSetRenameColumnOperation` {
  ColumnName: String

  NewColumnName: String
}

class `AWS::QuickSight::DataSetRowLevelPermissionDataSet` {
  Arn: String

  FormatVersion: String?

  Namespace: String?

  PermissionPolicy: String

  Status: String?
}

class `AWS::QuickSight::DataSetRowLevelPermissionTagConfiguration` {
  Status: String?

  TagRuleConfigurations: Dynamic?

  TagRules: Listing<`AWS::QuickSight::DataSetRowLevelPermissionTagRule`>
}

class `AWS::QuickSight::DataSetRowLevelPermissionTagRule` {
  ColumnName: String

  MatchAllValue: String?

  TagKey: String

  TagMultiValueDelimiter: String?
}

class `AWS::QuickSight::DataSetS3Source` {
  DataSourceArn: String

  InputColumns: Listing<`AWS::QuickSight::DataSetInputColumn`>

  UploadSettings: `AWS::QuickSight::DataSetUploadSettings`?
}

class `AWS::QuickSight::DataSetStringDatasetParameter` {
  DefaultValues: `AWS::QuickSight::DataSetStringDatasetParameterDefaultValues`?

  Id: String

  Name: String

  ValueType: String
}

class `AWS::QuickSight::DataSetTagColumnOperation` {
  ColumnName: String

  Tags: Listing<`AWS::QuickSight::DataSetColumnTag`>
}

class `AWS::QuickSight::DataSetTransformOperation` {
  CastColumnTypeOperation: `AWS::QuickSight::DataSetCastColumnTypeOperation`?

  CreateColumnsOperation: `AWS::QuickSight::DataSetCreateColumnsOperation`?

  FilterOperation: `AWS::QuickSight::DataSetFilterOperation`?

  OverrideDatasetParameterOperation: `AWS::QuickSight::DataSetOverrideDatasetParameterOperation`?

  ProjectOperation: `AWS::QuickSight::DataSetProjectOperation`?

  RenameColumnOperation: `AWS::QuickSight::DataSetRenameColumnOperation`?

  TagColumnOperation: `AWS::QuickSight::DataSetTagColumnOperation`?
}

class `AWS::QuickSight::DataSetUploadSettings` {
  ContainsHeader: Boolean?

  Delimiter: String?

  Format: String?

  StartFromRow: Number?

  TextQualifier: String?
}

class `AWS::QuickSight::DataSource` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::QuickSight::DataSourceProperties`?

  Type: "AWS::QuickSight::DataSource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::QuickSight::DataSourceProperties` {
  AlternateDataSourceParameters: Listing<`AWS::QuickSight::DataSourceDataSourceParameters`>?

  AwsAccountId: String?

  Credentials: `AWS::QuickSight::DataSourceDataSourceCredentials`?

  DataSourceId: String?

  DataSourceParameters: `AWS::QuickSight::DataSourceDataSourceParameters`?

  ErrorInfo: `AWS::QuickSight::ThemeThemeError`?

  Name: String?

  Permissions: Listing<`AWS::QuickSight::ThemeResourcePermission`>?

  SslProperties: `AWS::QuickSight::DataSourceSslProperties`?

  Tags: Listing<Tag>?

  Type: String?

  VpcConnectionProperties: `AWS::QuickSight::DataSourceVpcConnectionProperties`?
}

class `AWS::QuickSight::DataSourceAmazonOpenSearchParameters` {
  Domain: String
}

class `AWS::QuickSight::DataSourceAthenaParameters` {
  RoleArn: String?

  WorkGroup: String?
}

class `AWS::QuickSight::DataSourceTeradataParameters` {
  Database: String

  Host: String

  Port: Number
}

class `AWS::QuickSight::DataSourceCredentialPair` {
  AlternateDataSourceParameters: Listing<`AWS::QuickSight::DataSourceDataSourceParameters`>?

  Password: String

  Username: String
}

class `AWS::QuickSight::DataSourceDataSourceCredentials` {
  CopySourceArn: String?

  CredentialPair: `AWS::QuickSight::DataSourceCredentialPair`?

  SecretArn: String?
}

class `AWS::QuickSight::ThemeThemeError` {
  Message: String?

  Type: String?
}

class `AWS::QuickSight::DataSourceDataSourceParameters` {
  AmazonElasticsearchParameters: `AWS::QuickSight::DataSourceAmazonOpenSearchParameters`?

  AmazonOpenSearchParameters: `AWS::QuickSight::DataSourceAmazonOpenSearchParameters`?

  AthenaParameters: `AWS::QuickSight::DataSourceAthenaParameters`?

  AuroraParameters: `AWS::QuickSight::DataSourceTeradataParameters`?

  AuroraPostgreSqlParameters: `AWS::QuickSight::DataSourceTeradataParameters`?

  DatabricksParameters: `AWS::QuickSight::DataSourceDatabricksParameters`?

  MariaDbParameters: `AWS::QuickSight::DataSourceTeradataParameters`?

  MySqlParameters: `AWS::QuickSight::DataSourceTeradataParameters`?

  OracleParameters: `AWS::QuickSight::DataSourceTeradataParameters`?

  PostgreSqlParameters: `AWS::QuickSight::DataSourceTeradataParameters`?

  PrestoParameters: `AWS::QuickSight::DataSourceTrinoParameters`?

  RdsParameters: `AWS::QuickSight::DataSourceRdsParameters`?

  RedshiftParameters: `AWS::QuickSight::DataSourceRedshiftParameters`?

  S3Parameters: `AWS::QuickSight::DataSourceS3Parameters`?

  SnowflakeParameters: `AWS::QuickSight::DataSourceSnowflakeParameters`?

  SparkParameters: `AWS::QuickSight::DataSourceSparkParameters`?

  SqlServerParameters: `AWS::QuickSight::DataSourceTeradataParameters`?

  StarburstParameters: `AWS::QuickSight::DataSourceStarburstParameters`?

  TeradataParameters: `AWS::QuickSight::DataSourceTeradataParameters`?

  TrinoParameters: `AWS::QuickSight::DataSourceTrinoParameters`?
}

class `AWS::QuickSight::DataSourceDatabricksParameters` {
  Host: String

  Port: Number

  SqlEndpointPath: String
}

class `AWS::QuickSight::DataSourceTrinoParameters` {
  Catalog: String

  Host: String

  Port: Number
}

class `AWS::QuickSight::DataSourceRdsParameters` {
  Database: String

  InstanceId: String
}

class `AWS::QuickSight::DataSourceRedshiftParameters` {
  ClusterId: String?

  Database: String

  Host: String?

  Port: Number?
}

class `AWS::QuickSight::DataSourceS3Parameters` {
  ManifestFileLocation: `AWS::QuickSight::DataSourceManifestFileLocation`

  RoleArn: String?
}

class `AWS::QuickSight::DataSourceSnowflakeParameters` {
  Database: String

  Host: String

  Warehouse: String
}

class `AWS::QuickSight::DataSourceSparkParameters` {
  Host: String

  Port: Number
}

class `AWS::QuickSight::DataSourceSslProperties` {
  DisableSsl: Boolean?
}

class `AWS::QuickSight::DataSourceStarburstParameters` {
  Catalog: String

  Host: String

  Port: Number

  ProductType: String?
}

class `AWS::QuickSight::DataSourceVpcConnectionProperties` {
  VpcConnectionArn: String
}

class `AWS::QuickSight::RefreshSchedule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::QuickSight::RefreshScheduleProperties`?

  Type: "AWS::QuickSight::RefreshSchedule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::QuickSight::RefreshScheduleProperties` {
  AwsAccountId: String?

  DataSetId: String?

  Schedule: `AWS::QuickSight::RefreshScheduleRefreshScheduleMap`?
}

class `AWS::QuickSight::RefreshScheduleRefreshOnDay` {
  DayOfMonth: String?

  DayOfWeek: String?
}

class `AWS::QuickSight::RefreshScheduleRefreshScheduleMap` {
  RefreshType: String?

  ScheduleFrequency: `AWS::QuickSight::RefreshScheduleScheduleFrequency`?

  ScheduleId: String?

  StartAfterDateTime: String?
}

class `AWS::QuickSight::RefreshScheduleScheduleFrequency` {
  Interval: String?

  RefreshOnDay: `AWS::QuickSight::RefreshScheduleRefreshOnDay`?

  TimeOfTheDay: String?

  TimeZone: String?
}

class `AWS::QuickSight::Template` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::QuickSight::TemplateProperties`

  Type: "AWS::QuickSight::Template"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::QuickSight::TemplateProperties` {
  AwsAccountId: String

  Definition: `AWS::QuickSight::TemplateTemplateVersionDefinition`?

  Name: String?

  Permissions: Listing<`AWS::QuickSight::ThemeResourcePermission`>?

  SourceEntity: `AWS::QuickSight::TemplateTemplateSourceEntity`?

  Tags: Listing<Tag>?

  TemplateId: String

  ValidationStrategy: `AWS::VerifiedPermissions::PolicyStoreValidationSettings`?

  VersionDescription: String?
}

class `AWS::QuickSight::TemplateAggregationFunction` {
  AttributeAggregationFunction: `AWS::QuickSight::TemplateAttributeAggregationFunction`?

  CategoricalAggregationFunction: String?

  DateAggregationFunction: String?

  NumericalAggregationFunction: `AWS::QuickSight::TemplateNumericalAggregationFunction`?
}

class `AWS::QuickSight::TemplateAggregationSortConfiguration` {
  AggregationFunction: `AWS::QuickSight::TemplateAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  SortDirection: String
}

class `AWS::QuickSight::TemplateAnalysisDefaults` {
  DefaultNewSheetConfiguration: `AWS::QuickSight::TemplateDefaultNewSheetConfiguration`
}

class `AWS::QuickSight::TemplateArcAxisConfiguration` {
  Range: `AWS::QuickSight::TemplateArcAxisDisplayRange`?

  ReserveRange: Number?
}

class `AWS::QuickSight::TemplateAxisDataOptions` {
  DateAxisOptions: `AWS::QuickSight::TemplateDateAxisOptions`?

  NumericAxisOptions: `AWS::QuickSight::TemplateNumericAxisOptions`?
}

class `AWS::QuickSight::TemplateAxisDisplayOptions` {
  AxisLineVisibility: String?

  AxisOffset: String?

  DataOptions: `AWS::QuickSight::TemplateAxisDataOptions`?

  GridLineVisibility: String?

  ScrollbarOptions: `AWS::QuickSight::TemplateScrollBarOptions`?

  TickLabelOptions: `AWS::QuickSight::TemplateAxisTickLabelOptions`?
}

class `AWS::QuickSight::TemplateAxisDisplayRange` {
  DataDriven: Dynamic?

  MinMax: `AWS::QuickSight::TemplateAxisDisplayMinMaxRange`?
}

class `AWS::QuickSight::TemplateAxisLabelOptions` {
  ApplyTo: `AWS::QuickSight::TemplateAxisLabelReferenceOptions`?

  CustomLabel: String?

  FontConfiguration: `AWS::QuickSight::TemplateFontConfiguration`?
}

class `AWS::QuickSight::TemplateAxisLabelReferenceOptions` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String
}

class `AWS::QuickSight::TemplateAxisScale` {
  Linear: `AWS::QuickSight::TemplateAxisLinearScale`?

  Logarithmic: `AWS::QuickSight::TemplateAxisLogarithmicScale`?
}

class `AWS::QuickSight::TemplateAxisTickLabelOptions` {
  LabelOptions: `AWS::QuickSight::TemplateLabelOptions`?

  RotationAngle: Number?
}

class `AWS::QuickSight::TemplateLineChartAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Colors: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  SmallMultiples: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Values: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateBarChartConfiguration` {
  BarsArrangement: String?

  CategoryAxis: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  CategoryLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  ColorLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  ContributionAnalysisDefaults: Listing<`AWS::QuickSight::TemplateContributionAnalysisDefault`>?

  DataLabels: `AWS::QuickSight::TemplateDataLabelOptions`?

  FieldWells: `AWS::QuickSight::TemplateBarChartFieldWells`?

  Legend: `AWS::QuickSight::TemplateLegendOptions`?

  Orientation: String?

  ReferenceLines: Listing<`AWS::QuickSight::TemplateReferenceLine`>?

  SmallMultiplesOptions: `AWS::QuickSight::TemplateSmallMultiplesOptions`?

  SortConfiguration: `AWS::QuickSight::TemplateBarChartSortConfiguration`?

  Tooltip: `AWS::QuickSight::TemplateTooltipOptions`?

  ValueAxis: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  ValueLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  VisualPalette: `AWS::QuickSight::TemplateVisualPalette`?
}

class `AWS::QuickSight::TemplateBarChartFieldWells` {
  BarChartAggregatedFieldWells: `AWS::QuickSight::TemplateLineChartAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateBarChartSortConfiguration` {
  CategoryItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?

  ColorItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  ColorSort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?

  SmallMultiplesLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SmallMultiplesSort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?
}

class `AWS::QuickSight::TemplateBarChartVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateBarChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateBodySectionConfiguration` {
  Content: `AWS::QuickSight::TemplateBodySectionContent`

  PageBreakConfiguration: `AWS::QuickSight::TemplateSectionPageBreakConfiguration`?

  SectionId: String

  Style: `AWS::QuickSight::TemplateSectionStyle`?
}

class `AWS::QuickSight::TemplateBodySectionContent` {
  Layout: `AWS::QuickSight::TemplateSectionLayoutConfiguration`?
}

class `AWS::QuickSight::TemplateTableAggregatedFieldWells` {
  GroupBy: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Values: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateBoxPlotChartConfiguration` {
  BoxPlotOptions: `AWS::QuickSight::TemplateBoxPlotOptions`?

  CategoryAxis: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  CategoryLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  FieldWells: `AWS::QuickSight::TemplateBoxPlotFieldWells`?

  Legend: `AWS::QuickSight::TemplateLegendOptions`?

  PrimaryYAxisDisplayOptions: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  PrimaryYAxisLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  ReferenceLines: Listing<`AWS::QuickSight::TemplateReferenceLine`>?

  SortConfiguration: `AWS::QuickSight::TemplateBoxPlotSortConfiguration`?

  Tooltip: `AWS::QuickSight::TemplateTooltipOptions`?

  VisualPalette: `AWS::QuickSight::TemplateVisualPalette`?
}

class `AWS::QuickSight::TemplateBoxPlotFieldWells` {
  BoxPlotAggregatedFieldWells: `AWS::QuickSight::TemplateTableAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateBoxPlotOptions` {
  AllDataPointsVisibility: String?

  OutlierVisibility: String?

  StyleOptions: `AWS::QuickSight::TemplateBoxPlotStyleOptions`?
}

class `AWS::QuickSight::TemplateBoxPlotSortConfiguration` {
  CategorySort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?

  PaginationConfiguration: `AWS::QuickSight::TemplatePaginationConfiguration`?
}

class `AWS::QuickSight::TemplateBoxPlotVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateBoxPlotChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateCascadingControlConfiguration` {
  SourceControls: Listing<`AWS::QuickSight::TemplateCascadingControlSource`>?
}

class `AWS::QuickSight::TemplateCascadingControlSource` {
  ColumnToMatch: `AWS::QuickSight::TemplateColumnIdentifier`?

  SourceSheetControlId: String?
}

class `AWS::QuickSight::TemplateCategoricalDimensionField` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::TemplateStringFormatConfiguration`?

  HierarchyId: String?
}

class `AWS::QuickSight::TemplateCategoricalMeasureField` {
  AggregationFunction: String?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::TemplateStringFormatConfiguration`?
}

class `AWS::QuickSight::TemplateCategoryDrillDownFilter` {
  CategoryValues: Listing<String>

  Column: `AWS::QuickSight::TemplateColumnIdentifier`
}

class `AWS::QuickSight::TemplateCategoryFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  Configuration: `AWS::QuickSight::TemplateCategoryFilterConfiguration`

  FilterId: String
}

class `AWS::QuickSight::TemplateCategoryFilterConfiguration` {
  CustomFilterConfiguration: `AWS::QuickSight::TemplateCustomFilterConfiguration`?

  CustomFilterListConfiguration: `AWS::QuickSight::TemplateCustomFilterListConfiguration`?

  FilterListConfiguration: `AWS::QuickSight::TemplateFilterListConfiguration`?
}

class `AWS::QuickSight::TemplateChartAxisLabelOptions` {
  AxisLabelOptions: Listing<`AWS::QuickSight::TemplateAxisLabelOptions`>?

  SortIconVisibility: String?

  Visibility: String?
}

class `AWS::QuickSight::TemplateClusterMarker` {
  SimpleClusterMarker: `AWS::QuickSight::TemplateSimpleClusterMarker`?
}

class `AWS::QuickSight::TemplateClusterMarkerConfiguration` {
  ClusterMarker: `AWS::QuickSight::TemplateClusterMarker`?
}

class `AWS::QuickSight::TemplateColorScale` {
  ColorFillType: String

  Colors: Listing<`AWS::QuickSight::TemplateDataColor`>

  NullValueColor: `AWS::QuickSight::TemplateDataColor`?
}

class `AWS::QuickSight::TemplateColorsConfiguration` {
  CustomColors: Listing<`AWS::QuickSight::TemplateCustomColor`>?
}

class `AWS::QuickSight::TemplateColumnConfiguration` {
  ColorsConfiguration: `AWS::QuickSight::TemplateColorsConfiguration`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FormatConfiguration: `AWS::QuickSight::TemplateFormatConfiguration`?

  Role: String?
}

class `AWS::QuickSight::TemplateColumnGroupSchema` {
  ColumnGroupColumnSchemaList: Listing<`AWS::WAFv2::RuleGroupLabelSummary`>?

  Name: String?
}

class `AWS::QuickSight::TemplateColumnHierarchy` {
  DateTimeHierarchy: `AWS::QuickSight::TemplateDateTimeHierarchy`?

  ExplicitHierarchy: `AWS::QuickSight::TemplatePredefinedHierarchy`?

  PredefinedHierarchy: `AWS::QuickSight::TemplatePredefinedHierarchy`?
}

class `AWS::QuickSight::TemplateColumnSchema` {
  DataType: String?

  GeographicRole: String?

  Name: String?
}

class `AWS::QuickSight::TemplateColumnSort` {
  AggregationFunction: `AWS::QuickSight::TemplateAggregationFunction`?

  Direction: String

  SortBy: `AWS::QuickSight::TemplateColumnIdentifier`
}

class `AWS::QuickSight::TemplateColumnTooltipItem` {
  Aggregation: `AWS::QuickSight::TemplateAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  Label: String?

  Visibility: String?
}

class `AWS::QuickSight::TemplateComboChartAggregatedFieldWells` {
  BarValues: Listing<`AWS::QuickSight::TemplateMeasureField`>?

  Category: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Colors: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  LineValues: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateComboChartConfiguration` {
  BarDataLabels: `AWS::QuickSight::TemplateDataLabelOptions`?

  BarsArrangement: String?

  CategoryAxis: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  CategoryLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  ColorLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  FieldWells: `AWS::QuickSight::TemplateComboChartFieldWells`?

  Legend: `AWS::QuickSight::TemplateLegendOptions`?

  LineDataLabels: `AWS::QuickSight::TemplateDataLabelOptions`?

  PrimaryYAxisDisplayOptions: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  PrimaryYAxisLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  ReferenceLines: Listing<`AWS::QuickSight::TemplateReferenceLine`>?

  SecondaryYAxisDisplayOptions: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  SecondaryYAxisLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  SortConfiguration: `AWS::QuickSight::TemplateRadarChartSortConfiguration`?

  Tooltip: `AWS::QuickSight::TemplateTooltipOptions`?

  VisualPalette: `AWS::QuickSight::TemplateVisualPalette`?
}

class `AWS::QuickSight::TemplateComboChartFieldWells` {
  ComboChartAggregatedFieldWells: `AWS::QuickSight::TemplateComboChartAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateRadarChartSortConfiguration` {
  CategoryItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?

  ColorItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  ColorSort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?
}

class `AWS::QuickSight::TemplateComboChartVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateComboChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateComparisonConfiguration` {
  ComparisonFormat: `AWS::QuickSight::TemplateComparisonFormatConfiguration`?

  ComparisonMethod: String?
}

class `AWS::QuickSight::TemplateComparisonFormatConfiguration` {
  NumberDisplayFormatConfiguration: `AWS::QuickSight::TemplateNumberDisplayFormatConfiguration`?

  PercentageDisplayFormatConfiguration: `AWS::QuickSight::TemplatePercentageDisplayFormatConfiguration`?
}

class `AWS::QuickSight::TemplateComputation` {
  Forecast: `AWS::QuickSight::TemplateForecastComputation`?

  GrowthRate: `AWS::QuickSight::TemplateGrowthRateComputation`?

  MaximumMinimum: `AWS::QuickSight::TemplateMaximumMinimumComputation`?

  MetricComparison: `AWS::QuickSight::TemplateMetricComparisonComputation`?

  PeriodOverPeriod: `AWS::QuickSight::TemplatePeriodOverPeriodComputation`?

  PeriodToDate: `AWS::QuickSight::TemplatePeriodToDateComputation`?

  TopBottomMovers: `AWS::QuickSight::TemplateTopBottomMoversComputation`?

  TopBottomRanked: `AWS::QuickSight::TemplateTopBottomRankedComputation`?

  TotalAggregation: `AWS::QuickSight::TemplateTotalAggregationComputation`?

  UniqueValues: `AWS::QuickSight::TemplateUniqueValuesComputation`?
}

class `AWS::QuickSight::TemplateConditionalFormattingColor` {
  Gradient: `AWS::QuickSight::TemplateConditionalFormattingGradientColor`?

  Solid: `AWS::QuickSight::TemplateConditionalFormattingSolidColor`?
}

class `AWS::QuickSight::TemplateConditionalFormattingCustomIconCondition` {
  Color: String?

  DisplayConfiguration: `AWS::QuickSight::TemplateConditionalFormattingIconDisplayConfiguration`?

  Expression: String

  IconOptions: `AWS::QuickSight::TemplateConditionalFormattingCustomIconOptions`
}

class `AWS::QuickSight::TemplateConditionalFormattingGradientColor` {
  Color: `AWS::QuickSight::TemplateGradientColor`

  Expression: String
}

class `AWS::QuickSight::TemplateConditionalFormattingIcon` {
  CustomCondition: `AWS::QuickSight::TemplateConditionalFormattingCustomIconCondition`?

  IconSet: `AWS::QuickSight::TemplateConditionalFormattingIconSet`?
}

class `AWS::QuickSight::TemplateContributionAnalysisDefault` {
  ContributorDimensions: Listing<`AWS::QuickSight::TemplateColumnIdentifier`>

  MeasureFieldId: String
}

class `AWS::QuickSight::TemplateCurrencyDisplayFormatConfiguration` {
  DecimalPlacesConfiguration: `AWS::QuickSight::TemplateDecimalPlacesConfiguration`?

  NegativeValueConfiguration: `AWS::QuickSight::TemplateNegativeValueConfiguration`?

  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  NumberScale: String?

  Prefix: String?

  SeparatorConfiguration: `AWS::QuickSight::TemplateNumericSeparatorConfiguration`?

  Suffix: String?

  Symbol: String?
}

class `AWS::QuickSight::TemplateCustomActionFilterOperation` {
  SelectedFieldsConfiguration: `AWS::QuickSight::TemplateFilterOperationSelectedFieldsConfiguration`

  TargetVisualsConfiguration: `AWS::QuickSight::TemplateFilterOperationTargetVisualsConfiguration`
}

class `AWS::QuickSight::TemplateCustomActionNavigationOperation` {
  LocalNavigationConfiguration: `AWS::QuickSight::TemplateLocalNavigationConfiguration`?
}

class `AWS::QuickSight::TemplateCustomActionSetParametersOperation` {
  ParameterValueConfigurations: Listing<`AWS::QuickSight::TemplateSetParameterValueConfiguration`>
}

class `AWS::QuickSight::TemplateCustomContentVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateCustomContentConfiguration`?

  DataSetIdentifier: String

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateCustomValuesConfiguration` {
  CustomValues: `AWS::QuickSight::TemplateCustomParameterValues`

  IncludeNullValue: Boolean?
}

class `AWS::QuickSight::TemplateDataFieldSeriesItem` {
  AxisBinding: String

  FieldId: String

  FieldValue: String?

  Settings: `AWS::QuickSight::TemplateLineChartSeriesSettings`?
}

class `AWS::QuickSight::TemplateDataLabelOptions` {
  CategoryLabelVisibility: String?

  DataLabelTypes: Listing<`AWS::QuickSight::TemplateDataLabelType`>?

  LabelColor: String?

  LabelContent: String?

  LabelFontConfiguration: `AWS::QuickSight::TemplateFontConfiguration`?

  MeasureLabelVisibility: String?

  Overlap: String?

  Position: String?

  TotalsVisibility: String?

  Visibility: String?
}

class `AWS::QuickSight::TemplateDataLabelType` {
  DataPathLabelType: `AWS::QuickSight::TemplateDataPathLabelType`?

  FieldLabelType: `AWS::QuickSight::TemplateFieldLabelType`?

  MaximumLabelType: `AWS::QuickSight::TemplateTrendArrowOptions`?

  MinimumLabelType: `AWS::QuickSight::TemplateTrendArrowOptions`?

  RangeEndsLabelType: `AWS::QuickSight::TemplateTrendArrowOptions`?
}

class `AWS::QuickSight::TemplateDataPathColor` {
  Color: String

  Element: `AWS::QuickSight::TemplateDataPathValue`

  TimeGranularity: String?
}

class `AWS::QuickSight::TemplateDataPathSort` {
  Direction: String

  SortPaths: Listing<`AWS::QuickSight::TemplateDataPathValue`>
}

class `AWS::QuickSight::TemplateDataPathValue` {
  DataPathType: `AWS::QuickSight::TemplateDataPathType`?

  FieldId: String?

  FieldValue: String?
}

class `AWS::QuickSight::TemplateDataSetConfiguration` {
  ColumnGroupSchemaList: Listing<`AWS::QuickSight::TemplateColumnGroupSchema`>?

  DataSetSchema: `AWS::QuickSight::TemplateDataSetSchema`?

  Placeholder: String?
}

class `AWS::QuickSight::TemplateDataSetSchema` {
  ColumnSchemaList: Listing<`AWS::QuickSight::TemplateColumnSchema`>?
}

class `AWS::QuickSight::TemplateDateDimensionField` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  DateGranularity: String?

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::TemplateDateTimeFormatConfiguration`?

  HierarchyId: String?
}

class `AWS::QuickSight::TemplateDateMeasureField` {
  AggregationFunction: String?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::TemplateDateTimeFormatConfiguration`?
}

class `AWS::QuickSight::TemplateDateTimeDefaultValues` {
  DynamicValue: `AWS::QuickSight::TemplateDynamicDefaultValue`?

  RollingDate: `AWS::QuickSight::TemplateRollingDateConfiguration`?

  StaticValues: Listing<String>?
}

class `AWS::QuickSight::TemplateDateTimeFormatConfiguration` {
  DateTimeFormat: String?

  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  NumericFormatConfiguration: `AWS::QuickSight::TemplateNumericFormatConfiguration`?
}

class `AWS::QuickSight::TemplateDateTimeHierarchy` {
  DrillDownFilters: Listing<`AWS::QuickSight::TemplateDrillDownFilter`>?

  HierarchyId: String
}

class `AWS::QuickSight::TemplateDateTimeParameterDeclaration` {
  DefaultValues: `AWS::QuickSight::TemplateDateTimeDefaultValues`?

  MappedDataSetParameters: Listing<`AWS::QuickSight::TemplateMappedDataSetParameter`>?

  Name: String

  TimeGranularity: String?

  ValueWhenUnset: `AWS::QuickSight::TemplateStringValueWhenUnsetConfiguration`?
}

class `AWS::QuickSight::TemplateRelativeDateTimeControlDisplayOptions` {
  DateTimeFormat: String?

  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  TitleOptions: `AWS::QuickSight::TemplateLabelOptions`?
}

class `AWS::QuickSight::TemplateIntegerDefaultValues` {
  DynamicValue: `AWS::QuickSight::TemplateDynamicDefaultValue`?

  StaticValues: Listing<Number>?
}

class `AWS::QuickSight::TemplateDecimalParameterDeclaration` {
  DefaultValues: `AWS::QuickSight::TemplateIntegerDefaultValues`?

  MappedDataSetParameters: Listing<`AWS::QuickSight::TemplateMappedDataSetParameter`>?

  Name: String

  ParameterValueType: String

  ValueWhenUnset: `AWS::QuickSight::TemplateIntegerValueWhenUnsetConfiguration`?
}

class `AWS::QuickSight::TemplateDefaultFreeFormLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::TemplateFreeFormLayoutCanvasSizeOptions`
}

class `AWS::QuickSight::TemplateDefaultGridLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::TemplateGridLayoutCanvasSizeOptions`
}

class `AWS::QuickSight::TemplateDefaultInteractiveLayoutConfiguration` {
  FreeForm: `AWS::QuickSight::TemplateDefaultFreeFormLayoutConfiguration`?

  Grid: `AWS::QuickSight::TemplateDefaultGridLayoutConfiguration`?
}

class `AWS::QuickSight::TemplateDefaultNewSheetConfiguration` {
  InteractiveLayoutConfiguration: `AWS::QuickSight::TemplateDefaultInteractiveLayoutConfiguration`?

  PaginatedLayoutConfiguration: `AWS::QuickSight::TemplateDefaultPaginatedLayoutConfiguration`?

  SheetContentType: String?
}

class `AWS::QuickSight::TemplateDefaultPaginatedLayoutConfiguration` {
  SectionBased: `AWS::QuickSight::TemplateDefaultSectionBasedLayoutConfiguration`?
}

class `AWS::QuickSight::TemplateDefaultSectionBasedLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::TemplateSectionBasedLayoutCanvasSizeOptions`
}

class `AWS::QuickSight::TemplateDestinationParameterValueConfiguration` {
  CustomValuesConfiguration: `AWS::QuickSight::TemplateCustomValuesConfiguration`?

  SelectAllValueOptions: String?

  SourceColumn: `AWS::QuickSight::TemplateColumnIdentifier`?

  SourceField: String?

  SourceParameterName: String?
}

class `AWS::QuickSight::TemplateDimensionField` {
  CategoricalDimensionField: `AWS::QuickSight::TemplateCategoricalDimensionField`?

  DateDimensionField: `AWS::QuickSight::TemplateDateDimensionField`?

  NumericalDimensionField: `AWS::QuickSight::TemplateNumericalDimensionField`?
}

class `AWS::QuickSight::TemplateDonutOptions` {
  ArcOptions: `AWS::QuickSight::TemplateArcOptions`?

  DonutCenterOptions: `AWS::QuickSight::TemplateDonutCenterOptions`?
}

class `AWS::QuickSight::TemplateDrillDownFilter` {
  CategoryFilter: `AWS::QuickSight::TemplateCategoryDrillDownFilter`?

  NumericEqualityFilter: `AWS::QuickSight::TemplateNumericEqualityDrillDownFilter`?

  TimeRangeFilter: `AWS::QuickSight::TemplateTimeRangeDrillDownFilter`?
}

class `AWS::QuickSight::TemplateDropDownControlDisplayOptions` {
  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  SelectAllOptions: `AWS::QuickSight::TemplateTrendArrowOptions`?

  TitleOptions: `AWS::QuickSight::TemplateLabelOptions`?
}

class `AWS::QuickSight::TemplateDynamicDefaultValue` {
  DefaultValueColumn: `AWS::QuickSight::TemplateColumnIdentifier`

  GroupNameColumn: `AWS::QuickSight::TemplateColumnIdentifier`?

  UserNameColumn: `AWS::QuickSight::TemplateColumnIdentifier`?
}

class `AWS::QuickSight::TemplateEmptyVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  DataSetIdentifier: String

  VisualId: String
}

class `AWS::QuickSight::TemplatePredefinedHierarchy` {
  Columns: Listing<`AWS::QuickSight::TemplateColumnIdentifier`>

  DrillDownFilters: Listing<`AWS::QuickSight::TemplateDrillDownFilter`>?

  HierarchyId: String
}

class `AWS::QuickSight::TemplateFieldBasedTooltip` {
  AggregationVisibility: String?

  TooltipFields: Listing<`AWS::QuickSight::TemplateTooltipItem`>?

  TooltipTitleType: String?
}

class `AWS::QuickSight::TemplateFieldSeriesItem` {
  AxisBinding: String

  FieldId: String

  Settings: `AWS::QuickSight::TemplateLineChartSeriesSettings`?
}

class `AWS::QuickSight::TemplateFieldSortOptions` {
  ColumnSort: `AWS::QuickSight::TemplateColumnSort`?

  FieldSort: `AWS::QuickSight::TemplateFieldSort`?
}

class `AWS::QuickSight::TemplateFilledMapAggregatedFieldWells` {
  Geospatial: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Values: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateFilledMapConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::TemplateFilledMapConditionalFormattingOption`>
}

class `AWS::QuickSight::TemplateFilledMapConditionalFormattingOption` {
  Shape: `AWS::QuickSight::TemplateFilledMapShapeConditionalFormatting`
}

class `AWS::QuickSight::TemplateFilledMapConfiguration` {
  FieldWells: `AWS::QuickSight::TemplateFilledMapFieldWells`?

  Legend: `AWS::QuickSight::TemplateLegendOptions`?

  MapStyleOptions: `AWS::QuickSight::TemplateGeospatialMapStyleOptions`?

  SortConfiguration: `AWS::QuickSight::TemplateFilledMapSortConfiguration`?

  Tooltip: `AWS::QuickSight::TemplateTooltipOptions`?

  WindowOptions: `AWS::QuickSight::TemplateGeospatialWindowOptions`?
}

class `AWS::QuickSight::TemplateFilledMapFieldWells` {
  FilledMapAggregatedFieldWells: `AWS::QuickSight::TemplateFilledMapAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateFilledMapShapeConditionalFormatting` {
  FieldId: String

  Format: `AWS::QuickSight::TemplateShapeConditionalFormat`?
}

class `AWS::QuickSight::TemplateFilledMapSortConfiguration` {
  CategorySort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?
}

class `AWS::QuickSight::TemplateFilledMapVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateFilledMapConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  ConditionalFormatting: `AWS::QuickSight::TemplateFilledMapConditionalFormatting`?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateFilter` {
  CategoryFilter: `AWS::QuickSight::TemplateCategoryFilter`?

  NumericEqualityFilter: `AWS::QuickSight::TemplateNumericEqualityFilter`?

  NumericRangeFilter: `AWS::QuickSight::TemplateNumericRangeFilter`?

  RelativeDatesFilter: `AWS::QuickSight::TemplateRelativeDatesFilter`?

  TimeEqualityFilter: `AWS::QuickSight::TemplateTimeEqualityFilter`?

  TimeRangeFilter: `AWS::QuickSight::TemplateTimeRangeFilter`?

  TopBottomFilter: `AWS::QuickSight::TemplateTopBottomFilter`?
}

class `AWS::QuickSight::TemplateFilterControl` {
  DateTimePicker: `AWS::QuickSight::TemplateFilterDateTimePickerControl`?

  Dropdown: `AWS::QuickSight::TemplateFilterDropDownControl`?

  List: `AWS::QuickSight::TemplateFilterListControl`?

  RelativeDateTime: `AWS::QuickSight::TemplateFilterRelativeDateTimeControl`?

  Slider: `AWS::QuickSight::TemplateFilterSliderControl`?

  TextArea: `AWS::QuickSight::TemplateFilterTextAreaControl`?

  TextField: `AWS::QuickSight::TemplateFilterTextFieldControl`?
}

class `AWS::QuickSight::TemplateFilterDateTimePickerControl` {
  DisplayOptions: `AWS::QuickSight::TemplateRelativeDateTimeControlDisplayOptions`?

  FilterControlId: String

  SourceFilterId: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::TemplateFilterDropDownControl` {
  CascadingControlConfiguration: `AWS::QuickSight::TemplateCascadingControlConfiguration`?

  DisplayOptions: `AWS::QuickSight::TemplateDropDownControlDisplayOptions`?

  FilterControlId: String

  SelectableValues: `AWS::QuickSight::TemplateFilterSelectableValues`?

  SourceFilterId: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::TemplateFilterGroup` {
  CrossDataset: String

  FilterGroupId: String

  Filters: Listing<`AWS::QuickSight::TemplateFilter`>

  ScopeConfiguration: `AWS::QuickSight::TemplateFilterScopeConfiguration`

  Status: String?
}

class `AWS::QuickSight::TemplateFilterListControl` {
  CascadingControlConfiguration: `AWS::QuickSight::TemplateCascadingControlConfiguration`?

  DisplayOptions: `AWS::QuickSight::TemplateListControlDisplayOptions`?

  FilterControlId: String

  SelectableValues: `AWS::QuickSight::TemplateFilterSelectableValues`?

  SourceFilterId: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::TemplateFilterOperationSelectedFieldsConfiguration` {
  SelectedColumns: Listing<`AWS::QuickSight::TemplateColumnIdentifier`>?

  SelectedFieldOptions: String?

  SelectedFields: Listing<String>?
}

class `AWS::QuickSight::TemplateFilterOperationTargetVisualsConfiguration` {
  SameSheetTargetVisualConfiguration: `AWS::QuickSight::TemplateSameSheetTargetVisualConfiguration`?
}

class `AWS::QuickSight::TemplateFilterRelativeDateTimeControl` {
  DisplayOptions: `AWS::QuickSight::TemplateRelativeDateTimeControlDisplayOptions`?

  FilterControlId: String

  SourceFilterId: String

  Title: String
}

class `AWS::QuickSight::TemplateFilterScopeConfiguration` {
  AllSheets: Dynamic?

  SelectedSheets: `AWS::QuickSight::TemplateSelectedSheetsFilterScopeConfiguration`?
}

class `AWS::QuickSight::TemplateFilterSliderControl` {
  DisplayOptions: `AWS::QuickSight::TemplateSliderControlDisplayOptions`?

  FilterControlId: String

  MaximumValue: Number

  MinimumValue: Number

  SourceFilterId: String

  StepSize: Number

  Title: String

  Type: String?
}

class `AWS::QuickSight::TemplateFilterTextAreaControl` {
  Delimiter: String?

  DisplayOptions: `AWS::QuickSight::TemplateTextFieldControlDisplayOptions`?

  FilterControlId: String

  SourceFilterId: String

  Title: String
}

class `AWS::QuickSight::TemplateFilterTextFieldControl` {
  DisplayOptions: `AWS::QuickSight::TemplateTextFieldControlDisplayOptions`?

  FilterControlId: String

  SourceFilterId: String

  Title: String
}

class `AWS::QuickSight::TemplateFontConfiguration` {
  FontColor: String?

  FontDecoration: String?

  FontSize: `AWS::QuickSight::TemplateFontSize`?

  FontStyle: String?

  FontWeight: `AWS::WAFv2::RuleGroupLabelSummary`?
}

class `AWS::QuickSight::TemplateForecastComputation` {
  ComputationId: String

  CustomSeasonalityValue: Number?

  LowerBoundary: Number?

  Name: String?

  PeriodsBackward: Number?

  PeriodsForward: Number?

  PredictionInterval: Number?

  Seasonality: String?

  Time: `AWS::QuickSight::TemplateDimensionField`?

  UpperBoundary: Number?

  Value: `AWS::QuickSight::TemplateMeasureField`?
}

class `AWS::QuickSight::TemplateForecastConfiguration` {
  ForecastProperties: `AWS::QuickSight::TemplateTimeBasedForecastProperties`?

  Scenario: `AWS::QuickSight::TemplateForecastScenario`?
}

class `AWS::QuickSight::TemplateForecastScenario` {
  WhatIfPointScenario: `AWS::QuickSight::TemplateWhatIfPointScenario`?

  WhatIfRangeScenario: `AWS::QuickSight::TemplateWhatIfRangeScenario`?
}

class `AWS::QuickSight::TemplateFormatConfiguration` {
  DateTimeFormatConfiguration: `AWS::QuickSight::TemplateDateTimeFormatConfiguration`?

  NumberFormatConfiguration: `AWS::QuickSight::TemplateNumberFormatConfiguration`?

  StringFormatConfiguration: `AWS::QuickSight::TemplateStringFormatConfiguration`?
}

class `AWS::QuickSight::TemplateFreeFormLayoutCanvasSizeOptions` {
  ScreenCanvasSizeOptions: `AWS::QuickSight::TemplateFreeFormLayoutScreenCanvasSizeOptions`?
}

class `AWS::QuickSight::TemplateFreeFormLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::TemplateFreeFormLayoutCanvasSizeOptions`?

  Elements: Listing<`AWS::QuickSight::TemplateFreeFormLayoutElement`>
}

class `AWS::QuickSight::TemplateFreeFormLayoutElement` {
  BackgroundStyle: `AWS::QuickSight::TemplateFreeFormLayoutElementBorderStyle`?

  BorderStyle: `AWS::QuickSight::TemplateFreeFormLayoutElementBorderStyle`?

  ElementId: String

  ElementType: String

  Height: String

  LoadingAnimation: `AWS::QuickSight::TemplateTrendArrowOptions`?

  RenderingRules: Listing<`AWS::QuickSight::TemplateSheetElementRenderingRule`>?

  SelectedBorderStyle: `AWS::QuickSight::TemplateFreeFormLayoutElementBorderStyle`?

  Visibility: String?

  Width: String

  XAxisLocation: String

  YAxisLocation: String
}

class `AWS::QuickSight::TemplateFreeFormSectionLayoutConfiguration` {
  Elements: Listing<`AWS::QuickSight::TemplateFreeFormLayoutElement`>
}

class `AWS::QuickSight::TemplateFunnelChartAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Values: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateFunnelChartConfiguration` {
  CategoryLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  DataLabelOptions: `AWS::QuickSight::TemplateFunnelChartDataLabelOptions`?

  FieldWells: `AWS::QuickSight::TemplateFunnelChartFieldWells`?

  SortConfiguration: `AWS::QuickSight::TemplateWordCloudSortConfiguration`?

  Tooltip: `AWS::QuickSight::TemplateTooltipOptions`?

  ValueLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  VisualPalette: `AWS::QuickSight::TemplateVisualPalette`?
}

class `AWS::QuickSight::TemplateFunnelChartDataLabelOptions` {
  CategoryLabelVisibility: String?

  LabelColor: String?

  LabelFontConfiguration: `AWS::QuickSight::TemplateFontConfiguration`?

  MeasureDataLabelStyle: String?

  MeasureLabelVisibility: String?

  Position: String?

  Visibility: String?
}

class `AWS::QuickSight::TemplateFunnelChartFieldWells` {
  FunnelChartAggregatedFieldWells: `AWS::QuickSight::TemplateFunnelChartAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateWordCloudSortConfiguration` {
  CategoryItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?
}

class `AWS::QuickSight::TemplateFunnelChartVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateFunnelChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateKPIProgressBarConditionalFormatting` {
  ForegroundColor: `AWS::QuickSight::TemplateConditionalFormattingColor`?
}

class `AWS::QuickSight::TemplateGaugeChartConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::TemplateGaugeChartConditionalFormattingOption`>?
}

class `AWS::QuickSight::TemplateGaugeChartConditionalFormattingOption` {
  Arc: `AWS::QuickSight::TemplateKPIProgressBarConditionalFormatting`?

  PrimaryValue: `AWS::QuickSight::TemplateKPIPrimaryValueConditionalFormatting`?
}

class `AWS::QuickSight::TemplateGaugeChartConfiguration` {
  DataLabels: `AWS::QuickSight::TemplateDataLabelOptions`?

  FieldWells: `AWS::QuickSight::TemplateGaugeChartFieldWells`?

  GaugeChartOptions: `AWS::QuickSight::TemplateGaugeChartOptions`?

  TooltipOptions: `AWS::QuickSight::TemplateTooltipOptions`?

  VisualPalette: `AWS::QuickSight::TemplateVisualPalette`?
}

class `AWS::QuickSight::TemplateGaugeChartFieldWells` {
  TargetValues: Listing<`AWS::QuickSight::TemplateMeasureField`>?

  Values: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateGaugeChartOptions` {
  Arc: `AWS::QuickSight::TemplateArcConfiguration`?

  ArcAxis: `AWS::QuickSight::TemplateArcAxisConfiguration`?

  Comparison: `AWS::QuickSight::TemplateComparisonConfiguration`?

  PrimaryValueDisplayType: String?

  PrimaryValueFontConfiguration: `AWS::QuickSight::TemplateFontConfiguration`?
}

class `AWS::QuickSight::TemplateKPIPrimaryValueConditionalFormatting` {
  Icon: `AWS::QuickSight::TemplateConditionalFormattingIcon`?

  TextColor: `AWS::QuickSight::TemplateConditionalFormattingColor`?
}

class `AWS::QuickSight::TemplateGaugeChartVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateGaugeChartConfiguration`?

  ConditionalFormatting: `AWS::QuickSight::TemplateGaugeChartConditionalFormatting`?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateGeospatialHeatmapColorScale` {
  Colors: Listing<`AWS::QuickSight::TemplateGeospatialHeatmapDataColor`>?
}

class `AWS::QuickSight::TemplateGeospatialHeatmapConfiguration` {
  HeatmapColor: `AWS::QuickSight::TemplateGeospatialHeatmapColorScale`?
}

class `AWS::QuickSight::TemplateGeospatialMapAggregatedFieldWells` {
  Colors: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Geospatial: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Values: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateGeospatialMapConfiguration` {
  FieldWells: `AWS::QuickSight::TemplateGeospatialMapFieldWells`?

  Legend: `AWS::QuickSight::TemplateLegendOptions`?

  MapStyleOptions: `AWS::QuickSight::TemplateGeospatialMapStyleOptions`?

  PointStyleOptions: `AWS::QuickSight::TemplateGeospatialPointStyleOptions`?

  Tooltip: `AWS::QuickSight::TemplateTooltipOptions`?

  VisualPalette: `AWS::QuickSight::TemplateVisualPalette`?

  WindowOptions: `AWS::QuickSight::TemplateGeospatialWindowOptions`?
}

class `AWS::QuickSight::TemplateGeospatialMapFieldWells` {
  GeospatialMapAggregatedFieldWells: `AWS::QuickSight::TemplateGeospatialMapAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateGeospatialMapVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateGeospatialMapConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateGeospatialPointStyleOptions` {
  ClusterMarkerConfiguration: `AWS::QuickSight::TemplateClusterMarkerConfiguration`?

  HeatmapConfiguration: `AWS::QuickSight::TemplateGeospatialHeatmapConfiguration`?

  SelectedPointStyle: String?
}

class `AWS::QuickSight::TemplateGeospatialWindowOptions` {
  Bounds: `AWS::QuickSight::TemplateGeospatialCoordinateBounds`?

  MapZoomMode: String?
}

class `AWS::QuickSight::TemplateGlobalTableBorderOptions` {
  SideSpecificBorder: `AWS::QuickSight::TemplateTableSideBorderOptions`?

  UniformBorder: `AWS::QuickSight::TemplateTableBorderOptions`?
}

class `AWS::QuickSight::TemplateGradientColor` {
  Stops: Listing<`AWS::QuickSight::TemplateGradientStop`>?
}

class `AWS::QuickSight::TemplateGridLayoutCanvasSizeOptions` {
  ScreenCanvasSizeOptions: `AWS::QuickSight::TemplateGridLayoutScreenCanvasSizeOptions`?
}

class `AWS::QuickSight::TemplateGridLayoutConfiguration` {
  CanvasSizeOptions: `AWS::QuickSight::TemplateGridLayoutCanvasSizeOptions`?

  Elements: Listing<`AWS::QuickSight::TemplateGridLayoutElement`>
}

class `AWS::QuickSight::TemplateGrowthRateComputation` {
  ComputationId: String

  Name: String?

  PeriodSize: Number?

  Time: `AWS::QuickSight::TemplateDimensionField`?

  Value: `AWS::QuickSight::TemplateMeasureField`?
}

class `AWS::QuickSight::TemplateHeaderFooterSectionConfiguration` {
  Layout: `AWS::QuickSight::TemplateSectionLayoutConfiguration`

  SectionId: String

  Style: `AWS::QuickSight::TemplateSectionStyle`?
}

class `AWS::QuickSight::TemplatePivotTableAggregatedFieldWells` {
  Columns: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Rows: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Values: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateHeatMapConfiguration` {
  ColorScale: `AWS::QuickSight::TemplateColorScale`?

  ColumnLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  DataLabels: `AWS::QuickSight::TemplateDataLabelOptions`?

  FieldWells: `AWS::QuickSight::TemplateHeatMapFieldWells`?

  Legend: `AWS::QuickSight::TemplateLegendOptions`?

  RowLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  SortConfiguration: `AWS::QuickSight::TemplateHeatMapSortConfiguration`?

  Tooltip: `AWS::QuickSight::TemplateTooltipOptions`?
}

class `AWS::QuickSight::TemplateHeatMapFieldWells` {
  HeatMapAggregatedFieldWells: `AWS::QuickSight::TemplatePivotTableAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateHeatMapSortConfiguration` {
  HeatMapColumnItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  HeatMapColumnSort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?

  HeatMapRowItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  HeatMapRowSort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?
}

class `AWS::QuickSight::TemplateHeatMapVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateHeatMapConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateHistogramAggregatedFieldWells` {
  Values: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateHistogramBinOptions` {
  BinCount: `AWS::QuickSight::TemplateBinCountOptions`?

  BinWidth: `AWS::QuickSight::TemplateBinWidthOptions`?

  SelectedBinType: String?

  StartValue: Number?
}

class `AWS::QuickSight::TemplateHistogramConfiguration` {
  BinOptions: `AWS::QuickSight::TemplateHistogramBinOptions`?

  DataLabels: `AWS::QuickSight::TemplateDataLabelOptions`?

  FieldWells: `AWS::QuickSight::TemplateHistogramFieldWells`?

  Tooltip: `AWS::QuickSight::TemplateTooltipOptions`?

  VisualPalette: `AWS::QuickSight::TemplateVisualPalette`?

  XAxisDisplayOptions: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  XAxisLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  YAxisDisplayOptions: `AWS::QuickSight::TemplateAxisDisplayOptions`?
}

class `AWS::QuickSight::TemplateHistogramFieldWells` {
  HistogramAggregatedFieldWells: `AWS::QuickSight::TemplateHistogramAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateHistogramVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateHistogramConfiguration`?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateInsightConfiguration` {
  Computations: Listing<`AWS::QuickSight::TemplateComputation`>?

  CustomNarrative: `AWS::QuickSight::TemplateCustomNarrativeOptions`?
}

class `AWS::QuickSight::TemplateInsightVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  DataSetIdentifier: String

  InsightConfiguration: `AWS::QuickSight::TemplateInsightConfiguration`?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateIntegerParameterDeclaration` {
  DefaultValues: `AWS::QuickSight::TemplateIntegerDefaultValues`?

  MappedDataSetParameters: Listing<`AWS::QuickSight::TemplateMappedDataSetParameter`>?

  Name: String

  ParameterValueType: String

  ValueWhenUnset: `AWS::QuickSight::TemplateIntegerValueWhenUnsetConfiguration`?
}

class `AWS::QuickSight::TemplateKPIConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::TemplateKPIConditionalFormattingOption`>?
}

class `AWS::QuickSight::TemplateKPIConditionalFormattingOption` {
  ActualValue: `AWS::QuickSight::TemplateKPIPrimaryValueConditionalFormatting`?

  ComparisonValue: `AWS::QuickSight::TemplateKPIPrimaryValueConditionalFormatting`?

  PrimaryValue: `AWS::QuickSight::TemplateKPIPrimaryValueConditionalFormatting`?

  ProgressBar: `AWS::QuickSight::TemplateKPIProgressBarConditionalFormatting`?
}

class `AWS::QuickSight::TemplateKPIConfiguration` {
  FieldWells: `AWS::QuickSight::TemplateKPIFieldWells`?

  KPIOptions: `AWS::QuickSight::TemplateKPIOptions`?

  SortConfiguration: `AWS::QuickSight::TemplateKPISortConfiguration`?
}

class `AWS::QuickSight::TemplateKPIFieldWells` {
  TargetValues: Listing<`AWS::QuickSight::TemplateMeasureField`>?

  TrendGroups: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Values: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateKPIOptions` {
  Comparison: `AWS::QuickSight::TemplateComparisonConfiguration`?

  PrimaryValueDisplayType: String?

  PrimaryValueFontConfiguration: `AWS::QuickSight::TemplateFontConfiguration`?

  ProgressBar: `AWS::QuickSight::TemplateTrendArrowOptions`?

  SecondaryValue: `AWS::QuickSight::TemplateTrendArrowOptions`?

  SecondaryValueFontConfiguration: `AWS::QuickSight::TemplateFontConfiguration`?

  Sparkline: `AWS::QuickSight::TemplateKPISparklineOptions`?

  TrendArrows: `AWS::QuickSight::TemplateTrendArrowOptions`?

  VisualLayoutOptions: `AWS::QuickSight::TemplateKPIVisualLayoutOptions`?
}

class `AWS::QuickSight::TemplateKPISortConfiguration` {
  TrendGroupSort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?
}

class `AWS::QuickSight::TemplateKPIVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateKPIConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  ConditionalFormatting: `AWS::QuickSight::TemplateKPIConditionalFormatting`?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateKPIVisualLayoutOptions` {
  StandardLayout: `AWS::WAFRegional::WebACLAction`?
}

class `AWS::QuickSight::TemplateLabelOptions` {
  CustomLabel: String?

  FontConfiguration: `AWS::QuickSight::TemplateFontConfiguration`?

  Visibility: String?
}

class `AWS::QuickSight::TemplateLayout` {
  Configuration: `AWS::QuickSight::TemplateLayoutConfiguration`
}

class `AWS::QuickSight::TemplateLayoutConfiguration` {
  FreeFormLayout: `AWS::QuickSight::TemplateFreeFormLayoutConfiguration`?

  GridLayout: `AWS::QuickSight::TemplateGridLayoutConfiguration`?

  SectionBasedLayout: `AWS::QuickSight::TemplateSectionBasedLayoutConfiguration`?
}

class `AWS::QuickSight::TemplateLegendOptions` {
  Height: String?

  Position: String?

  Title: `AWS::QuickSight::TemplateLabelOptions`?

  Visibility: String?

  Width: String?
}

class `AWS::QuickSight::TemplateLineChartConfiguration` {
  ContributionAnalysisDefaults: Listing<`AWS::QuickSight::TemplateContributionAnalysisDefault`>?

  DataLabels: `AWS::QuickSight::TemplateDataLabelOptions`?

  DefaultSeriesSettings: `AWS::QuickSight::TemplateLineChartDefaultSeriesSettings`?

  FieldWells: `AWS::QuickSight::TemplateLineChartFieldWells`?

  ForecastConfigurations: Listing<`AWS::QuickSight::TemplateForecastConfiguration`>?

  Legend: `AWS::QuickSight::TemplateLegendOptions`?

  PrimaryYAxisDisplayOptions: `AWS::QuickSight::TemplateLineSeriesAxisDisplayOptions`?

  PrimaryYAxisLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  ReferenceLines: Listing<`AWS::QuickSight::TemplateReferenceLine`>?

  SecondaryYAxisDisplayOptions: `AWS::QuickSight::TemplateLineSeriesAxisDisplayOptions`?

  SecondaryYAxisLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  Series: Listing<`AWS::QuickSight::TemplateSeriesItem`>?

  SmallMultiplesOptions: `AWS::QuickSight::TemplateSmallMultiplesOptions`?

  SortConfiguration: `AWS::QuickSight::TemplateLineChartSortConfiguration`?

  Tooltip: `AWS::QuickSight::TemplateTooltipOptions`?

  Type: String?

  VisualPalette: `AWS::QuickSight::TemplateVisualPalette`?

  XAxisDisplayOptions: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  XAxisLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?
}

class `AWS::QuickSight::TemplateLineChartDefaultSeriesSettings` {
  AxisBinding: String?

  LineStyleSettings: `AWS::QuickSight::TemplateLineChartLineStyleSettings`?

  MarkerStyleSettings: `AWS::QuickSight::TemplateLineChartMarkerStyleSettings`?
}

class `AWS::QuickSight::TemplateLineChartFieldWells` {
  LineChartAggregatedFieldWells: `AWS::QuickSight::TemplateLineChartAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateLineChartSeriesSettings` {
  LineStyleSettings: `AWS::QuickSight::TemplateLineChartLineStyleSettings`?

  MarkerStyleSettings: `AWS::QuickSight::TemplateLineChartMarkerStyleSettings`?
}

class `AWS::QuickSight::TemplateLineChartSortConfiguration` {
  CategoryItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?

  ColorItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SmallMultiplesLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SmallMultiplesSort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?
}

class `AWS::QuickSight::TemplateLineChartVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateLineChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateLineSeriesAxisDisplayOptions` {
  AxisOptions: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  MissingDataConfigurations: Listing<`AWS::QuickSight::TemplateMissingDataConfiguration`>?
}

class `AWS::QuickSight::TemplateListControlDisplayOptions` {
  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  SearchOptions: `AWS::QuickSight::TemplateTrendArrowOptions`?

  SelectAllOptions: `AWS::QuickSight::TemplateTrendArrowOptions`?

  TitleOptions: `AWS::QuickSight::TemplateLabelOptions`?
}

class `AWS::QuickSight::TemplateMaximumMinimumComputation` {
  ComputationId: String

  Name: String?

  Time: `AWS::QuickSight::TemplateDimensionField`?

  Type: String

  Value: `AWS::QuickSight::TemplateMeasureField`?
}

class `AWS::QuickSight::TemplateMeasureField` {
  CalculatedMeasureField: `AWS::QuickSight::TemplateCalculatedMeasureField`?

  CategoricalMeasureField: `AWS::QuickSight::TemplateCategoricalMeasureField`?

  DateMeasureField: `AWS::QuickSight::TemplateDateMeasureField`?

  NumericalMeasureField: `AWS::QuickSight::TemplateNumericalMeasureField`?
}

class `AWS::QuickSight::TemplateMetricComparisonComputation` {
  ComputationId: String

  FromValue: `AWS::QuickSight::TemplateMeasureField`?

  Name: String?

  TargetValue: `AWS::QuickSight::TemplateMeasureField`?

  Time: `AWS::QuickSight::TemplateDimensionField`?
}

class `AWS::QuickSight::TemplateNumberDisplayFormatConfiguration` {
  DecimalPlacesConfiguration: `AWS::QuickSight::TemplateDecimalPlacesConfiguration`?

  NegativeValueConfiguration: `AWS::QuickSight::TemplateNegativeValueConfiguration`?

  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  NumberScale: String?

  Prefix: String?

  SeparatorConfiguration: `AWS::QuickSight::TemplateNumericSeparatorConfiguration`?

  Suffix: String?
}

class `AWS::QuickSight::TemplateNumberFormatConfiguration` {
  FormatConfiguration: `AWS::QuickSight::TemplateNumericFormatConfiguration`?
}

class `AWS::QuickSight::TemplateNumericAxisOptions` {
  Range: `AWS::QuickSight::TemplateAxisDisplayRange`?

  Scale: `AWS::QuickSight::TemplateAxisScale`?
}

class `AWS::QuickSight::TemplateNumericEqualityDrillDownFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  Value: Number
}

class `AWS::QuickSight::TemplateNumericEqualityFilter` {
  AggregationFunction: `AWS::QuickSight::TemplateAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FilterId: String

  MatchOperator: String

  NullOption: String

  ParameterName: String?

  SelectAllOptions: String?

  Value: Number?
}

class `AWS::QuickSight::TemplateNumericFormatConfiguration` {
  CurrencyDisplayFormatConfiguration: `AWS::QuickSight::TemplateCurrencyDisplayFormatConfiguration`?

  NumberDisplayFormatConfiguration: `AWS::QuickSight::TemplateNumberDisplayFormatConfiguration`?

  PercentageDisplayFormatConfiguration: `AWS::QuickSight::TemplatePercentageDisplayFormatConfiguration`?
}

class `AWS::QuickSight::TemplateNumericRangeFilter` {
  AggregationFunction: `AWS::QuickSight::TemplateAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FilterId: String

  IncludeMaximum: Boolean?

  IncludeMinimum: Boolean?

  NullOption: String

  RangeMaximum: `AWS::QuickSight::TemplateNumericRangeFilterValue`?

  RangeMinimum: `AWS::QuickSight::TemplateNumericRangeFilterValue`?

  SelectAllOptions: String?
}

class `AWS::QuickSight::TemplateNumericSeparatorConfiguration` {
  DecimalSeparator: String?

  ThousandsSeparator: `AWS::QuickSight::TemplateThousandSeparatorOptions`?
}

class `AWS::QuickSight::TemplateNumericalAggregationFunction` {
  PercentileAggregation: `AWS::QuickSight::TemplatePercentileAggregation`?

  SimpleNumericalAggregation: String?
}

class `AWS::QuickSight::TemplateNumericalDimensionField` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::TemplateNumberFormatConfiguration`?

  HierarchyId: String?
}

class `AWS::QuickSight::TemplateNumericalMeasureField` {
  AggregationFunction: `AWS::QuickSight::TemplateNumericalAggregationFunction`?

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::TemplateNumberFormatConfiguration`?
}

class `AWS::QuickSight::TemplatePanelConfiguration` {
  BackgroundColor: String?

  BackgroundVisibility: String?

  BorderColor: String?

  BorderStyle: String?

  BorderThickness: String?

  BorderVisibility: String?

  GutterSpacing: String?

  GutterVisibility: String?

  Title: `AWS::QuickSight::TemplatePanelTitleOptions`?
}

class `AWS::QuickSight::TemplatePanelTitleOptions` {
  FontConfiguration: `AWS::QuickSight::TemplateFontConfiguration`?

  HorizontalTextAlignment: String?

  Visibility: String?
}

class `AWS::QuickSight::TemplateParameterControl` {
  DateTimePicker: `AWS::QuickSight::TemplateParameterDateTimePickerControl`?

  Dropdown: `AWS::QuickSight::TemplateParameterDropDownControl`?

  List: `AWS::QuickSight::TemplateParameterListControl`?

  Slider: `AWS::QuickSight::TemplateParameterSliderControl`?

  TextArea: `AWS::QuickSight::TemplateParameterTextAreaControl`?

  TextField: `AWS::QuickSight::TemplateParameterTextFieldControl`?
}

class `AWS::QuickSight::TemplateParameterDateTimePickerControl` {
  DisplayOptions: `AWS::QuickSight::TemplateRelativeDateTimeControlDisplayOptions`?

  ParameterControlId: String

  SourceParameterName: String

  Title: String
}

class `AWS::QuickSight::TemplateParameterDeclaration` {
  DateTimeParameterDeclaration: `AWS::QuickSight::TemplateDateTimeParameterDeclaration`?

  DecimalParameterDeclaration: `AWS::QuickSight::TemplateDecimalParameterDeclaration`?

  IntegerParameterDeclaration: `AWS::QuickSight::TemplateIntegerParameterDeclaration`?

  StringParameterDeclaration: `AWS::QuickSight::TemplateStringParameterDeclaration`?
}

class `AWS::QuickSight::TemplateParameterDropDownControl` {
  CascadingControlConfiguration: `AWS::QuickSight::TemplateCascadingControlConfiguration`?

  DisplayOptions: `AWS::QuickSight::TemplateDropDownControlDisplayOptions`?

  ParameterControlId: String

  SelectableValues: `AWS::QuickSight::TemplateParameterSelectableValues`?

  SourceParameterName: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::TemplateParameterListControl` {
  CascadingControlConfiguration: `AWS::QuickSight::TemplateCascadingControlConfiguration`?

  DisplayOptions: `AWS::QuickSight::TemplateListControlDisplayOptions`?

  ParameterControlId: String

  SelectableValues: `AWS::QuickSight::TemplateParameterSelectableValues`?

  SourceParameterName: String

  Title: String

  Type: String?
}

class `AWS::QuickSight::TemplateParameterSelectableValues` {
  LinkToDataSetColumn: `AWS::QuickSight::TemplateColumnIdentifier`?

  Values: Listing<String>?
}

class `AWS::QuickSight::TemplateParameterSliderControl` {
  DisplayOptions: `AWS::QuickSight::TemplateSliderControlDisplayOptions`?

  MaximumValue: Number

  MinimumValue: Number

  ParameterControlId: String

  SourceParameterName: String

  StepSize: Number

  Title: String
}

class `AWS::QuickSight::TemplateParameterTextAreaControl` {
  Delimiter: String?

  DisplayOptions: `AWS::QuickSight::TemplateTextFieldControlDisplayOptions`?

  ParameterControlId: String

  SourceParameterName: String

  Title: String
}

class `AWS::QuickSight::TemplateParameterTextFieldControl` {
  DisplayOptions: `AWS::QuickSight::TemplateTextFieldControlDisplayOptions`?

  ParameterControlId: String

  SourceParameterName: String

  Title: String
}

class `AWS::QuickSight::TemplatePercentageDisplayFormatConfiguration` {
  DecimalPlacesConfiguration: `AWS::QuickSight::TemplateDecimalPlacesConfiguration`?

  NegativeValueConfiguration: `AWS::QuickSight::TemplateNegativeValueConfiguration`?

  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  Prefix: String?

  SeparatorConfiguration: `AWS::QuickSight::TemplateNumericSeparatorConfiguration`?

  Suffix: String?
}

class `AWS::QuickSight::TemplatePeriodOverPeriodComputation` {
  ComputationId: String

  Name: String?

  Time: `AWS::QuickSight::TemplateDimensionField`?

  Value: `AWS::QuickSight::TemplateMeasureField`?
}

class `AWS::QuickSight::TemplatePeriodToDateComputation` {
  ComputationId: String

  Name: String?

  PeriodTimeGranularity: String?

  Time: `AWS::QuickSight::TemplateDimensionField`?

  Value: `AWS::QuickSight::TemplateMeasureField`?
}

class `AWS::QuickSight::TemplatePieChartAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  SmallMultiples: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Values: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplatePieChartConfiguration` {
  CategoryLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  ContributionAnalysisDefaults: Listing<`AWS::QuickSight::TemplateContributionAnalysisDefault`>?

  DataLabels: `AWS::QuickSight::TemplateDataLabelOptions`?

  DonutOptions: `AWS::QuickSight::TemplateDonutOptions`?

  FieldWells: `AWS::QuickSight::TemplatePieChartFieldWells`?

  Legend: `AWS::QuickSight::TemplateLegendOptions`?

  SmallMultiplesOptions: `AWS::QuickSight::TemplateSmallMultiplesOptions`?

  SortConfiguration: `AWS::QuickSight::TemplatePieChartSortConfiguration`?

  Tooltip: `AWS::QuickSight::TemplateTooltipOptions`?

  ValueLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  VisualPalette: `AWS::QuickSight::TemplateVisualPalette`?
}

class `AWS::QuickSight::TemplatePieChartFieldWells` {
  PieChartAggregatedFieldWells: `AWS::QuickSight::TemplatePieChartAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplatePieChartSortConfiguration` {
  CategoryItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?

  SmallMultiplesLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SmallMultiplesSort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?
}

class `AWS::QuickSight::TemplatePieChartVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplatePieChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplatePivotFieldSortOptions` {
  FieldId: String

  SortBy: `AWS::QuickSight::TemplatePivotTableSortBy`
}

class `AWS::QuickSight::TemplatePivotTableCellConditionalFormatting` {
  FieldId: String

  Scope: `AWS::QuickSight::TemplatePivotTableConditionalFormattingScope`?

  Scopes: Listing<`AWS::QuickSight::TemplatePivotTableConditionalFormattingScope`>?

  TextFormat: `AWS::QuickSight::TemplateTextConditionalFormat`?
}

class `AWS::QuickSight::TemplatePivotTableConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::TemplatePivotTableConditionalFormattingOption`>?
}

class `AWS::QuickSight::TemplatePivotTableConditionalFormattingOption` {
  Cell: `AWS::QuickSight::TemplatePivotTableCellConditionalFormatting`?
}

class `AWS::QuickSight::TemplatePivotTableConfiguration` {
  FieldOptions: `AWS::QuickSight::TemplatePivotTableFieldOptions`?

  FieldWells: `AWS::QuickSight::TemplatePivotTableFieldWells`?

  PaginatedReportOptions: `AWS::QuickSight::TemplateTablePaginatedReportOptions`?

  SortConfiguration: `AWS::QuickSight::TemplatePivotTableSortConfiguration`?

  TableOptions: `AWS::QuickSight::TemplatePivotTableOptions`?

  TotalOptions: `AWS::QuickSight::TemplatePivotTableTotalOptions`?
}

class `AWS::QuickSight::TemplatePivotTableDataPathOption` {
  DataPathList: Listing<`AWS::QuickSight::TemplateDataPathValue`>

  Width: String?
}

class `AWS::QuickSight::TemplatePivotTableFieldCollapseStateOption` {
  State: String?

  Target: `AWS::QuickSight::TemplatePivotTableFieldCollapseStateTarget`
}

class `AWS::QuickSight::TemplatePivotTableFieldCollapseStateTarget` {
  FieldDataPathValues: Listing<`AWS::QuickSight::TemplateDataPathValue`>?

  FieldId: String?
}

class `AWS::QuickSight::TemplatePivotTableFieldOptions` {
  CollapseStateOptions: Listing<`AWS::QuickSight::TemplatePivotTableFieldCollapseStateOption`>?

  DataPathOptions: Listing<`AWS::QuickSight::TemplatePivotTableDataPathOption`>?

  SelectedFieldOptions: Listing<`AWS::QuickSight::TemplatePivotTableFieldOption`>?
}

class `AWS::QuickSight::TemplatePivotTableFieldWells` {
  PivotTableAggregatedFieldWells: `AWS::QuickSight::TemplatePivotTableAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplatePivotTableOptions` {
  CellStyle: `AWS::QuickSight::TemplateTableCellStyle`?

  CollapsedRowDimensionsVisibility: String?

  ColumnHeaderStyle: `AWS::QuickSight::TemplateTableCellStyle`?

  ColumnNamesVisibility: String?

  DefaultCellWidth: String?

  MetricPlacement: String?

  RowAlternateColorOptions: `AWS::QuickSight::TemplateRowAlternateColorOptions`?

  RowFieldNamesStyle: `AWS::QuickSight::TemplateTableCellStyle`?

  RowHeaderStyle: `AWS::QuickSight::TemplateTableCellStyle`?

  RowsLabelOptions: `AWS::QuickSight::TemplatePivotTableRowsLabelOptions`?

  RowsLayout: String?

  SingleMetricVisibility: String?

  ToggleButtonsVisibility: String?
}

class `AWS::QuickSight::TemplatePivotTableSortBy` {
  Column: `AWS::QuickSight::TemplateColumnSort`?

  DataPath: `AWS::QuickSight::TemplateDataPathSort`?

  Field: `AWS::QuickSight::TemplateFieldSort`?
}

class `AWS::QuickSight::TemplatePivotTableSortConfiguration` {
  FieldSortOptions: Listing<`AWS::QuickSight::TemplatePivotFieldSortOptions`>?
}

class `AWS::QuickSight::TemplatePivotTableTotalOptions` {
  ColumnSubtotalOptions: `AWS::QuickSight::TemplateSubtotalOptions`?

  ColumnTotalOptions: `AWS::QuickSight::TemplatePivotTotalOptions`?

  RowSubtotalOptions: `AWS::QuickSight::TemplateSubtotalOptions`?

  RowTotalOptions: `AWS::QuickSight::TemplatePivotTotalOptions`?
}

class `AWS::QuickSight::TemplatePivotTableVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplatePivotTableConfiguration`?

  ConditionalFormatting: `AWS::QuickSight::TemplatePivotTableConditionalFormatting`?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplatePivotTotalOptions` {
  CustomLabel: String?

  MetricHeaderCellStyle: `AWS::QuickSight::TemplateTableCellStyle`?

  Placement: String?

  ScrollStatus: String?

  TotalAggregationOptions: Listing<`AWS::QuickSight::TemplateTotalAggregationOption`>?

  TotalCellStyle: `AWS::QuickSight::TemplateTableCellStyle`?

  TotalsVisibility: String?

  ValueCellStyle: `AWS::QuickSight::TemplateTableCellStyle`?
}

class `AWS::QuickSight::TemplateRadarChartAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Color: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Values: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateRadarChartConfiguration` {
  AlternateBandColorsVisibility: String?

  AlternateBandEvenColor: String?

  AlternateBandOddColor: String?

  AxesRangeScale: String?

  BaseSeriesSettings: `AWS::QuickSight::TemplateRadarChartSeriesSettings`?

  CategoryAxis: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  CategoryLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  ColorAxis: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  ColorLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  FieldWells: `AWS::QuickSight::TemplateRadarChartFieldWells`?

  Legend: `AWS::QuickSight::TemplateLegendOptions`?

  Shape: String?

  SortConfiguration: `AWS::QuickSight::TemplateRadarChartSortConfiguration`?

  StartAngle: Number?

  VisualPalette: `AWS::QuickSight::TemplateVisualPalette`?
}

class `AWS::QuickSight::TemplateRadarChartFieldWells` {
  RadarChartAggregatedFieldWells: `AWS::QuickSight::TemplateRadarChartAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateRadarChartSeriesSettings` {
  AreaStyleSettings: `AWS::QuickSight::TemplateTrendArrowOptions`?
}

class `AWS::QuickSight::TemplateRadarChartVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateRadarChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateReferenceLine` {
  DataConfiguration: `AWS::QuickSight::TemplateReferenceLineDataConfiguration`

  LabelConfiguration: `AWS::QuickSight::TemplateReferenceLineLabelConfiguration`?

  Status: String?

  StyleConfiguration: `AWS::QuickSight::TemplateReferenceLineStyleConfiguration`?
}

class `AWS::QuickSight::TemplateReferenceLineDataConfiguration` {
  AxisBinding: String?

  DynamicConfiguration: `AWS::QuickSight::TemplateReferenceLineDynamicDataConfiguration`?

  SeriesType: String?

  StaticConfiguration: `AWS::QuickSight::TemplateReferenceLineStaticDataConfiguration`?
}

class `AWS::QuickSight::TemplateReferenceLineDynamicDataConfiguration` {
  Calculation: `AWS::QuickSight::TemplateNumericalAggregationFunction`

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  MeasureAggregationFunction: `AWS::QuickSight::TemplateAggregationFunction`?
}

class `AWS::QuickSight::TemplateReferenceLineLabelConfiguration` {
  CustomLabelConfiguration: `AWS::QuickSight::TemplateReferenceLineCustomLabelConfiguration`?

  FontColor: String?

  FontConfiguration: `AWS::QuickSight::TemplateFontConfiguration`?

  HorizontalPosition: String?

  ValueLabelConfiguration: `AWS::QuickSight::TemplateReferenceLineValueLabelConfiguration`?

  VerticalPosition: String?
}

class `AWS::QuickSight::TemplateReferenceLineValueLabelConfiguration` {
  FormatConfiguration: `AWS::QuickSight::TemplateNumericFormatConfiguration`?

  RelativePosition: String?
}

class `AWS::QuickSight::TemplateRelativeDatesFilter` {
  AnchorDateConfiguration: `AWS::QuickSight::TemplateAnchorDateConfiguration`

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  ExcludePeriodConfiguration: `AWS::QuickSight::TemplateExcludePeriodConfiguration`?

  FilterId: String

  MinimumGranularity: String?

  NullOption: String

  ParameterName: String?

  RelativeDateType: String

  RelativeDateValue: Number?

  TimeGranularity: String
}

class `AWS::QuickSight::TemplateSankeyDiagramAggregatedFieldWells` {
  Destination: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Source: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Weight: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateSankeyDiagramChartConfiguration` {
  DataLabels: `AWS::QuickSight::TemplateDataLabelOptions`?

  FieldWells: `AWS::QuickSight::TemplateSankeyDiagramFieldWells`?

  SortConfiguration: `AWS::QuickSight::TemplateSankeyDiagramSortConfiguration`?
}

class `AWS::QuickSight::TemplateSankeyDiagramFieldWells` {
  SankeyDiagramAggregatedFieldWells: `AWS::QuickSight::TemplateSankeyDiagramAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateSankeyDiagramSortConfiguration` {
  DestinationItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  SourceItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  WeightSort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?
}

class `AWS::QuickSight::TemplateSankeyDiagramVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateSankeyDiagramChartConfiguration`?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateScatterPlotCategoricallyAggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Label: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Size: Listing<`AWS::QuickSight::TemplateMeasureField`>?

  XAxis: Listing<`AWS::QuickSight::TemplateMeasureField`>?

  YAxis: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateScatterPlotConfiguration` {
  DataLabels: `AWS::QuickSight::TemplateDataLabelOptions`?

  FieldWells: `AWS::QuickSight::TemplateScatterPlotFieldWells`?

  Legend: `AWS::QuickSight::TemplateLegendOptions`?

  Tooltip: `AWS::QuickSight::TemplateTooltipOptions`?

  VisualPalette: `AWS::QuickSight::TemplateVisualPalette`?

  XAxisDisplayOptions: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  XAxisLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  YAxisDisplayOptions: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  YAxisLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?
}

class `AWS::QuickSight::TemplateScatterPlotFieldWells` {
  ScatterPlotCategoricallyAggregatedFieldWells: `AWS::QuickSight::TemplateScatterPlotCategoricallyAggregatedFieldWells`?

  ScatterPlotUnaggregatedFieldWells: `AWS::QuickSight::TemplateScatterPlotUnaggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateScatterPlotUnaggregatedFieldWells` {
  Category: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Label: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Size: Listing<`AWS::QuickSight::TemplateMeasureField`>?

  XAxis: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  YAxis: Listing<`AWS::QuickSight::TemplateDimensionField`>?
}

class `AWS::QuickSight::TemplateScatterPlotVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateScatterPlotConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateScrollBarOptions` {
  Visibility: String?

  VisibleRange: `AWS::QuickSight::TemplateVisibleRangeOptions`?
}

class `AWS::QuickSight::TemplateSectionBasedLayoutCanvasSizeOptions` {
  PaperCanvasSizeOptions: `AWS::QuickSight::TemplateSectionBasedLayoutPaperCanvasSizeOptions`?
}

class `AWS::QuickSight::TemplateSectionBasedLayoutConfiguration` {
  BodySections: Listing<`AWS::QuickSight::TemplateBodySectionConfiguration`>

  CanvasSizeOptions: `AWS::QuickSight::TemplateSectionBasedLayoutCanvasSizeOptions`

  FooterSections: Listing<`AWS::QuickSight::TemplateHeaderFooterSectionConfiguration`>

  HeaderSections: Listing<`AWS::QuickSight::TemplateHeaderFooterSectionConfiguration`>
}

class `AWS::QuickSight::TemplateSectionBasedLayoutPaperCanvasSizeOptions` {
  PaperMargin: `AWS::QuickSight::TemplateSpacing`?

  PaperOrientation: String?

  PaperSize: String?
}

class `AWS::QuickSight::TemplateSectionLayoutConfiguration` {
  FreeFormLayout: `AWS::QuickSight::TemplateFreeFormSectionLayoutConfiguration`
}

class `AWS::QuickSight::TemplateSectionPageBreakConfiguration` {
  After: `AWS::S3::BucketDeleteMarkerReplication`?
}

class `AWS::QuickSight::TemplateSectionStyle` {
  Height: String?

  Padding: `AWS::QuickSight::TemplateSpacing`?
}

class `AWS::QuickSight::TemplateSelectedSheetsFilterScopeConfiguration` {
  SheetVisualScopingConfigurations: Listing<`AWS::QuickSight::TemplateSheetVisualScopingConfiguration`>?
}

class `AWS::QuickSight::TemplateSeriesItem` {
  DataFieldSeriesItem: `AWS::QuickSight::TemplateDataFieldSeriesItem`?

  FieldSeriesItem: `AWS::QuickSight::TemplateFieldSeriesItem`?
}

class `AWS::QuickSight::TemplateSetParameterValueConfiguration` {
  DestinationParameterName: String

  Value: `AWS::QuickSight::TemplateDestinationParameterValueConfiguration`
}

class `AWS::QuickSight::TemplateShapeConditionalFormat` {
  BackgroundColor: `AWS::QuickSight::TemplateConditionalFormattingColor`
}

class `AWS::QuickSight::TemplateSheetControlLayout` {
  Configuration: `AWS::QuickSight::TemplateSheetControlLayoutConfiguration`
}

class `AWS::QuickSight::TemplateSheetControlLayoutConfiguration` {
  GridLayout: `AWS::QuickSight::TemplateGridLayoutConfiguration`?
}

class `AWS::QuickSight::TemplateSheetDefinition` {
  ContentType: String?

  Description: String?

  FilterControls: Listing<`AWS::QuickSight::TemplateFilterControl`>?

  Layouts: Listing<`AWS::QuickSight::TemplateLayout`>?

  Name: String?

  ParameterControls: Listing<`AWS::QuickSight::TemplateParameterControl`>?

  SheetControlLayouts: Listing<`AWS::QuickSight::TemplateSheetControlLayout`>?

  SheetId: String

  TextBoxes: Listing<`AWS::QuickSight::TemplateSheetTextBox`>?

  Title: String?

  Visuals: Listing<`AWS::QuickSight::TemplateVisual`>?
}

class `AWS::QuickSight::TemplateSheetElementRenderingRule` {
  ConfigurationOverrides: `AWS::QuickSight::TemplateTrendArrowOptions`

  Expression: String
}

class `AWS::QuickSight::TemplateSliderControlDisplayOptions` {
  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  TitleOptions: `AWS::QuickSight::TemplateLabelOptions`?
}

class `AWS::QuickSight::TemplateSmallMultiplesOptions` {
  MaxVisibleColumns: Number?

  MaxVisibleRows: Number?

  PanelConfiguration: `AWS::QuickSight::TemplatePanelConfiguration`?

  XAxis: `AWS::QuickSight::TemplateSmallMultiplesAxisProperties`?

  YAxis: `AWS::QuickSight::TemplateSmallMultiplesAxisProperties`?
}

class `AWS::QuickSight::TemplateStringDefaultValues` {
  DynamicValue: `AWS::QuickSight::TemplateDynamicDefaultValue`?

  StaticValues: Listing<String>?
}

class `AWS::QuickSight::TemplateStringFormatConfiguration` {
  NullValueFormatConfiguration: `AWS::QuickSight::TemplateNullValueFormatConfiguration`?

  NumericFormatConfiguration: `AWS::QuickSight::TemplateNumericFormatConfiguration`?
}

class `AWS::QuickSight::TemplateStringParameterDeclaration` {
  DefaultValues: `AWS::QuickSight::TemplateStringDefaultValues`?

  MappedDataSetParameters: Listing<`AWS::QuickSight::TemplateMappedDataSetParameter`>?

  Name: String

  ParameterValueType: String

  ValueWhenUnset: `AWS::QuickSight::TemplateStringValueWhenUnsetConfiguration`?
}

class `AWS::QuickSight::TemplateSubtotalOptions` {
  CustomLabel: String?

  FieldLevel: String?

  FieldLevelOptions: Listing<`AWS::QuickSight::TemplatePivotTableFieldSubtotalOptions`>?

  MetricHeaderCellStyle: `AWS::QuickSight::TemplateTableCellStyle`?

  StyleTargets: Listing<`AWS::QuickSight::TemplateTableStyleTarget`>?

  TotalCellStyle: `AWS::QuickSight::TemplateTableCellStyle`?

  TotalsVisibility: String?

  ValueCellStyle: `AWS::QuickSight::TemplateTableCellStyle`?
}

class `AWS::QuickSight::TemplateTableCellConditionalFormatting` {
  FieldId: String

  TextFormat: `AWS::QuickSight::TemplateTextConditionalFormat`?
}

class `AWS::QuickSight::TemplateTableCellStyle` {
  BackgroundColor: String?

  Border: `AWS::QuickSight::TemplateGlobalTableBorderOptions`?

  FontConfiguration: `AWS::QuickSight::TemplateFontConfiguration`?

  Height: Number?

  HorizontalTextAlignment: String?

  TextWrap: String?

  VerticalTextAlignment: String?

  Visibility: String?
}

class `AWS::QuickSight::TemplateTableConditionalFormatting` {
  ConditionalFormattingOptions: Listing<`AWS::QuickSight::TemplateTableConditionalFormattingOption`>?
}

class `AWS::QuickSight::TemplateTableConditionalFormattingOption` {
  Cell: `AWS::QuickSight::TemplateTableCellConditionalFormatting`?

  Row: `AWS::QuickSight::TemplateTableRowConditionalFormatting`?
}

class `AWS::QuickSight::TemplateTableConfiguration` {
  FieldOptions: `AWS::QuickSight::TemplateTableFieldOptions`?

  FieldWells: `AWS::QuickSight::TemplateTableFieldWells`?

  PaginatedReportOptions: `AWS::QuickSight::TemplateTablePaginatedReportOptions`?

  SortConfiguration: `AWS::QuickSight::TemplateTableSortConfiguration`?

  TableInlineVisualizations: Listing<`AWS::QuickSight::TemplateTableInlineVisualization`>?

  TableOptions: `AWS::QuickSight::TemplateTableOptions`?

  TotalOptions: `AWS::QuickSight::TemplateTotalOptions`?
}

class `AWS::QuickSight::TemplateTableFieldCustomTextContent` {
  FontConfiguration: `AWS::QuickSight::TemplateFontConfiguration`

  Value: String?
}

class `AWS::QuickSight::TemplateTableFieldImageConfiguration` {
  SizingOptions: `AWS::QuickSight::TemplateTableCellImageSizingConfiguration`?
}

class `AWS::QuickSight::TemplateTableFieldLinkConfiguration` {
  Content: `AWS::QuickSight::TemplateTableFieldLinkContentConfiguration`

  Target: String
}

class `AWS::QuickSight::TemplateTableFieldLinkContentConfiguration` {
  CustomIconContent: `AWS::QuickSight::TemplateTableFieldCustomIconContent`?

  CustomTextContent: `AWS::QuickSight::TemplateTableFieldCustomTextContent`?
}

class `AWS::QuickSight::TemplateTableFieldOption` {
  CustomLabel: String?

  FieldId: String

  URLStyling: `AWS::QuickSight::TemplateTableFieldURLConfiguration`?

  Visibility: String?

  Width: String?
}

class `AWS::QuickSight::TemplateTableFieldOptions` {
  Order: Listing<String>?

  PinnedFieldOptions: `AWS::QuickSight::TemplateTablePinnedFieldOptions`?

  SelectedFieldOptions: Listing<`AWS::QuickSight::TemplateTableFieldOption`>?
}

class `AWS::QuickSight::TemplateTableFieldURLConfiguration` {
  ImageConfiguration: `AWS::QuickSight::TemplateTableFieldImageConfiguration`?

  LinkConfiguration: `AWS::QuickSight::TemplateTableFieldLinkConfiguration`?
}

class `AWS::QuickSight::TemplateTableFieldWells` {
  TableAggregatedFieldWells: `AWS::QuickSight::TemplateTableAggregatedFieldWells`?

  TableUnaggregatedFieldWells: `AWS::QuickSight::TemplateTableUnaggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateTableInlineVisualization` {
  DataBars: `AWS::QuickSight::TemplateDataBarsOptions`?
}

class `AWS::QuickSight::TemplateTableOptions` {
  CellStyle: `AWS::QuickSight::TemplateTableCellStyle`?

  HeaderStyle: `AWS::QuickSight::TemplateTableCellStyle`?

  Orientation: String?

  RowAlternateColorOptions: `AWS::QuickSight::TemplateRowAlternateColorOptions`?
}

class `AWS::QuickSight::TemplateTableRowConditionalFormatting` {
  BackgroundColor: `AWS::QuickSight::TemplateConditionalFormattingColor`?

  TextColor: `AWS::QuickSight::TemplateConditionalFormattingColor`?
}

class `AWS::QuickSight::TemplateTableSideBorderOptions` {
  Bottom: `AWS::QuickSight::TemplateTableBorderOptions`?

  InnerHorizontal: `AWS::QuickSight::TemplateTableBorderOptions`?

  InnerVertical: `AWS::QuickSight::TemplateTableBorderOptions`?

  Left: `AWS::QuickSight::TemplateTableBorderOptions`?

  Right: `AWS::QuickSight::TemplateTableBorderOptions`?

  Top: `AWS::QuickSight::TemplateTableBorderOptions`?
}

class `AWS::QuickSight::TemplateTableSortConfiguration` {
  PaginationConfiguration: `AWS::QuickSight::TemplatePaginationConfiguration`?

  RowSort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?
}

class `AWS::QuickSight::TemplateTableUnaggregatedFieldWells` {
  Values: Listing<`AWS::QuickSight::TemplateUnaggregatedField`>?
}

class `AWS::QuickSight::TemplateTableVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateTableConfiguration`?

  ConditionalFormatting: `AWS::QuickSight::TemplateTableConditionalFormatting`?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateTemplateError` {
  Message: String?

  Type: String?

  ViolatedEntities: Listing<`AWS::QuickSight::TemplateEntity`>?
}

class `AWS::QuickSight::TemplateTemplateSourceAnalysis` {
  Arn: String

  DataSetReferences: Listing<`AWS::QuickSight::TemplateDataSetReference`>
}

class `AWS::QuickSight::TemplateTemplateSourceEntity` {
  SourceAnalysis: `AWS::QuickSight::TemplateTemplateSourceAnalysis`?

  SourceTemplate: `AWS::S3::StorageLensAwsOrg`?
}

class `AWS::QuickSight::TemplateTemplateVersion` {
  CreatedTime: String?

  DataSetConfigurations: Listing<`AWS::QuickSight::TemplateDataSetConfiguration`>?

  Description: String?

  Errors: Listing<`AWS::QuickSight::TemplateTemplateError`>?

  Sheets: Listing<`AWS::QuickSight::TemplateSheet`>?

  SourceEntityArn: String?

  Status: String?

  ThemeArn: String?

  VersionNumber: Number?
}

class `AWS::QuickSight::TemplateTemplateVersionDefinition` {
  AnalysisDefaults: `AWS::QuickSight::TemplateAnalysisDefaults`?

  CalculatedFields: Listing<`AWS::QuickSight::TemplateCalculatedField`>?

  ColumnConfigurations: Listing<`AWS::QuickSight::TemplateColumnConfiguration`>?

  DataSetConfigurations: Listing<`AWS::QuickSight::TemplateDataSetConfiguration`>

  FilterGroups: Listing<`AWS::QuickSight::TemplateFilterGroup`>?

  Options: `AWS::QuickSight::TemplateAssetOptions`?

  ParameterDeclarations: Listing<`AWS::QuickSight::TemplateParameterDeclaration`>?

  Sheets: Listing<`AWS::QuickSight::TemplateSheetDefinition`>?
}

class `AWS::QuickSight::TemplateTextFieldControlDisplayOptions` {
  InfoIconLabelOptions: `AWS::QuickSight::TemplateSheetControlInfoIconLabelOptions`?

  PlaceholderOptions: `AWS::QuickSight::TemplateTrendArrowOptions`?

  TitleOptions: `AWS::QuickSight::TemplateLabelOptions`?
}

class `AWS::QuickSight::TemplateTextConditionalFormat` {
  BackgroundColor: `AWS::QuickSight::TemplateConditionalFormattingColor`?

  Icon: `AWS::QuickSight::TemplateConditionalFormattingIcon`?

  TextColor: `AWS::QuickSight::TemplateConditionalFormattingColor`?
}

class `AWS::QuickSight::TemplateTimeEqualityFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FilterId: String

  ParameterName: String?

  RollingDate: `AWS::QuickSight::TemplateRollingDateConfiguration`?

  TimeGranularity: String?

  Value: String?
}

class `AWS::QuickSight::TemplateTimeRangeDrillDownFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  RangeMaximum: String

  RangeMinimum: String

  TimeGranularity: String
}

class `AWS::QuickSight::TemplateTimeRangeFilter` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  ExcludePeriodConfiguration: `AWS::QuickSight::TemplateExcludePeriodConfiguration`?

  FilterId: String

  IncludeMaximum: Boolean?

  IncludeMinimum: Boolean?

  NullOption: String

  RangeMaximumValue: `AWS::QuickSight::TemplateTimeRangeFilterValue`?

  RangeMinimumValue: `AWS::QuickSight::TemplateTimeRangeFilterValue`?

  TimeGranularity: String?
}

class `AWS::QuickSight::TemplateTimeRangeFilterValue` {
  Parameter: String?

  RollingDate: `AWS::QuickSight::TemplateRollingDateConfiguration`?

  StaticValue: String?
}

class `AWS::QuickSight::TemplateTooltipItem` {
  ColumnTooltipItem: `AWS::QuickSight::TemplateColumnTooltipItem`?

  FieldTooltipItem: `AWS::QuickSight::TemplateFieldTooltipItem`?
}

class `AWS::QuickSight::TemplateTooltipOptions` {
  FieldBasedTooltip: `AWS::QuickSight::TemplateFieldBasedTooltip`?

  SelectedTooltipType: String?

  TooltipVisibility: String?
}

class `AWS::QuickSight::TemplateTopBottomFilter` {
  AggregationSortConfigurations: Listing<`AWS::QuickSight::TemplateAggregationSortConfiguration`>

  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FilterId: String

  Limit: Number?

  ParameterName: String?

  TimeGranularity: String?
}

class `AWS::QuickSight::TemplateTopBottomMoversComputation` {
  Category: `AWS::QuickSight::TemplateDimensionField`?

  ComputationId: String

  MoverSize: Number?

  Name: String?

  SortOrder: String?

  Time: `AWS::QuickSight::TemplateDimensionField`?

  Type: String

  Value: `AWS::QuickSight::TemplateMeasureField`?
}

class `AWS::QuickSight::TemplateTopBottomRankedComputation` {
  Category: `AWS::QuickSight::TemplateDimensionField`?

  ComputationId: String

  Name: String?

  ResultSize: Number?

  Type: String

  Value: `AWS::QuickSight::TemplateMeasureField`?
}

class `AWS::QuickSight::TemplateTotalAggregationComputation` {
  ComputationId: String

  Name: String?

  Value: `AWS::QuickSight::TemplateMeasureField`?
}

class `AWS::QuickSight::TemplateTotalAggregationOption` {
  FieldId: String

  TotalAggregationFunction: `AWS::QuickSight::TemplateTotalAggregationFunction`
}

class `AWS::QuickSight::TemplateTotalOptions` {
  CustomLabel: String?

  Placement: String?

  ScrollStatus: String?

  TotalAggregationOptions: Listing<`AWS::QuickSight::TemplateTotalAggregationOption`>?

  TotalCellStyle: `AWS::QuickSight::TemplateTableCellStyle`?

  TotalsVisibility: String?
}

class `AWS::QuickSight::TemplateTreeMapAggregatedFieldWells` {
  Colors: Listing<`AWS::QuickSight::TemplateMeasureField`>?

  Groups: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Sizes: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateTreeMapConfiguration` {
  ColorLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  ColorScale: `AWS::QuickSight::TemplateColorScale`?

  DataLabels: `AWS::QuickSight::TemplateDataLabelOptions`?

  FieldWells: `AWS::QuickSight::TemplateTreeMapFieldWells`?

  GroupLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  Legend: `AWS::QuickSight::TemplateLegendOptions`?

  SizeLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  SortConfiguration: `AWS::QuickSight::TemplateTreeMapSortConfiguration`?

  Tooltip: `AWS::QuickSight::TemplateTooltipOptions`?
}

class `AWS::QuickSight::TemplateTreeMapFieldWells` {
  TreeMapAggregatedFieldWells: `AWS::QuickSight::TemplateTreeMapAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateTreeMapSortConfiguration` {
  TreeMapGroupItemsLimitConfiguration: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  TreeMapSort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?
}

class `AWS::QuickSight::TemplateTreeMapVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateTreeMapConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateUnaggregatedField` {
  Column: `AWS::QuickSight::TemplateColumnIdentifier`

  FieldId: String

  FormatConfiguration: `AWS::QuickSight::TemplateFormatConfiguration`?
}

class `AWS::QuickSight::TemplateUniqueValuesComputation` {
  Category: `AWS::QuickSight::TemplateDimensionField`?

  ComputationId: String

  Name: String?
}

class `AWS::QuickSight::TemplateVisibleRangeOptions` {
  PercentRange: `AWS::QuickSight::TemplatePercentVisibleRange`?
}

class `AWS::QuickSight::TemplateVisual` {
  BarChartVisual: `AWS::QuickSight::TemplateBarChartVisual`?

  BoxPlotVisual: `AWS::QuickSight::TemplateBoxPlotVisual`?

  ComboChartVisual: `AWS::QuickSight::TemplateComboChartVisual`?

  CustomContentVisual: `AWS::QuickSight::TemplateCustomContentVisual`?

  EmptyVisual: `AWS::QuickSight::TemplateEmptyVisual`?

  FilledMapVisual: `AWS::QuickSight::TemplateFilledMapVisual`?

  FunnelChartVisual: `AWS::QuickSight::TemplateFunnelChartVisual`?

  GaugeChartVisual: `AWS::QuickSight::TemplateGaugeChartVisual`?

  GeospatialMapVisual: `AWS::QuickSight::TemplateGeospatialMapVisual`?

  HeatMapVisual: `AWS::QuickSight::TemplateHeatMapVisual`?

  HistogramVisual: `AWS::QuickSight::TemplateHistogramVisual`?

  InsightVisual: `AWS::QuickSight::TemplateInsightVisual`?

  KPIVisual: `AWS::QuickSight::TemplateKPIVisual`?

  LineChartVisual: `AWS::QuickSight::TemplateLineChartVisual`?

  PieChartVisual: `AWS::QuickSight::TemplatePieChartVisual`?

  PivotTableVisual: `AWS::QuickSight::TemplatePivotTableVisual`?

  RadarChartVisual: `AWS::QuickSight::TemplateRadarChartVisual`?

  SankeyDiagramVisual: `AWS::QuickSight::TemplateSankeyDiagramVisual`?

  ScatterPlotVisual: `AWS::QuickSight::TemplateScatterPlotVisual`?

  TableVisual: `AWS::QuickSight::TemplateTableVisual`?

  TreeMapVisual: `AWS::QuickSight::TemplateTreeMapVisual`?

  WaterfallVisual: `AWS::QuickSight::TemplateWaterfallVisual`?

  WordCloudVisual: `AWS::QuickSight::TemplateWordCloudVisual`?
}

class `AWS::QuickSight::TemplateVisualCustomAction` {
  ActionOperations: Listing<`AWS::QuickSight::TemplateVisualCustomActionOperation`>

  CustomActionId: String

  Name: String

  Status: String?

  Trigger: String
}

class `AWS::QuickSight::TemplateVisualCustomActionOperation` {
  FilterOperation: `AWS::QuickSight::TemplateCustomActionFilterOperation`?

  NavigationOperation: `AWS::QuickSight::TemplateCustomActionNavigationOperation`?

  SetParametersOperation: `AWS::QuickSight::TemplateCustomActionSetParametersOperation`?

  URLOperation: `AWS::QuickSight::TemplateCustomActionURLOperation`?
}

class `AWS::QuickSight::TemplateVisualPalette` {
  ChartColor: String?

  ColorMap: Listing<`AWS::QuickSight::TemplateDataPathColor`>?
}

class `AWS::QuickSight::TemplateVisualSubtitleLabelOptions` {
  FormatText: `AWS::QuickSight::TemplateShortFormatText`?

  Visibility: String?
}

class `AWS::QuickSight::TemplateVisualTitleLabelOptions` {
  FormatText: `AWS::QuickSight::TemplateShortFormatText`?

  Visibility: String?
}

class `AWS::QuickSight::TemplateWaterfallChartAggregatedFieldWells` {
  Breakdowns: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Categories: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Values: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateWaterfallChartConfiguration` {
  CategoryAxisDisplayOptions: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  CategoryAxisLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  DataLabels: `AWS::QuickSight::TemplateDataLabelOptions`?

  FieldWells: `AWS::QuickSight::TemplateWaterfallChartFieldWells`?

  Legend: `AWS::QuickSight::TemplateLegendOptions`?

  PrimaryYAxisDisplayOptions: `AWS::QuickSight::TemplateAxisDisplayOptions`?

  PrimaryYAxisLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  SortConfiguration: `AWS::QuickSight::TemplateWaterfallChartSortConfiguration`?

  VisualPalette: `AWS::QuickSight::TemplateVisualPalette`?

  WaterfallChartOptions: `AWS::QuickSight::TemplateWaterfallChartOptions`?
}

class `AWS::QuickSight::TemplateWaterfallChartFieldWells` {
  WaterfallChartAggregatedFieldWells: `AWS::QuickSight::TemplateWaterfallChartAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateWaterfallChartSortConfiguration` {
  BreakdownItemsLimit: `AWS::QuickSight::TemplateItemsLimitConfiguration`?

  CategorySort: Listing<`AWS::QuickSight::TemplateFieldSortOptions`>?
}

class `AWS::QuickSight::TemplateWaterfallVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateWaterfallChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::TemplateWordCloudAggregatedFieldWells` {
  GroupBy: Listing<`AWS::QuickSight::TemplateDimensionField`>?

  Size: Listing<`AWS::QuickSight::TemplateMeasureField`>?
}

class `AWS::QuickSight::TemplateWordCloudChartConfiguration` {
  CategoryLabelOptions: `AWS::QuickSight::TemplateChartAxisLabelOptions`?

  FieldWells: `AWS::QuickSight::TemplateWordCloudFieldWells`?

  SortConfiguration: `AWS::QuickSight::TemplateWordCloudSortConfiguration`?

  WordCloudOptions: `AWS::QuickSight::TemplateWordCloudOptions`?
}

class `AWS::QuickSight::TemplateWordCloudFieldWells` {
  WordCloudAggregatedFieldWells: `AWS::QuickSight::TemplateWordCloudAggregatedFieldWells`?
}

class `AWS::QuickSight::TemplateWordCloudVisual` {
  Actions: Listing<`AWS::QuickSight::TemplateVisualCustomAction`>?

  ChartConfiguration: `AWS::QuickSight::TemplateWordCloudChartConfiguration`?

  ColumnHierarchies: Listing<`AWS::QuickSight::TemplateColumnHierarchy`>?

  Subtitle: `AWS::QuickSight::TemplateVisualSubtitleLabelOptions`?

  Title: `AWS::QuickSight::TemplateVisualTitleLabelOptions`?

  VisualId: String
}

class `AWS::QuickSight::Theme` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::QuickSight::ThemeProperties`

  Type: "AWS::QuickSight::Theme"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::QuickSight::ThemeProperties` {
  AwsAccountId: String

  BaseThemeId: String

  Configuration: `AWS::QuickSight::ThemeThemeConfiguration`

  Name: String

  Permissions: Listing<`AWS::QuickSight::ThemeResourcePermission`>?

  Tags: Listing<Tag>?

  ThemeId: String

  VersionDescription: String?
}

class `AWS::QuickSight::ThemeMarginStyle` {
  Show: Boolean?
}

class `AWS::QuickSight::ThemeDataColorPalette` {
  Colors: Listing<String>?

  EmptyFillColor: String?

  MinMaxGradient: Listing<String>?
}

class `AWS::QuickSight::ThemeFont` {
  FontFamily: String?
}

class `AWS::QuickSight::ThemeSheetStyle` {
  Tile: `AWS::QuickSight::ThemeTileStyle`?

  TileLayout: `AWS::QuickSight::ThemeTileLayoutStyle`?
}

class `AWS::QuickSight::ThemeThemeConfiguration` {
  DataColorPalette: `AWS::QuickSight::ThemeDataColorPalette`?

  Sheet: `AWS::QuickSight::ThemeSheetStyle`?

  Typography: `AWS::QuickSight::ThemeTypography`?

  UIColorPalette: `AWS::QuickSight::ThemeUIColorPalette`?
}

class `AWS::QuickSight::ThemeThemeVersion` {
  Arn: String?

  BaseThemeId: String?

  Configuration: `AWS::QuickSight::ThemeThemeConfiguration`?

  CreatedTime: String?

  Description: String?

  Errors: Listing<`AWS::QuickSight::ThemeThemeError`>?

  Status: String?

  VersionNumber: Number?
}

class `AWS::QuickSight::ThemeTileLayoutStyle` {
  Gutter: `AWS::QuickSight::ThemeMarginStyle`?

  Margin: `AWS::QuickSight::ThemeMarginStyle`?
}

class `AWS::QuickSight::ThemeTileStyle` {
  Border: `AWS::QuickSight::ThemeMarginStyle`?
}

class `AWS::QuickSight::ThemeTypography` {
  FontFamilies: Listing<`AWS::QuickSight::ThemeFont`>?
}

class `AWS::QuickSight::ThemeUIColorPalette` {
  Accent: String?

  AccentForeground: String?

  Danger: String?

  DangerForeground: String?

  Dimension: String?

  DimensionForeground: String?

  Measure: String?

  MeasureForeground: String?

  PrimaryBackground: String?

  PrimaryForeground: String?

  SecondaryBackground: String?

  SecondaryForeground: String?

  Success: String?

  SuccessForeground: String?

  Warning: String?

  WarningForeground: String?
}

class `AWS::QuickSight::Topic` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::QuickSight::TopicProperties`?

  Type: "AWS::QuickSight::Topic"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::QuickSight::TopicProperties` {
  AwsAccountId: String?

  DataSets: Listing<`AWS::QuickSight::TopicDatasetMetadata`>?

  Description: String?

  Name: String?

  TopicId: String?

  UserExperienceVersion: String?
}

class `AWS::QuickSight::TopicCellValueSynonym` {
  CellValue: String?

  Synonyms: Listing<String>?
}

class `AWS::QuickSight::TopicCollectiveConstant` {
  ValueList: Listing<String>?
}

class `AWS::QuickSight::TopicComparativeOrder` {
  SpecifedOrder: Listing<String>?

  TreatUndefinedSpecifiedValues: String?

  UseOrdering: String?
}

class `AWS::QuickSight::TopicDataAggregation` {
  DatasetRowDateGranularity: String?

  DefaultDateColumnName: String?
}

class `AWS::QuickSight::TopicDatasetMetadata` {
  CalculatedFields: Listing<`AWS::QuickSight::TopicTopicCalculatedField`>?

  Columns: Listing<`AWS::QuickSight::TopicTopicColumn`>?

  DataAggregation: `AWS::QuickSight::TopicDataAggregation`?

  DatasetArn: String

  DatasetDescription: String?

  DatasetName: String?

  Filters: Listing<`AWS::QuickSight::TopicTopicFilter`>?

  NamedEntities: Listing<`AWS::QuickSight::TopicTopicNamedEntity`>?
}

class `AWS::QuickSight::TopicDefaultFormatting` {
  DisplayFormat: String?

  DisplayFormatOptions: `AWS::QuickSight::TopicDisplayFormatOptions`?
}

class `AWS::QuickSight::TopicDisplayFormatOptions` {
  BlankCellFormat: String?

  CurrencySymbol: String?

  DateFormat: String?

  DecimalSeparator: String?

  FractionDigits: Number?

  GroupingSeparator: String?

  NegativeFormat: `AWS::QuickSight::TopicNegativeFormat`?

  Prefix: String?

  Suffix: String?

  UnitScaler: String?

  UseBlankCellFormat: Boolean?

  UseGrouping: Boolean?
}

class `AWS::QuickSight::TopicNamedEntityDefinition` {
  FieldName: String?

  Metric: `AWS::QuickSight::TopicNamedEntityDefinitionMetric`?

  PropertyName: String?

  PropertyRole: String?

  PropertyUsage: String?
}

class `AWS::QuickSight::TopicNamedEntityDefinitionMetric` {
  Aggregation: String?

  AggregationFunctionParameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::QuickSight::TopicNegativeFormat` {
  Prefix: String?

  Suffix: String?
}

class `AWS::QuickSight::TopicRangeConstant` {
  Maximum: String?

  Minimum: String?
}

class `AWS::QuickSight::TopicSemanticEntityType` {
  SubTypeName: String?

  TypeName: String?

  TypeParameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::QuickSight::TopicSemanticType` {
  FalseyCellValue: String?

  FalseyCellValueSynonyms: Listing<String>?

  SubTypeName: String?

  TruthyCellValue: String?

  TruthyCellValueSynonyms: Listing<String>?

  TypeName: String?

  TypeParameters: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::QuickSight::TopicTopicCalculatedField` {
  Aggregation: String?

  AllowedAggregations: Listing<String>?

  CalculatedFieldDescription: String?

  CalculatedFieldName: String

  CalculatedFieldSynonyms: Listing<String>?

  CellValueSynonyms: Listing<`AWS::QuickSight::TopicCellValueSynonym`>?

  ColumnDataRole: String?

  ComparativeOrder: `AWS::QuickSight::TopicComparativeOrder`?

  DefaultFormatting: `AWS::QuickSight::TopicDefaultFormatting`?

  Expression: String

  IsIncludedInTopic: Boolean?

  NeverAggregateInFilter: Boolean?

  NonAdditive: Boolean?

  NotAllowedAggregations: Listing<String>?

  SemanticType: `AWS::QuickSight::TopicSemanticType`?

  TimeGranularity: String?
}

class `AWS::QuickSight::TopicTopicCategoryFilter` {
  CategoryFilterFunction: String?

  CategoryFilterType: String?

  Constant: `AWS::QuickSight::TopicTopicCategoryFilterConstant`?

  Inverse: Boolean?
}

class `AWS::QuickSight::TopicTopicCategoryFilterConstant` {
  CollectiveConstant: `AWS::QuickSight::TopicCollectiveConstant`?

  ConstantType: String?

  SingularConstant: String?
}

class `AWS::QuickSight::TopicTopicColumn` {
  Aggregation: String?

  AllowedAggregations: Listing<String>?

  CellValueSynonyms: Listing<`AWS::QuickSight::TopicCellValueSynonym`>?

  ColumnDataRole: String?

  ColumnDescription: String?

  ColumnFriendlyName: String?

  ColumnName: String

  ColumnSynonyms: Listing<String>?

  ComparativeOrder: `AWS::QuickSight::TopicComparativeOrder`?

  DefaultFormatting: `AWS::QuickSight::TopicDefaultFormatting`?

  IsIncludedInTopic: Boolean?

  NeverAggregateInFilter: Boolean?

  NonAdditive: Boolean?

  NotAllowedAggregations: Listing<String>?

  SemanticType: `AWS::QuickSight::TopicSemanticType`?

  TimeGranularity: String?
}

class `AWS::QuickSight::TopicTopicDateRangeFilter` {
  Constant: `AWS::QuickSight::TopicTopicRangeFilterConstant`?

  Inclusive: Boolean?
}

class `AWS::QuickSight::TopicTopicFilter` {
  CategoryFilter: `AWS::QuickSight::TopicTopicCategoryFilter`?

  DateRangeFilter: `AWS::QuickSight::TopicTopicDateRangeFilter`?

  FilterClass: String?

  FilterDescription: String?

  FilterName: String

  FilterSynonyms: Listing<String>?

  FilterType: String?

  NumericEqualityFilter: `AWS::QuickSight::TopicTopicNumericEqualityFilter`?

  NumericRangeFilter: `AWS::QuickSight::TopicTopicNumericRangeFilter`?

  OperandFieldName: String

  RelativeDateFilter: `AWS::QuickSight::TopicTopicRelativeDateFilter`?
}

class `AWS::QuickSight::TopicTopicNamedEntity` {
  Definition: Listing<`AWS::QuickSight::TopicNamedEntityDefinition`>?

  EntityDescription: String?

  EntityName: String

  EntitySynonyms: Listing<String>?

  SemanticEntityType: `AWS::QuickSight::TopicSemanticEntityType`?
}

class `AWS::QuickSight::TopicTopicNumericEqualityFilter` {
  Aggregation: String?

  Constant: `AWS::QuickSight::TopicTopicSingularFilterConstant`?
}

class `AWS::QuickSight::TopicTopicNumericRangeFilter` {
  Aggregation: String?

  Constant: `AWS::QuickSight::TopicTopicRangeFilterConstant`?

  Inclusive: Boolean?
}

class `AWS::QuickSight::TopicTopicRangeFilterConstant` {
  ConstantType: String?

  RangeConstant: `AWS::QuickSight::TopicRangeConstant`?
}

class `AWS::QuickSight::TopicTopicRelativeDateFilter` {
  Constant: `AWS::QuickSight::TopicTopicSingularFilterConstant`?

  RelativeDateFilterFunction: String?

  TimeGranularity: String?
}

class `AWS::QuickSight::TopicTopicSingularFilterConstant` {
  ConstantType: String?

  SingularConstant: String?
}

class `AWS::QuickSight::VPCConnection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::QuickSight::VPCConnectionProperties`?

  Type: "AWS::QuickSight::VPCConnection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::QuickSight::VPCConnectionProperties` {
  AvailabilityStatus: String?

  AwsAccountId: String?

  DnsResolvers: Listing<String>?

  Name: String?

  RoleArn: String?

  SecurityGroupIds: Listing<String>?

  SubnetIds: Listing<String>?

  Tags: Listing<Tag>?

  VPCConnectionId: String?
}

class `AWS::QuickSight::VPCConnectionNetworkInterface` {
  AvailabilityZone: String?

  ErrorMessage: String?

  NetworkInterfaceId: String?

  Status: String?

  SubnetId: String?
}

class `AWS::RAM::Permission` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RAM::PermissionProperties`

  Type: "AWS::RAM::Permission"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RAM::PermissionProperties` {
  Name: String

  PolicyTemplate: Dynamic

  ResourceType: String

  Tags: Listing<Tag>?
}

class `AWS::RAM::ResourceShare` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RAM::ResourceShareProperties`

  Type: "AWS::RAM::ResourceShare"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RAM::ResourceShareProperties` {
  AllowExternalPrincipals: Boolean?

  Name: String

  PermissionArns: Listing<String>?

  Principals: Listing<String>?

  ResourceArns: Listing<String>?

  Sources: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::RDS::CustomDBEngineVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::CustomDBEngineVersionProperties`

  Type: "AWS::RDS::CustomDBEngineVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::CustomDBEngineVersionProperties` {
  DatabaseInstallationFilesS3BucketName: String

  DatabaseInstallationFilesS3Prefix: String?

  Description: String?

  Engine: String

  EngineVersion: String

  KMSKeyId: String?

  Manifest: String?

  Status: String?

  Tags: Listing<Tag>?
}

class `AWS::RDS::DBCluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::DBClusterProperties`?

  Type: "AWS::RDS::DBCluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::DBClusterProperties` {
  AllocatedStorage: Number?

  AssociatedRoles: Listing<`AWS::RDS::DBClusterDBClusterRole`>?

  AutoMinorVersionUpgrade: Boolean?

  AvailabilityZones: Listing<String>?

  BacktrackWindow: Number?

  BackupRetentionPeriod: Number?

  CopyTagsToSnapshot: Boolean?

  DBClusterIdentifier: String?

  DBClusterInstanceClass: String?

  DBClusterParameterGroupName: String?

  DBInstanceParameterGroupName: String?

  DBSubnetGroupName: String?

  DBSystemId: String?

  DatabaseName: String?

  DeletionProtection: Boolean?

  Domain: String?

  DomainIAMRoleName: String?

  EnableCloudwatchLogsExports: Listing<String>?

  EnableGlobalWriteForwarding: Boolean?

  EnableHttpEndpoint: Boolean?

  EnableIAMDatabaseAuthentication: Boolean?

  Engine: String?

  EngineMode: String?

  EngineVersion: String?

  GlobalClusterIdentifier: String?

  Iops: Number?

  KmsKeyId: String?

  ManageMasterUserPassword: Boolean?

  MasterUserPassword: String?

  MasterUserSecret: `AWS::RDS::DBInstanceMasterUserSecret`?

  MasterUsername: String?

  MonitoringInterval: Number?

  MonitoringRoleArn: String?

  NetworkType: String?

  PerformanceInsightsEnabled: Boolean?

  PerformanceInsightsKmsKeyId: String?

  PerformanceInsightsRetentionPeriod: Number?

  Port: Number?

  PreferredBackupWindow: String?

  PreferredMaintenanceWindow: String?

  PubliclyAccessible: Boolean?

  ReplicationSourceIdentifier: String?

  RestoreToTime: String?

  RestoreType: String?

  ScalingConfiguration: `AWS::RDS::DBClusterScalingConfiguration`?

  ServerlessV2ScalingConfiguration: `AWS::RDS::DBClusterServerlessV2ScalingConfiguration`?

  SnapshotIdentifier: String?

  SourceDBClusterIdentifier: String?

  SourceRegion: String?

  StorageEncrypted: Boolean?

  StorageType: String?

  Tags: Listing<Tag>?

  UseLatestRestorableTime: Boolean?

  VpcSecurityGroupIds: Listing<String>?
}

class `AWS::Redshift::ClusterEndpoint` {
  Address: String?

  Port: String?
}

class `AWS::RDS::DBInstanceMasterUserSecret` {
  KmsKeyId: String?

  SecretArn: String?
}

class `AWS::RDS::DBClusterReadEndpoint` {
  Address: String?
}

class `AWS::RDS::DBClusterScalingConfiguration` {
  AutoPause: Boolean?

  MaxCapacity: Number?

  MinCapacity: Number?

  SecondsBeforeTimeout: Number?

  SecondsUntilAutoPause: Number?

  TimeoutAction: String?
}

class `AWS::RDS::DBClusterParameterGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::DBClusterParameterGroupProperties`

  Type: "AWS::RDS::DBClusterParameterGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::DBClusterParameterGroupProperties` {
  DBClusterParameterGroupName: String?

  Description: String

  Family: String

  Parameters: Dynamic

  Tags: Listing<Tag>?
}

class `AWS::RDS::DBInstance` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::DBInstanceProperties`?

  Type: "AWS::RDS::DBInstance"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::DBInstanceProperties` {
  AllocatedStorage: String?

  AllowMajorVersionUpgrade: Boolean?

  AssociatedRoles: Listing<`AWS::RDS::DBInstanceDBInstanceRole`>?

  AutoMinorVersionUpgrade: Boolean?

  AutomaticBackupReplicationRegion: String?

  AvailabilityZone: String?

  BackupRetentionPeriod: Number?

  CACertificateIdentifier: String?

  CertificateDetails: `AWS::RDS::DBInstanceCertificateDetails`?

  CertificateRotationRestart: Boolean?

  CharacterSetName: String?

  CopyTagsToSnapshot: Boolean?

  CustomIAMInstanceProfile: String?

  DBClusterIdentifier: String?

  DBClusterSnapshotIdentifier: String?

  DBInstanceClass: String?

  DBInstanceIdentifier: String?

  DBName: String?

  DBParameterGroupName: String?

  DBSecurityGroups: Listing<String>?

  DBSnapshotIdentifier: String?

  DBSubnetGroupName: String?

  DedicatedLogVolume: Boolean?

  DeleteAutomatedBackups: Boolean?

  DeletionProtection: Boolean?

  Domain: String?

  DomainAuthSecretArn: String?

  DomainDnsIps: Listing<String>?

  DomainFqdn: String?

  DomainIAMRoleName: String?

  DomainOu: String?

  EnableCloudwatchLogsExports: Listing<String>?

  EnableIAMDatabaseAuthentication: Boolean?

  EnablePerformanceInsights: Boolean?

  Endpoint: `AWS::RDS::DBInstanceEndpoint`?

  Engine: String?

  EngineVersion: String?

  Iops: Number?

  KmsKeyId: String?

  LicenseModel: String?

  ManageMasterUserPassword: Boolean?

  MasterUserPassword: String?

  MasterUserSecret: `AWS::RDS::DBInstanceMasterUserSecret`?

  MasterUsername: String?

  MaxAllocatedStorage: Number?

  MonitoringInterval: Number?

  MonitoringRoleArn: String?

  MultiAZ: Boolean?

  NcharCharacterSetName: String?

  NetworkType: String?

  OptionGroupName: String?

  PerformanceInsightsKMSKeyId: String?

  PerformanceInsightsRetentionPeriod: Number?

  Port: String?

  PreferredBackupWindow: String?

  PreferredMaintenanceWindow: String?

  ProcessorFeatures: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  PromotionTier: Number?

  PubliclyAccessible: Boolean?

  ReplicaMode: String?

  RestoreTime: String?

  SourceDBClusterIdentifier: String?

  SourceDBInstanceAutomatedBackupsArn: String?

  SourceDBInstanceIdentifier: String?

  SourceDbiResourceId: String?

  SourceRegion: String?

  StorageEncrypted: Boolean?

  StorageThroughput: Number?

  StorageType: String?

  Tags: Listing<Tag>?

  Timezone: String?

  UseDefaultProcessorFeatures: Boolean?

  UseLatestRestorableTime: Boolean?

  VPCSecurityGroups: Listing<String>?
}

class `AWS::RDS::DBInstanceCertificateDetails` {
  CAIdentifier: String?

  ValidTill: String?
}

class `AWS::RDS::DBInstanceDBInstanceRole` {
  FeatureName: String

  RoleArn: String
}

class `AWS::RDS::DBInstanceEndpoint` {
  Address: String?

  HostedZoneId: String?

  Port: String?
}

class `AWS::RDS::DBParameterGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::DBParameterGroupProperties`

  Type: "AWS::RDS::DBParameterGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::DBParameterGroupProperties` {
  DBParameterGroupName: String?

  Description: String

  Family: String

  Parameters: Dynamic?

  Tags: Listing<Tag>?
}

class `AWS::RDS::DBProxy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::DBProxyProperties`

  Type: "AWS::RDS::DBProxy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::DBProxyProperties` {
  Auth: Listing<`AWS::RDS::DBProxyAuthFormat`>

  DBProxyName: String

  DebugLogging: Boolean?

  EngineFamily: String

  IdleClientTimeout: Number?

  RequireTLS: Boolean?

  RoleArn: String

  Tags: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?

  VpcSecurityGroupIds: Listing<String>?

  VpcSubnetIds: Listing<String>
}

class `AWS::RDS::DBProxyAuthFormat` {
  AuthScheme: String?

  ClientPasswordAuthType: String?

  Description: String?

  IAMAuth: String?

  SecretArn: String?
}

class `AWS::RDS::DBProxyEndpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::DBProxyEndpointProperties`

  Type: "AWS::RDS::DBProxyEndpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::DBProxyEndpointProperties` {
  DBProxyEndpointName: String

  DBProxyName: String

  Tags: Listing<`AWS::RDS::DBProxyEndpointTagFormat`>?

  TargetRole: String?

  VpcSecurityGroupIds: Listing<String>?

  VpcSubnetIds: Listing<String>
}

class `AWS::RDS::DBProxyTargetGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::DBProxyTargetGroupProperties`

  Type: "AWS::RDS::DBProxyTargetGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::DBProxyTargetGroupProperties` {
  ConnectionPoolConfigurationInfo: `AWS::RDS::DBProxyTargetGroupConnectionPoolConfigurationInfoFormat`?

  DBClusterIdentifiers: Listing<String>?

  DBInstanceIdentifiers: Listing<String>?

  DBProxyName: String

  TargetGroupName: String
}

class `AWS::RDS::DBProxyTargetGroupConnectionPoolConfigurationInfoFormat` {
  ConnectionBorrowTimeout: Number?

  InitQuery: String?

  MaxConnectionsPercent: Number?

  MaxIdleConnectionsPercent: Number?

  SessionPinningFilters: Listing<String>?
}

class `AWS::RDS::DBSecurityGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::DBSecurityGroupProperties`

  Type: "AWS::RDS::DBSecurityGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::DBSecurityGroupProperties` {
  DBSecurityGroupIngress: Listing<`AWS::RDS::DBSecurityGroupIngress`>

  EC2VpcId: String?

  GroupDescription: String

  Tags: Listing<Tag>?
}

class `AWS::RDS::DBSecurityGroupIngress` {
  CIDRIP: String?

  EC2SecurityGroupId: String?

  EC2SecurityGroupName: String?

  EC2SecurityGroupOwnerId: String?
}

class `AWS::RDS::DBSecurityGroupIngress0` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::DBSecurityGroupIngressProperties`

  Type: "AWS::RDS::DBSecurityGroupIngress"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::DBSecurityGroupIngressProperties` {
  CIDRIP: String?

  DBSecurityGroupName: String

  EC2SecurityGroupId: String?

  EC2SecurityGroupName: String?

  EC2SecurityGroupOwnerId: String?
}

class `AWS::RDS::DBSubnetGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::DBSubnetGroupProperties`

  Type: "AWS::RDS::DBSubnetGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::EventSubscription` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::EventSubscriptionProperties`

  Type: "AWS::RDS::EventSubscription"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::GlobalCluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::GlobalClusterProperties`?

  Type: "AWS::RDS::GlobalCluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::GlobalClusterProperties` {
  DeletionProtection: Boolean?

  Engine: String?

  EngineVersion: String?

  GlobalClusterIdentifier: String?

  SourceDBClusterIdentifier: String?

  StorageEncrypted: Boolean?
}

class `AWS::RDS::OptionGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RDS::OptionGroupProperties`

  Type: "AWS::RDS::OptionGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RDS::OptionGroupProperties` {
  EngineName: String

  MajorEngineVersion: String

  OptionConfigurations: Listing<`AWS::RDS::OptionGroupOptionConfiguration`>?

  OptionGroupDescription: String

  OptionGroupName: String?

  Tags: Listing<Tag>?
}

class `AWS::RDS::OptionGroupOptionConfiguration` {
  DBSecurityGroupMemberships: Listing<String>?

  OptionName: String

  OptionSettings: Listing<`AWS::RDS::OptionGroupOptionSetting`>?

  OptionVersion: String?

  Port: Number?

  VpcSecurityGroupMemberships: Listing<String>?
}

class `AWS::RUM::AppMonitor` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RUM::AppMonitorProperties`

  Type: "AWS::RUM::AppMonitor"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RUM::AppMonitorProperties` {
  AppMonitorConfiguration: `AWS::RUM::AppMonitorAppMonitorConfiguration`?

  CustomEvents: `AWS::S3::BucketDeleteMarkerReplication`?

  CwLogEnabled: Boolean?

  Domain: String

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::RUM::AppMonitorAppMonitorConfiguration` {
  AllowCookies: Boolean?

  EnableXRay: Boolean?

  ExcludedPages: Listing<String>?

  FavoritePages: Listing<String>?

  GuestRoleArn: String?

  IdentityPoolId: String?

  IncludedPages: Listing<String>?

  MetricDestinations: Listing<`AWS::RUM::AppMonitorMetricDestination`>?

  SessionSampleRate: Number?

  Telemetries: Listing<String>?
}

class `AWS::RUM::AppMonitorMetricDefinition` {
  DimensionKeys: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  EventPattern: String?

  Name: String

  Namespace: String?

  UnitLabel: String?

  ValueKey: String?
}

class `AWS::RUM::AppMonitorMetricDestination` {
  Destination: String

  DestinationArn: String?

  IamRoleArn: String?

  MetricDefinitions: Listing<`AWS::RUM::AppMonitorMetricDefinition`>?
}

class `AWS::Redshift::Cluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Redshift::ClusterProperties`

  Type: "AWS::Redshift::Cluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Redshift::ClusterProperties` {
  AllowVersionUpgrade: Boolean?

  AquaConfigurationStatus: String?

  AutomatedSnapshotRetentionPeriod: Number?

  AvailabilityZone: String?

  AvailabilityZoneRelocation: Boolean?

  AvailabilityZoneRelocationStatus: String?

  Classic: Boolean?

  ClusterIdentifier: String?

  ClusterParameterGroupName: String?

  ClusterSecurityGroups: Listing<String>?

  ClusterSubnetGroupName: String?

  ClusterType: String

  ClusterVersion: String?

  DBName: String

  DeferMaintenance: Boolean?

  DeferMaintenanceDuration: Number?

  DeferMaintenanceEndTime: String?

  DeferMaintenanceStartTime: String?

  DestinationRegion: String?

  ElasticIp: String?

  Encrypted: Boolean?

  Endpoint: `AWS::Redshift::ClusterEndpoint`?

  EnhancedVpcRouting: Boolean?

  HsmClientCertificateIdentifier: String?

  HsmConfigurationIdentifier: String?

  IamRoles: Listing<String>?

  KmsKeyId: String?

  LoggingProperties: `AWS::Redshift::ClusterLoggingProperties`?

  MaintenanceTrackName: String?

  ManageMasterPassword: Boolean?

  ManualSnapshotRetentionPeriod: Number?

  MasterPasswordSecretKmsKeyId: String?

  MasterUserPassword: String?

  MasterUsername: String

  MultiAZ: Boolean?

  NamespaceResourcePolicy: Dynamic?

  NodeType: String

  NumberOfNodes: Number?

  OwnerAccount: String?

  Port: Number?

  PreferredMaintenanceWindow: String?

  PubliclyAccessible: Boolean?

  ResourceAction: String?

  RevisionTarget: String?

  RotateEncryptionKey: Boolean?

  SnapshotClusterIdentifier: String?

  SnapshotCopyGrantName: String?

  SnapshotCopyManual: Boolean?

  SnapshotCopyRetentionPeriod: Number?

  SnapshotIdentifier: String?

  Tags: Listing<Tag>?

  VpcSecurityGroupIds: Listing<String>?
}

class `AWS::Redshift::ClusterLoggingProperties` {
  BucketName: String?

  S3KeyPrefix: String?
}

class `AWS::Redshift::ClusterParameterGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Redshift::ClusterParameterGroupProperties`

  Type: "AWS::Redshift::ClusterParameterGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Redshift::ClusterParameterGroupProperties` {
  Description: String

  ParameterGroupFamily: String

  ParameterGroupName: String?

  Parameters: Listing<`AWS::Redshift::ClusterParameterGroupParameter`>?

  Tags: Listing<Tag>?
}

class `AWS::Redshift::ClusterSecurityGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Redshift::ClusterSecurityGroupProperties`

  Type: "AWS::Redshift::ClusterSecurityGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Redshift::ClusterSecurityGroupIngress` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Redshift::ClusterSecurityGroupIngressProperties`

  Type: "AWS::Redshift::ClusterSecurityGroupIngress"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Redshift::ClusterSecurityGroupIngressProperties` {
  CIDRIP: String?

  ClusterSecurityGroupName: String

  EC2SecurityGroupName: String?

  EC2SecurityGroupOwnerId: String?
}

class `AWS::Redshift::ClusterSubnetGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Redshift::ClusterSubnetGroupProperties`

  Type: "AWS::Redshift::ClusterSubnetGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Redshift::ClusterSubnetGroupProperties` {
  Description: String

  SubnetIds: Listing<String>

  Tags: Listing<Tag>?
}

class `AWS::Redshift::EndpointAccess` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Redshift::EndpointAccessProperties`

  Type: "AWS::Redshift::EndpointAccess"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Redshift::EndpointAccessProperties` {
  ClusterIdentifier: String

  EndpointName: String

  ResourceOwner: String?

  SubnetGroupName: String

  VpcSecurityGroupIds: Listing<String>
}

class `AWS::RedshiftServerless::WorkgroupNetworkInterface` {
  AvailabilityZone: String?

  NetworkInterfaceId: String?

  PrivateIpAddress: String?

  SubnetId: String?
}

class `AWS::Redshift::EndpointAccessVpcEndpoint` {
  NetworkInterfaces: Listing<`AWS::RedshiftServerless::WorkgroupNetworkInterface`>?

  VpcEndpointId: String?

  VpcId: String?
}

class `AWS::Redshift::EndpointAccessVpcSecurityGroup` {
  Status: String?

  VpcSecurityGroupId: String?
}

class `AWS::Redshift::EndpointAuthorization` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Redshift::EndpointAuthorizationProperties`

  Type: "AWS::Redshift::EndpointAuthorization"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Redshift::EndpointAuthorizationProperties` {
  Account: String

  ClusterIdentifier: String

  Force: Boolean?

  VpcIds: Listing<String>?
}

class `AWS::Redshift::EventSubscription` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Redshift::EventSubscriptionProperties`

  Type: "AWS::Redshift::EventSubscription"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Redshift::EventSubscriptionProperties` {
  Enabled: Boolean?

  EventCategories: Listing<String>?

  Severity: String?

  SnsTopicArn: String?

  SourceIds: Listing<String>?

  SourceType: String?

  SubscriptionName: String

  Tags: Listing<Tag>?
}

class `AWS::Redshift::ScheduledAction` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Redshift::ScheduledActionProperties`

  Type: "AWS::Redshift::ScheduledAction"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Redshift::ScheduledActionProperties` {
  Enable: Boolean?

  EndTime: String?

  IamRole: String?

  Schedule: String?

  ScheduledActionDescription: String?

  ScheduledActionName: String

  StartTime: String?

  TargetAction: `AWS::Redshift::ScheduledActionScheduledActionType`?
}

class `AWS::Redshift::ScheduledActionResumeClusterMessage` {
  ClusterIdentifier: String
}

class `AWS::Redshift::ScheduledActionResizeClusterMessage` {
  Classic: Boolean?

  ClusterIdentifier: String

  ClusterType: String?

  NodeType: String?

  NumberOfNodes: Number?
}

class `AWS::Redshift::ScheduledActionScheduledActionType` {
  PauseCluster: `AWS::Redshift::ScheduledActionResumeClusterMessage`?

  ResizeCluster: `AWS::Redshift::ScheduledActionResizeClusterMessage`?

  ResumeCluster: `AWS::Redshift::ScheduledActionResumeClusterMessage`?
}

class `AWS::RedshiftServerless::Namespace` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RedshiftServerless::NamespaceProperties`

  Type: "AWS::RedshiftServerless::Namespace"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RedshiftServerless::NamespaceProperties` {
  AdminUserPassword: String?

  AdminUsername: String?

  DbName: String?

  DefaultIamRoleArn: String?

  FinalSnapshotName: String?

  FinalSnapshotRetentionPeriod: Number?

  IamRoles: Listing<String>?

  KmsKeyId: String?

  LogExports: Listing<String>?

  NamespaceName: String

  Tags: Listing<Tag>?
}

class `AWS::RedshiftServerless::NamespaceNamespace` {
  AdminUsername: String?

  CreationDate: String?

  DbName: String?

  DefaultIamRoleArn: String?

  IamRoles: Listing<String>?

  KmsKeyId: String?

  LogExports: Listing<String>?

  NamespaceArn: String?

  NamespaceId: String?

  NamespaceName: String?

  Status: String?
}

class `AWS::RedshiftServerless::Workgroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RedshiftServerless::WorkgroupProperties`

  Type: "AWS::RedshiftServerless::Workgroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RedshiftServerless::WorkgroupProperties` {
  BaseCapacity: Number?

  ConfigParameters: Listing<`AWS::RedshiftServerless::WorkgroupConfigParameter`>?

  EnhancedVpcRouting: Boolean?

  NamespaceName: String?

  Port: Number?

  PubliclyAccessible: Boolean?

  SecurityGroupIds: Listing<String>?

  SubnetIds: Listing<String>?

  Tags: Listing<Tag>?

  WorkgroupName: String
}

class `AWS::RedshiftServerless::WorkgroupConfigParameter` {
  ParameterKey: String?

  ParameterValue: String?
}

class `AWS::RedshiftServerless::WorkgroupEndpoint` {
  Address: String?

  Port: Number?

  VpcEndpoints: Listing<`AWS::RedshiftServerless::WorkgroupVpcEndpoint`>?
}

class `AWS::RedshiftServerless::WorkgroupVpcEndpoint` {
  NetworkInterfaces: Listing<`AWS::RedshiftServerless::WorkgroupNetworkInterface`>?

  VpcEndpointId: String?

  VpcId: String?
}

class `AWS::RedshiftServerless::WorkgroupWorkgroup` {
  BaseCapacity: Number?

  ConfigParameters: Listing<`AWS::RedshiftServerless::WorkgroupConfigParameter`>?

  CreationDate: String?

  Endpoint: `AWS::RedshiftServerless::WorkgroupEndpoint`?

  EnhancedVpcRouting: Boolean?

  NamespaceName: String?

  PubliclyAccessible: Boolean?

  SecurityGroupIds: Listing<String>?

  Status: String?

  SubnetIds: Listing<String>?

  WorkgroupArn: String?

  WorkgroupId: String?

  WorkgroupName: String?
}

class `AWS::RefactorSpaces::Application` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RefactorSpaces::ApplicationProperties`

  Type: "AWS::RefactorSpaces::Application"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RefactorSpaces::ApplicationProperties` {
  ApiGatewayProxy: `AWS::RefactorSpaces::ApplicationApiGatewayProxyInput`?

  EnvironmentIdentifier: String

  Name: String

  ProxyType: String

  Tags: Listing<Tag>?

  VpcId: String
}

class `AWS::RefactorSpaces::ApplicationApiGatewayProxyInput` {
  EndpointType: String?

  StageName: String?
}

class `AWS::RefactorSpaces::Environment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RefactorSpaces::EnvironmentProperties`

  Type: "AWS::RefactorSpaces::Environment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RefactorSpaces::EnvironmentProperties` {
  Description: String?

  Name: String

  NetworkFabricType: String

  Tags: Listing<Tag>?
}

class `AWS::RefactorSpaces::Route` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RefactorSpaces::RouteProperties`

  Type: "AWS::RefactorSpaces::Route"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RefactorSpaces::RouteProperties` {
  ApplicationIdentifier: String

  DefaultRoute: `AWS::RefactorSpaces::RouteDefaultRouteInput`?

  EnvironmentIdentifier: String

  RouteType: String

  ServiceIdentifier: String

  Tags: Listing<Tag>?

  UriPathRoute: `AWS::RefactorSpaces::RouteUriPathRouteInput`?
}

class `AWS::RefactorSpaces::RouteDefaultRouteInput` {
  ActivationState: String
}

class `AWS::RefactorSpaces::RouteUriPathRouteInput` {
  ActivationState: String

  AppendSourcePath: Boolean?

  IncludeChildPaths: Boolean?

  Methods: Listing<String>?

  SourcePath: String?
}

class `AWS::RefactorSpaces::Service` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RefactorSpaces::ServiceProperties`

  Type: "AWS::RefactorSpaces::Service"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RefactorSpaces::ServiceProperties` {
  ApplicationIdentifier: String

  Description: String?

  EndpointType: String

  EnvironmentIdentifier: String

  LambdaEndpoint: `AWS::S3::StorageLensAwsOrg`?

  Name: String

  Tags: Listing<Tag>?

  UrlEndpoint: `AWS::RefactorSpaces::ServiceUrlEndpointInput`?

  VpcId: String?
}

class `AWS::RefactorSpaces::ServiceUrlEndpointInput` {
  HealthUrl: String?

  Url: String
}

class `AWS::Rekognition::Collection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Rekognition::CollectionProperties`

  Type: "AWS::Rekognition::Collection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Rekognition::CollectionProperties` {
  CollectionId: String

  Tags: Listing<Tag>?
}

class `AWS::Rekognition::Project` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Rekognition::ProjectProperties`

  Type: "AWS::Rekognition::Project"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Rekognition::StreamProcessor` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Rekognition::StreamProcessorProperties`

  Type: "AWS::Rekognition::StreamProcessor"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Rekognition::StreamProcessorProperties` {
  BoundingBoxRegionsOfInterest: Listing<`AWS::Rekognition::StreamProcessorBoundingBox`>?

  ConnectedHomeSettings: `AWS::Rekognition::StreamProcessorConnectedHomeSettings`?

  DataSharingPreference: `AWS::Rekognition::StreamProcessorDataSharingPreference`?

  FaceSearchSettings: `AWS::Rekognition::StreamProcessorFaceSearchSettings`?

  KinesisDataStream: `AWS::S3::StorageLensAwsOrg`?

  KinesisVideoStream: `AWS::S3::StorageLensAwsOrg`

  KmsKeyId: String?

  Name: String?

  NotificationChannel: `AWS::S3::StorageLensAwsOrg`?

  PolygonRegionsOfInterest: Dynamic?

  RoleArn: String

  S3Destination: `AWS::Rekognition::StreamProcessorS3Destination`?

  Tags: Listing<Tag>?
}

class `AWS::Rekognition::StreamProcessorBoundingBox` {
  Height: Number

  Left: Number

  Top: Number

  Width: Number
}

class `AWS::Rekognition::StreamProcessorConnectedHomeSettings` {
  Labels: Listing<String>

  MinConfidence: Number?
}

class `AWS::Rekognition::StreamProcessorDataSharingPreference` {
  OptIn: Boolean
}

class `AWS::Rekognition::StreamProcessorFaceSearchSettings` {
  CollectionId: String

  FaceMatchThreshold: Number?
}

class `AWS::Rekognition::StreamProcessorS3Destination` {
  BucketName: String

  ObjectKeyPrefix: String?
}

class `AWS::ResilienceHub::App` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ResilienceHub::AppProperties`

  Type: "AWS::ResilienceHub::App"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ResilienceHub::AppProperties` {
  AppAssessmentSchedule: String?

  AppTemplateBody: String

  Description: String?

  EventSubscriptions: Listing<`AWS::ResilienceHub::AppEventSubscription`>?

  Name: String

  PermissionModel: `AWS::ResilienceHub::AppPermissionModel`?

  ResiliencyPolicyArn: String?

  ResourceMappings: Listing<`AWS::ResilienceHub::AppResourceMapping`>

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::ResilienceHub::AppEventSubscription` {
  EventType: String

  Name: String

  SnsTopicArn: String?
}

class `AWS::ResilienceHub::AppPermissionModel` {
  CrossAccountRoleArns: Listing<String>?

  InvokerRoleName: String?

  Type: String
}

class `AWS::ResilienceHub::AppPhysicalResourceId` {
  AwsAccountId: String?

  AwsRegion: String?

  Identifier: String

  Type: String
}

class `AWS::ResilienceHub::AppResourceMapping` {
  EksSourceName: String?

  LogicalStackName: String?

  MappingType: String

  PhysicalResourceId: `AWS::ResilienceHub::AppPhysicalResourceId`

  ResourceName: String?

  TerraformSourceName: String?
}

class `AWS::ResilienceHub::ResiliencyPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ResilienceHub::ResiliencyPolicyProperties`

  Type: "AWS::ResilienceHub::ResiliencyPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ResilienceHub::ResiliencyPolicyProperties` {
  DataLocationConstraint: String?

  Policy: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::ResilienceHub::ResiliencyPolicyFailurePolicy`>

  PolicyDescription: String?

  PolicyName: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Tier: String
}

class `AWS::ResilienceHub::ResiliencyPolicyFailurePolicy` {
  RpoInSecs: Number

  RtoInSecs: Number
}

class `AWS::ResourceExplorer2::DefaultViewAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ResourceExplorer2::DefaultViewAssociationProperties`

  Type: "AWS::ResourceExplorer2::DefaultViewAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ResourceExplorer2::DefaultViewAssociationProperties` {
  ViewArn: String
}

class `AWS::ResourceExplorer2::Index` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ResourceExplorer2::IndexProperties`

  Type: "AWS::ResourceExplorer2::Index"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ResourceExplorer2::IndexProperties` {
  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Type: String
}

class `AWS::ResourceExplorer2::View` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ResourceExplorer2::ViewProperties`

  Type: "AWS::ResourceExplorer2::View"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ResourceExplorer2::ViewProperties` {
  Filters: `AWS::ResourceExplorer2::ViewSearchFilter`?

  IncludedProperties: Listing<`AWS::WAFv2::WebACLSingleQueryArgument`>?

  Scope: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ViewName: String
}

class `AWS::ResourceExplorer2::ViewSearchFilter` {
  FilterString: String
}

class `AWS::ResourceGroups::Group` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ResourceGroups::GroupProperties`

  Type: "AWS::ResourceGroups::Group"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ResourceGroups::GroupProperties` {
  Configuration: Listing<`AWS::ResourceGroups::GroupConfigurationItem`>?

  Description: String?

  Name: String

  ResourceQuery: `AWS::ResourceGroups::GroupResourceQuery`?

  Resources: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::ResourceGroups::GroupConfigurationItem` {
  Parameters: Listing<`AWS::ResourceGroups::GroupConfigurationParameter`>?

  Type: String?
}

class `AWS::ResourceGroups::GroupQuery` {
  ResourceTypeFilters: Listing<String>?

  StackIdentifier: String?

  TagFilters: Listing<`AWS::SSM::PatchBaselinePatchFilter`>?
}

class `AWS::ResourceGroups::GroupResourceQuery` {
  Query: `AWS::ResourceGroups::GroupQuery`?

  Type: String?
}

class `AWS::SSM::PatchBaselinePatchFilter` {
  Key: String?

  Values: Listing<String>?
}

class `AWS::RoboMaker::Fleet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RoboMaker::FleetProperties`?

  Type: "AWS::RoboMaker::Fleet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RoboMaker::FleetProperties` {
  Name: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::RoboMaker::Robot` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RoboMaker::RobotProperties`

  Type: "AWS::RoboMaker::Robot"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RoboMaker::RobotProperties` {
  Architecture: String

  Fleet: String?

  GreengrassGroupId: String

  Name: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::RoboMaker::RobotApplication` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RoboMaker::RobotApplicationProperties`

  Type: "AWS::RoboMaker::RobotApplication"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RoboMaker::RobotApplicationProperties` {
  CurrentRevisionId: String?

  Environment: String?

  Name: String?

  RobotSoftwareSuite: `AWS::RoboMaker::SimulationApplicationSimulationSoftwareSuite`

  Sources: Listing<`AWS::RoboMaker::SimulationApplicationSourceConfig`>?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::RoboMaker::SimulationApplicationSourceConfig` {
  Architecture: String

  S3Bucket: String

  S3Key: String
}

class `AWS::RoboMaker::RobotApplicationVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RoboMaker::SimulationApplicationVersionProperties`

  Type: "AWS::RoboMaker::RobotApplicationVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RoboMaker::SimulationApplicationVersionProperties` {
  Application: String

  CurrentRevisionId: String?
}

class `AWS::RoboMaker::SimulationApplication` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RoboMaker::SimulationApplicationProperties`

  Type: "AWS::RoboMaker::SimulationApplication"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RoboMaker::SimulationApplicationProperties` {
  CurrentRevisionId: String?

  Environment: String?

  Name: String?

  RenderingEngine: `AWS::RoboMaker::SimulationApplicationRenderingEngine`?

  RobotSoftwareSuite: `AWS::RoboMaker::SimulationApplicationSimulationSoftwareSuite`

  SimulationSoftwareSuite: `AWS::RoboMaker::SimulationApplicationSimulationSoftwareSuite`

  Sources: Listing<`AWS::RoboMaker::SimulationApplicationSourceConfig`>?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::RoboMaker::SimulationApplicationRenderingEngine` {
  Name: String

  Version: String
}

class `AWS::RoboMaker::SimulationApplicationVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RoboMaker::SimulationApplicationVersionProperties`

  Type: "AWS::RoboMaker::SimulationApplicationVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RolesAnywhere::CRL` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RolesAnywhere::CRLProperties`

  Type: "AWS::RolesAnywhere::CRL"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RolesAnywhere::CRLProperties` {
  CrlData: String

  Enabled: Boolean?

  Name: String

  Tags: Listing<Tag>?

  TrustAnchorArn: String?
}

class `AWS::RolesAnywhere::Profile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RolesAnywhere::ProfileProperties`

  Type: "AWS::RolesAnywhere::Profile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RolesAnywhere::ProfileProperties` {
  DurationSeconds: Number?

  Enabled: Boolean?

  ManagedPolicyArns: Listing<String>?

  Name: String

  RequireInstanceProperties: Boolean?

  RoleArns: Listing<String>

  SessionPolicy: String?

  Tags: Listing<Tag>?
}

class `AWS::RolesAnywhere::TrustAnchor` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::RolesAnywhere::TrustAnchorProperties`

  Type: "AWS::RolesAnywhere::TrustAnchor"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::RolesAnywhere::TrustAnchorProperties` {
  Enabled: Boolean?

  Name: String

  NotificationSettings: Listing<`AWS::RolesAnywhere::TrustAnchorNotificationSetting`>?

  Source: `AWS::RolesAnywhere::TrustAnchorSource`

  Tags: Listing<Tag>?
}

class `AWS::RolesAnywhere::TrustAnchorNotificationSetting` {
  Channel: String?

  Enabled: Boolean

  Event: String

  Threshold: Number?
}

class `AWS::RolesAnywhere::TrustAnchorSource` {
  SourceData: `AWS::RolesAnywhere::TrustAnchorSourceData`?

  SourceType: String?
}

class `AWS::RolesAnywhere::TrustAnchorSourceData` {
  AcmPcaArn: String?

  X509CertificateData: String?
}

class `AWS::Route53::CidrCollection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53::CidrCollectionProperties`

  Type: "AWS::Route53::CidrCollection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53::CidrCollectionProperties` {
  Locations: Listing<`AWS::Route53::CidrCollectionLocation`>?

  Name: String
}

class `AWS::Route53::CidrCollectionLocation` {
  CidrList: Listing<String>

  LocationName: String
}

class `AWS::Route53::DNSSEC` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53::DNSSECProperties`

  Type: "AWS::Route53::DNSSEC"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53::DNSSECProperties` {
  HostedZoneId: String
}

class `AWS::Route53::HealthCheck` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53::HealthCheckProperties`

  Type: "AWS::Route53::HealthCheck"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53::HealthCheckProperties` {
  HealthCheckConfig: `AWS::Route53::HealthCheckHealthCheckConfig`

  HealthCheckTags: Listing<Tag>?
}

class `AWS::Route53::HealthCheckAlarmIdentifier` {
  Name: String

  Region: String
}

class `AWS::Route53::HealthCheckHealthCheckConfig` {
  AlarmIdentifier: `AWS::Route53::HealthCheckAlarmIdentifier`?

  ChildHealthChecks: Listing<String>?

  EnableSNI: Boolean?

  FailureThreshold: Number?

  FullyQualifiedDomainName: String?

  HealthThreshold: Number?

  IPAddress: String?

  InsufficientDataHealthStatus: String?

  Inverted: Boolean?

  MeasureLatency: Boolean?

  Port: Number?

  Regions: Listing<String>?

  RequestInterval: Number?

  ResourcePath: String?

  RoutingControlArn: String?

  SearchString: String?

  Type: String
}

class `AWS::Route53::HostedZone` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53::HostedZoneProperties`?

  Type: "AWS::Route53::HostedZone"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53::HostedZoneProperties` {
  HostedZoneConfig: `AWS::Route53::HostedZoneHostedZoneConfig`?

  HostedZoneTags: Listing<Tag>?

  Name: String?

  QueryLoggingConfig: `AWS::Route53::HostedZoneQueryLoggingConfig`?

  VPCs: Listing<`AWS::Route53::HostedZoneVPC`>?
}

class `AWS::Route53::HostedZoneHostedZoneConfig` {
  Comment: String?
}

class `AWS::Route53::HostedZoneQueryLoggingConfig` {
  CloudWatchLogsLogGroupArn: String
}

class `AWS::Route53::HostedZoneVPC` {
  VPCId: String

  VPCRegion: String
}

class `AWS::Route53::KeySigningKey` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53::KeySigningKeyProperties`

  Type: "AWS::Route53::KeySigningKey"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53::KeySigningKeyProperties` {
  HostedZoneId: String

  KeyManagementServiceArn: String

  Name: String

  Status: String
}

class `AWS::Route53::RecordSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53::RecordSetProperties`

  Type: "AWS::Route53::RecordSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53::RecordSetProperties` {
  AliasTarget: `AWS::Route53::RecordSetGroupAliasTarget`?

  CidrRoutingConfig: `AWS::Route53::RecordSetGroupCidrRoutingConfig`?

  Comment: String?

  Failover: String?

  GeoLocation: `AWS::Route53::RecordSetGroupGeoLocation`?

  HealthCheckId: String?

  HostedZoneId: String?

  HostedZoneName: String?

  MultiValueAnswer: Boolean?

  Name: String

  Region: String?

  ResourceRecords: Listing<String>?

  SetIdentifier: String?

  TTL: String?

  Type: String

  Weight: Number?
}

class `AWS::Route53::RecordSetGroupAliasTarget` {
  DNSName: String

  EvaluateTargetHealth: Boolean?

  HostedZoneId: String
}

class `AWS::Route53::RecordSetGroupCidrRoutingConfig` {
  CollectionId: String

  LocationName: String
}

class `AWS::Route53::RecordSetGroupGeoLocation` {
  ContinentCode: String?

  CountryCode: String?

  SubdivisionCode: String?
}

class `AWS::Route53::RecordSetGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53::RecordSetGroupProperties`?

  Type: "AWS::Route53::RecordSetGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53::RecordSetGroupProperties` {
  Comment: String?

  HostedZoneId: String?

  HostedZoneName: String?

  RecordSets: Listing<`AWS::Route53::RecordSetGroupRecordSet`>?
}

class `AWS::Route53::RecordSetGroupRecordSet` {
  AliasTarget: `AWS::Route53::RecordSetGroupAliasTarget`?

  CidrRoutingConfig: `AWS::Route53::RecordSetGroupCidrRoutingConfig`?

  Failover: String?

  GeoLocation: `AWS::Route53::RecordSetGroupGeoLocation`?

  HealthCheckId: String?

  HostedZoneId: String?

  HostedZoneName: String?

  MultiValueAnswer: Boolean?

  Name: String

  Region: String?

  ResourceRecords: Listing<String>?

  SetIdentifier: String?

  TTL: String?

  Type: String

  Weight: Number?
}

class `AWS::Route53RecoveryControl::Cluster` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53RecoveryControl::ClusterProperties`

  Type: "AWS::Route53RecoveryControl::Cluster"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53RecoveryControl::ClusterProperties` {
  Name: String

  Tags: Listing<Tag>?
}

class `AWS::Route53RecoveryControl::ClusterClusterEndpoint` {
  Endpoint: String?

  Region: String?
}

class `AWS::Route53RecoveryControl::ControlPanel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53RecoveryControl::ControlPanelProperties`

  Type: "AWS::Route53RecoveryControl::ControlPanel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53RecoveryControl::ControlPanelProperties` {
  ClusterArn: String?

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::Route53RecoveryControl::RoutingControl` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53RecoveryControl::RoutingControlProperties`

  Type: "AWS::Route53RecoveryControl::RoutingControl"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53RecoveryControl::RoutingControlProperties` {
  ClusterArn: String?

  ControlPanelArn: String?

  Name: String
}

class `AWS::Route53RecoveryControl::SafetyRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53RecoveryControl::SafetyRuleProperties`

  Type: "AWS::Route53RecoveryControl::SafetyRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53RecoveryControl::SafetyRuleProperties` {
  AssertionRule: `AWS::Route53RecoveryControl::SafetyRuleAssertionRule`?

  ControlPanelArn: String

  GatingRule: `AWS::Route53RecoveryControl::SafetyRuleGatingRule`?

  Name: String

  RuleConfig: `AWS::Route53RecoveryControl::SafetyRuleRuleConfig`

  Tags: Listing<Tag>?
}

class `AWS::Route53RecoveryControl::SafetyRuleAssertionRule` {
  AssertedControls: Listing<String>

  WaitPeriodMs: Number
}

class `AWS::Route53RecoveryControl::SafetyRuleGatingRule` {
  GatingControls: Listing<String>

  TargetControls: Listing<String>

  WaitPeriodMs: Number
}

class `AWS::Route53RecoveryControl::SafetyRuleRuleConfig` {
  Inverted: Boolean

  Threshold: Number

  Type: String
}

class `AWS::Route53RecoveryReadiness::Cell` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53RecoveryReadiness::CellProperties`?

  Type: "AWS::Route53RecoveryReadiness::Cell"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53RecoveryReadiness::CellProperties` {
  CellName: String?

  Cells: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::Route53RecoveryReadiness::ReadinessCheck` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53RecoveryReadiness::ReadinessCheckProperties`?

  Type: "AWS::Route53RecoveryReadiness::ReadinessCheck"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53RecoveryReadiness::ReadinessCheckProperties` {
  ReadinessCheckName: String?

  ResourceSetName: String?

  Tags: Listing<Tag>?
}

class `AWS::Route53RecoveryReadiness::RecoveryGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53RecoveryReadiness::RecoveryGroupProperties`?

  Type: "AWS::Route53RecoveryReadiness::RecoveryGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53RecoveryReadiness::RecoveryGroupProperties` {
  Cells: Listing<String>?

  RecoveryGroupName: String?

  Tags: Listing<Tag>?
}

class `AWS::Route53RecoveryReadiness::ResourceSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53RecoveryReadiness::ResourceSetProperties`

  Type: "AWS::Route53RecoveryReadiness::ResourceSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53RecoveryReadiness::ResourceSetProperties` {
  ResourceSetName: String?

  ResourceSetType: String

  Resources: Listing<`AWS::Route53RecoveryReadiness::ResourceSetResource`>

  Tags: Listing<Tag>?
}

class `AWS::Route53RecoveryReadiness::ResourceSetDNSTargetResource` {
  DomainName: String?

  HostedZoneArn: String?

  RecordSetId: String?

  RecordType: String?

  TargetResource: `AWS::Route53RecoveryReadiness::ResourceSetTargetResource`?
}

class `AWS::Route53RecoveryReadiness::ResourceSetR53ResourceRecord` {
  DomainName: String?

  RecordSetId: String?
}

class `AWS::Route53RecoveryReadiness::ResourceSetResource` {
  ComponentId: String?

  DnsTargetResource: `AWS::Route53RecoveryReadiness::ResourceSetDNSTargetResource`?

  ReadinessScopes: Listing<String>?

  ResourceArn: String?
}

class `AWS::Route53RecoveryReadiness::ResourceSetTargetResource` {
  NLBResource: `AWS::Scheduler::ScheduleDeadLetterConfig`?

  R53Resource: `AWS::Route53RecoveryReadiness::ResourceSetR53ResourceRecord`?
}

class `AWS::Route53Resolver::FirewallDomainList` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53Resolver::FirewallDomainListProperties`?

  Type: "AWS::Route53Resolver::FirewallDomainList"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53Resolver::FirewallDomainListProperties` {
  DomainFileUrl: String?

  Domains: Listing<String>?

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::Route53Resolver::FirewallRuleGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53Resolver::FirewallRuleGroupProperties`?

  Type: "AWS::Route53Resolver::FirewallRuleGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53Resolver::FirewallRuleGroupProperties` {
  FirewallRules: Listing<`AWS::Route53Resolver::FirewallRuleGroupFirewallRule`>?

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::Route53Resolver::FirewallRuleGroupFirewallRule` {
  Action: String

  BlockOverrideDnsType: String?

  BlockOverrideDomain: String?

  BlockOverrideTtl: Number?

  BlockResponse: String?

  FirewallDomainListId: String

  Priority: Number
}

class `AWS::Route53Resolver::FirewallRuleGroupAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53Resolver::FirewallRuleGroupAssociationProperties`

  Type: "AWS::Route53Resolver::FirewallRuleGroupAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53Resolver::FirewallRuleGroupAssociationProperties` {
  FirewallRuleGroupId: String

  MutationProtection: String?

  Name: String?

  Priority: Number

  Tags: Listing<Tag>?

  VpcId: String
}

class `AWS::Route53Resolver::OutpostResolver` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53Resolver::OutpostResolverProperties`

  Type: "AWS::Route53Resolver::OutpostResolver"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53Resolver::OutpostResolverProperties` {
  InstanceCount: Number?

  Name: String

  OutpostArn: String

  PreferredInstanceType: String

  Tags: Listing<Tag>?
}

class `AWS::Route53Resolver::ResolverConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53Resolver::ResolverConfigProperties`

  Type: "AWS::Route53Resolver::ResolverConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53Resolver::ResolverConfigProperties` {
  AutodefinedReverseFlag: String

  ResourceId: String
}

class `AWS::Route53Resolver::ResolverDNSSECConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53Resolver::ResolverDNSSECConfigProperties`?

  Type: "AWS::Route53Resolver::ResolverDNSSECConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53Resolver::ResolverDNSSECConfigProperties` {
  ResourceId: String?
}

class `AWS::Route53Resolver::ResolverEndpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53Resolver::ResolverEndpointProperties`

  Type: "AWS::Route53Resolver::ResolverEndpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53Resolver::ResolverEndpointProperties` {
  Direction: String

  IpAddresses: Listing<`AWS::Route53Resolver::ResolverEndpointIpAddressRequest`>

  Name: String?

  OutpostArn: String?

  PreferredInstanceType: String?

  Protocols: Listing<String>?

  ResolverEndpointType: String?

  SecurityGroupIds: Listing<String>

  Tags: Listing<Tag>?
}

class `AWS::Route53Resolver::ResolverEndpointIpAddressRequest` {
  Ip: String?

  Ipv6: String?

  SubnetId: String
}

class `AWS::Route53Resolver::ResolverQueryLoggingConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53Resolver::ResolverQueryLoggingConfigProperties`?

  Type: "AWS::Route53Resolver::ResolverQueryLoggingConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53Resolver::ResolverQueryLoggingConfigProperties` {
  DestinationArn: String?

  Name: String?
}

class `AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53Resolver::ResolverQueryLoggingConfigAssociationProperties`?

  Type: "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53Resolver::ResolverQueryLoggingConfigAssociationProperties` {
  ResolverQueryLogConfigId: String?

  ResourceId: String?
}

class `AWS::Route53Resolver::ResolverRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53Resolver::ResolverRuleProperties`

  Type: "AWS::Route53Resolver::ResolverRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53Resolver::ResolverRuleProperties` {
  DomainName: String

  Name: String?

  ResolverEndpointId: String?

  RuleType: String

  Tags: Listing<Tag>?

  TargetIps: Listing<`AWS::Route53Resolver::ResolverRuleTargetAddress`>?
}

class `AWS::Route53Resolver::ResolverRuleTargetAddress` {
  Ip: String?

  Ipv6: String?

  Port: String?

  Protocol: String?
}

class `AWS::Route53Resolver::ResolverRuleAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Route53Resolver::ResolverRuleAssociationProperties`

  Type: "AWS::Route53Resolver::ResolverRuleAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Route53Resolver::ResolverRuleAssociationProperties` {
  Name: String?

  ResolverRuleId: String

  VPCId: String
}

class `AWS::S3::AccessGrant` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3::AccessGrantProperties`

  Type: "AWS::S3::AccessGrant"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3::AccessGrantProperties` {
  AccessGrantsLocationConfiguration: `AWS::S3::AccessGrantAccessGrantsLocationConfiguration`?

  AccessGrantsLocationId: String

  ApplicationArn: String?

  Grantee: `AWS::S3::AccessGrantGrantee`

  Permission: String

  S3PrefixType: String?

  Tags: Listing<Tag>?
}

class `AWS::S3::AccessGrantAccessGrantsLocationConfiguration` {
  S3SubPrefix: String
}

class `AWS::S3::AccessGrantGrantee` {
  GranteeIdentifier: String

  GranteeType: String
}

class `AWS::S3::AccessGrantsInstance` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3::AccessGrantsInstanceProperties`?

  Type: "AWS::S3::AccessGrantsInstance"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3::AccessGrantsInstanceProperties` {
  IdentityCenterArn: String?

  Tags: Listing<Tag>?
}

class `AWS::S3::AccessGrantsLocation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3::AccessGrantsLocationProperties`?

  Type: "AWS::S3::AccessGrantsLocation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3::AccessGrantsLocationProperties` {
  IamRoleArn: String?

  LocationScope: String?

  Tags: Listing<Tag>?
}

class `AWS::S3::AccessPoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3::AccessPointProperties`

  Type: "AWS::S3::AccessPoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3::AccessPointProperties` {
  Bucket: String

  BucketAccountId: String?

  Name: String?

  Policy: Dynamic?

  PublicAccessBlockConfiguration: `AWS::S3ObjectLambda::AccessPointPublicAccessBlockConfiguration`?

  VpcConfiguration: `AWS::S3Outposts::AccessPointVpcConfiguration`?
}

class `AWS::S3ObjectLambda::AccessPointPublicAccessBlockConfiguration` {
  BlockPublicAcls: Boolean?

  BlockPublicPolicy: Boolean?

  IgnorePublicAcls: Boolean?

  RestrictPublicBuckets: Boolean?
}

class `AWS::S3Outposts::AccessPointVpcConfiguration` {
  VpcId: String?
}

class `AWS::S3::Bucket` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3::BucketProperties`?

  Type: "AWS::S3::Bucket"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3::BucketProperties` {
  AccelerateConfiguration: `AWS::S3::BucketAccelerateConfiguration`?

  AccessControl: String?

  AnalyticsConfigurations: Listing<`AWS::S3::BucketAnalyticsConfiguration`>?

  BucketEncryption: `AWS::S3::BucketBucketEncryption`?

  BucketName: String?

  CorsConfiguration: `AWS::S3::BucketCorsConfiguration`?

  IntelligentTieringConfigurations: Listing<`AWS::S3::BucketIntelligentTieringConfiguration`>?

  InventoryConfigurations: Listing<`AWS::S3::BucketInventoryConfiguration`>?

  LifecycleConfiguration: `AWS::S3::BucketLifecycleConfiguration`?

  LoggingConfiguration: `AWS::S3::BucketLoggingConfiguration`?

  MetricsConfigurations: Listing<`AWS::S3::BucketMetricsConfiguration`>?

  NotificationConfiguration: `AWS::S3::BucketNotificationConfiguration`?

  ObjectLockConfiguration: `AWS::S3::BucketObjectLockConfiguration`?

  ObjectLockEnabled: Boolean?

  OwnershipControls: `AWS::S3::BucketOwnershipControls`?

  PublicAccessBlockConfiguration: `AWS::S3ObjectLambda::AccessPointPublicAccessBlockConfiguration`?

  ReplicationConfiguration: `AWS::S3::BucketReplicationConfiguration`?

  Tags: Listing<Tag>?

  VersioningConfiguration: `AWS::SecurityHub::AutomationRuleWorkflowUpdate`?

  WebsiteConfiguration: `AWS::S3::BucketWebsiteConfiguration`?
}

class `AWS::S3Outposts::BucketAbortIncompleteMultipartUpload` {
  DaysAfterInitiation: Number
}

class `AWS::S3::BucketAccelerateConfiguration` {
  AccelerationStatus: String
}

class `AWS::S3::BucketAccessControlTranslation` {
  Owner: String
}

class `AWS::S3::BucketAnalyticsConfiguration` {
  Id: String

  Prefix: String?

  StorageClassAnalysis: `AWS::S3::BucketStorageClassAnalysis`

  TagFilters: Listing<Tag>?
}

class `AWS::S3::BucketBucketEncryption` {
  ServerSideEncryptionConfiguration: Listing<`AWS::S3::BucketServerSideEncryptionRule`>
}

class `AWS::S3::BucketCorsConfiguration` {
  CorsRules: Listing<`AWS::S3::BucketCorsRule`>
}

class `AWS::S3::BucketCorsRule` {
  AllowedHeaders: Listing<String>?

  AllowedMethods: Listing<String>

  AllowedOrigins: Listing<String>

  ExposedHeaders: Listing<String>?

  Id: String?

  MaxAge: Number?
}

class `AWS::S3::BucketDataExport` {
  Destination: `AWS::S3::BucketDestination`

  OutputSchemaVersion: String
}

class `AWS::S3::BucketDefaultRetention` {
  Days: Number?

  Mode: String?

  Years: Number?
}

class `AWS::S3::BucketDestination` {
  BucketAccountId: String?

  BucketArn: String

  Format: String

  Prefix: String?
}

class `AWS::S3::BucketEncryptionConfiguration` {
  ReplicaKmsKeyID: String
}

class `AWS::S3::BucketEventBridgeConfiguration` {
  EventBridgeEnabled: Boolean
}

class `AWS::S3::BucketIntelligentTieringConfiguration` {
  Id: String

  Prefix: String?

  Status: String

  TagFilters: Listing<Tag>?

  Tierings: Listing<`AWS::S3::BucketTiering`>
}

class `AWS::S3::BucketInventoryConfiguration` {
  Destination: `AWS::S3::BucketDestination`

  Enabled: Boolean

  Id: String

  IncludedObjectVersions: String

  OptionalFields: Listing<String>?

  Prefix: String?

  ScheduleFrequency: String
}

class `AWS::S3::BucketLambdaConfiguration` {
  Event: String

  Filter: `AWS::S3::BucketNotificationFilter`?

  Function: String
}

class `AWS::S3::BucketLifecycleConfiguration` {
  Rules: Listing<`AWS::S3::BucketRule`>
}

class `AWS::S3::BucketLoggingConfiguration` {
  DestinationBucketName: String?

  LogFilePrefix: String?

  TargetObjectKeyFormat: `AWS::S3::BucketTargetObjectKeyFormat`?
}

class `AWS::S3::BucketMetrics` {
  EventThreshold: `AWS::S3::BucketReplicationTimeValue`?

  Status: String
}

class `AWS::S3::BucketMetricsConfiguration` {
  AccessPointArn: String?

  Id: String

  Prefix: String?

  TagFilters: Listing<Tag>?
}

class `AWS::S3::BucketNoncurrentVersionExpiration` {
  NewerNoncurrentVersions: Number?

  NoncurrentDays: Number
}

class `AWS::S3::BucketNoncurrentVersionTransition` {
  NewerNoncurrentVersions: Number?

  StorageClass: String

  TransitionInDays: Number
}

class `AWS::S3::BucketNotificationConfiguration` {
  EventBridgeConfiguration: `AWS::S3::BucketEventBridgeConfiguration`?

  LambdaConfigurations: Listing<`AWS::S3::BucketLambdaConfiguration`>?

  QueueConfigurations: Listing<`AWS::S3::BucketQueueConfiguration`>?

  TopicConfigurations: Listing<`AWS::S3::BucketTopicConfiguration`>?
}

class `AWS::S3::BucketNotificationFilter` {
  S3Key: `AWS::S3::BucketS3KeyFilter`
}

class `AWS::S3::BucketObjectLockConfiguration` {
  ObjectLockEnabled: String?

  Rule: `AWS::S3::BucketObjectLockRule`?
}

class `AWS::S3::BucketObjectLockRule` {
  DefaultRetention: `AWS::S3::BucketDefaultRetention`?
}

class `AWS::S3::BucketOwnershipControls` {
  Rules: Listing<`AWS::S3::BucketOwnershipControlsRule`>
}

class `AWS::S3::BucketOwnershipControlsRule` {
  ObjectOwnership: String?
}

class `AWS::S3::BucketPartitionedPrefix` {
  PartitionDateSource: String?
}

class `AWS::S3::BucketQueueConfiguration` {
  Event: String

  Filter: `AWS::S3::BucketNotificationFilter`?

  Queue: String
}

class `AWS::S3::BucketRedirectAllRequestsTo` {
  HostName: String

  Protocol: String?
}

class `AWS::S3::BucketRedirectRule` {
  HostName: String?

  HttpRedirectCode: String?

  Protocol: String?

  ReplaceKeyPrefixWith: String?

  ReplaceKeyWith: String?
}

class `AWS::S3::BucketReplicationConfiguration` {
  Role: String

  Rules: Listing<`AWS::S3::BucketReplicationRule`>
}

class `AWS::S3::BucketReplicationDestination` {
  AccessControlTranslation: `AWS::S3::BucketAccessControlTranslation`?

  Account: String?

  Bucket: String

  EncryptionConfiguration: `AWS::S3::BucketEncryptionConfiguration`?

  Metrics: `AWS::S3::BucketMetrics`?

  ReplicationTime: `AWS::S3::BucketReplicationTime`?

  StorageClass: String?
}

class `AWS::S3::BucketReplicationRule` {
  DeleteMarkerReplication: `AWS::S3::BucketDeleteMarkerReplication`?

  Destination: `AWS::S3::BucketReplicationDestination`

  Filter: `AWS::S3::BucketReplicationRuleFilter`?

  Id: String?

  Prefix: String?

  Priority: Number?

  SourceSelectionCriteria: `AWS::S3::BucketSourceSelectionCriteria`?

  Status: String
}

class `AWS::S3::BucketReplicationRuleAndOperator` {
  Prefix: String?

  TagFilters: Listing<Tag>?
}

class `AWS::S3::BucketReplicationRuleFilter` {
  And: `AWS::S3::BucketReplicationRuleAndOperator`?

  Prefix: String?

  TagFilter: Tag?
}

class `AWS::S3::BucketReplicationTime` {
  Status: String

  Time: `AWS::S3::BucketReplicationTimeValue`
}

class `AWS::S3::BucketReplicationTimeValue` {
  Minutes: Number
}

class `AWS::S3::BucketRoutingRule` {
  RedirectRule: `AWS::S3::BucketRedirectRule`

  RoutingRuleCondition: `AWS::S3::BucketRoutingRuleCondition`?
}

class `AWS::S3::BucketRoutingRuleCondition` {
  HttpErrorCodeReturnedEquals: String?

  KeyPrefixEquals: String?
}

class `AWS::S3::BucketRule` {
  AbortIncompleteMultipartUpload: `AWS::S3Outposts::BucketAbortIncompleteMultipartUpload`?

  ExpirationDate: String?

  ExpirationInDays: Number?

  ExpiredObjectDeleteMarker: Boolean?

  Id: String?

  NoncurrentVersionExpiration: `AWS::S3::BucketNoncurrentVersionExpiration`?

  NoncurrentVersionExpirationInDays: Number?

  NoncurrentVersionTransition: `AWS::S3::BucketNoncurrentVersionTransition`?

  NoncurrentVersionTransitions: Listing<`AWS::S3::BucketNoncurrentVersionTransition`>?

  ObjectSizeGreaterThan: String?

  ObjectSizeLessThan: String?

  Prefix: String?

  Status: String

  TagFilters: Listing<Tag>?

  Transition: `AWS::S3::BucketTransition`?

  Transitions: Listing<`AWS::S3::BucketTransition`>?
}

class `AWS::S3::BucketS3KeyFilter` {
  Rules: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>
}

class `AWS::S3::BucketServerSideEncryptionByDefault` {
  KMSMasterKeyID: String?

  SSEAlgorithm: String
}

class `AWS::S3::BucketServerSideEncryptionRule` {
  BucketKeyEnabled: Boolean?

  ServerSideEncryptionByDefault: `AWS::S3::BucketServerSideEncryptionByDefault`?
}

class `AWS::S3::BucketSourceSelectionCriteria` {
  ReplicaModifications: `AWS::SecurityHub::AutomationRuleWorkflowUpdate`?

  SseKmsEncryptedObjects: `AWS::SecurityHub::AutomationRuleWorkflowUpdate`?
}

class `AWS::S3::BucketStorageClassAnalysis` {
  DataExport: `AWS::S3::BucketDataExport`?
}

class `AWS::S3::BucketTargetObjectKeyFormat` {
  PartitionedPrefix: `AWS::S3::BucketPartitionedPrefix`?

  SimplePrefix: Dynamic?
}

class `AWS::S3::BucketTiering` {
  AccessTier: String

  Days: Number
}

class `AWS::S3::BucketTopicConfiguration` {
  Event: String

  Filter: `AWS::S3::BucketNotificationFilter`?

  Topic: String
}

class `AWS::S3::BucketTransition` {
  StorageClass: String

  TransitionDate: String?

  TransitionInDays: Number?
}

class `AWS::S3::BucketWebsiteConfiguration` {
  ErrorDocument: String?

  IndexDocument: String?

  RedirectAllRequestsTo: `AWS::S3::BucketRedirectAllRequestsTo`?

  RoutingRules: Listing<`AWS::S3::BucketRoutingRule`>?
}

class `AWS::S3::BucketPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3Outposts::BucketPolicyProperties`

  Type: "AWS::S3::BucketPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3Outposts::BucketPolicyProperties` {
  Bucket: String

  PolicyDocument: Dynamic
}

class `AWS::S3::MultiRegionAccessPoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3::MultiRegionAccessPointProperties`

  Type: "AWS::S3::MultiRegionAccessPoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3::MultiRegionAccessPointProperties` {
  Name: String?

  PublicAccessBlockConfiguration: `AWS::S3ObjectLambda::AccessPointPublicAccessBlockConfiguration`?

  Regions: Listing<`AWS::S3::MultiRegionAccessPointRegion`>
}

class `AWS::S3::MultiRegionAccessPointRegion` {
  Bucket: String

  BucketAccountId: String?
}

class `AWS::S3::MultiRegionAccessPointPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3::MultiRegionAccessPointPolicyProperties`

  Type: "AWS::S3::MultiRegionAccessPointPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3::MultiRegionAccessPointPolicyProperties` {
  MrapName: String

  Policy: Dynamic
}

class `AWS::S3::MultiRegionAccessPointPolicyPolicyStatus` {
  IsPublic: String
}

class `AWS::S3::StorageLens` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3::StorageLensProperties`

  Type: "AWS::S3::StorageLens"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3::StorageLensProperties` {
  StorageLensConfiguration: `AWS::S3::StorageLensStorageLensConfiguration`

  Tags: Listing<Tag>?
}

class `AWS::S3::StorageLensAccountLevel` {
  ActivityMetrics: `AWS::S3::StorageLensDetailedStatusCodesMetrics`?

  AdvancedCostOptimizationMetrics: `AWS::S3::StorageLensDetailedStatusCodesMetrics`?

  AdvancedDataProtectionMetrics: `AWS::S3::StorageLensDetailedStatusCodesMetrics`?

  BucketLevel: `AWS::S3::StorageLensBucketLevel`

  DetailedStatusCodesMetrics: `AWS::S3::StorageLensDetailedStatusCodesMetrics`?

  StorageLensGroupLevel: `AWS::S3::StorageLensStorageLensGroupLevel`?
}

class `AWS::S3::StorageLensDetailedStatusCodesMetrics` {
  IsEnabled: Boolean?
}

class `AWS::S3::StorageLensBucketLevel` {
  ActivityMetrics: `AWS::S3::StorageLensDetailedStatusCodesMetrics`?

  AdvancedCostOptimizationMetrics: `AWS::S3::StorageLensDetailedStatusCodesMetrics`?

  AdvancedDataProtectionMetrics: `AWS::S3::StorageLensDetailedStatusCodesMetrics`?

  DetailedStatusCodesMetrics: `AWS::S3::StorageLensDetailedStatusCodesMetrics`?

  PrefixLevel: `AWS::S3::StorageLensPrefixLevel`?
}

class `AWS::S3::StorageLensBucketsAndRegions` {
  Buckets: Listing<String>?

  Regions: Listing<String>?
}

class `AWS::S3::StorageLensCloudWatchMetrics` {
  IsEnabled: Boolean
}

class `AWS::S3::StorageLensDataExport` {
  CloudWatchMetrics: `AWS::S3::StorageLensCloudWatchMetrics`?

  S3BucketDestination: `AWS::S3::StorageLensS3BucketDestination`?
}

class `AWS::S3::StorageLensEncryption` {
  SSEKMS: `AWS::S3::StorageLensSSEKMS`?

  SSES3: Dynamic?
}

class `AWS::S3::StorageLensPrefixLevel` {
  StorageMetrics: `AWS::S3::StorageLensPrefixLevelStorageMetrics`
}

class `AWS::S3::StorageLensPrefixLevelStorageMetrics` {
  IsEnabled: Boolean?

  SelectionCriteria: `AWS::S3::StorageLensSelectionCriteria`?
}

class `AWS::S3::StorageLensS3BucketDestination` {
  AccountId: String

  Arn: String

  Encryption: `AWS::S3::StorageLensEncryption`?

  Format: String

  OutputSchemaVersion: String

  Prefix: String?
}

class `AWS::S3::StorageLensSSEKMS` {
  KeyId: String
}

class `AWS::S3::StorageLensSelectionCriteria` {
  Delimiter: String?

  MaxDepth: Number?

  MinStorageBytesPercentage: Number?
}

class `AWS::S3::StorageLensStorageLensConfiguration` {
  AccountLevel: `AWS::S3::StorageLensAccountLevel`

  AwsOrg: `AWS::S3::StorageLensAwsOrg`?

  DataExport: `AWS::S3::StorageLensDataExport`?

  Exclude: `AWS::S3::StorageLensBucketsAndRegions`?

  Id: String

  Include: `AWS::S3::StorageLensBucketsAndRegions`?

  IsEnabled: Boolean

  StorageLensArn: String?
}

class `AWS::S3::StorageLensStorageLensGroupLevel` {
  StorageLensGroupSelectionCriteria: `AWS::S3::StorageLensStorageLensGroupSelectionCriteria`?
}

class `AWS::S3::StorageLensStorageLensGroupSelectionCriteria` {
  Exclude: Listing<String>?

  Include: Listing<String>?
}

class `AWS::S3::StorageLensGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3::StorageLensGroupProperties`

  Type: "AWS::S3::StorageLensGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3::StorageLensGroupProperties` {
  Filter: `AWS::S3::StorageLensGroupFilter`

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::S3::StorageLensGroupOr` {
  MatchAnyPrefix: Listing<String>?

  MatchAnySuffix: Listing<String>?

  MatchAnyTag: Listing<Tag>?

  MatchObjectAge: `AWS::S3::StorageLensGroupMatchObjectAge`?

  MatchObjectSize: `AWS::S3::StorageLensGroupMatchObjectSize`?
}

class `AWS::S3::StorageLensGroupFilter` {
  And: `AWS::S3::StorageLensGroupOr`?

  MatchAnyPrefix: Listing<String>?

  MatchAnySuffix: Listing<String>?

  MatchAnyTag: Listing<Tag>?

  MatchObjectAge: `AWS::S3::StorageLensGroupMatchObjectAge`?

  MatchObjectSize: `AWS::S3::StorageLensGroupMatchObjectSize`?

  Or: `AWS::S3::StorageLensGroupOr`?
}

class `AWS::S3::StorageLensGroupMatchObjectAge` {
  DaysGreaterThan: Number?

  DaysLessThan: Number?
}

class `AWS::S3::StorageLensGroupMatchObjectSize` {
  BytesGreaterThan: Number?

  BytesLessThan: Number?
}

class `AWS::S3Express::BucketPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3Outposts::BucketPolicyProperties`

  Type: "AWS::S3Express::BucketPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3Express::DirectoryBucket` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3Express::DirectoryBucketProperties`

  Type: "AWS::S3Express::DirectoryBucket"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3Express::DirectoryBucketProperties` {
  BucketName: String?

  DataRedundancy: String

  LocationName: String
}

class `AWS::S3ObjectLambda::AccessPoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3ObjectLambda::AccessPointProperties`

  Type: "AWS::S3ObjectLambda::AccessPoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3ObjectLambda::AccessPointProperties` {
  Name: String?

  ObjectLambdaConfiguration: `AWS::S3ObjectLambda::AccessPointObjectLambdaConfiguration`
}

class `AWS::S3ObjectLambda::AccessPointAlias` {
  Status: String?

  Value: String
}

class `AWS::S3ObjectLambda::AccessPointAwsLambda` {
  FunctionArn: String

  FunctionPayload: String?
}

class `AWS::S3ObjectLambda::AccessPointContentTransformation` {
  AwsLambda: `AWS::S3ObjectLambda::AccessPointAwsLambda`
}

class `AWS::S3ObjectLambda::AccessPointObjectLambdaConfiguration` {
  AllowedFeatures: Listing<String>?

  CloudWatchMetricsEnabled: Boolean?

  SupportingAccessPoint: String

  TransformationConfigurations: Listing<`AWS::S3ObjectLambda::AccessPointTransformationConfiguration`>
}

class `AWS::S3ObjectLambda::AccessPointTransformationConfiguration` {
  Actions: Listing<String>

  ContentTransformation: `AWS::S3ObjectLambda::AccessPointContentTransformation`
}

class `AWS::S3ObjectLambda::AccessPointPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3ObjectLambda::AccessPointPolicyProperties`

  Type: "AWS::S3ObjectLambda::AccessPointPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3ObjectLambda::AccessPointPolicyProperties` {
  ObjectLambdaAccessPoint: String

  PolicyDocument: Dynamic
}

class `AWS::S3Outposts::AccessPoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3Outposts::AccessPointProperties`

  Type: "AWS::S3Outposts::AccessPoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3Outposts::AccessPointProperties` {
  Bucket: String

  Name: String

  Policy: Dynamic?

  VpcConfiguration: `AWS::S3Outposts::AccessPointVpcConfiguration`
}

class `AWS::S3Outposts::Bucket` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3Outposts::BucketProperties`

  Type: "AWS::S3Outposts::Bucket"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3Outposts::BucketProperties` {
  BucketName: String

  LifecycleConfiguration: `AWS::S3Outposts::BucketLifecycleConfiguration`?

  OutpostId: String

  Tags: Listing<Tag>?
}

class `AWS::S3Outposts::BucketFilter` {
  AndOperator: `AWS::S3Outposts::BucketFilterAndOperator`?

  Prefix: String?

  Tag: Tag?
}

class `AWS::S3Outposts::BucketFilterAndOperator` {
  Prefix: String?

  Tags: Listing<Tag>
}

class `AWS::S3Outposts::BucketLifecycleConfiguration` {
  Rules: Listing<`AWS::S3Outposts::BucketRule`>
}

class `AWS::S3Outposts::BucketRule` {
  AbortIncompleteMultipartUpload: `AWS::S3Outposts::BucketAbortIncompleteMultipartUpload`?

  ExpirationDate: String?

  ExpirationInDays: Number?

  Filter: `AWS::S3Outposts::BucketFilter`?

  Id: String?

  Status: String
}

class `AWS::S3Outposts::BucketPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3Outposts::BucketPolicyProperties`

  Type: "AWS::S3Outposts::BucketPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3Outposts::Endpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::S3Outposts::EndpointProperties`

  Type: "AWS::S3Outposts::Endpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::S3Outposts::EndpointProperties` {
  AccessType: String?

  CustomerOwnedIpv4Pool: String?

  FailedReason: `AWS::S3Outposts::EndpointFailedReason`?

  OutpostId: String

  SecurityGroupId: String

  SubnetId: String
}

class `AWS::S3Outposts::EndpointFailedReason` {
  ErrorCode: String?

  Message: String?
}

class `AWS::S3Outposts::EndpointNetworkInterface` {
  NetworkInterfaceId: String
}

class `AWS::SDB::Domain` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SDB::DomainProperties`?

  Type: "AWS::SDB::Domain"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SDB::DomainProperties` {
  Description: String?
}

class `AWS::SES::ConfigurationSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SES::ConfigurationSetProperties`?

  Type: "AWS::SES::ConfigurationSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SES::ConfigurationSetProperties` {
  DeliveryOptions: `AWS::SES::ConfigurationSetDeliveryOptions`?

  Name: String?

  ReputationOptions: `AWS::SES::ConfigurationSetReputationOptions`?

  SendingOptions: `AWS::SES::ConfigurationSetSendingOptions`?

  SuppressionOptions: `AWS::SES::ConfigurationSetSuppressionOptions`?

  TrackingOptions: `AWS::SES::ConfigurationSetTrackingOptions`?

  VdmOptions: `AWS::SES::ConfigurationSetVdmOptions`?
}

class `AWS::SES::ConfigurationSetDashboardOptions` {
  EngagementMetrics: String
}

class `AWS::SES::ConfigurationSetDeliveryOptions` {
  SendingPoolName: String?

  TlsPolicy: String?
}

class `AWS::SES::ConfigurationSetGuardianOptions` {
  OptimizedSharedDelivery: String
}

class `AWS::SES::ConfigurationSetSuppressionOptions` {
  SuppressedReasons: Listing<String>?
}

class `AWS::SES::ConfigurationSetVdmOptions` {
  DashboardOptions: `AWS::SES::ConfigurationSetDashboardOptions`?

  GuardianOptions: `AWS::SES::ConfigurationSetGuardianOptions`?
}

class `AWS::SES::ConfigurationSetEventDestination` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SES::ConfigurationSetEventDestinationProperties`

  Type: "AWS::SES::ConfigurationSetEventDestination"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SES::ConfigurationSetEventDestinationProperties` {
  ConfigurationSetName: String

  EventDestination: `AWS::SES::ConfigurationSetEventDestinationEventDestination`
}

class `AWS::SES::ConfigurationSetEventDestinationCloudWatchDestination` {
  DimensionConfigurations: Listing<`AWS::SES::ConfigurationSetEventDestinationDimensionConfiguration`>?
}

class `AWS::SES::ConfigurationSetEventDestinationEventDestination` {
  CloudWatchDestination: `AWS::SES::ConfigurationSetEventDestinationCloudWatchDestination`?

  Enabled: Boolean?

  KinesisFirehoseDestination: `AWS::SES::ConfigurationSetEventDestinationKinesisFirehoseDestination`?

  MatchingEventTypes: Listing<String>

  Name: String?

  SnsDestination: `AWS::SES::ConfigurationSetEventDestinationSnsDestination`?
}

class `AWS::SES::ConfigurationSetEventDestinationKinesisFirehoseDestination` {
  DeliveryStreamARN: String

  IAMRoleARN: String
}

class `AWS::SES::ConfigurationSetEventDestinationSnsDestination` {
  TopicARN: String
}

class `AWS::SES::ContactList` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SES::ContactListProperties`?

  Type: "AWS::SES::ContactList"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SES::ContactListProperties` {
  ContactListName: String?

  Description: String?

  Tags: Listing<Tag>?

  Topics: Listing<`AWS::SES::ContactListTopic`>?
}

class `AWS::SES::ContactListTopic` {
  DefaultSubscriptionStatus: String

  Description: String?

  DisplayName: String

  TopicName: String
}

class `AWS::SES::DedicatedIpPool` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SES::DedicatedIpPoolProperties`?

  Type: "AWS::SES::DedicatedIpPool"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SES::DedicatedIpPoolProperties` {
  PoolName: String?

  ScalingMode: String?
}

class `AWS::SES::EmailIdentity` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SES::EmailIdentityProperties`

  Type: "AWS::SES::EmailIdentity"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SES::EmailIdentityProperties` {
  ConfigurationSetAttributes: `AWS::SES::EmailIdentityConfigurationSetAttributes`?

  DkimAttributes: `AWS::SES::EmailIdentityDkimAttributes`?

  DkimSigningAttributes: `AWS::SES::EmailIdentityDkimSigningAttributes`?

  EmailIdentity: String

  FeedbackAttributes: `AWS::SES::EmailIdentityFeedbackAttributes`?

  MailFromAttributes: `AWS::SES::EmailIdentityMailFromAttributes`?
}

class `AWS::SES::EmailIdentityConfigurationSetAttributes` {
  ConfigurationSetName: String?
}

class `AWS::SES::EmailIdentityDkimAttributes` {
  SigningEnabled: Boolean?
}

class `AWS::SES::EmailIdentityDkimSigningAttributes` {
  DomainSigningPrivateKey: String?

  DomainSigningSelector: String?

  NextSigningKeyLength: String?
}

class `AWS::SES::EmailIdentityFeedbackAttributes` {
  EmailForwardingEnabled: Boolean?
}

class `AWS::SES::ReceiptFilter` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SES::ReceiptFilterProperties`

  Type: "AWS::SES::ReceiptFilter"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SES::ReceiptFilterProperties` {
  Filter: `AWS::SES::ReceiptFilterFilter`
}

class `AWS::SES::ReceiptFilterFilter` {
  IpFilter: `AWS::SES::ReceiptFilterIpFilter`

  Name: String?
}

class `AWS::SES::ReceiptFilterIpFilter` {
  Cidr: String

  Policy: String
}

class `AWS::SES::ReceiptRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SES::ReceiptRuleProperties`

  Type: "AWS::SES::ReceiptRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SES::ReceiptRuleProperties` {
  After: String?

  Rule: `AWS::SES::ReceiptRuleRule`

  RuleSetName: String
}

class `AWS::SES::ReceiptRuleAction` {
  AddHeaderAction: `AWS::SES::ReceiptRuleAddHeaderAction`?

  BounceAction: `AWS::SES::ReceiptRuleBounceAction`?

  LambdaAction: `AWS::SES::ReceiptRuleLambdaAction`?

  S3Action: `AWS::SES::ReceiptRuleS3Action`?

  SNSAction: `AWS::SES::ReceiptRuleSNSAction`?

  StopAction: `AWS::SES::ReceiptRuleStopAction`?

  WorkmailAction: `AWS::SES::ReceiptRuleWorkmailAction`?
}

class `AWS::SES::ReceiptRuleBounceAction` {
  Message: String

  Sender: String

  SmtpReplyCode: String

  StatusCode: String?

  TopicArn: String?
}

class `AWS::SES::ReceiptRuleLambdaAction` {
  FunctionArn: String

  InvocationType: String?

  TopicArn: String?
}

class `AWS::SES::ReceiptRuleRule` {
  Actions: Listing<`AWS::SES::ReceiptRuleAction`>?

  Enabled: Boolean?

  Name: String?

  Recipients: Listing<String>?

  ScanEnabled: Boolean?

  TlsPolicy: String?
}

class `AWS::SES::ReceiptRuleS3Action` {
  BucketName: String

  KmsKeyArn: String?

  ObjectKeyPrefix: String?

  TopicArn: String?
}

class `AWS::SES::ReceiptRuleSNSAction` {
  Encoding: String?

  TopicArn: String?
}

class `AWS::SES::ReceiptRuleStopAction` {
  Scope: String

  TopicArn: String?
}

class `AWS::SES::ReceiptRuleWorkmailAction` {
  OrganizationArn: String

  TopicArn: String?
}

class `AWS::SES::ReceiptRuleSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SES::ReceiptRuleSetProperties`?

  Type: "AWS::SES::ReceiptRuleSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SES::ReceiptRuleSetProperties` {
  RuleSetName: String?
}

class `AWS::SES::Template` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SES::TemplateProperties`?

  Type: "AWS::SES::Template"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SES::TemplateProperties` {
  Template: `AWS::SES::TemplateTemplate`?
}

class `AWS::SES::TemplateTemplate` {
  HtmlPart: String?

  SubjectPart: String

  TemplateName: String?

  TextPart: String?
}

class `AWS::SES::VdmAttributes` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SES::VdmAttributesProperties`?

  Type: "AWS::SES::VdmAttributes"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SES::VdmAttributesProperties` {
  DashboardAttributes: `AWS::SES::VdmAttributesDashboardAttributes`?

  GuardianAttributes: `AWS::SES::VdmAttributesGuardianAttributes`?
}

class `AWS::SES::VdmAttributesDashboardAttributes` {
  EngagementMetrics: String?
}

class `AWS::SES::VdmAttributesGuardianAttributes` {
  OptimizedSharedDelivery: String?
}

class `AWS::SNS::Subscription` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SNS::SubscriptionProperties`

  Type: "AWS::SNS::Subscription"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SNS::SubscriptionProperties` {
  DeliveryPolicy: Dynamic?

  Endpoint: String?

  FilterPolicy: Dynamic?

  FilterPolicyScope: String?

  Protocol: String

  RawMessageDelivery: Boolean?

  RedrivePolicy: Dynamic?

  Region: String?

  ReplayPolicy: Dynamic?

  SubscriptionRoleArn: String?

  TopicArn: String
}

class `AWS::SNS::Topic` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SNS::TopicProperties`?

  Type: "AWS::SNS::Topic"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SNS::TopicProperties` {
  ArchivePolicy: Dynamic?

  ContentBasedDeduplication: Boolean?

  DataProtectionPolicy: Dynamic?

  DeliveryStatusLogging: Listing<`AWS::SNS::TopicLoggingConfig`>?

  DisplayName: String?

  FifoTopic: Boolean?

  KmsMasterKeyId: String?

  SignatureVersion: String?

  Subscription: Listing<`AWS::SNS::TopicSubscription`>?

  Tags: Listing<Tag>?

  TopicName: String?

  TracingConfig: String?
}

class `AWS::SNS::TopicLoggingConfig` {
  FailureFeedbackRoleArn: String?

  Protocol: String

  SuccessFeedbackRoleArn: String?

  SuccessFeedbackSampleRate: String?
}

class `AWS::SNS::TopicSubscription` {
  Endpoint: String

  Protocol: String
}

class `AWS::SNS::TopicInlinePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SNS::TopicInlinePolicyProperties`

  Type: "AWS::SNS::TopicInlinePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SNS::TopicInlinePolicyProperties` {
  PolicyDocument: Dynamic

  TopicArn: String
}

class `AWS::SNS::TopicPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SNS::TopicPolicyProperties`

  Type: "AWS::SNS::TopicPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SNS::TopicPolicyProperties` {
  PolicyDocument: Dynamic

  Topics: Listing<String>
}

class `AWS::SQS::Queue` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SQS::QueueProperties`?

  Type: "AWS::SQS::Queue"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SQS::QueueProperties` {
  ContentBasedDeduplication: Boolean?

  DeduplicationScope: String?

  DelaySeconds: Number?

  FifoQueue: Boolean?

  FifoThroughputLimit: String?

  KmsDataKeyReusePeriodSeconds: Number?

  KmsMasterKeyId: String?

  MaximumMessageSize: Number?

  MessageRetentionPeriod: Number?

  QueueName: String?

  ReceiveMessageWaitTimeSeconds: Number?

  RedriveAllowPolicy: Dynamic?

  RedrivePolicy: Dynamic?

  SqsManagedSseEnabled: Boolean?

  Tags: Listing<Tag>?

  VisibilityTimeout: Number?
}

class `AWS::SQS::QueueInlinePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SQS::QueueInlinePolicyProperties`

  Type: "AWS::SQS::QueueInlinePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SQS::QueueInlinePolicyProperties` {
  PolicyDocument: Dynamic

  Queue: String
}

class `AWS::SQS::QueuePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SQS::QueuePolicyProperties`

  Type: "AWS::SQS::QueuePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SQS::QueuePolicyProperties` {
  PolicyDocument: Dynamic

  Queues: Listing<String>
}

class `AWS::SSM::Association` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSM::AssociationProperties`

  Type: "AWS::SSM::Association"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSM::AssociationProperties` {
  ApplyOnlyAtCronInterval: Boolean?

  AssociationName: String?

  AutomationTargetParameterName: String?

  CalendarNames: Listing<String>?

  ComplianceSeverity: String?

  DocumentVersion: String?

  InstanceId: String?

  MaxConcurrency: String?

  MaxErrors: String?

  Name: String

  OutputLocation: `AWS::SSM::AssociationInstanceAssociationOutputLocation`?

  Parameters: Dynamic?

  ScheduleExpression: String?

  ScheduleOffset: Number?

  SyncCompliance: String?

  Targets: Listing<`AWS::SSMIncidents::ResponsePlanSsmParameter`>?

  WaitForSuccessTimeoutSeconds: Number?
}

class `AWS::SSM::AssociationInstanceAssociationOutputLocation` {
  S3Location: `AWS::SSM::AssociationS3OutputLocation`?
}

class `AWS::SSM::AssociationS3OutputLocation` {
  OutputS3BucketName: String?

  OutputS3KeyPrefix: String?

  OutputS3Region: String?
}

class `AWS::SSM::Document` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSM::DocumentProperties`

  Type: "AWS::SSM::Document"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSM::DocumentProperties` {
  Attachments: Listing<`AWS::SSM::DocumentAttachmentsSource`>?

  Content: Dynamic

  DocumentFormat: String?

  DocumentType: String?

  Name: String?

  Requires: Listing<`AWS::SSM::DocumentDocumentRequires`>?

  Tags: Listing<Tag>?

  TargetType: String?

  UpdateMethod: String?

  VersionName: String?
}

class `AWS::SSM::DocumentAttachmentsSource` {
  Key: String?

  Name: String?

  Values: Listing<String>?
}

class `AWS::SSM::MaintenanceWindow` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSM::MaintenanceWindowProperties`

  Type: "AWS::SSM::MaintenanceWindow"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSM::MaintenanceWindowProperties` {
  AllowUnassociatedTargets: Boolean

  Cutoff: Number

  Description: String?

  Duration: Number

  EndDate: String?

  Name: String

  Schedule: String

  ScheduleOffset: Number?

  ScheduleTimezone: String?

  StartDate: String?

  Tags: Listing<Tag>?
}

class `AWS::SSM::MaintenanceWindowTarget` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSM::MaintenanceWindowTargetProperties`

  Type: "AWS::SSM::MaintenanceWindowTarget"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSM::MaintenanceWindowTargetProperties` {
  Description: String?

  Name: String?

  OwnerInformation: String?

  ResourceType: String

  Targets: Listing<`AWS::SSMIncidents::ResponsePlanSsmParameter`>

  WindowId: String
}

class `AWS::SSM::MaintenanceWindowTask` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSM::MaintenanceWindowTaskProperties`

  Type: "AWS::SSM::MaintenanceWindowTask"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSM::MaintenanceWindowTaskProperties` {
  CutoffBehavior: String?

  Description: String?

  LoggingInfo: `AWS::SSM::MaintenanceWindowTaskLoggingInfo`?

  MaxConcurrency: String?

  MaxErrors: String?

  Name: String?

  Priority: Number

  ServiceRoleArn: String?

  Targets: Listing<`AWS::SSMIncidents::ResponsePlanSsmParameter`>?

  TaskArn: String

  TaskInvocationParameters: `AWS::SSM::MaintenanceWindowTaskTaskInvocationParameters`?

  TaskParameters: Dynamic?

  TaskType: String

  WindowId: String
}

class `AWS::SSM::MaintenanceWindowTaskCloudWatchOutputConfig` {
  CloudWatchLogGroupName: String?

  CloudWatchOutputEnabled: Boolean?
}

class `AWS::SSM::MaintenanceWindowTaskLoggingInfo` {
  Region: String

  S3Bucket: String

  S3Prefix: String?
}

class `AWS::SSM::MaintenanceWindowTaskMaintenanceWindowAutomationParameters` {
  DocumentVersion: String?

  Parameters: Dynamic?
}

class `AWS::SSM::MaintenanceWindowTaskMaintenanceWindowLambdaParameters` {
  ClientContext: String?

  Payload: String?

  Qualifier: String?
}

class `AWS::SSM::MaintenanceWindowTaskMaintenanceWindowRunCommandParameters` {
  CloudWatchOutputConfig: `AWS::SSM::MaintenanceWindowTaskCloudWatchOutputConfig`?

  Comment: String?

  DocumentHash: String?

  DocumentHashType: String?

  DocumentVersion: String?

  NotificationConfig: `AWS::SSM::MaintenanceWindowTaskNotificationConfig`?

  OutputS3BucketName: String?

  OutputS3KeyPrefix: String?

  Parameters: Dynamic?

  ServiceRoleArn: String?

  TimeoutSeconds: Number?
}

class `AWS::SSM::MaintenanceWindowTaskMaintenanceWindowStepFunctionsParameters` {
  Input: String?

  Name: String?
}

class `AWS::SSM::MaintenanceWindowTaskNotificationConfig` {
  NotificationArn: String

  NotificationEvents: Listing<String>?

  NotificationType: String?
}

class `AWS::SSM::MaintenanceWindowTaskTaskInvocationParameters` {
  MaintenanceWindowAutomationParameters: `AWS::SSM::MaintenanceWindowTaskMaintenanceWindowAutomationParameters`?

  MaintenanceWindowLambdaParameters: `AWS::SSM::MaintenanceWindowTaskMaintenanceWindowLambdaParameters`?

  MaintenanceWindowRunCommandParameters: `AWS::SSM::MaintenanceWindowTaskMaintenanceWindowRunCommandParameters`?

  MaintenanceWindowStepFunctionsParameters: `AWS::SSM::MaintenanceWindowTaskMaintenanceWindowStepFunctionsParameters`?
}

class `AWS::SSM::Parameter` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSM::ParameterProperties`

  Type: "AWS::SSM::Parameter"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSM::ParameterProperties` {
  AllowedPattern: String?

  DataType: String?

  Description: String?

  Name: String?

  Policies: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Tier: String?

  Type: String

  Value: String
}

class `AWS::SSM::PatchBaseline` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSM::PatchBaselineProperties`

  Type: "AWS::SSM::PatchBaseline"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSM::PatchBaselineProperties` {
  ApprovalRules: `AWS::SSM::PatchBaselineRuleGroup`?

  ApprovedPatches: Listing<String>?

  ApprovedPatchesComplianceLevel: String?

  ApprovedPatchesEnableNonSecurity: Boolean?

  DefaultBaseline: Boolean?

  Description: String?

  GlobalFilters: `AWS::SSM::PatchBaselinePatchFilterGroup`?

  Name: String

  OperatingSystem: String?

  PatchGroups: Listing<String>?

  RejectedPatches: Listing<String>?

  RejectedPatchesAction: String?

  Sources: Listing<`AWS::SSM::PatchBaselinePatchSource`>?

  Tags: Listing<Tag>?
}

class `AWS::SSM::PatchBaselinePatchFilterGroup` {
  PatchFilters: Listing<`AWS::SSM::PatchBaselinePatchFilter`>?
}

class `AWS::SSM::PatchBaselinePatchSource` {
  Configuration: String?

  Name: String?

  Products: Listing<String>?
}

class `AWS::SSM::PatchBaselineRule` {
  ApproveAfterDays: Number?

  ApproveUntilDate: String?

  ComplianceLevel: String?

  EnableNonSecurity: Boolean?

  PatchFilterGroup: `AWS::SSM::PatchBaselinePatchFilterGroup`?
}

class `AWS::SSM::PatchBaselineRuleGroup` {
  PatchRules: Listing<`AWS::SSM::PatchBaselineRule`>?
}

class `AWS::SSM::ResourceDataSync` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSM::ResourceDataSyncProperties`

  Type: "AWS::SSM::ResourceDataSync"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSM::ResourceDataSyncProperties` {
  BucketName: String?

  BucketPrefix: String?

  BucketRegion: String?

  KMSKeyArn: String?

  S3Destination: `AWS::SSM::ResourceDataSyncS3Destination`?

  SyncFormat: String?

  SyncName: String

  SyncSource: `AWS::SSM::ResourceDataSyncSyncSource`?

  SyncType: String?
}

class `AWS::SSM::ResourceDataSyncAwsOrganizationsSource` {
  OrganizationSourceType: String

  OrganizationalUnits: Listing<String>?
}

class `AWS::SSM::ResourceDataSyncS3Destination` {
  BucketName: String

  BucketPrefix: String?

  BucketRegion: String

  KMSKeyArn: String?

  SyncFormat: String
}

class `AWS::SSM::ResourceDataSyncSyncSource` {
  AwsOrganizationsSource: `AWS::SSM::ResourceDataSyncAwsOrganizationsSource`?

  IncludeFutureRegions: Boolean?

  SourceRegions: Listing<String>

  SourceType: String
}

class `AWS::SSM::ResourcePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VpcLattice::ResourcePolicyProperties`

  Type: "AWS::SSM::ResourcePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSMContacts::Contact` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSMContacts::ContactProperties`

  Type: "AWS::SSMContacts::Contact"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSMContacts::ContactProperties` {
  Alias: String

  DisplayName: String

  Plan: Listing<`AWS::SSMContacts::ContactStage`>?

  Type: String
}

class `AWS::SSMContacts::PlanChannelTargetInfo` {
  ChannelId: String

  RetryIntervalInMinutes: Number
}

class `AWS::SSMContacts::PlanContactTargetInfo` {
  ContactId: String

  IsEssential: Boolean
}

class `AWS::SSMContacts::ContactStage` {
  DurationInMinutes: Number?

  RotationIds: Listing<String>?

  Targets: Listing<`AWS::SSMContacts::ContactTargets`>?
}

class `AWS::SSMContacts::ContactTargets` {
  ChannelTargetInfo: `AWS::SSMContacts::PlanChannelTargetInfo`?

  ContactTargetInfo: `AWS::SSMContacts::PlanContactTargetInfo`?
}

class `AWS::SSMContacts::ContactChannel` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSMContacts::ContactChannelProperties`

  Type: "AWS::SSMContacts::ContactChannel"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSMContacts::ContactChannelProperties` {
  ChannelAddress: String

  ChannelName: String

  ChannelType: String

  ContactId: String

  DeferActivation: Boolean?
}

class `AWS::SSMContacts::Plan` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSMContacts::PlanProperties`

  Type: "AWS::SSMContacts::Plan"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSMContacts::PlanProperties` {
  ContactId: String

  RotationIds: Listing<String>?

  Stages: Listing<`AWS::SSMContacts::PlanStage`>?
}

class `AWS::SSMContacts::PlanStage` {
  DurationInMinutes: Number

  Targets: Listing<`AWS::SSMContacts::PlanTargets`>?
}

class `AWS::SSMContacts::PlanTargets` {
  ChannelTargetInfo: `AWS::SSMContacts::PlanChannelTargetInfo`?

  ContactTargetInfo: `AWS::SSMContacts::PlanContactTargetInfo`?
}

class `AWS::SSMContacts::Rotation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSMContacts::RotationProperties`

  Type: "AWS::SSMContacts::Rotation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSMContacts::RotationProperties` {
  ContactIds: Listing<String>

  Name: String

  Recurrence: `AWS::SSMContacts::RotationRecurrenceSettings`

  StartTime: String

  Tags: Listing<Tag>?

  TimeZoneId: String
}

class `AWS::SSMContacts::RotationMonthlySetting` {
  DayOfMonth: Number

  HandOffTime: String
}

class `AWS::SSMContacts::RotationRecurrenceSettings` {
  DailySettings: Listing<String>?

  MonthlySettings: Listing<`AWS::SSMContacts::RotationMonthlySetting`>?

  NumberOfOnCalls: Number

  RecurrenceMultiplier: Number

  ShiftCoverages: Listing<`AWS::SSMContacts::RotationShiftCoverage`>?

  WeeklySettings: Listing<`AWS::SSMContacts::RotationWeeklySetting`>?
}

class `AWS::SSMContacts::RotationShiftCoverage` {
  CoverageTimes: Listing<`AWS::SSMContacts::RotationCoverageTime`>

  DayOfWeek: String
}

class `AWS::SSMContacts::RotationWeeklySetting` {
  DayOfWeek: String

  HandOffTime: String
}

class `AWS::SSMIncidents::ReplicationSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSMIncidents::ReplicationSetProperties`

  Type: "AWS::SSMIncidents::ReplicationSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSMIncidents::ReplicationSetProperties` {
  DeletionProtected: Boolean?

  Regions: Listing<`AWS::SSMIncidents::ReplicationSetReplicationRegion`>

  Tags: Listing<Tag>?
}

class `AWS::SSMIncidents::ReplicationSetRegionConfiguration` {
  SseKmsKeyId: String
}

class `AWS::SSMIncidents::ReplicationSetReplicationRegion` {
  RegionConfiguration: `AWS::SSMIncidents::ReplicationSetRegionConfiguration`?

  RegionName: String?
}

class `AWS::SSMIncidents::ResponsePlan` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSMIncidents::ResponsePlanProperties`

  Type: "AWS::SSMIncidents::ResponsePlan"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSMIncidents::ResponsePlanProperties` {
  Actions: Listing<`AWS::SSMIncidents::ResponsePlanAction`>?

  ChatChannel: `AWS::SSMIncidents::ResponsePlanChatChannel`?

  DisplayName: String?

  Engagements: Listing<String>?

  IncidentTemplate: `AWS::SSMIncidents::ResponsePlanIncidentTemplate`

  Integrations: Listing<`AWS::SSMIncidents::ResponsePlanIntegration`>?

  Name: String

  Tags: Listing<Tag>?
}

class `AWS::SSMIncidents::ResponsePlanAction` {
  SsmAutomation: `AWS::SSMIncidents::ResponsePlanSsmAutomation`?
}

class `AWS::SSMIncidents::ResponsePlanChatChannel` {
  ChatbotSns: Listing<String>?
}

class `AWS::SSMIncidents::ResponsePlanDynamicSsmParameter` {
  Key: String

  Value: `AWS::SSMIncidents::ResponsePlanDynamicSsmParameterValue`
}

class `AWS::SSMIncidents::ResponsePlanDynamicSsmParameterValue` {
  Variable: String?
}

class `AWS::SSMIncidents::ResponsePlanIncidentTemplate` {
  DedupeString: String?

  Impact: Number

  IncidentTags: Listing<Tag>?

  NotificationTargets: Listing<`AWS::SSMIncidents::ResponsePlanNotificationTargetItem`>?

  Summary: String?

  Title: String
}

class `AWS::SSMIncidents::ResponsePlanIntegration` {
  PagerDutyConfiguration: `AWS::SSMIncidents::ResponsePlanPagerDutyConfiguration`
}

class `AWS::SSMIncidents::ResponsePlanNotificationTargetItem` {
  SnsTopicArn: String?
}

class `AWS::SSMIncidents::ResponsePlanPagerDutyConfiguration` {
  Name: String

  PagerDutyIncidentConfiguration: `AWS::SSMIncidents::ResponsePlanPagerDutyIncidentConfiguration`

  SecretId: String
}

class `AWS::SSMIncidents::ResponsePlanPagerDutyIncidentConfiguration` {
  ServiceId: String
}

class `AWS::SSMIncidents::ResponsePlanSsmAutomation` {
  DocumentName: String

  DocumentVersion: String?

  DynamicParameters: Listing<`AWS::SSMIncidents::ResponsePlanDynamicSsmParameter`>?

  Parameters: Listing<`AWS::SSMIncidents::ResponsePlanSsmParameter`>?

  RoleArn: String

  TargetAccount: String?
}

class `AWS::SSO::Assignment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSO::AssignmentProperties`

  Type: "AWS::SSO::Assignment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSO::AssignmentProperties` {
  InstanceArn: String

  PermissionSetArn: String

  PrincipalId: String

  PrincipalType: String

  TargetId: String

  TargetType: String
}

class `AWS::SSO::InstanceAccessControlAttributeConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSO::InstanceAccessControlAttributeConfigurationProperties`

  Type: "AWS::SSO::InstanceAccessControlAttributeConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSO::InstanceAccessControlAttributeConfigurationProperties` {
  AccessControlAttributes: Listing<`AWS::SSO::InstanceAccessControlAttributeConfigurationAccessControlAttribute`>?

  InstanceArn: String
}

class `AWS::SSO::InstanceAccessControlAttributeConfigurationAccessControlAttribute` {
  Key: String

  Value: `AWS::SSO::InstanceAccessControlAttributeConfigurationAccessControlAttributeValue`
}

class `AWS::SSO::InstanceAccessControlAttributeConfigurationAccessControlAttributeValue` {
  Source: Listing<String>
}

class `AWS::SSO::PermissionSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SSO::PermissionSetProperties`

  Type: "AWS::SSO::PermissionSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SSO::PermissionSetProperties` {
  CustomerManagedPolicyReferences: Listing<`AWS::SSO::PermissionSetCustomerManagedPolicyReference`>?

  Description: String?

  InlinePolicy: Dynamic?

  InstanceArn: String

  ManagedPolicies: Listing<String>?

  Name: String

  PermissionsBoundary: `AWS::SSO::PermissionSetPermissionsBoundary`?

  RelayStateType: String?

  SessionDuration: String?

  Tags: Listing<Tag>?
}

class `AWS::SSO::PermissionSetCustomerManagedPolicyReference` {
  Name: String

  Path: String?
}

class `AWS::SSO::PermissionSetPermissionsBoundary` {
  CustomerManagedPolicyReference: `AWS::SSO::PermissionSetCustomerManagedPolicyReference`?

  ManagedPolicyArn: String?
}

class `AWS::SageMaker::App` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::AppProperties`

  Type: "AWS::SageMaker::App"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::AppProperties` {
  AppName: String

  AppType: String

  DomainId: String

  ResourceSpec: `AWS::SageMaker::UserProfileResourceSpec`?

  Tags: Listing<Tag>?

  UserProfileName: String
}

class `AWS::SageMaker::UserProfileResourceSpec` {
  InstanceType: String?

  SageMakerImageArn: String?

  SageMakerImageVersionArn: String?
}

class `AWS::SageMaker::AppImageConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::AppImageConfigProperties`

  Type: "AWS::SageMaker::AppImageConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::AppImageConfigProperties` {
  AppImageConfigName: String

  KernelGatewayImageConfig: `AWS::SageMaker::AppImageConfigKernelGatewayImageConfig`?

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::AppImageConfigFileSystemConfig` {
  DefaultGid: Number?

  DefaultUid: Number?

  MountPath: String?
}

class `AWS::SageMaker::AppImageConfigKernelGatewayImageConfig` {
  FileSystemConfig: `AWS::SageMaker::AppImageConfigFileSystemConfig`?

  KernelSpecs: Listing<`AWS::SageMaker::AppImageConfigKernelSpec`>
}

class `AWS::SageMaker::AppImageConfigKernelSpec` {
  DisplayName: String?

  Name: String
}

class `AWS::SageMaker::CodeRepository` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::CodeRepositoryProperties`

  Type: "AWS::SageMaker::CodeRepository"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::CodeRepositoryProperties` {
  CodeRepositoryName: String?

  GitConfig: `AWS::SageMaker::CodeRepositoryGitConfig`

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::CodeRepositoryGitConfig` {
  Branch: String?

  RepositoryUrl: String

  SecretArn: String?
}

class `AWS::SageMaker::DataQualityJobDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::DataQualityJobDefinitionProperties`

  Type: "AWS::SageMaker::DataQualityJobDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::DataQualityJobDefinitionProperties` {
  DataQualityAppSpecification: `AWS::SageMaker::DataQualityJobDefinitionDataQualityAppSpecification`

  DataQualityBaselineConfig: `AWS::SageMaker::DataQualityJobDefinitionDataQualityBaselineConfig`?

  DataQualityJobInput: `AWS::SageMaker::DataQualityJobDefinitionDataQualityJobInput`

  DataQualityJobOutputConfig: `AWS::SageMaker::DataQualityJobDefinitionMonitoringOutputConfig`

  EndpointName: String?

  JobDefinitionName: String?

  JobResources: `AWS::SageMaker::DataQualityJobDefinitionMonitoringResources`

  NetworkConfig: `AWS::SageMaker::DataQualityJobDefinitionNetworkConfig`?

  RoleArn: String

  StoppingCondition: `AWS::SageMaker::MonitoringScheduleStoppingCondition`?

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::DataQualityJobDefinitionBatchTransformInput` {
  DataCapturedDestinationS3Uri: String

  DatasetFormat: `AWS::SageMaker::DataQualityJobDefinitionDatasetFormat`

  ExcludeFeaturesAttribute: String?

  LocalPath: String

  S3DataDistributionType: String?

  S3InputMode: String?
}

class `AWS::SageMaker::MonitoringScheduleClusterConfig` {
  InstanceCount: Number

  InstanceType: String

  VolumeKmsKeyId: String?

  VolumeSizeInGB: Number
}

class `AWS::SageMaker::MonitoringScheduleStatisticsResource` {
  S3Uri: String?
}

class `AWS::SageMaker::MonitoringScheduleCsv` {
  Header: Boolean?
}

class `AWS::SageMaker::DataQualityJobDefinitionDataQualityAppSpecification` {
  ContainerArguments: Listing<String>?

  ContainerEntrypoint: Listing<String>?

  Environment: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ImageUri: String

  PostAnalyticsProcessorSourceUri: String?

  RecordPreprocessorSourceUri: String?
}

class `AWS::SageMaker::DataQualityJobDefinitionDataQualityBaselineConfig` {
  BaseliningJobName: String?

  ConstraintsResource: `AWS::SageMaker::MonitoringScheduleStatisticsResource`?

  StatisticsResource: `AWS::SageMaker::MonitoringScheduleStatisticsResource`?
}

class `AWS::SageMaker::DataQualityJobDefinitionDataQualityJobInput` {
  BatchTransformInput: `AWS::SageMaker::DataQualityJobDefinitionBatchTransformInput`?

  EndpointInput: `AWS::SageMaker::MonitoringScheduleEndpointInput`?
}

class `AWS::SageMaker::DataQualityJobDefinitionDatasetFormat` {
  Csv: `AWS::SageMaker::MonitoringScheduleCsv`?

  Json: `AWS::SageMaker::MonitoringScheduleJson`?

  Parquet: Boolean?
}

class `AWS::SageMaker::MonitoringScheduleEndpointInput` {
  EndpointName: String

  ExcludeFeaturesAttribute: String?

  LocalPath: String

  S3DataDistributionType: String?

  S3InputMode: String?
}

class `AWS::SageMaker::MonitoringScheduleJson` {
  Line: Boolean?
}

class `AWS::SageMaker::DataQualityJobDefinitionMonitoringOutput` {
  S3Output: `AWS::SageMaker::MonitoringScheduleS3Output`
}

class `AWS::SageMaker::DataQualityJobDefinitionMonitoringOutputConfig` {
  KmsKeyId: String?

  MonitoringOutputs: Listing<`AWS::SageMaker::DataQualityJobDefinitionMonitoringOutput`>
}

class `AWS::SageMaker::DataQualityJobDefinitionMonitoringResources` {
  ClusterConfig: `AWS::SageMaker::MonitoringScheduleClusterConfig`
}

class `AWS::SageMaker::DataQualityJobDefinitionNetworkConfig` {
  EnableInterContainerTrafficEncryption: Boolean?

  EnableNetworkIsolation: Boolean?

  VpcConfig: `AWS::SageMaker::MonitoringScheduleVpcConfig`?
}

class `AWS::SageMaker::MonitoringScheduleS3Output` {
  LocalPath: String

  S3UploadMode: String?

  S3Uri: String
}

class `AWS::SageMaker::MonitoringScheduleStoppingCondition` {
  MaxRuntimeInSeconds: Number
}

class `AWS::SageMaker::Device` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::DeviceProperties`

  Type: "AWS::SageMaker::Device"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::DeviceProperties` {
  Device: `AWS::SageMaker::DeviceDevice`?

  DeviceFleetName: String

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::DeviceDevice` {
  Description: String?

  DeviceName: String

  IotThingName: String?
}

class `AWS::SageMaker::DeviceFleet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::DeviceFleetProperties`

  Type: "AWS::SageMaker::DeviceFleet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::DeviceFleetProperties` {
  Description: String?

  DeviceFleetName: String

  OutputConfig: `AWS::SageMaker::DeviceFleetEdgeOutputConfig`

  RoleArn: String

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::DeviceFleetEdgeOutputConfig` {
  KmsKeyId: String?

  S3OutputLocation: String
}

class `AWS::SageMaker::Domain` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::DomainProperties`

  Type: "AWS::SageMaker::Domain"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::DomainProperties` {
  AppNetworkAccessType: String?

  AppSecurityGroupManagement: String?

  AuthMode: String

  DefaultSpaceSettings: `AWS::SageMaker::DomainDefaultSpaceSettings`?

  DefaultUserSettings: `AWS::SageMaker::DomainUserSettings`

  DomainName: String

  DomainSettings: `AWS::SageMaker::DomainDomainSettings`?

  KmsKeyId: String?

  SubnetIds: Listing<String>

  Tags: Listing<Tag>?

  VpcId: String
}

class `AWS::SageMaker::DomainCodeEditorAppSettings` {
  DefaultResourceSpec: `AWS::SageMaker::DomainResourceSpec`?

  LifecycleConfigArns: Listing<String>?
}

class `AWS::SageMaker::UserProfileCodeRepository` {
  RepositoryUrl: String
}

class `AWS::SageMaker::DomainCustomFileSystemConfig` {
  EFSFileSystemConfig: `AWS::SageMaker::UserProfileEFSFileSystemConfig`?
}

class `AWS::SageMaker::UserProfileCustomImage` {
  AppImageConfigName: String

  ImageName: String

  ImageVersionNumber: Number?
}

class `AWS::SageMaker::UserProfileCustomPosixUserConfig` {
  Gid: Number

  Uid: Number
}

class `AWS::SageMaker::UserProfileDefaultEbsStorageSettings` {
  DefaultEbsVolumeSizeInGb: Number

  MaximumEbsVolumeSizeInGb: Number
}

class `AWS::SageMaker::DomainDefaultSpaceSettings` {
  ExecutionRole: String

  JupyterServerAppSettings: `AWS::SageMaker::DomainJupyterServerAppSettings`?

  KernelGatewayAppSettings: `AWS::SageMaker::DomainRSessionAppSettings`?

  SecurityGroups: Listing<String>?
}

class `AWS::SageMaker::DomainDefaultSpaceStorageSettings` {
  DefaultEbsStorageSettings: `AWS::SageMaker::UserProfileDefaultEbsStorageSettings`?
}

class `AWS::SageMaker::DomainDomainSettings` {
  RStudioServerProDomainSettings: `AWS::SageMaker::DomainRStudioServerProDomainSettings`?

  SecurityGroupIds: Listing<String>?
}

class `AWS::SageMaker::UserProfileEFSFileSystemConfig` {
  FileSystemId: String

  FileSystemPath: String?
}

class `AWS::SageMaker::DomainJupyterLabAppSettings` {
  CodeRepositories: Listing<`AWS::SageMaker::UserProfileCodeRepository`>?

  CustomImages: Listing<`AWS::SageMaker::UserProfileCustomImage`>?

  DefaultResourceSpec: `AWS::SageMaker::DomainResourceSpec`?

  LifecycleConfigArns: Listing<String>?
}

class `AWS::SageMaker::DomainJupyterServerAppSettings` {
  DefaultResourceSpec: `AWS::SageMaker::DomainResourceSpec`?
}

class `AWS::SageMaker::DomainRSessionAppSettings` {
  CustomImages: Listing<`AWS::SageMaker::UserProfileCustomImage`>?

  DefaultResourceSpec: `AWS::SageMaker::DomainResourceSpec`?
}

class `AWS::SageMaker::UserProfileRStudioServerProAppSettings` {
  AccessStatus: String?

  UserGroup: String?
}

class `AWS::SageMaker::DomainRStudioServerProDomainSettings` {
  DefaultResourceSpec: `AWS::SageMaker::DomainResourceSpec`?

  DomainExecutionRoleArn: String

  RStudioConnectUrl: String?

  RStudioPackageManagerUrl: String?
}

class `AWS::SageMaker::DomainResourceSpec` {
  InstanceType: String?

  LifecycleConfigArn: String?

  SageMakerImageArn: String?

  SageMakerImageVersionArn: String?
}

class `AWS::SageMaker::UserProfileSharingSettings` {
  NotebookOutputOption: String?

  S3KmsKeyId: String?

  S3OutputPath: String?
}

class `AWS::SageMaker::DomainUserSettings` {
  CodeEditorAppSettings: `AWS::SageMaker::DomainCodeEditorAppSettings`?

  CustomFileSystemConfigs: Listing<`AWS::SageMaker::DomainCustomFileSystemConfig`>?

  CustomPosixUserConfig: `AWS::SageMaker::UserProfileCustomPosixUserConfig`?

  DefaultLandingUri: String?

  ExecutionRole: String

  JupyterLabAppSettings: `AWS::SageMaker::DomainJupyterLabAppSettings`?

  JupyterServerAppSettings: `AWS::SageMaker::DomainJupyterServerAppSettings`?

  KernelGatewayAppSettings: `AWS::SageMaker::DomainRSessionAppSettings`?

  RSessionAppSettings: `AWS::SageMaker::DomainRSessionAppSettings`?

  RStudioServerProAppSettings: `AWS::SageMaker::UserProfileRStudioServerProAppSettings`?

  SecurityGroups: Listing<String>?

  SharingSettings: `AWS::SageMaker::UserProfileSharingSettings`?

  SpaceStorageSettings: `AWS::SageMaker::DomainDefaultSpaceStorageSettings`?

  StudioWebPortal: String?
}

class `AWS::SageMaker::Endpoint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::EndpointProperties`

  Type: "AWS::SageMaker::Endpoint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::EndpointProperties` {
  DeploymentConfig: `AWS::SageMaker::EndpointDeploymentConfig`?

  EndpointConfigName: String

  EndpointName: String?

  ExcludeRetainedVariantProperties: Listing<`AWS::SageMaker::EndpointVariantProperty`>?

  RetainAllVariantProperties: Boolean?

  RetainDeploymentConfig: Boolean?

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::EndpointAlarm` {
  AlarmName: String
}

class `AWS::SageMaker::EndpointAutoRollbackConfig` {
  Alarms: Listing<`AWS::SageMaker::EndpointAlarm`>
}

class `AWS::SageMaker::EndpointBlueGreenUpdatePolicy` {
  MaximumExecutionTimeoutInSeconds: Number?

  TerminationWaitInSeconds: Number?

  TrafficRoutingConfiguration: `AWS::SageMaker::EndpointTrafficRoutingConfig`
}

class `AWS::SageMaker::EndpointDeploymentConfig` {
  AutoRollbackConfiguration: `AWS::SageMaker::EndpointAutoRollbackConfig`?

  BlueGreenUpdatePolicy: `AWS::SageMaker::EndpointBlueGreenUpdatePolicy`?

  RollingUpdatePolicy: `AWS::SageMaker::EndpointRollingUpdatePolicy`?
}

class `AWS::SageMaker::EndpointRollingUpdatePolicy` {
  MaximumBatchSize: `AWS::SageMaker::EndpointCapacitySize`

  MaximumExecutionTimeoutInSeconds: Number?

  RollbackMaximumBatchSize: `AWS::SageMaker::EndpointCapacitySize`?

  WaitIntervalInSeconds: Number
}

class `AWS::SageMaker::EndpointTrafficRoutingConfig` {
  CanarySize: `AWS::SageMaker::EndpointCapacitySize`?

  LinearStepSize: `AWS::SageMaker::EndpointCapacitySize`?

  Type: String

  WaitIntervalInSeconds: Number?
}

class `AWS::SageMaker::EndpointVariantProperty` {
  VariantPropertyType: String?
}

class `AWS::SageMaker::EndpointConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::EndpointConfigProperties`

  Type: "AWS::SageMaker::EndpointConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::EndpointConfigProperties` {
  AsyncInferenceConfig: `AWS::SageMaker::EndpointConfigAsyncInferenceConfig`?

  DataCaptureConfig: `AWS::SageMaker::EndpointConfigDataCaptureConfig`?

  EnableNetworkIsolation: Boolean?

  EndpointConfigName: String?

  ExecutionRoleArn: String?

  ExplainerConfig: `AWS::SageMaker::EndpointConfigExplainerConfig`?

  KmsKeyId: String?

  ProductionVariants: Listing<`AWS::SageMaker::EndpointConfigProductionVariant`>

  ShadowProductionVariants: Listing<`AWS::SageMaker::EndpointConfigProductionVariant`>?

  Tags: Listing<Tag>?

  VpcConfig: `AWS::SageMaker::MonitoringScheduleVpcConfig`?
}

class `AWS::SageMaker::EndpointConfigAsyncInferenceClientConfig` {
  MaxConcurrentInvocationsPerInstance: Number?
}

class `AWS::SageMaker::EndpointConfigAsyncInferenceConfig` {
  ClientConfig: `AWS::SageMaker::EndpointConfigAsyncInferenceClientConfig`?

  OutputConfig: `AWS::SageMaker::EndpointConfigAsyncInferenceOutputConfig`
}

class `AWS::SageMaker::EndpointConfigAsyncInferenceNotificationConfig` {
  ErrorTopic: String?

  IncludeInferenceResponseIn: Listing<String>?

  SuccessTopic: String?
}

class `AWS::SageMaker::EndpointConfigAsyncInferenceOutputConfig` {
  KmsKeyId: String?

  NotificationConfig: `AWS::SageMaker::EndpointConfigAsyncInferenceNotificationConfig`?

  S3FailurePath: String?

  S3OutputPath: String?
}

class `AWS::SageMaker::InferenceExperimentCaptureContentTypeHeader` {
  CsvContentTypes: Listing<String>?

  JsonContentTypes: Listing<String>?
}

class `AWS::SageMaker::EndpointConfigCaptureOption` {
  CaptureMode: String
}

class `AWS::SageMaker::EndpointConfigClarifyExplainerConfig` {
  EnableExplanations: String?

  InferenceConfig: `AWS::SageMaker::EndpointConfigClarifyInferenceConfig`?

  ShapConfig: `AWS::SageMaker::EndpointConfigClarifyShapConfig`
}

class `AWS::SageMaker::EndpointConfigClarifyInferenceConfig` {
  ContentTemplate: String?

  FeatureHeaders: Listing<`AWS::Transfer::UserSshPublicKey`>?

  FeatureTypes: Listing<`AWS::Transfer::UserSshPublicKey`>?

  FeaturesAttribute: String?

  LabelAttribute: String?

  LabelHeaders: Listing<`AWS::Transfer::UserSshPublicKey`>?

  LabelIndex: Number?

  MaxPayloadInMB: Number?

  MaxRecordCount: Number?

  ProbabilityAttribute: String?

  ProbabilityIndex: Number?
}

class `AWS::SageMaker::EndpointConfigClarifyShapBaselineConfig` {
  MimeType: String?

  ShapBaseline: String?

  ShapBaselineUri: String?
}

class `AWS::SageMaker::EndpointConfigClarifyShapConfig` {
  NumberOfSamples: Number?

  Seed: Number?

  ShapBaselineConfig: `AWS::SageMaker::EndpointConfigClarifyShapBaselineConfig`

  TextConfig: `AWS::SageMaker::EndpointConfigClarifyTextConfig`?

  UseLogit: Boolean?
}

class `AWS::SageMaker::EndpointConfigClarifyTextConfig` {
  Granularity: String

  Language: String
}

class `AWS::SageMaker::EndpointConfigDataCaptureConfig` {
  CaptureContentTypeHeader: `AWS::SageMaker::InferenceExperimentCaptureContentTypeHeader`?

  CaptureOptions: Listing<`AWS::SageMaker::EndpointConfigCaptureOption`>

  DestinationS3Uri: String

  EnableCapture: Boolean?

  InitialSamplingPercentage: Number

  KmsKeyId: String?
}

class `AWS::SageMaker::EndpointConfigExplainerConfig` {
  ClarifyExplainerConfig: `AWS::SageMaker::EndpointConfigClarifyExplainerConfig`?
}

class `AWS::SageMaker::EndpointConfigManagedInstanceScaling` {
  MaxInstanceCount: Number?

  MinInstanceCount: Number?

  Status: String?
}

class `AWS::SageMaker::EndpointConfigProductionVariant` {
  AcceleratorType: String?

  ContainerStartupHealthCheckTimeoutInSeconds: Number?

  EnableSSMAccess: Boolean?

  InitialInstanceCount: Number?

  InitialVariantWeight: Number?

  InstanceType: String?

  ManagedInstanceScaling: `AWS::SageMaker::EndpointConfigManagedInstanceScaling`?

  ModelDataDownloadTimeoutInSeconds: Number?

  ModelName: String?

  RoutingConfig: `AWS::SageMaker::EndpointConfigRoutingConfig`?

  ServerlessConfig: `AWS::SageMaker::EndpointConfigServerlessConfig`?

  VariantName: String

  VolumeSizeInGB: Number?
}

class `AWS::SageMaker::EndpointConfigRoutingConfig` {
  RoutingStrategy: String?
}

class `AWS::SageMaker::EndpointConfigServerlessConfig` {
  MaxConcurrency: Number

  MemorySizeInMB: Number

  ProvisionedConcurrency: Number?
}

class `AWS::SageMaker::FeatureGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::FeatureGroupProperties`

  Type: "AWS::SageMaker::FeatureGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::FeatureGroupProperties` {
  Description: String?

  EventTimeFeatureName: String

  FeatureDefinitions: Listing<`AWS::SageMaker::FeatureGroupFeatureDefinition`>

  FeatureGroupName: String

  OfflineStoreConfig: `AWS::SageMaker::FeatureGroupOfflineStoreConfig`?

  OnlineStoreConfig: `AWS::SageMaker::FeatureGroupOnlineStoreConfig`?

  RecordIdentifierFeatureName: String

  RoleArn: String?

  Tags: Listing<Tag>?

  ThroughputConfig: `AWS::SageMaker::FeatureGroupThroughputConfig`?
}

class `AWS::SageMaker::FeatureGroupDataCatalogConfig` {
  Catalog: String

  Database: String

  TableName: String
}

class `AWS::SageMaker::FeatureGroupFeatureDefinition` {
  FeatureName: String

  FeatureType: String
}

class `AWS::SageMaker::FeatureGroupOfflineStoreConfig` {
  DataCatalogConfig: `AWS::SageMaker::FeatureGroupDataCatalogConfig`?

  DisableGlueTableCreation: Boolean?

  S3StorageConfig: `AWS::SageMaker::FeatureGroupS3StorageConfig`

  TableFormat: String?
}

class `AWS::SageMaker::FeatureGroupOnlineStoreConfig` {
  EnableOnlineStore: Boolean?

  SecurityConfig: `AWS::Wisdom::KnowledgeBaseServerSideEncryptionConfiguration`?

  StorageType: String?
}

class `AWS::SageMaker::FeatureGroupS3StorageConfig` {
  KmsKeyId: String?

  S3Uri: String
}

class `AWS::SageMaker::FeatureGroupThroughputConfig` {
  ProvisionedReadCapacityUnits: Number?

  ProvisionedWriteCapacityUnits: Number?

  ThroughputMode: String
}

class `AWS::SageMaker::Image` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::ImageProperties`

  Type: "AWS::SageMaker::Image"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::ImageProperties` {
  ImageDescription: String?

  ImageDisplayName: String?

  ImageName: String

  ImageRoleArn: String

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::ImageVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::ImageVersionProperties`

  Type: "AWS::SageMaker::ImageVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::ImageVersionProperties` {
  Alias: String?

  Aliases: Listing<String>?

  BaseImage: String

  Horovod: Boolean?

  ImageName: String

  JobType: String?

  MLFramework: String?

  Processor: String?

  ProgrammingLang: String?

  ReleaseNotes: String?

  VendorGuidance: String?
}

class `AWS::SageMaker::InferenceComponent` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::InferenceComponentProperties`

  Type: "AWS::SageMaker::InferenceComponent"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::InferenceComponentProperties` {
  EndpointArn: String?

  EndpointName: String

  InferenceComponentName: String?

  RuntimeConfig: `AWS::SageMaker::InferenceComponentInferenceComponentRuntimeConfig`

  Specification: `AWS::SageMaker::InferenceComponentInferenceComponentSpecification`

  Tags: Listing<Tag>?

  VariantName: String
}

class `AWS::SageMaker::InferenceComponentDeployedImage` {
  ResolutionTime: String?

  ResolvedImage: String?

  SpecifiedImage: String?
}

class `AWS::SageMaker::InferenceComponentInferenceComponentComputeResourceRequirements` {
  MaxMemoryRequiredInMb: Number?

  MinMemoryRequiredInMb: Number?

  NumberOfAcceleratorDevicesRequired: Number?

  NumberOfCpuCoresRequired: Number?
}

class `AWS::SageMaker::InferenceComponentInferenceComponentContainerSpecification` {
  ArtifactUrl: String?

  DeployedImage: `AWS::SageMaker::InferenceComponentDeployedImage`?

  Environment: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Image: String?
}

class `AWS::SageMaker::InferenceComponentInferenceComponentRuntimeConfig` {
  CopyCount: Number?

  CurrentCopyCount: Number?

  DesiredCopyCount: Number?
}

class `AWS::SageMaker::InferenceComponentInferenceComponentSpecification` {
  ComputeResourceRequirements: `AWS::SageMaker::InferenceComponentInferenceComponentComputeResourceRequirements`

  Container: `AWS::SageMaker::InferenceComponentInferenceComponentContainerSpecification`?

  ModelName: String?

  StartupParameters: `AWS::SageMaker::InferenceComponentInferenceComponentStartupParameters`?
}

class `AWS::SageMaker::InferenceComponentInferenceComponentStartupParameters` {
  ContainerStartupHealthCheckTimeoutInSeconds: Number?

  ModelDataDownloadTimeoutInSeconds: Number?
}

class `AWS::SageMaker::InferenceExperiment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::InferenceExperimentProperties`

  Type: "AWS::SageMaker::InferenceExperiment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::InferenceExperimentProperties` {
  DataStorageConfig: `AWS::SageMaker::InferenceExperimentDataStorageConfig`?

  Description: String?

  DesiredState: String?

  EndpointName: String

  KmsKey: String?

  ModelVariants: Listing<`AWS::SageMaker::InferenceExperimentModelVariantConfig`>

  Name: String

  RoleArn: String

  Schedule: `AWS::SageMaker::InferenceExperimentInferenceExperimentSchedule`?

  ShadowModeConfig: `AWS::SageMaker::InferenceExperimentShadowModeConfig`?

  StatusReason: String?

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::SageMaker::InferenceExperimentDataStorageConfig` {
  ContentType: `AWS::SageMaker::InferenceExperimentCaptureContentTypeHeader`?

  Destination: String

  KmsKey: String?
}

class `AWS::SageMaker::InferenceExperimentEndpointMetadata` {
  EndpointConfigName: String?

  EndpointName: String

  EndpointStatus: String?
}

class `AWS::SageMaker::InferenceExperimentInferenceExperimentSchedule` {
  EndTime: String?

  StartTime: String?
}

class `AWS::SageMaker::InferenceExperimentModelInfrastructureConfig` {
  InfrastructureType: String

  RealTimeInferenceConfig: `AWS::SageMaker::InferenceExperimentRealTimeInferenceConfig`
}

class `AWS::SageMaker::InferenceExperimentModelVariantConfig` {
  InfrastructureConfig: `AWS::SageMaker::InferenceExperimentModelInfrastructureConfig`

  ModelName: String

  VariantName: String
}

class `AWS::SageMaker::InferenceExperimentRealTimeInferenceConfig` {
  InstanceCount: Number

  InstanceType: String
}

class `AWS::SageMaker::InferenceExperimentShadowModeConfig` {
  ShadowModelVariants: Listing<`AWS::SageMaker::InferenceExperimentShadowModelVariantConfig`>

  SourceModelVariantName: String
}

class `AWS::SageMaker::InferenceExperimentShadowModelVariantConfig` {
  SamplingPercentage: Number

  ShadowModelVariantName: String
}

class `AWS::SageMaker::Model` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::ModelProperties`?

  Type: "AWS::SageMaker::Model"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::ModelProperties` {
  Containers: Listing<`AWS::SageMaker::ModelContainerDefinition`>?

  EnableNetworkIsolation: Boolean?

  ExecutionRoleArn: String?

  InferenceExecutionConfig: `AWS::VerifiedPermissions::PolicyStoreValidationSettings`?

  ModelName: String?

  PrimaryContainer: `AWS::SageMaker::ModelContainerDefinition`?

  Tags: Listing<Tag>?

  VpcConfig: `AWS::SageMaker::MonitoringScheduleVpcConfig`?
}

class `AWS::SageMaker::ModelContainerDefinition` {
  ContainerHostname: String?

  Environment: Dynamic?

  Image: String?

  ImageConfig: `AWS::SageMaker::ModelImageConfig`?

  InferenceSpecificationName: String?

  Mode: String?

  ModelDataSource: `AWS::SageMaker::ModelModelDataSource`?

  ModelDataUrl: String?

  ModelPackageName: String?

  MultiModelConfig: `AWS::SageMaker::ModelMultiModelConfig`?
}

class `AWS::SageMaker::ModelImageConfig` {
  RepositoryAccessMode: String

  RepositoryAuthConfig: `AWS::SageMaker::ModelRepositoryAuthConfig`?
}

class `AWS::SageMaker::ModelModelAccessConfig` {
  AcceptEula: Boolean
}

class `AWS::SageMaker::ModelModelDataSource` {
  S3DataSource: `AWS::SageMaker::ModelS3DataSource`
}

class `AWS::SageMaker::ModelMultiModelConfig` {
  ModelCacheSetting: String?
}

class `AWS::SageMaker::ModelRepositoryAuthConfig` {
  RepositoryCredentialsProviderArn: String
}

class `AWS::SageMaker::ModelS3DataSource` {
  CompressionType: String

  ModelAccessConfig: `AWS::SageMaker::ModelModelAccessConfig`?

  S3DataType: String

  S3Uri: String
}

class `AWS::SageMaker::ModelBiasJobDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::ModelBiasJobDefinitionProperties`

  Type: "AWS::SageMaker::ModelBiasJobDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::ModelBiasJobDefinitionProperties` {
  EndpointName: String?

  JobDefinitionName: String?

  JobResources: `AWS::SageMaker::ModelBiasJobDefinitionMonitoringResources`

  ModelBiasAppSpecification: `AWS::SageMaker::ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification`

  ModelBiasBaselineConfig: `AWS::SageMaker::ModelBiasJobDefinitionModelBiasBaselineConfig`?

  ModelBiasJobInput: `AWS::SageMaker::ModelBiasJobDefinitionModelBiasJobInput`

  ModelBiasJobOutputConfig: `AWS::SageMaker::ModelBiasJobDefinitionMonitoringOutputConfig`

  NetworkConfig: `AWS::SageMaker::ModelBiasJobDefinitionNetworkConfig`?

  RoleArn: String

  StoppingCondition: `AWS::SageMaker::MonitoringScheduleStoppingCondition`?

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::ModelBiasJobDefinitionBatchTransformInput` {
  DataCapturedDestinationS3Uri: String

  DatasetFormat: `AWS::SageMaker::ModelBiasJobDefinitionDatasetFormat`

  EndTimeOffset: String?

  FeaturesAttribute: String?

  InferenceAttribute: String?

  LocalPath: String

  ProbabilityAttribute: String?

  ProbabilityThresholdAttribute: Number?

  S3DataDistributionType: String?

  S3InputMode: String?

  StartTimeOffset: String?
}

class `AWS::SageMaker::ModelBiasJobDefinitionDatasetFormat` {
  Csv: `AWS::SageMaker::MonitoringScheduleCsv`?

  Json: `AWS::SageMaker::MonitoringScheduleJson`?

  Parquet: Boolean?
}

class `AWS::SageMaker::ModelBiasJobDefinitionEndpointInput` {
  EndTimeOffset: String?

  EndpointName: String

  FeaturesAttribute: String?

  InferenceAttribute: String?

  LocalPath: String

  ProbabilityAttribute: String?

  ProbabilityThresholdAttribute: Number?

  S3DataDistributionType: String?

  S3InputMode: String?

  StartTimeOffset: String?
}

class `AWS::SageMaker::ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification` {
  ConfigUri: String

  Environment: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ImageUri: String
}

class `AWS::SageMaker::ModelBiasJobDefinitionModelBiasBaselineConfig` {
  BaseliningJobName: String?

  ConstraintsResource: `AWS::SageMaker::MonitoringScheduleStatisticsResource`?
}

class `AWS::SageMaker::ModelBiasJobDefinitionModelBiasJobInput` {
  BatchTransformInput: `AWS::SageMaker::ModelBiasJobDefinitionBatchTransformInput`?

  EndpointInput: `AWS::SageMaker::ModelBiasJobDefinitionEndpointInput`?

  GroundTruthS3Input: `AWS::SageMaker::ModelQualityJobDefinitionMonitoringGroundTruthS3Input`
}

class `AWS::SageMaker::ModelQualityJobDefinitionMonitoringGroundTruthS3Input` {
  S3Uri: String
}

class `AWS::SageMaker::ModelBiasJobDefinitionMonitoringOutput` {
  S3Output: `AWS::SageMaker::MonitoringScheduleS3Output`
}

class `AWS::SageMaker::ModelBiasJobDefinitionMonitoringOutputConfig` {
  KmsKeyId: String?

  MonitoringOutputs: Listing<`AWS::SageMaker::ModelBiasJobDefinitionMonitoringOutput`>
}

class `AWS::SageMaker::ModelBiasJobDefinitionMonitoringResources` {
  ClusterConfig: `AWS::SageMaker::MonitoringScheduleClusterConfig`
}

class `AWS::SageMaker::ModelBiasJobDefinitionNetworkConfig` {
  EnableInterContainerTrafficEncryption: Boolean?

  EnableNetworkIsolation: Boolean?

  VpcConfig: `AWS::SageMaker::MonitoringScheduleVpcConfig`?
}

class `AWS::SageMaker::ModelCard` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::ModelCardProperties`

  Type: "AWS::SageMaker::ModelCard"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::ModelCardProperties` {
  Content: `AWS::SageMaker::ModelCardContent`

  CreatedBy: `AWS::SageMaker::ModelCardUserContext`?

  LastModifiedBy: `AWS::SageMaker::ModelCardUserContext`?

  ModelCardName: String

  ModelCardStatus: String

  SecurityConfig: `AWS::Wisdom::KnowledgeBaseServerSideEncryptionConfiguration`?

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::ModelCardAdditionalInformation` {
  CaveatsAndRecommendations: String?

  CustomDetails: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  EthicalConsiderations: String?
}

class `AWS::SageMaker::ModelCardBusinessDetails` {
  BusinessProblem: String?

  BusinessStakeholders: String?

  LineOfBusiness: String?
}

class `AWS::SageMaker::ModelCardContainer` {
  Image: String

  ModelDataUrl: String?

  NearestModelName: String?
}

class `AWS::SageMaker::ModelCardContent` {
  AdditionalInformation: `AWS::SageMaker::ModelCardAdditionalInformation`?

  BusinessDetails: `AWS::SageMaker::ModelCardBusinessDetails`?

  EvaluationDetails: Listing<`AWS::SageMaker::ModelCardEvaluationDetail`>?

  IntendedUses: `AWS::SageMaker::ModelCardIntendedUses`?

  ModelOverview: `AWS::SageMaker::ModelCardModelOverview`?

  ModelPackageDetails: `AWS::SageMaker::ModelCardModelPackageDetails`?

  TrainingDetails: `AWS::SageMaker::ModelCardTrainingDetails`?
}

class `AWS::SageMaker::ModelCardEvaluationDetail` {
  Datasets: Listing<String>?

  EvaluationJobArn: String?

  EvaluationObservation: String?

  Metadata: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  MetricGroups: Listing<`AWS::SageMaker::ModelCardMetricGroup`>?

  Name: String
}

class `AWS::SageMaker::ModelCardFunction` {
  Condition: String?

  Facet: String?

  Function: String?
}

class `AWS::SageMaker::ModelCardTrainingEnvironment` {
  ContainerImage: Listing<String>?
}

class `AWS::SageMaker::ModelCardInferenceSpecification` {
  Containers: Listing<`AWS::SageMaker::ModelCardContainer`>
}

class `AWS::SageMaker::ModelCardIntendedUses` {
  ExplanationsForRiskRating: String?

  FactorsAffectingModelEfficiency: String?

  IntendedUses: String?

  PurposeOfModel: String?

  RiskRating: String?
}

class `AWS::SageMaker::ModelCardMetricDataItems` {
  Name: String

  Notes: String?

  Type: String

  Value: Dynamic

  XAxisName: Listing<String>?

  YAxisName: Listing<String>?
}

class `AWS::SageMaker::ModelCardMetricGroup` {
  MetricData: Listing<`AWS::SageMaker::ModelCardMetricDataItems`>

  Name: String
}

class `AWS::SageMaker::ModelCardModelOverview` {
  AlgorithmType: String?

  InferenceEnvironment: `AWS::SageMaker::ModelCardTrainingEnvironment`?

  ModelArtifact: Listing<String>?

  ModelCreator: String?

  ModelDescription: String?

  ModelId: String?

  ModelName: String?

  ModelOwner: String?

  ModelVersion: Number?

  ProblemType: String?
}

class `AWS::SageMaker::ModelCardModelPackageCreator` {
  UserProfileName: String?
}

class `AWS::SageMaker::ModelCardModelPackageDetails` {
  ApprovalDescription: String?

  CreatedBy: `AWS::SageMaker::ModelCardModelPackageCreator`?

  Domain: String?

  InferenceSpecification: `AWS::SageMaker::ModelCardInferenceSpecification`?

  ModelApprovalStatus: String?

  ModelPackageArn: String?

  ModelPackageDescription: String?

  ModelPackageGroupName: String?

  ModelPackageName: String?

  ModelPackageStatus: String?

  ModelPackageVersion: Number?

  SourceAlgorithms: Listing<`AWS::SageMaker::ModelPackageSourceAlgorithm`>?

  Task: String?
}

class `AWS::SageMaker::ModelCardObjectiveFunction` {
  Function: `AWS::SageMaker::ModelCardFunction`?

  Notes: String?
}

class `AWS::SageMaker::ModelPackageSourceAlgorithm` {
  AlgorithmName: String

  ModelDataUrl: String?
}

class `AWS::SageMaker::ModelCardTrainingDetails` {
  ObjectiveFunction: `AWS::SageMaker::ModelCardObjectiveFunction`?

  TrainingJobDetails: `AWS::SageMaker::ModelCardTrainingJobDetails`?

  TrainingObservations: String?
}

class `AWS::SageMaker::ModelCardTrainingJobDetails` {
  HyperParameters: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  TrainingArn: String?

  TrainingDatasets: Listing<String>?

  TrainingEnvironment: `AWS::SageMaker::ModelCardTrainingEnvironment`?

  TrainingMetrics: Listing<`AWS::SageMaker::ModelCardTrainingMetric`>?

  UserProvidedHyperParameters: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?

  UserProvidedTrainingMetrics: Listing<`AWS::SageMaker::ModelCardTrainingMetric`>?
}

class `AWS::SageMaker::ModelCardTrainingMetric` {
  Name: String

  Notes: String?

  Value: Number
}

class `AWS::SageMaker::ModelCardUserContext` {
  DomainId: String?

  UserProfileArn: String?

  UserProfileName: String?
}

class `AWS::SageMaker::ModelExplainabilityJobDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::ModelExplainabilityJobDefinitionProperties`

  Type: "AWS::SageMaker::ModelExplainabilityJobDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::ModelExplainabilityJobDefinitionProperties` {
  EndpointName: String?

  JobDefinitionName: String?

  JobResources: `AWS::SageMaker::ModelExplainabilityJobDefinitionMonitoringResources`

  ModelExplainabilityAppSpecification: `AWS::SageMaker::ModelExplainabilityJobDefinitionModelExplainabilityAppSpecification`

  ModelExplainabilityBaselineConfig: `AWS::SageMaker::ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig`?

  ModelExplainabilityJobInput: `AWS::SageMaker::ModelExplainabilityJobDefinitionModelExplainabilityJobInput`

  ModelExplainabilityJobOutputConfig: `AWS::SageMaker::ModelExplainabilityJobDefinitionMonitoringOutputConfig`

  NetworkConfig: `AWS::SageMaker::ModelExplainabilityJobDefinitionNetworkConfig`?

  RoleArn: String

  StoppingCondition: `AWS::SageMaker::MonitoringScheduleStoppingCondition`?

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::ModelExplainabilityJobDefinitionBatchTransformInput` {
  DataCapturedDestinationS3Uri: String

  DatasetFormat: `AWS::SageMaker::ModelExplainabilityJobDefinitionDatasetFormat`

  FeaturesAttribute: String?

  InferenceAttribute: String?

  LocalPath: String

  ProbabilityAttribute: String?

  S3DataDistributionType: String?

  S3InputMode: String?
}

class `AWS::SageMaker::ModelExplainabilityJobDefinitionDatasetFormat` {
  Csv: `AWS::SageMaker::MonitoringScheduleCsv`?

  Json: `AWS::SageMaker::MonitoringScheduleJson`?

  Parquet: Boolean?
}

class `AWS::SageMaker::ModelExplainabilityJobDefinitionEndpointInput` {
  EndpointName: String

  FeaturesAttribute: String?

  InferenceAttribute: String?

  LocalPath: String

  ProbabilityAttribute: String?

  S3DataDistributionType: String?

  S3InputMode: String?
}

class `AWS::SageMaker::ModelExplainabilityJobDefinitionModelExplainabilityBaselineConfig` {
  BaseliningJobName: String?

  ConstraintsResource: `AWS::SageMaker::MonitoringScheduleStatisticsResource`?
}

class `AWS::SageMaker::ModelExplainabilityJobDefinitionModelExplainabilityJobInput` {
  BatchTransformInput: `AWS::SageMaker::ModelExplainabilityJobDefinitionBatchTransformInput`?

  EndpointInput: `AWS::SageMaker::ModelExplainabilityJobDefinitionEndpointInput`?
}

class `AWS::SageMaker::ModelExplainabilityJobDefinitionMonitoringOutput` {
  S3Output: `AWS::SageMaker::MonitoringScheduleS3Output`
}

class `AWS::SageMaker::ModelExplainabilityJobDefinitionMonitoringOutputConfig` {
  KmsKeyId: String?

  MonitoringOutputs: Listing<`AWS::SageMaker::ModelExplainabilityJobDefinitionMonitoringOutput`>
}

class `AWS::SageMaker::ModelExplainabilityJobDefinitionMonitoringResources` {
  ClusterConfig: `AWS::SageMaker::MonitoringScheduleClusterConfig`
}

class `AWS::SageMaker::ModelExplainabilityJobDefinitionNetworkConfig` {
  EnableInterContainerTrafficEncryption: Boolean?

  EnableNetworkIsolation: Boolean?

  VpcConfig: `AWS::SageMaker::MonitoringScheduleVpcConfig`?
}

class `AWS::SageMaker::ModelPackage` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::ModelPackageProperties`?

  Type: "AWS::SageMaker::ModelPackage"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::ModelPackageProperties` {
  AdditionalInferenceSpecifications: Listing<`AWS::SageMaker::ModelPackageAdditionalInferenceSpecificationDefinition`>?

  AdditionalInferenceSpecificationsToAdd: Listing<`AWS::SageMaker::ModelPackageAdditionalInferenceSpecificationDefinition`>?

  ApprovalDescription: String?

  CertifyForMarketplace: Boolean?

  ClientToken: String?

  CustomerMetadataProperties: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Domain: String?

  DriftCheckBaselines: `AWS::SageMaker::ModelPackageDriftCheckBaselines`?

  InferenceSpecification: `AWS::SageMaker::ModelPackageInferenceSpecification`?

  LastModifiedTime: String?

  MetadataProperties: `AWS::SageMaker::ModelPackageMetadataProperties`?

  ModelApprovalStatus: String?

  ModelMetrics: `AWS::SageMaker::ModelPackageModelMetrics`?

  ModelPackageDescription: String?

  ModelPackageGroupName: String?

  ModelPackageName: String?

  ModelPackageStatusDetails: `AWS::SageMaker::ModelPackageModelPackageStatusDetails`?

  ModelPackageVersion: Number?

  SamplePayloadUrl: String?

  SkipModelValidation: String?

  SourceAlgorithmSpecification: `AWS::SageMaker::ModelPackageSourceAlgorithmSpecification`?

  Tags: Listing<Tag>?

  Task: String?

  ValidationSpecification: `AWS::SageMaker::ModelPackageValidationSpecification`?
}

class `AWS::SageMaker::ModelPackageAdditionalInferenceSpecificationDefinition` {
  Containers: Listing<`AWS::SageMaker::ModelPackageModelPackageContainerDefinition`>

  Description: String?

  Name: String

  SupportedContentTypes: Listing<String>?

  SupportedRealtimeInferenceInstanceTypes: Listing<String>?

  SupportedResponseMIMETypes: Listing<String>?

  SupportedTransformInstanceTypes: Listing<String>?
}

class `AWS::SageMaker::ModelPackageBias` {
  PostTrainingReport: `AWS::SageMaker::ModelPackageMetricsSource`?

  PreTrainingReport: `AWS::SageMaker::ModelPackageMetricsSource`?

  Report: `AWS::SageMaker::ModelPackageMetricsSource`?
}

class `AWS::SageMaker::ModelPackageDataSource` {
  S3DataSource: `AWS::SageMaker::ModelPackageS3DataSource`
}

class `AWS::SageMaker::ModelPackageDriftCheckBaselines` {
  Bias: `AWS::SageMaker::ModelPackageDriftCheckBias`?

  Explainability: `AWS::SageMaker::ModelPackageDriftCheckExplainability`?

  ModelDataQuality: `AWS::SageMaker::ModelPackageModelQuality`?

  ModelQuality: `AWS::SageMaker::ModelPackageModelQuality`?
}

class `AWS::SageMaker::ModelPackageDriftCheckBias` {
  ConfigFile: `AWS::SageMaker::ModelPackageFileSource`?

  PostTrainingConstraints: `AWS::SageMaker::ModelPackageMetricsSource`?

  PreTrainingConstraints: `AWS::SageMaker::ModelPackageMetricsSource`?
}

class `AWS::SageMaker::ModelPackageDriftCheckExplainability` {
  ConfigFile: `AWS::SageMaker::ModelPackageFileSource`?

  Constraints: `AWS::SageMaker::ModelPackageMetricsSource`?
}

class `AWS::SageMaker::ModelPackageModelQuality` {
  Constraints: `AWS::SageMaker::ModelPackageMetricsSource`?

  Statistics: `AWS::SageMaker::ModelPackageMetricsSource`?
}

class `AWS::SageMaker::ModelPackageExplainability` {
  Report: `AWS::SageMaker::ModelPackageMetricsSource`?
}

class `AWS::SageMaker::ModelPackageFileSource` {
  ContentDigest: String?

  ContentType: String?

  S3Uri: String
}

class `AWS::SageMaker::ModelPackageInferenceSpecification` {
  Containers: Listing<`AWS::SageMaker::ModelPackageModelPackageContainerDefinition`>

  SupportedContentTypes: Listing<String>

  SupportedRealtimeInferenceInstanceTypes: Listing<String>?

  SupportedResponseMIMETypes: Listing<String>

  SupportedTransformInstanceTypes: Listing<String>?
}

class `AWS::SageMaker::ModelPackageMetadataProperties` {
  CommitId: String?

  GeneratedBy: String?

  ProjectId: String?

  Repository: String?
}

class `AWS::SageMaker::ModelPackageMetricsSource` {
  ContentDigest: String?

  ContentType: String

  S3Uri: String
}

class `AWS::SageMaker::ModelPackageModelInput` {
  DataInputConfig: String
}

class `AWS::SageMaker::ModelPackageModelMetrics` {
  Bias: `AWS::SageMaker::ModelPackageBias`?

  Explainability: `AWS::SageMaker::ModelPackageExplainability`?

  ModelDataQuality: `AWS::SageMaker::ModelPackageModelQuality`?

  ModelQuality: `AWS::SageMaker::ModelPackageModelQuality`?
}

class `AWS::SageMaker::ModelPackageModelPackageContainerDefinition` {
  ContainerHostname: String?

  Environment: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  Framework: String?

  FrameworkVersion: String?

  Image: String

  ImageDigest: String?

  ModelDataUrl: String?

  ModelInput: `AWS::SageMaker::ModelPackageModelInput`?

  NearestModelName: String?
}

class `AWS::SageMaker::ModelPackageModelPackageStatusDetails` {
  ValidationStatuses: Listing<`AWS::SageMaker::ModelPackageModelPackageStatusItem`>?
}

class `AWS::SageMaker::ModelPackageModelPackageStatusItem` {
  FailureReason: String?

  Name: String

  Status: String
}

class `AWS::SageMaker::ModelPackageS3DataSource` {
  S3DataType: String

  S3Uri: String
}

class `AWS::SageMaker::ModelPackageSourceAlgorithmSpecification` {
  SourceAlgorithms: Listing<`AWS::SageMaker::ModelPackageSourceAlgorithm`>
}

class `AWS::SageMaker::ModelPackageTransformInput` {
  CompressionType: String?

  ContentType: String?

  DataSource: `AWS::SageMaker::ModelPackageDataSource`

  SplitType: String?
}

class `AWS::SageMaker::ModelPackageTransformJobDefinition` {
  BatchStrategy: String?

  Environment: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  MaxConcurrentTransforms: Number?

  MaxPayloadInMB: Number?

  TransformInput: `AWS::SageMaker::ModelPackageTransformInput`

  TransformOutput: `AWS::SageMaker::ModelPackageTransformOutput`

  TransformResources: `AWS::SageMaker::ModelPackageTransformResources`
}

class `AWS::SageMaker::ModelPackageTransformOutput` {
  Accept: String?

  AssembleWith: String?

  KmsKeyId: String?

  S3OutputPath: String
}

class `AWS::SageMaker::ModelPackageTransformResources` {
  InstanceCount: Number

  InstanceType: String

  VolumeKmsKeyId: String?
}

class `AWS::SageMaker::ModelPackageValidationProfile` {
  ProfileName: String

  TransformJobDefinition: `AWS::SageMaker::ModelPackageTransformJobDefinition`
}

class `AWS::SageMaker::ModelPackageValidationSpecification` {
  ValidationProfiles: Listing<`AWS::SageMaker::ModelPackageValidationProfile`>

  ValidationRole: String
}

class `AWS::SageMaker::ModelPackageGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::ModelPackageGroupProperties`

  Type: "AWS::SageMaker::ModelPackageGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::ModelPackageGroupProperties` {
  ModelPackageGroupDescription: String?

  ModelPackageGroupName: String

  ModelPackageGroupPolicy: Dynamic?

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::ModelQualityJobDefinition` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::ModelQualityJobDefinitionProperties`

  Type: "AWS::SageMaker::ModelQualityJobDefinition"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::ModelQualityJobDefinitionProperties` {
  EndpointName: String?

  JobDefinitionName: String?

  JobResources: `AWS::SageMaker::ModelQualityJobDefinitionMonitoringResources`

  ModelQualityAppSpecification: `AWS::SageMaker::ModelQualityJobDefinitionModelQualityAppSpecification`

  ModelQualityBaselineConfig: `AWS::SageMaker::ModelQualityJobDefinitionModelQualityBaselineConfig`?

  ModelQualityJobInput: `AWS::SageMaker::ModelQualityJobDefinitionModelQualityJobInput`

  ModelQualityJobOutputConfig: `AWS::SageMaker::ModelQualityJobDefinitionMonitoringOutputConfig`

  NetworkConfig: `AWS::SageMaker::ModelQualityJobDefinitionNetworkConfig`?

  RoleArn: String

  StoppingCondition: `AWS::SageMaker::MonitoringScheduleStoppingCondition`?

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::ModelQualityJobDefinitionBatchTransformInput` {
  DataCapturedDestinationS3Uri: String

  DatasetFormat: `AWS::SageMaker::ModelQualityJobDefinitionDatasetFormat`

  EndTimeOffset: String?

  InferenceAttribute: String?

  LocalPath: String

  ProbabilityAttribute: String?

  ProbabilityThresholdAttribute: Number?

  S3DataDistributionType: String?

  S3InputMode: String?

  StartTimeOffset: String?
}

class `AWS::SageMaker::ModelQualityJobDefinitionDatasetFormat` {
  Csv: `AWS::SageMaker::MonitoringScheduleCsv`?

  Json: `AWS::SageMaker::MonitoringScheduleJson`?

  Parquet: Boolean?
}

class `AWS::SageMaker::ModelQualityJobDefinitionEndpointInput` {
  EndTimeOffset: String?

  EndpointName: String

  InferenceAttribute: String?

  LocalPath: String

  ProbabilityAttribute: String?

  ProbabilityThresholdAttribute: Number?

  S3DataDistributionType: String?

  S3InputMode: String?

  StartTimeOffset: String?
}

class `AWS::SageMaker::ModelQualityJobDefinitionModelQualityAppSpecification` {
  ContainerArguments: Listing<String>?

  ContainerEntrypoint: Listing<String>?

  Environment: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  ImageUri: String

  PostAnalyticsProcessorSourceUri: String?

  ProblemType: String

  RecordPreprocessorSourceUri: String?
}

class `AWS::SageMaker::ModelQualityJobDefinitionModelQualityBaselineConfig` {
  BaseliningJobName: String?

  ConstraintsResource: `AWS::SageMaker::MonitoringScheduleStatisticsResource`?
}

class `AWS::SageMaker::ModelQualityJobDefinitionModelQualityJobInput` {
  BatchTransformInput: `AWS::SageMaker::ModelQualityJobDefinitionBatchTransformInput`?

  EndpointInput: `AWS::SageMaker::ModelQualityJobDefinitionEndpointInput`?

  GroundTruthS3Input: `AWS::SageMaker::ModelQualityJobDefinitionMonitoringGroundTruthS3Input`
}

class `AWS::SageMaker::ModelQualityJobDefinitionMonitoringOutput` {
  S3Output: `AWS::SageMaker::MonitoringScheduleS3Output`
}

class `AWS::SageMaker::ModelQualityJobDefinitionMonitoringOutputConfig` {
  KmsKeyId: String?

  MonitoringOutputs: Listing<`AWS::SageMaker::ModelQualityJobDefinitionMonitoringOutput`>
}

class `AWS::SageMaker::ModelQualityJobDefinitionMonitoringResources` {
  ClusterConfig: `AWS::SageMaker::MonitoringScheduleClusterConfig`
}

class `AWS::SageMaker::ModelQualityJobDefinitionNetworkConfig` {
  EnableInterContainerTrafficEncryption: Boolean?

  EnableNetworkIsolation: Boolean?

  VpcConfig: `AWS::SageMaker::MonitoringScheduleVpcConfig`?
}

class `AWS::SageMaker::MonitoringSchedule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::MonitoringScheduleProperties`

  Type: "AWS::SageMaker::MonitoringSchedule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::MonitoringScheduleProperties` {
  EndpointName: String?

  FailureReason: String?

  LastMonitoringExecutionSummary: `AWS::SageMaker::MonitoringScheduleMonitoringExecutionSummary`?

  MonitoringScheduleConfig: `AWS::SageMaker::MonitoringScheduleMonitoringScheduleConfig`

  MonitoringScheduleName: String

  MonitoringScheduleStatus: String?

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::MonitoringScheduleBaselineConfig` {
  ConstraintsResource: `AWS::SageMaker::MonitoringScheduleStatisticsResource`?

  StatisticsResource: `AWS::SageMaker::MonitoringScheduleStatisticsResource`?
}

class `AWS::SageMaker::MonitoringScheduleBatchTransformInput` {
  DataCapturedDestinationS3Uri: String

  DatasetFormat: `AWS::SageMaker::MonitoringScheduleDatasetFormat`

  ExcludeFeaturesAttribute: String?

  LocalPath: String

  S3DataDistributionType: String?

  S3InputMode: String?
}

class `AWS::SageMaker::MonitoringScheduleDatasetFormat` {
  Csv: `AWS::SageMaker::MonitoringScheduleCsv`?

  Json: `AWS::SageMaker::MonitoringScheduleJson`?

  Parquet: Boolean?
}

class `AWS::SageMaker::MonitoringScheduleMonitoringAppSpecification` {
  ContainerArguments: Listing<String>?

  ContainerEntrypoint: Listing<String>?

  ImageUri: String

  PostAnalyticsProcessorSourceUri: String?

  RecordPreprocessorSourceUri: String?
}

class `AWS::SageMaker::MonitoringScheduleMonitoringExecutionSummary` {
  CreationTime: String

  EndpointName: String?

  FailureReason: String?

  LastModifiedTime: String

  MonitoringExecutionStatus: String

  MonitoringScheduleName: String

  ProcessingJobArn: String?

  ScheduledTime: String
}

class `AWS::SageMaker::MonitoringScheduleMonitoringInput` {
  BatchTransformInput: `AWS::SageMaker::MonitoringScheduleBatchTransformInput`?

  EndpointInput: `AWS::SageMaker::MonitoringScheduleEndpointInput`?
}

class `AWS::SageMaker::MonitoringScheduleMonitoringJobDefinition` {
  BaselineConfig: `AWS::SageMaker::MonitoringScheduleBaselineConfig`?

  Environment: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  MonitoringAppSpecification: `AWS::SageMaker::MonitoringScheduleMonitoringAppSpecification`

  MonitoringInputs: Listing<`AWS::SageMaker::MonitoringScheduleMonitoringInput`>

  MonitoringOutputConfig: `AWS::SageMaker::MonitoringScheduleMonitoringOutputConfig`

  MonitoringResources: `AWS::SageMaker::MonitoringScheduleMonitoringResources`

  NetworkConfig: `AWS::SageMaker::MonitoringScheduleNetworkConfig`?

  RoleArn: String

  StoppingCondition: `AWS::SageMaker::MonitoringScheduleStoppingCondition`?
}

class `AWS::SageMaker::MonitoringScheduleMonitoringOutput` {
  S3Output: `AWS::SageMaker::MonitoringScheduleS3Output`
}

class `AWS::SageMaker::MonitoringScheduleMonitoringOutputConfig` {
  KmsKeyId: String?

  MonitoringOutputs: Listing<`AWS::SageMaker::MonitoringScheduleMonitoringOutput`>
}

class `AWS::SageMaker::MonitoringScheduleMonitoringResources` {
  ClusterConfig: `AWS::SageMaker::MonitoringScheduleClusterConfig`
}

class `AWS::SageMaker::MonitoringScheduleMonitoringScheduleConfig` {
  MonitoringJobDefinition: `AWS::SageMaker::MonitoringScheduleMonitoringJobDefinition`?

  MonitoringJobDefinitionName: String?

  MonitoringType: String?

  ScheduleConfig: `AWS::SageMaker::MonitoringScheduleScheduleConfig`?
}

class `AWS::SageMaker::MonitoringScheduleNetworkConfig` {
  EnableInterContainerTrafficEncryption: Boolean?

  EnableNetworkIsolation: Boolean?

  VpcConfig: `AWS::SageMaker::MonitoringScheduleVpcConfig`?
}

class `AWS::SageMaker::MonitoringScheduleScheduleConfig` {
  DataAnalysisEndTime: String?

  DataAnalysisStartTime: String?

  ScheduleExpression: String
}

class `AWS::SageMaker::NotebookInstance` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::NotebookInstanceProperties`

  Type: "AWS::SageMaker::NotebookInstance"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::NotebookInstanceProperties` {
  AcceleratorTypes: Listing<String>?

  AdditionalCodeRepositories: Listing<String>?

  DefaultCodeRepository: String?

  DirectInternetAccess: String?

  InstanceMetadataServiceConfiguration: `AWS::SageMaker::NotebookInstanceInstanceMetadataServiceConfiguration`?

  InstanceType: String

  KmsKeyId: String?

  LifecycleConfigName: String?

  NotebookInstanceName: String?

  PlatformIdentifier: String?

  RoleArn: String

  RootAccess: String?

  SecurityGroupIds: Listing<String>?

  SubnetId: String?

  Tags: Listing<Tag>?

  VolumeSizeInGB: Number?
}

class `AWS::SageMaker::NotebookInstanceInstanceMetadataServiceConfiguration` {
  MinimumInstanceMetadataServiceVersion: String
}

class `AWS::SageMaker::NotebookInstanceLifecycleConfig` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::NotebookInstanceLifecycleConfigProperties`?

  Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::NotebookInstanceLifecycleConfigProperties` {
  NotebookInstanceLifecycleConfigName: String?

  OnCreate: Listing<`AWS::SageMaker::NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook`>?

  OnStart: Listing<`AWS::SageMaker::NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook`>?
}

class `AWS::SageMaker::NotebookInstanceLifecycleConfigNotebookInstanceLifecycleHook` {
  Content: String?
}

class `AWS::SageMaker::Pipeline` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::PipelineProperties`

  Type: "AWS::SageMaker::Pipeline"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::PipelineProperties` {
  ParallelismConfiguration: `AWS::SageMaker::PipelineParallelismConfiguration`?

  PipelineDefinition: `AWS::SageMaker::PipelinePipelineDefinition`

  PipelineDescription: String?

  PipelineDisplayName: String?

  PipelineName: String

  RoleArn: String

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::PipelineParallelismConfiguration` {
  MaxParallelExecutionSteps: Number
}

class `AWS::SageMaker::PipelinePipelineDefinition` {
  PipelineDefinitionBody: String?

  PipelineDefinitionS3Location: `AWS::SageMaker::PipelineS3Location`?
}

class `AWS::SageMaker::PipelineS3Location` {
  Bucket: String

  ETag: String?

  Key: String

  Version: String?
}

class `AWS::SageMaker::Project` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::ProjectProperties`

  Type: "AWS::SageMaker::Project"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::ProjectProperties` {
  ProjectDescription: String?

  ProjectName: String

  ServiceCatalogProvisionedProductDetails: `AWS::SageMaker::ProjectServiceCatalogProvisionedProductDetails`?

  ServiceCatalogProvisioningDetails: `AWS::SageMaker::ProjectServiceCatalogProvisioningDetails`

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::ProjectServiceCatalogProvisionedProductDetails` {
  ProvisionedProductId: String?

  ProvisionedProductStatusMessage: String?
}

class `AWS::SageMaker::ProjectServiceCatalogProvisioningDetails` {
  PathId: String?

  ProductId: String

  ProvisioningArtifactId: String?

  ProvisioningParameters: Listing<Tag>?
}

class `AWS::SageMaker::Space` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::SpaceProperties`

  Type: "AWS::SageMaker::Space"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::SpaceProperties` {
  DomainId: String

  SpaceName: String

  SpaceSettings: `AWS::SageMaker::SpaceSpaceSettings`?

  Tags: Listing<Tag>?
}

class `AWS::SageMaker::SpaceJupyterServerAppSettings` {
  DefaultResourceSpec: `AWS::SageMaker::UserProfileResourceSpec`?
}

class `AWS::SageMaker::SpaceKernelGatewayAppSettings` {
  CustomImages: Listing<`AWS::SageMaker::UserProfileCustomImage`>?

  DefaultResourceSpec: `AWS::SageMaker::UserProfileResourceSpec`?
}

class `AWS::SageMaker::SpaceSpaceSettings` {
  JupyterServerAppSettings: `AWS::SageMaker::SpaceJupyterServerAppSettings`?

  KernelGatewayAppSettings: `AWS::SageMaker::SpaceKernelGatewayAppSettings`?
}

class `AWS::SageMaker::UserProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::UserProfileProperties`

  Type: "AWS::SageMaker::UserProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::UserProfileProperties` {
  DomainId: String

  SingleSignOnUserIdentifier: String?

  SingleSignOnUserValue: String?

  Tags: Listing<Tag>?

  UserProfileName: String

  UserSettings: `AWS::SageMaker::UserProfileUserSettings`?
}

class `AWS::SageMaker::UserProfileCodeEditorAppSettings` {
  DefaultResourceSpec: `AWS::SageMaker::UserProfileResourceSpec`?

  LifecycleConfigArns: Listing<String>?
}

class `AWS::SageMaker::UserProfileCustomFileSystemConfig` {
  EFSFileSystemConfig: `AWS::SageMaker::UserProfileEFSFileSystemConfig`?
}

class `AWS::SageMaker::UserProfileDefaultSpaceStorageSettings` {
  DefaultEbsStorageSettings: `AWS::SageMaker::UserProfileDefaultEbsStorageSettings`?
}

class `AWS::SageMaker::UserProfileJupyterLabAppSettings` {
  CodeRepositories: Listing<`AWS::SageMaker::UserProfileCodeRepository`>?

  CustomImages: Listing<`AWS::SageMaker::UserProfileCustomImage`>?

  DefaultResourceSpec: `AWS::SageMaker::UserProfileResourceSpec`?

  LifecycleConfigArns: Listing<String>?
}

class `AWS::SageMaker::UserProfileJupyterServerAppSettings` {
  DefaultResourceSpec: `AWS::SageMaker::UserProfileResourceSpec`?
}

class `AWS::SageMaker::UserProfileKernelGatewayAppSettings` {
  CustomImages: Listing<`AWS::SageMaker::UserProfileCustomImage`>?

  DefaultResourceSpec: `AWS::SageMaker::UserProfileResourceSpec`?
}

class `AWS::SageMaker::UserProfileUserSettings` {
  CodeEditorAppSettings: `AWS::SageMaker::UserProfileCodeEditorAppSettings`?

  CustomFileSystemConfigs: Listing<`AWS::SageMaker::UserProfileCustomFileSystemConfig`>?

  CustomPosixUserConfig: `AWS::SageMaker::UserProfileCustomPosixUserConfig`?

  DefaultLandingUri: String?

  ExecutionRole: String?

  JupyterLabAppSettings: `AWS::SageMaker::UserProfileJupyterLabAppSettings`?

  JupyterServerAppSettings: `AWS::SageMaker::UserProfileJupyterServerAppSettings`?

  KernelGatewayAppSettings: `AWS::SageMaker::UserProfileKernelGatewayAppSettings`?

  RStudioServerProAppSettings: `AWS::SageMaker::UserProfileRStudioServerProAppSettings`?

  SecurityGroups: Listing<String>?

  SharingSettings: `AWS::SageMaker::UserProfileSharingSettings`?

  SpaceStorageSettings: `AWS::SageMaker::UserProfileDefaultSpaceStorageSettings`?

  StudioWebPortal: String?
}

class `AWS::SageMaker::Workteam` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SageMaker::WorkteamProperties`?

  Type: "AWS::SageMaker::Workteam"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SageMaker::WorkteamProperties` {
  Description: String?

  MemberDefinitions: Listing<`AWS::SageMaker::WorkteamMemberDefinition`>?

  NotificationConfiguration: `AWS::SageMaker::WorkteamNotificationConfiguration`?

  Tags: Listing<Tag>?

  WorkforceName: String?

  WorkteamName: String?
}

class `AWS::SageMaker::WorkteamCognitoMemberDefinition` {
  CognitoClientId: String

  CognitoUserGroup: String

  CognitoUserPool: String
}

class `AWS::SageMaker::WorkteamMemberDefinition` {
  CognitoMemberDefinition: `AWS::SageMaker::WorkteamCognitoMemberDefinition`?

  OidcMemberDefinition: `AWS::SageMaker::WorkteamOidcMemberDefinition`?
}

class `AWS::SageMaker::WorkteamNotificationConfiguration` {
  NotificationTopicArn: String
}

class `AWS::SageMaker::WorkteamOidcMemberDefinition` {
  OidcGroups: Listing<String>
}

class `AWS::Scheduler::Schedule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Scheduler::ScheduleProperties`

  Type: "AWS::Scheduler::Schedule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Scheduler::ScheduleProperties` {
  Description: String?

  EndDate: String?

  FlexibleTimeWindow: `AWS::Scheduler::ScheduleFlexibleTimeWindow`

  GroupName: String?

  KmsKeyArn: String?

  Name: String?

  ScheduleExpression: String

  ScheduleExpressionTimezone: String?

  StartDate: String?

  State: String?

  Target: `AWS::Scheduler::ScheduleTarget`
}

class `AWS::Scheduler::ScheduleEcsParameters` {
  CapacityProviderStrategy: Listing<`AWS::Scheduler::ScheduleCapacityProviderStrategyItem`>?

  EnableECSManagedTags: Boolean?

  EnableExecuteCommand: Boolean?

  Group: String?

  LaunchType: String?

  NetworkConfiguration: `AWS::Scheduler::ScheduleNetworkConfiguration`?

  PlacementConstraints: Listing<`AWS::Scheduler::SchedulePlacementConstraint`>?

  PlacementStrategy: Listing<`AWS::Scheduler::SchedulePlacementStrategy`>?

  PlatformVersion: String?

  PropagateTags: String?

  ReferenceId: String?

  Tags: Dynamic?

  TaskCount: Number?

  TaskDefinitionArn: String
}

class `AWS::Scheduler::ScheduleEventBridgeParameters` {
  DetailType: String

  Source: String
}

class `AWS::Scheduler::ScheduleFlexibleTimeWindow` {
  MaximumWindowInMinutes: Number?

  Mode: String
}

class `AWS::Scheduler::ScheduleNetworkConfiguration` {
  AwsvpcConfiguration: `AWS::Scheduler::ScheduleAwsVpcConfiguration`?
}

class `AWS::Scheduler::ScheduleSageMakerPipelineParameters` {
  PipelineParameterList: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?
}

class `AWS::Scheduler::ScheduleSqsParameters` {
  MessageGroupId: String?
}

class `AWS::Scheduler::ScheduleTarget` {
  Arn: String

  DeadLetterConfig: `AWS::Scheduler::ScheduleDeadLetterConfig`?

  EcsParameters: `AWS::Scheduler::ScheduleEcsParameters`?

  EventBridgeParameters: `AWS::Scheduler::ScheduleEventBridgeParameters`?

  Input: String?

  KinesisParameters: `AWS::Scheduler::ScheduleKinesisParameters`?

  RetryPolicy: `AWS::Scheduler::ScheduleRetryPolicy`?

  RoleArn: String

  SageMakerPipelineParameters: `AWS::Scheduler::ScheduleSageMakerPipelineParameters`?

  SqsParameters: `AWS::Scheduler::ScheduleSqsParameters`?
}

class `AWS::Scheduler::ScheduleGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Scheduler::ScheduleGroupProperties`?

  Type: "AWS::Scheduler::ScheduleGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Scheduler::ScheduleGroupProperties` {
  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::SecretsManager::ResourcePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SecretsManager::ResourcePolicyProperties`

  Type: "AWS::SecretsManager::ResourcePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SecretsManager::ResourcePolicyProperties` {
  BlockPublicPolicy: Boolean?

  ResourcePolicy: Dynamic

  SecretId: String
}

class `AWS::SecretsManager::RotationSchedule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SecretsManager::RotationScheduleProperties`

  Type: "AWS::SecretsManager::RotationSchedule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SecretsManager::RotationScheduleProperties` {
  HostedRotationLambda: `AWS::SecretsManager::RotationScheduleHostedRotationLambda`?

  RotateImmediatelyOnUpdate: Boolean?

  RotationLambdaARN: String?

  RotationRules: `AWS::SecretsManager::RotationScheduleRotationRules`?

  SecretId: String
}

class `AWS::SecretsManager::RotationScheduleHostedRotationLambda` {
  ExcludeCharacters: String?

  KmsKeyArn: String?

  MasterSecretArn: String?

  MasterSecretKmsKeyArn: String?

  RotationLambdaName: String?

  RotationType: String

  Runtime: String?

  SuperuserSecretArn: String?

  SuperuserSecretKmsKeyArn: String?

  VpcSecurityGroupIds: String?

  VpcSubnetIds: String?
}

class `AWS::SecretsManager::RotationScheduleRotationRules` {
  AutomaticallyAfterDays: Number?

  Duration: String?

  ScheduleExpression: String?
}

class `AWS::SecretsManager::Secret` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SecretsManager::SecretProperties`?

  Type: "AWS::SecretsManager::Secret"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SecretsManager::SecretProperties` {
  Description: String?

  GenerateSecretString: `AWS::SecretsManager::SecretGenerateSecretString`?

  KmsKeyId: String?

  Name: String?

  ReplicaRegions: Listing<`AWS::SecretsManager::SecretReplicaRegion`>?

  SecretString: String?

  Tags: Listing<Tag>?
}

class `AWS::SecretsManager::SecretGenerateSecretString` {
  ExcludeCharacters: String?

  ExcludeLowercase: Boolean?

  ExcludeNumbers: Boolean?

  ExcludePunctuation: Boolean?

  ExcludeUppercase: Boolean?

  GenerateStringKey: String?

  IncludeSpace: Boolean?

  PasswordLength: Number?

  RequireEachIncludedType: Boolean?

  SecretStringTemplate: String?
}

class `AWS::SecretsManager::SecretReplicaRegion` {
  KmsKeyId: String?

  Region: String
}

class `AWS::SecretsManager::SecretTargetAttachment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SecretsManager::SecretTargetAttachmentProperties`

  Type: "AWS::SecretsManager::SecretTargetAttachment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SecretsManager::SecretTargetAttachmentProperties` {
  SecretId: String

  TargetId: String

  TargetType: String
}

class `AWS::SecurityHub::AutomationRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SecurityHub::AutomationRuleProperties`?

  Type: "AWS::SecurityHub::AutomationRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SecurityHub::AutomationRuleProperties` {
  Actions: Listing<`AWS::SecurityHub::AutomationRuleAutomationRulesAction`>?

  Criteria: `AWS::SecurityHub::AutomationRuleAutomationRulesFindingFilters`?

  Description: String?

  IsTerminal: Boolean?

  RuleName: String?

  RuleOrder: Number?

  RuleStatus: String?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::SecurityHub::AutomationRuleAutomationRulesAction` {
  FindingFieldsUpdate: `AWS::SecurityHub::AutomationRuleAutomationRulesFindingFieldsUpdate`

  Type: String
}

class `AWS::SecurityHub::AutomationRuleAutomationRulesFindingFieldsUpdate` {
  Confidence: Number?

  Criticality: Number?

  Note: `AWS::SecurityHub::AutomationRuleNoteUpdate`?

  RelatedFindings: Listing<`AWS::SecurityHub::AutomationRuleRelatedFinding`>?

  Severity: `AWS::SecurityHub::AutomationRuleSeverityUpdate`?

  Types: Listing<String>?

  UserDefinedFields: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  VerificationState: String?

  Workflow: `AWS::SecurityHub::AutomationRuleWorkflowUpdate`?
}

class `AWS::SecurityHub::AutomationRuleAutomationRulesFindingFilters` {
  AwsAccountId: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  CompanyName: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  ComplianceAssociatedStandardsId: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  ComplianceSecurityControlId: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  ComplianceStatus: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  Confidence: Listing<`AWS::SecurityHub::AutomationRuleNumberFilter`>?

  CreatedAt: Listing<`AWS::SecurityHub::AutomationRuleDateFilter`>?

  Criticality: Listing<`AWS::SecurityHub::AutomationRuleNumberFilter`>?

  Description: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  FirstObservedAt: Listing<`AWS::SecurityHub::AutomationRuleDateFilter`>?

  GeneratorId: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  Id: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  LastObservedAt: Listing<`AWS::SecurityHub::AutomationRuleDateFilter`>?

  NoteText: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  NoteUpdatedAt: Listing<`AWS::SecurityHub::AutomationRuleDateFilter`>?

  NoteUpdatedBy: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  ProductArn: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  ProductName: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  RecordState: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  RelatedFindingsId: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  RelatedFindingsProductArn: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  ResourceDetailsOther: Listing<`AWS::SecurityHub::AutomationRuleMapFilter`>?

  ResourceId: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  ResourcePartition: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  ResourceRegion: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  ResourceTags: Listing<`AWS::SecurityHub::AutomationRuleMapFilter`>?

  ResourceType: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  SeverityLabel: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  SourceUrl: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  Title: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  Type: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  UpdatedAt: Listing<`AWS::SecurityHub::AutomationRuleDateFilter`>?

  UserDefinedFields: Listing<`AWS::SecurityHub::AutomationRuleMapFilter`>?

  VerificationState: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?

  WorkflowStatus: Listing<`AWS::SecurityHub::AutomationRuleStringFilter`>?
}

class `AWS::SecurityHub::AutomationRuleDateFilter` {
  DateRange: `AWS::SecurityHub::AutomationRuleDateRange`?

  End: String?

  Start: String?
}

class `AWS::SecurityHub::AutomationRuleMapFilter` {
  Comparison: String

  Key: String

  Value: String
}

class `AWS::SecurityHub::AutomationRuleNoteUpdate` {
  Text: String

  UpdatedBy: Dynamic
}

class `AWS::SecurityHub::AutomationRuleNumberFilter` {
  Eq: Number?

  Gte: Number?

  Lte: Number?
}

class `AWS::SecurityHub::AutomationRuleRelatedFinding` {
  Id: Dynamic

  ProductArn: String
}

class `AWS::SecurityHub::AutomationRuleSeverityUpdate` {
  Label: String?

  Normalized: Number?

  Product: Number?
}

class `AWS::SecurityHub::Hub` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SecurityHub::HubProperties`?

  Type: "AWS::SecurityHub::Hub"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SecurityHub::HubProperties` {
  AutoEnableControls: Boolean?

  ControlFindingGenerator: String?

  EnableDefaultStandards: Boolean?

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::SecurityHub::Standard` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SecurityHub::StandardProperties`

  Type: "AWS::SecurityHub::Standard"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SecurityHub::StandardProperties` {
  DisabledStandardsControls: Listing<`AWS::SecurityHub::StandardStandardsControl`>?

  StandardsArn: String
}

class `AWS::SecurityHub::StandardStandardsControl` {
  Reason: String?

  StandardsControlArn: String
}

class `AWS::ServiceCatalog::AcceptedPortfolioShare` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::AcceptedPortfolioShareProperties`

  Type: "AWS::ServiceCatalog::AcceptedPortfolioShare"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::AcceptedPortfolioShareProperties` {
  AcceptLanguage: String?

  PortfolioId: String
}

class `AWS::ServiceCatalog::CloudFormationProduct` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::CloudFormationProductProperties`

  Type: "AWS::ServiceCatalog::CloudFormationProduct"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::CloudFormationProductProperties` {
  AcceptLanguage: String?

  Description: String?

  Distributor: String?

  Name: String

  Owner: String

  ProductType: String?

  ProvisioningArtifactParameters: Listing<`AWS::ServiceCatalog::CloudFormationProductProvisioningArtifactProperties`>?

  ReplaceProvisioningArtifacts: Boolean?

  SourceConnection: `AWS::ServiceCatalog::CloudFormationProductSourceConnection`?

  SupportDescription: String?

  SupportEmail: String?

  SupportUrl: String?

  Tags: Listing<Tag>?
}

class `AWS::ServiceCatalog::CloudFormationProductCodeStarParameters` {
  ArtifactPath: String

  Branch: String

  ConnectionArn: String

  Repository: String
}

class `AWS::ServiceCatalog::CloudFormationProductConnectionParameters` {
  CodeStar: `AWS::ServiceCatalog::CloudFormationProductCodeStarParameters`?
}

class `AWS::ServiceCatalog::CloudFormationProductProvisioningArtifactProperties` {
  Description: String?

  DisableTemplateValidation: Boolean?

  Info: Dynamic

  Name: String?

  Type: String?
}

class `AWS::ServiceCatalog::CloudFormationProductSourceConnection` {
  ConnectionParameters: `AWS::ServiceCatalog::CloudFormationProductConnectionParameters`

  Type: String
}

class `AWS::ServiceCatalog::CloudFormationProvisionedProduct` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::CloudFormationProvisionedProductProperties`?

  Type: "AWS::ServiceCatalog::CloudFormationProvisionedProduct"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::CloudFormationProvisionedProductProperties` {
  AcceptLanguage: String?

  NotificationArns: Listing<String>?

  PathId: String?

  PathName: String?

  ProductId: String?

  ProductName: String?

  ProvisionedProductName: String?

  ProvisioningArtifactId: String?

  ProvisioningArtifactName: String?

  ProvisioningParameters: Listing<Tag>?

  ProvisioningPreferences: `AWS::ServiceCatalog::CloudFormationProvisionedProductProvisioningPreferences`?

  Tags: Listing<Tag>?
}

class `AWS::ServiceCatalog::CloudFormationProvisionedProductProvisioningPreferences` {
  StackSetAccounts: Listing<String>?

  StackSetFailureToleranceCount: Number?

  StackSetFailureTolerancePercentage: Number?

  StackSetMaxConcurrencyCount: Number?

  StackSetMaxConcurrencyPercentage: Number?

  StackSetOperationType: String?

  StackSetRegions: Listing<String>?
}

class `AWS::ServiceCatalog::LaunchNotificationConstraint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::LaunchNotificationConstraintProperties`

  Type: "AWS::ServiceCatalog::LaunchNotificationConstraint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::LaunchNotificationConstraintProperties` {
  AcceptLanguage: String?

  Description: String?

  NotificationArns: Listing<String>

  PortfolioId: String

  ProductId: String
}

class `AWS::ServiceCatalog::LaunchRoleConstraint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::LaunchRoleConstraintProperties`

  Type: "AWS::ServiceCatalog::LaunchRoleConstraint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::LaunchRoleConstraintProperties` {
  AcceptLanguage: String?

  Description: String?

  LocalRoleName: String?

  PortfolioId: String

  ProductId: String

  RoleArn: String?
}

class `AWS::ServiceCatalog::LaunchTemplateConstraint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::LaunchTemplateConstraintProperties`

  Type: "AWS::ServiceCatalog::LaunchTemplateConstraint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::LaunchTemplateConstraintProperties` {
  AcceptLanguage: String?

  Description: String?

  PortfolioId: String

  ProductId: String

  Rules: String
}

class `AWS::ServiceCatalog::Portfolio` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::PortfolioProperties`

  Type: "AWS::ServiceCatalog::Portfolio"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::PortfolioProperties` {
  AcceptLanguage: String?

  Description: String?

  DisplayName: String

  ProviderName: String

  Tags: Listing<Tag>?
}

class `AWS::ServiceCatalog::PortfolioPrincipalAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::PortfolioPrincipalAssociationProperties`

  Type: "AWS::ServiceCatalog::PortfolioPrincipalAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::PortfolioPrincipalAssociationProperties` {
  AcceptLanguage: String?

  PortfolioId: String

  PrincipalARN: String

  PrincipalType: String
}

class `AWS::ServiceCatalog::PortfolioProductAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::PortfolioProductAssociationProperties`

  Type: "AWS::ServiceCatalog::PortfolioProductAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::PortfolioProductAssociationProperties` {
  AcceptLanguage: String?

  PortfolioId: String

  ProductId: String

  SourcePortfolioId: String?
}

class `AWS::ServiceCatalog::PortfolioShare` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::PortfolioShareProperties`

  Type: "AWS::ServiceCatalog::PortfolioShare"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::PortfolioShareProperties` {
  AcceptLanguage: String?

  AccountId: String

  PortfolioId: String

  ShareTagOptions: Boolean?
}

class `AWS::ServiceCatalog::ResourceUpdateConstraint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::ResourceUpdateConstraintProperties`

  Type: "AWS::ServiceCatalog::ResourceUpdateConstraint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::ResourceUpdateConstraintProperties` {
  AcceptLanguage: String?

  Description: String?

  PortfolioId: String

  ProductId: String

  TagUpdateOnProvisionedProduct: String
}

class `AWS::ServiceCatalog::ServiceAction` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::ServiceActionProperties`

  Type: "AWS::ServiceCatalog::ServiceAction"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::ServiceActionProperties` {
  AcceptLanguage: String?

  Definition: Listing<Tag>

  DefinitionType: String

  Description: String?

  Name: String
}

class `AWS::ServiceCatalog::ServiceActionAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::ServiceActionAssociationProperties`

  Type: "AWS::ServiceCatalog::ServiceActionAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::ServiceActionAssociationProperties` {
  ProductId: String

  ProvisioningArtifactId: String

  ServiceActionId: String
}

class `AWS::ServiceCatalog::StackSetConstraint` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::StackSetConstraintProperties`

  Type: "AWS::ServiceCatalog::StackSetConstraint"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::StackSetConstraintProperties` {
  AcceptLanguage: String?

  AccountList: Listing<String>

  AdminRole: String

  Description: String

  ExecutionRole: String

  PortfolioId: String

  ProductId: String

  RegionList: Listing<String>

  StackInstanceControl: String
}

class `AWS::ServiceCatalog::TagOption` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::TagOptionProperties`

  Type: "AWS::ServiceCatalog::TagOption"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::TagOptionProperties` {
  Active: Boolean?

  Key: String

  Value: String
}

class `AWS::ServiceCatalog::TagOptionAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalog::TagOptionAssociationProperties`

  Type: "AWS::ServiceCatalog::TagOptionAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalog::TagOptionAssociationProperties` {
  ResourceId: String

  TagOptionId: String
}

class `AWS::ServiceCatalogAppRegistry::Application` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalogAppRegistry::ApplicationProperties`

  Type: "AWS::ServiceCatalogAppRegistry::Application"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalogAppRegistry::ApplicationProperties` {
  Description: String?

  Name: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::ServiceCatalogAppRegistry::AttributeGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalogAppRegistry::AttributeGroupProperties`

  Type: "AWS::ServiceCatalogAppRegistry::AttributeGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalogAppRegistry::AttributeGroupProperties` {
  Attributes: Dynamic

  Description: String?

  Name: String

  Tags: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?
}

class `AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalogAppRegistry::AttributeGroupAssociationProperties`

  Type: "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalogAppRegistry::AttributeGroupAssociationProperties` {
  Application: String

  AttributeGroup: String
}

class `AWS::ServiceCatalogAppRegistry::ResourceAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceCatalogAppRegistry::ResourceAssociationProperties`

  Type: "AWS::ServiceCatalogAppRegistry::ResourceAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceCatalogAppRegistry::ResourceAssociationProperties` {
  Application: String

  Resource: String

  ResourceType: String
}

class `AWS::ServiceDiscovery::HttpNamespace` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceDiscovery::HttpNamespaceProperties`

  Type: "AWS::ServiceDiscovery::HttpNamespace"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceDiscovery::Instance` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceDiscovery::InstanceProperties`

  Type: "AWS::ServiceDiscovery::Instance"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceDiscovery::InstanceProperties` {
  InstanceAttributes: Dynamic

  InstanceId: String?

  ServiceId: String
}

class `AWS::ServiceDiscovery::PrivateDnsNamespace` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceDiscovery::PrivateDnsNamespaceProperties`

  Type: "AWS::ServiceDiscovery::PrivateDnsNamespace"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceDiscovery::PrivateDnsNamespaceProperties` {
  Description: String?

  Name: String

  Properties: `AWS::ServiceDiscovery::PrivateDnsNamespaceProperties0`?

  Tags: Listing<Tag>?

  Vpc: String
}

class `AWS::ServiceDiscovery::PrivateDnsNamespacePrivateDnsPropertiesMutable` {
  SOA: `AWS::ServiceDiscovery::PublicDnsNamespaceSOA`?
}

class `AWS::ServiceDiscovery::PrivateDnsNamespaceProperties0` {
  DnsProperties: `AWS::ServiceDiscovery::PrivateDnsNamespacePrivateDnsPropertiesMutable`?
}

class `AWS::ServiceDiscovery::PublicDnsNamespaceSOA` {
  TTL: Number?
}

class `AWS::ServiceDiscovery::PublicDnsNamespace` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceDiscovery::PublicDnsNamespaceProperties`

  Type: "AWS::ServiceDiscovery::PublicDnsNamespace"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceDiscovery::PublicDnsNamespaceProperties` {
  Description: String?

  Name: String

  Properties: `AWS::ServiceDiscovery::PublicDnsNamespaceProperties0`?

  Tags: Listing<Tag>?
}

class `AWS::ServiceDiscovery::PublicDnsNamespaceProperties0` {
  DnsProperties: `AWS::ServiceDiscovery::PublicDnsNamespacePublicDnsPropertiesMutable`?
}

class `AWS::ServiceDiscovery::PublicDnsNamespacePublicDnsPropertiesMutable` {
  SOA: `AWS::ServiceDiscovery::PublicDnsNamespaceSOA`?
}

class `AWS::ServiceDiscovery::Service` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::ServiceDiscovery::ServiceProperties`?

  Type: "AWS::ServiceDiscovery::Service"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::ServiceDiscovery::ServiceProperties` {
  Description: String?

  DnsConfig: `AWS::ServiceDiscovery::ServiceDnsConfig`?

  HealthCheckConfig: `AWS::ServiceDiscovery::ServiceHealthCheckConfig`?

  HealthCheckCustomConfig: `AWS::ServiceDiscovery::ServiceHealthCheckCustomConfig`?

  Name: String?

  NamespaceId: String?

  Tags: Listing<Tag>?

  Type: String?
}

class `AWS::ServiceDiscovery::ServiceDnsConfig` {
  DnsRecords: Listing<`AWS::ServiceDiscovery::ServiceDnsRecord`>

  NamespaceId: String?

  RoutingPolicy: String?
}

class `AWS::ServiceDiscovery::ServiceDnsRecord` {
  TTL: Number

  Type: String
}

class `AWS::ServiceDiscovery::ServiceHealthCheckConfig` {
  FailureThreshold: Number?

  ResourcePath: String?

  Type: String
}

class `AWS::ServiceDiscovery::ServiceHealthCheckCustomConfig` {
  FailureThreshold: Number?
}

class `AWS::Shield::DRTAccess` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Shield::DRTAccessProperties`

  Type: "AWS::Shield::DRTAccess"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Shield::DRTAccessProperties` {
  LogBucketList: Listing<String>?

  RoleArn: String
}

class `AWS::Shield::ProactiveEngagement` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Shield::ProactiveEngagementProperties`

  Type: "AWS::Shield::ProactiveEngagement"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Shield::ProactiveEngagementProperties` {
  EmergencyContactList: Listing<`AWS::Shield::ProactiveEngagementEmergencyContact`>

  ProactiveEngagementStatus: String
}

class `AWS::Shield::ProactiveEngagementEmergencyContact` {
  ContactNotes: String?

  EmailAddress: String

  PhoneNumber: String?
}

class `AWS::Shield::Protection` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Shield::ProtectionProperties`

  Type: "AWS::Shield::Protection"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Shield::ProtectionProperties` {
  ApplicationLayerAutomaticResponseConfiguration: `AWS::Shield::ProtectionApplicationLayerAutomaticResponseConfiguration`?

  HealthCheckArns: Listing<String>?

  Name: String

  ResourceArn: String

  Tags: Listing<Tag>?
}

class `AWS::Shield::ProtectionAction` {
  Block: Dynamic?

  Count: Dynamic?
}

class `AWS::Shield::ProtectionApplicationLayerAutomaticResponseConfiguration` {
  Action: `AWS::Shield::ProtectionAction`

  Status: String
}

class `AWS::Shield::ProtectionGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Shield::ProtectionGroupProperties`

  Type: "AWS::Shield::ProtectionGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Shield::ProtectionGroupProperties` {
  Aggregation: String

  Members: Listing<String>?

  Pattern: String

  ProtectionGroupId: String

  ResourceType: String?

  Tags: Listing<Tag>?
}

class `AWS::Signer::ProfilePermission` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Signer::ProfilePermissionProperties`

  Type: "AWS::Signer::ProfilePermission"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Signer::ProfilePermissionProperties` {
  Action: String

  Principal: String

  ProfileName: String

  ProfileVersion: String?

  StatementId: String
}

class `AWS::Signer::SigningProfile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Signer::SigningProfileProperties`

  Type: "AWS::Signer::SigningProfile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Signer::SigningProfileProperties` {
  PlatformId: String

  SignatureValidityPeriod: `AWS::Signer::SigningProfileSignatureValidityPeriod`?

  Tags: Listing<Tag>?
}

class `AWS::Signer::SigningProfileSignatureValidityPeriod` {
  Type: String?

  Value: Number?
}

class `AWS::SimSpaceWeaver::Simulation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SimSpaceWeaver::SimulationProperties`

  Type: "AWS::SimSpaceWeaver::Simulation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SimSpaceWeaver::SimulationProperties` {
  MaximumDuration: String?

  Name: String

  RoleArn: String

  SchemaS3Location: `AWS::SimSpaceWeaver::SimulationS3Location`?

  SnapshotS3Location: `AWS::SimSpaceWeaver::SimulationS3Location`?
}

class `AWS::StepFunctions::Activity` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::StepFunctions::ActivityProperties`

  Type: "AWS::StepFunctions::Activity"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::StepFunctions::ActivityProperties` {
  Name: String

  Tags: Listing<Tag>?
}

class `AWS::StepFunctions::StateMachine` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::StepFunctions::StateMachineProperties`

  Type: "AWS::StepFunctions::StateMachine"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::StepFunctions::StateMachineProperties` {
  Definition: Dynamic?

  DefinitionS3Location: `AWS::StepFunctions::StateMachineS3Location`?

  DefinitionString: String?

  DefinitionSubstitutions: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), Dynamic>?

  LoggingConfiguration: `AWS::StepFunctions::StateMachineLoggingConfiguration`?

  RoleArn: String

  StateMachineName: String?

  StateMachineType: String?

  Tags: Listing<Tag>?

  TracingConfiguration: `AWS::StepFunctions::StateMachineTracingConfiguration`?
}

class `AWS::StepFunctions::StateMachineLogDestination` {
  CloudWatchLogsLogGroup: `AWS::StepFunctions::StateMachineCloudWatchLogsLogGroup`?
}

class `AWS::StepFunctions::StateMachineLoggingConfiguration` {
  Destinations: Listing<`AWS::StepFunctions::StateMachineLogDestination`>?

  IncludeExecutionData: Boolean?

  Level: String?
}

class `AWS::StepFunctions::StateMachineS3Location` {
  Bucket: String

  Key: String

  Version: String?
}

class `AWS::StepFunctions::StateMachineAlias` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::StepFunctions::StateMachineAliasProperties`?

  Type: "AWS::StepFunctions::StateMachineAlias"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::StepFunctions::StateMachineAliasProperties` {
  DeploymentPreference: `AWS::StepFunctions::StateMachineAliasDeploymentPreference`?

  Description: String?

  Name: String?

  RoutingConfiguration: Listing<`AWS::StepFunctions::StateMachineAliasRoutingConfigurationVersion`>?
}

class `AWS::StepFunctions::StateMachineAliasDeploymentPreference` {
  Alarms: Listing<String>?

  Interval: Number?

  Percentage: Number?

  StateMachineVersionArn: String

  Type: String
}

class `AWS::StepFunctions::StateMachineAliasRoutingConfigurationVersion` {
  StateMachineVersionArn: String

  Weight: Number
}

class `AWS::StepFunctions::StateMachineVersion` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::StepFunctions::StateMachineVersionProperties`

  Type: "AWS::StepFunctions::StateMachineVersion"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::StepFunctions::StateMachineVersionProperties` {
  Description: String?

  StateMachineArn: String

  StateMachineRevisionId: String?
}

class `AWS::SupportApp::AccountAlias` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SupportApp::AccountAliasProperties`

  Type: "AWS::SupportApp::AccountAlias"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SupportApp::AccountAliasProperties` {
  AccountAlias: String
}

class `AWS::SupportApp::SlackChannelConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SupportApp::SlackChannelConfigurationProperties`

  Type: "AWS::SupportApp::SlackChannelConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SupportApp::SlackChannelConfigurationProperties` {
  ChannelId: String

  ChannelName: String?

  ChannelRoleArn: String

  NotifyOnAddCorrespondenceToCase: Boolean?

  NotifyOnCaseSeverity: String

  NotifyOnCreateOrReopenCase: Boolean?

  NotifyOnResolveCase: Boolean?

  TeamId: String
}

class `AWS::SupportApp::SlackWorkspaceConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SupportApp::SlackWorkspaceConfigurationProperties`

  Type: "AWS::SupportApp::SlackWorkspaceConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SupportApp::SlackWorkspaceConfigurationProperties` {
  TeamId: String

  VersionId: String?
}

class `AWS::Synthetics::Canary` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Synthetics::CanaryProperties`

  Type: "AWS::Synthetics::Canary"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Synthetics::CanaryProperties` {
  ArtifactConfig: `AWS::Synthetics::CanaryArtifactConfig`?

  ArtifactS3Location: String

  Code: `AWS::Synthetics::CanaryCode`

  ExecutionRoleArn: String

  FailureRetentionPeriod: Number?

  Name: String

  RunConfig: `AWS::Synthetics::CanaryRunConfig`?

  RuntimeVersion: String

  Schedule: `AWS::Synthetics::CanarySchedule`

  StartCanaryAfterCreation: Boolean?

  SuccessRetentionPeriod: Number?

  Tags: Listing<Tag>?

  VPCConfig: `AWS::Synthetics::CanaryVPCConfig`?

  VisualReference: `AWS::Synthetics::CanaryVisualReference`?
}

class `AWS::Synthetics::CanaryArtifactConfig` {
  S3Encryption: `AWS::Synthetics::CanaryS3Encryption`?
}

class `AWS::Synthetics::CanaryBaseScreenshot` {
  IgnoreCoordinates: Listing<String>?

  ScreenshotName: String
}

class `AWS::Synthetics::CanaryCode` {
  Handler: String

  S3Bucket: String?

  S3Key: String?

  S3ObjectVersion: String?

  Script: String?

  SourceLocationArn: String?
}

class `AWS::Synthetics::CanaryRunConfig` {
  ActiveTracing: Boolean?

  EnvironmentVariables: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  MemoryInMB: Number?

  TimeoutInSeconds: Number?
}

class `AWS::Synthetics::CanaryS3Encryption` {
  EncryptionMode: String?

  KmsKeyArn: String?
}

class `AWS::Synthetics::CanarySchedule` {
  DurationInSeconds: String?

  Expression: String
}

class `AWS::Synthetics::CanaryVPCConfig` {
  SecurityGroupIds: Listing<String>

  SubnetIds: Listing<String>

  VpcId: String?
}

class `AWS::Synthetics::CanaryVisualReference` {
  BaseCanaryRunId: String

  BaseScreenshots: Listing<`AWS::Synthetics::CanaryBaseScreenshot`>?
}

class `AWS::Synthetics::Group` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Synthetics::GroupProperties`

  Type: "AWS::Synthetics::Group"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Synthetics::GroupProperties` {
  Name: String

  ResourceArns: Listing<String>?

  Tags: Listing<Tag>?
}

class `AWS::SystemsManagerSAP::Application` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::SystemsManagerSAP::ApplicationProperties`

  Type: "AWS::SystemsManagerSAP::Application"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::SystemsManagerSAP::ApplicationProperties` {
  ApplicationId: String

  ApplicationType: String

  Credentials: Listing<`AWS::SystemsManagerSAP::ApplicationCredential`>?

  Instances: Listing<String>?

  SapInstanceNumber: String?

  Sid: String?

  Tags: Listing<Tag>?
}

class `AWS::SystemsManagerSAP::ApplicationCredential` {
  CredentialType: String?

  DatabaseName: String?

  SecretId: String?
}

class `AWS::Timestream::Database` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Timestream::DatabaseProperties`?

  Type: "AWS::Timestream::Database"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Timestream::DatabaseProperties` {
  DatabaseName: String?

  KmsKeyId: String?

  Tags: Listing<Tag>?
}

class `AWS::Timestream::ScheduledQuery` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Timestream::ScheduledQueryProperties`

  Type: "AWS::Timestream::ScheduledQuery"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Timestream::ScheduledQueryProperties` {
  ClientToken: String?

  ErrorReportConfiguration: `AWS::Timestream::ScheduledQueryErrorReportConfiguration`

  KmsKeyId: String?

  NotificationConfiguration: `AWS::Timestream::ScheduledQueryNotificationConfiguration`

  QueryString: String

  ScheduleConfiguration: `AWS::Timestream::ScheduledQueryScheduleConfiguration`

  ScheduledQueryExecutionRoleArn: String

  ScheduledQueryName: String?

  Tags: Listing<Tag>?

  TargetConfiguration: `AWS::Timestream::ScheduledQueryTargetConfiguration`?
}

class `AWS::Timestream::ScheduledQueryDimensionMapping` {
  DimensionValueType: String

  Name: String
}

class `AWS::Timestream::ScheduledQueryErrorReportConfiguration` {
  S3Configuration: `AWS::Timestream::ScheduledQueryS3Configuration`
}

class `AWS::Timestream::ScheduledQueryMixedMeasureMapping` {
  MeasureName: String?

  MeasureValueType: String

  MultiMeasureAttributeMappings: Listing<`AWS::Timestream::ScheduledQueryMultiMeasureAttributeMapping`>?

  SourceColumn: String?

  TargetMeasureName: String?
}

class `AWS::Timestream::ScheduledQueryMultiMeasureAttributeMapping` {
  MeasureValueType: String

  SourceColumn: String

  TargetMultiMeasureAttributeName: String?
}

class `AWS::Timestream::ScheduledQueryMultiMeasureMappings` {
  MultiMeasureAttributeMappings: Listing<`AWS::Timestream::ScheduledQueryMultiMeasureAttributeMapping`>

  TargetMultiMeasureName: String?
}

class `AWS::Timestream::ScheduledQueryNotificationConfiguration` {
  SnsConfiguration: `AWS::Timestream::ScheduledQuerySnsConfiguration`
}

class `AWS::Timestream::ScheduledQueryS3Configuration` {
  BucketName: String

  EncryptionOption: String?

  ObjectKeyPrefix: String?
}

class `AWS::Timestream::ScheduledQueryTargetConfiguration` {
  TimestreamConfiguration: `AWS::Timestream::ScheduledQueryTimestreamConfiguration`
}

class `AWS::Timestream::ScheduledQueryTimestreamConfiguration` {
  DatabaseName: String

  DimensionMappings: Listing<`AWS::Timestream::ScheduledQueryDimensionMapping`>

  MeasureNameColumn: String?

  MixedMeasureMappings: Listing<`AWS::Timestream::ScheduledQueryMixedMeasureMapping`>?

  MultiMeasureMappings: `AWS::Timestream::ScheduledQueryMultiMeasureMappings`?

  TableName: String

  TimeColumn: String
}

class `AWS::Timestream::Table` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Timestream::TableProperties`

  Type: "AWS::Timestream::Table"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Timestream::TableProperties` {
  DatabaseName: String

  MagneticStoreWriteProperties: `AWS::Timestream::TableMagneticStoreWriteProperties`?

  RetentionProperties: `AWS::Timestream::TableRetentionProperties`?

  Schema: `AWS::Timestream::TableSchema`?

  TableName: String?

  Tags: Listing<Tag>?
}

class `AWS::Timestream::TableMagneticStoreRejectedDataLocation` {
  S3Configuration: `AWS::Timestream::TableS3Configuration`?
}

class `AWS::Timestream::TableMagneticStoreWriteProperties` {
  EnableMagneticStoreWrites: Boolean

  MagneticStoreRejectedDataLocation: `AWS::Timestream::TableMagneticStoreRejectedDataLocation`?
}

class `AWS::Timestream::TablePartitionKey` {
  EnforcementInRecord: String?

  Name: String?

  Type: String
}

class `AWS::Timestream::TableRetentionProperties` {
  MagneticStoreRetentionPeriodInDays: String?

  MemoryStoreRetentionPeriodInHours: String?
}

class `AWS::Timestream::TableS3Configuration` {
  BucketName: String

  EncryptionOption: String

  KmsKeyId: String?

  ObjectKeyPrefix: String?
}

class `AWS::Timestream::TableSchema` {
  CompositePartitionKey: Listing<`AWS::Timestream::TablePartitionKey`>?
}

class `AWS::Transfer::Agreement` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Transfer::AgreementProperties`

  Type: "AWS::Transfer::Agreement"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Transfer::AgreementProperties` {
  AccessRole: String

  BaseDirectory: String

  Description: String?

  LocalProfileId: String

  PartnerProfileId: String

  ServerId: String

  Status: String?

  Tags: Listing<Tag>?
}

class `AWS::Transfer::Certificate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Transfer::CertificateProperties`

  Type: "AWS::Transfer::Certificate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Transfer::CertificateProperties` {
  ActiveDate: String?

  Certificate: String

  CertificateChain: String?

  Description: String?

  InactiveDate: String?

  PrivateKey: String?

  Tags: Listing<Tag>?

  Usage: String
}

class `AWS::Transfer::Connector` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Transfer::ConnectorProperties`

  Type: "AWS::Transfer::Connector"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Transfer::ConnectorProperties` {
  AccessRole: String

  As2Config: `AWS::Transfer::ConnectorAs2Config`?

  LoggingRole: String?

  SftpConfig: `AWS::Transfer::ConnectorSftpConfig`?

  Tags: Listing<Tag>?

  Url: String
}

class `AWS::Transfer::ConnectorAs2Config` {
  BasicAuthSecretId: String?

  Compression: String?

  EncryptionAlgorithm: String?

  LocalProfileId: String?

  MdnResponse: String?

  MdnSigningAlgorithm: String?

  MessageSubject: String?

  PartnerProfileId: String?

  SigningAlgorithm: String?
}

class `AWS::Transfer::ConnectorSftpConfig` {
  TrustedHostKeys: Listing<String>?

  UserSecretId: String?
}

class `AWS::Transfer::Profile` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Transfer::ProfileProperties`

  Type: "AWS::Transfer::Profile"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Transfer::ProfileProperties` {
  As2Id: String

  CertificateIds: Listing<String>?

  ProfileType: String

  Tags: Listing<Tag>?
}

class `AWS::Transfer::Server` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Transfer::ServerProperties`?

  Type: "AWS::Transfer::Server"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Transfer::ServerProperties` {
  Certificate: String?

  Domain: String?

  EndpointDetails: `AWS::Transfer::ServerEndpointDetails`?

  EndpointType: String?

  IdentityProviderDetails: `AWS::Transfer::ServerIdentityProviderDetails`?

  IdentityProviderType: String?

  LoggingRole: String?

  PostAuthenticationLoginBanner: String?

  PreAuthenticationLoginBanner: String?

  ProtocolDetails: `AWS::Transfer::ServerProtocolDetails`?

  Protocols: Listing<`AWS::Transfer::UserSshPublicKey`>?

  S3StorageOptions: `AWS::Transfer::ServerS3StorageOptions`?

  SecurityPolicyName: String?

  StructuredLogDestinations: Listing<`AWS::Transfer::UserSshPublicKey`>?

  Tags: Listing<Tag>?

  WorkflowDetails: `AWS::Transfer::ServerWorkflowDetails`?
}

class `AWS::Transfer::ServerEndpointDetails` {
  AddressAllocationIds: Listing<String>?

  SecurityGroupIds: Listing<String>?

  SubnetIds: Listing<String>?

  VpcEndpointId: String?

  VpcId: String?
}

class `AWS::Transfer::ServerIdentityProviderDetails` {
  DirectoryId: String?

  Function: String?

  InvocationRole: String?

  SftpAuthenticationMethods: String?

  Url: String?
}

class `AWS::Transfer::ServerProtocolDetails` {
  As2Transports: Listing<`AWS::Transfer::UserSshPublicKey`>?

  PassiveIp: String?

  SetStatOption: String?

  TlsSessionResumptionMode: String?
}

class `AWS::Transfer::ServerS3StorageOptions` {
  DirectoryListingOptimization: String?
}

class `AWS::Transfer::ServerWorkflowDetail` {
  ExecutionRole: String

  WorkflowId: String
}

class `AWS::Transfer::ServerWorkflowDetails` {
  OnPartialUpload: Listing<`AWS::Transfer::ServerWorkflowDetail`>?

  OnUpload: Listing<`AWS::Transfer::ServerWorkflowDetail`>?
}

class `AWS::Transfer::User` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Transfer::UserProperties`

  Type: "AWS::Transfer::User"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Transfer::UserProperties` {
  HomeDirectory: String?

  HomeDirectoryMappings: Listing<`AWS::Transfer::UserHomeDirectoryMapEntry`>?

  HomeDirectoryType: String?

  Policy: String?

  PosixProfile: `AWS::Transfer::UserPosixProfile`?

  Role: String

  ServerId: String

  SshPublicKeys: Listing<`AWS::Transfer::UserSshPublicKey`>?

  Tags: Listing<Tag>?

  UserName: String
}

class `AWS::Transfer::UserHomeDirectoryMapEntry` {
  Entry: String

  Target: String

  Type: String?
}

class `AWS::Transfer::UserPosixProfile` {
  Gid: Number

  SecondaryGids: Listing<Number>?

  Uid: Number
}

class `AWS::Transfer::Workflow` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Transfer::WorkflowProperties`

  Type: "AWS::Transfer::Workflow"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Transfer::WorkflowProperties` {
  Description: String?

  OnExceptionSteps: Listing<`AWS::Transfer::WorkflowWorkflowStep`>?

  Steps: Listing<`AWS::Transfer::WorkflowWorkflowStep`>

  Tags: Listing<Tag>?
}

class `AWS::Transfer::WorkflowCopyStepDetails` {
  DestinationFileLocation: `AWS::Transfer::WorkflowS3FileLocation`?

  Name: String?

  OverwriteExisting: String?

  SourceFileLocation: String?
}

class `AWS::Transfer::WorkflowCustomStepDetails` {
  Name: String?

  SourceFileLocation: String?

  Target: String?

  TimeoutSeconds: Number?
}

class `AWS::Transfer::WorkflowDecryptStepDetails` {
  DestinationFileLocation: `AWS::Transfer::WorkflowInputFileLocation`?

  Name: String?

  OverwriteExisting: String?

  SourceFileLocation: String?

  Type: String?
}

class `AWS::Transfer::WorkflowDeleteStepDetails` {
  Name: String?

  SourceFileLocation: String?
}

class `AWS::Transfer::WorkflowEfsInputFileLocation` {
  FileSystemId: String?

  Path: String?
}

class `AWS::Transfer::WorkflowInputFileLocation` {
  EfsFileLocation: `AWS::Transfer::WorkflowEfsInputFileLocation`?

  S3FileLocation: `AWS::Transfer::WorkflowS3InputFileLocation`?
}

class `AWS::Transfer::WorkflowS3FileLocation` {
  S3FileLocation: `AWS::Transfer::WorkflowS3InputFileLocation`?
}

class `AWS::Transfer::WorkflowS3InputFileLocation` {
  Bucket: String?

  Key: String?
}

class `AWS::Transfer::WorkflowTagStepDetails` {
  Name: String?

  SourceFileLocation: String?

  Tags: Listing<Tag>?
}

class `AWS::Transfer::WorkflowWorkflowStep` {
  CopyStepDetails: `AWS::Transfer::WorkflowCopyStepDetails`?

  CustomStepDetails: `AWS::Transfer::WorkflowCustomStepDetails`?

  DecryptStepDetails: `AWS::Transfer::WorkflowDecryptStepDetails`?

  DeleteStepDetails: `AWS::Transfer::WorkflowDeleteStepDetails`?

  TagStepDetails: `AWS::Transfer::WorkflowTagStepDetails`?

  Type: String?
}

class `AWS::VerifiedPermissions::IdentitySource` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VerifiedPermissions::IdentitySourceProperties`

  Type: "AWS::VerifiedPermissions::IdentitySource"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VerifiedPermissions::IdentitySourceProperties` {
  Configuration: `AWS::VerifiedPermissions::IdentitySourceIdentitySourceConfiguration`

  PolicyStoreId: String?

  PrincipalEntityType: String?
}

class `AWS::VerifiedPermissions::IdentitySourceCognitoUserPoolConfiguration` {
  ClientIds: Listing<String>?

  UserPoolArn: String
}

class `AWS::VerifiedPermissions::IdentitySourceIdentitySourceConfiguration` {
  CognitoUserPoolConfiguration: `AWS::VerifiedPermissions::IdentitySourceCognitoUserPoolConfiguration`
}

class `AWS::VerifiedPermissions::IdentitySourceIdentitySourceDetails` {
  ClientIds: Listing<String>?

  DiscoveryUrl: String?

  OpenIdIssuer: String?

  UserPoolArn: String?
}

class `AWS::VerifiedPermissions::Policy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VerifiedPermissions::PolicyProperties`

  Type: "AWS::VerifiedPermissions::Policy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VerifiedPermissions::PolicyProperties` {
  Definition: `AWS::VerifiedPermissions::PolicyPolicyDefinition`

  PolicyStoreId: String
}

class `AWS::VerifiedPermissions::PolicyEntityIdentifier` {
  EntityId: String

  EntityType: String
}

class `AWS::VerifiedPermissions::PolicyPolicyDefinition` {
  Static: `AWS::VerifiedPermissions::PolicyStaticPolicyDefinition`?

  TemplateLinked: `AWS::VerifiedPermissions::PolicyTemplateLinkedPolicyDefinition`?
}

class `AWS::VerifiedPermissions::PolicyStaticPolicyDefinition` {
  Description: String?

  Statement: String
}

class `AWS::VerifiedPermissions::PolicyTemplateLinkedPolicyDefinition` {
  PolicyTemplateId: String

  Principal: `AWS::VerifiedPermissions::PolicyEntityIdentifier`?

  Resource: `AWS::VerifiedPermissions::PolicyEntityIdentifier`?
}

class `AWS::VerifiedPermissions::PolicyStore` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VerifiedPermissions::PolicyStoreProperties`

  Type: "AWS::VerifiedPermissions::PolicyStore"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VerifiedPermissions::PolicyStoreProperties` {
  Description: String?

  Schema: `AWS::VerifiedPermissions::PolicyStoreSchemaDefinition`?

  ValidationSettings: `AWS::VerifiedPermissions::PolicyStoreValidationSettings`
}

class `AWS::VerifiedPermissions::PolicyStoreSchemaDefinition` {
  CedarJson: String?
}

class `AWS::VerifiedPermissions::PolicyTemplate` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VerifiedPermissions::PolicyTemplateProperties`

  Type: "AWS::VerifiedPermissions::PolicyTemplate"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VerifiedPermissions::PolicyTemplateProperties` {
  Description: String?

  PolicyStoreId: String?

  Statement: String
}

class `AWS::VoiceID::Domain` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VoiceID::DomainProperties`

  Type: "AWS::VoiceID::Domain"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VoiceID::DomainProperties` {
  Description: String?

  Name: String

  ServerSideEncryptionConfiguration: `AWS::VoiceID::DomainServerSideEncryptionConfiguration`

  Tags: Listing<Tag>?
}

class `AWS::VoiceID::DomainServerSideEncryptionConfiguration` {
  KmsKeyId: String
}

class `AWS::VpcLattice::AccessLogSubscription` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VpcLattice::AccessLogSubscriptionProperties`

  Type: "AWS::VpcLattice::AccessLogSubscription"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VpcLattice::AccessLogSubscriptionProperties` {
  DestinationArn: String

  ResourceIdentifier: String?

  Tags: Listing<Tag>?
}

class `AWS::VpcLattice::AuthPolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VpcLattice::AuthPolicyProperties`

  Type: "AWS::VpcLattice::AuthPolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VpcLattice::AuthPolicyProperties` {
  Policy: Dynamic

  ResourceIdentifier: String
}

class `AWS::VpcLattice::Listener` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VpcLattice::ListenerProperties`

  Type: "AWS::VpcLattice::Listener"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VpcLattice::ListenerProperties` {
  DefaultAction: `AWS::VpcLattice::ListenerDefaultAction`

  Name: String?

  Port: Number?

  Protocol: String

  ServiceIdentifier: String?

  Tags: Listing<Tag>?
}

class `AWS::VpcLattice::ListenerDefaultAction` {
  FixedResponse: `AWS::VpcLattice::RuleFixedResponse`?

  Forward: `AWS::VpcLattice::ListenerForward`?
}

class `AWS::VpcLattice::RuleFixedResponse` {
  StatusCode: Number
}

class `AWS::VpcLattice::ListenerForward` {
  TargetGroups: Listing<`AWS::VpcLattice::RuleWeightedTargetGroup`>
}

class `AWS::VpcLattice::RuleWeightedTargetGroup` {
  TargetGroupIdentifier: String

  Weight: Number?
}

class `AWS::VpcLattice::ResourcePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VpcLattice::ResourcePolicyProperties`

  Type: "AWS::VpcLattice::ResourcePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VpcLattice::Rule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VpcLattice::RuleProperties`

  Type: "AWS::VpcLattice::Rule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VpcLattice::RuleProperties` {
  Action: `AWS::VpcLattice::RuleAction`

  ListenerIdentifier: String?

  Match: `AWS::VpcLattice::RuleMatch`

  Name: String?

  Priority: Number

  ServiceIdentifier: String?

  Tags: Listing<Tag>?
}

class `AWS::VpcLattice::RuleAction` {
  FixedResponse: `AWS::VpcLattice::RuleFixedResponse`?

  Forward: `AWS::VpcLattice::RuleForward`?
}

class `AWS::VpcLattice::RuleForward` {
  TargetGroups: Listing<`AWS::VpcLattice::RuleWeightedTargetGroup`>
}

class `AWS::VpcLattice::RuleHeaderMatch` {
  CaseSensitive: Boolean?

  Match: `AWS::VpcLattice::RuleHeaderMatchType`

  Name: String
}

class `AWS::VpcLattice::RuleHeaderMatchType` {
  Contains: String?

  Exact: String?

  Prefix: String?
}

class `AWS::VpcLattice::RuleHttpMatch` {
  HeaderMatches: Listing<`AWS::VpcLattice::RuleHeaderMatch`>?

  Method: String?

  PathMatch: `AWS::VpcLattice::RulePathMatch`?
}

class `AWS::VpcLattice::RuleMatch` {
  HttpMatch: `AWS::VpcLattice::RuleHttpMatch`
}

class `AWS::VpcLattice::RulePathMatch` {
  CaseSensitive: Boolean?

  Match: `AWS::VpcLattice::RulePathMatchType`
}

class `AWS::VpcLattice::RulePathMatchType` {
  Exact: String?

  Prefix: String?
}

class `AWS::VpcLattice::Service` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VpcLattice::ServiceProperties`?

  Type: "AWS::VpcLattice::Service"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VpcLattice::ServiceProperties` {
  AuthType: String?

  CertificateArn: String?

  CustomDomainName: String?

  DnsEntry: `AWS::VpcLattice::ServiceNetworkServiceAssociationDnsEntry`?

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::VpcLattice::ServiceNetworkServiceAssociationDnsEntry` {
  DomainName: String?

  HostedZoneId: String?
}

class `AWS::VpcLattice::ServiceNetwork` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VpcLattice::ServiceNetworkProperties`?

  Type: "AWS::VpcLattice::ServiceNetwork"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VpcLattice::ServiceNetworkProperties` {
  AuthType: String?

  Name: String?

  Tags: Listing<Tag>?
}

class `AWS::VpcLattice::ServiceNetworkServiceAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VpcLattice::ServiceNetworkServiceAssociationProperties`?

  Type: "AWS::VpcLattice::ServiceNetworkServiceAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VpcLattice::ServiceNetworkServiceAssociationProperties` {
  DnsEntry: `AWS::VpcLattice::ServiceNetworkServiceAssociationDnsEntry`?

  ServiceIdentifier: String?

  ServiceNetworkIdentifier: String?

  Tags: Listing<Tag>?
}

class `AWS::VpcLattice::ServiceNetworkVpcAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VpcLattice::ServiceNetworkVpcAssociationProperties`?

  Type: "AWS::VpcLattice::ServiceNetworkVpcAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VpcLattice::ServiceNetworkVpcAssociationProperties` {
  SecurityGroupIds: Listing<String>?

  ServiceNetworkIdentifier: String?

  Tags: Listing<Tag>?

  VpcIdentifier: String?
}

class `AWS::VpcLattice::TargetGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::VpcLattice::TargetGroupProperties`

  Type: "AWS::VpcLattice::TargetGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::VpcLattice::TargetGroupProperties` {
  Config: `AWS::VpcLattice::TargetGroupTargetGroupConfig`?

  Name: String?

  Tags: Listing<Tag>?

  Targets: Listing<`AWS::VpcLattice::TargetGroupTarget`>?

  Type: String
}

class `AWS::VpcLattice::TargetGroupHealthCheckConfig` {
  Enabled: Boolean?

  HealthCheckIntervalSeconds: Number?

  HealthCheckTimeoutSeconds: Number?

  HealthyThresholdCount: Number?

  Matcher: `AWS::VpcLattice::TargetGroupMatcher`?

  Path: String?

  Port: Number?

  Protocol: String?

  ProtocolVersion: String?

  UnhealthyThresholdCount: Number?
}

class `AWS::VpcLattice::TargetGroupMatcher` {
  HttpCode: String
}

class `AWS::VpcLattice::TargetGroupTarget` {
  Id: String

  Port: Number?
}

class `AWS::VpcLattice::TargetGroupTargetGroupConfig` {
  HealthCheck: `AWS::VpcLattice::TargetGroupHealthCheckConfig`?

  IpAddressType: String?

  LambdaEventStructureVersion: String?

  Port: Number?

  Protocol: String?

  ProtocolVersion: String?

  VpcIdentifier: String?
}

class `AWS::WAF::ByteMatchSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAF::ByteMatchSetProperties`

  Type: "AWS::WAF::ByteMatchSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAF::ByteMatchSetProperties` {
  ByteMatchTuples: Listing<`AWS::WAF::ByteMatchSetByteMatchTuple`>?

  Name: String
}

class `AWS::WAF::ByteMatchSetByteMatchTuple` {
  FieldToMatch: `AWS::WAFRegional::XssMatchSetFieldToMatch`

  PositionalConstraint: String

  TargetString: String?

  TargetStringBase64: String?

  TextTransformation: String
}

class `AWS::WAFRegional::XssMatchSetFieldToMatch` {
  Data: String?

  Type: String
}

class `AWS::WAF::IPSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAF::IPSetProperties`

  Type: "AWS::WAF::IPSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAF::IPSetProperties` {
  IPSetDescriptors: Listing<`AWS::WAFRegional::IPSetIPSetDescriptor`>?

  Name: String
}

class `AWS::WAF::Rule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAF::RuleProperties`

  Type: "AWS::WAF::Rule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAF::RuleProperties` {
  MetricName: String

  Name: String

  Predicates: Listing<`AWS::WAFRegional::RulePredicate`>?
}

class `AWS::WAFRegional::RulePredicate` {
  DataId: String

  Negated: Boolean

  Type: String
}

class `AWS::WAF::SizeConstraintSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAF::SizeConstraintSetProperties`

  Type: "AWS::WAF::SizeConstraintSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAF::SizeConstraintSetProperties` {
  Name: String

  SizeConstraints: Listing<`AWS::WAF::SizeConstraintSetSizeConstraint`>
}

class `AWS::WAF::SizeConstraintSetSizeConstraint` {
  ComparisonOperator: String

  FieldToMatch: `AWS::WAFRegional::XssMatchSetFieldToMatch`

  Size: Number

  TextTransformation: String
}

class `AWS::WAF::SqlInjectionMatchSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAF::SqlInjectionMatchSetProperties`

  Type: "AWS::WAF::SqlInjectionMatchSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAF::SqlInjectionMatchSetProperties` {
  Name: String

  SqlInjectionMatchTuples: Listing<`AWS::WAF::SqlInjectionMatchSetSqlInjectionMatchTuple`>?
}

class `AWS::WAF::SqlInjectionMatchSetSqlInjectionMatchTuple` {
  FieldToMatch: `AWS::WAFRegional::XssMatchSetFieldToMatch`

  TextTransformation: String
}

class `AWS::WAF::WebACL` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAF::WebACLProperties`

  Type: "AWS::WAF::WebACL"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAF::WebACLProperties` {
  DefaultAction: `AWS::WAFRegional::WebACLAction`

  MetricName: String

  Name: String

  Rules: Listing<`AWS::WAF::WebACLActivatedRule`>?
}

class `AWS::WAF::WebACLActivatedRule` {
  Action: `AWS::WAFRegional::WebACLAction`?

  Priority: Number

  RuleId: String
}

class `AWS::WAF::XssMatchSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAF::XssMatchSetProperties`

  Type: "AWS::WAF::XssMatchSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAF::XssMatchSetProperties` {
  Name: String

  XssMatchTuples: Listing<`AWS::WAF::XssMatchSetXssMatchTuple`>
}

class `AWS::WAF::XssMatchSetXssMatchTuple` {
  FieldToMatch: `AWS::WAFRegional::XssMatchSetFieldToMatch`

  TextTransformation: String
}

class `AWS::WAFRegional::ByteMatchSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFRegional::ByteMatchSetProperties`

  Type: "AWS::WAFRegional::ByteMatchSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFRegional::ByteMatchSetProperties` {
  ByteMatchTuples: Listing<`AWS::WAFRegional::ByteMatchSetByteMatchTuple`>?

  Name: String
}

class `AWS::WAFRegional::ByteMatchSetByteMatchTuple` {
  FieldToMatch: `AWS::WAFRegional::XssMatchSetFieldToMatch`

  PositionalConstraint: String

  TargetString: String?

  TargetStringBase64: String?

  TextTransformation: String
}

class `AWS::WAFRegional::GeoMatchSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFRegional::GeoMatchSetProperties`

  Type: "AWS::WAFRegional::GeoMatchSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFRegional::GeoMatchSetProperties` {
  GeoMatchConstraints: Listing<`AWS::WAFRegional::IPSetIPSetDescriptor`>?

  Name: String
}

class `AWS::WAFRegional::IPSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFRegional::IPSetProperties`

  Type: "AWS::WAFRegional::IPSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFRegional::IPSetProperties` {
  IPSetDescriptors: Listing<`AWS::WAFRegional::IPSetIPSetDescriptor`>?

  Name: String
}

class `AWS::WAFRegional::RateBasedRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFRegional::RateBasedRuleProperties`

  Type: "AWS::WAFRegional::RateBasedRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFRegional::RateBasedRuleProperties` {
  MatchPredicates: Listing<`AWS::WAFRegional::RulePredicate`>?

  MetricName: String

  Name: String

  RateKey: String

  RateLimit: Number
}

class `AWS::WAFRegional::RegexPatternSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFRegional::RegexPatternSetProperties`

  Type: "AWS::WAFRegional::RegexPatternSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFRegional::RegexPatternSetProperties` {
  Name: String

  RegexPatternStrings: Listing<String>
}

class `AWS::WAFRegional::Rule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFRegional::RuleProperties`

  Type: "AWS::WAFRegional::Rule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFRegional::RuleProperties` {
  MetricName: String

  Name: String

  Predicates: Listing<`AWS::WAFRegional::RulePredicate`>?
}

class `AWS::WAFRegional::SizeConstraintSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFRegional::SizeConstraintSetProperties`

  Type: "AWS::WAFRegional::SizeConstraintSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFRegional::SizeConstraintSetProperties` {
  Name: String

  SizeConstraints: Listing<`AWS::WAFRegional::SizeConstraintSetSizeConstraint`>?
}

class `AWS::WAFRegional::SizeConstraintSetSizeConstraint` {
  ComparisonOperator: String

  FieldToMatch: `AWS::WAFRegional::XssMatchSetFieldToMatch`

  Size: Number

  TextTransformation: String
}

class `AWS::WAFRegional::SqlInjectionMatchSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFRegional::SqlInjectionMatchSetProperties`

  Type: "AWS::WAFRegional::SqlInjectionMatchSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFRegional::SqlInjectionMatchSetProperties` {
  Name: String

  SqlInjectionMatchTuples: Listing<`AWS::WAFRegional::SqlInjectionMatchSetSqlInjectionMatchTuple`>?
}

class `AWS::WAFRegional::SqlInjectionMatchSetSqlInjectionMatchTuple` {
  FieldToMatch: `AWS::WAFRegional::XssMatchSetFieldToMatch`

  TextTransformation: String
}

class `AWS::WAFRegional::WebACL` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFRegional::WebACLProperties`

  Type: "AWS::WAFRegional::WebACL"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFRegional::WebACLProperties` {
  DefaultAction: `AWS::WAFRegional::WebACLAction`

  MetricName: String

  Name: String

  Rules: Listing<`AWS::WAFRegional::WebACLRule`>?
}

class `AWS::WAFRegional::WebACLRule` {
  Action: `AWS::WAFRegional::WebACLAction`

  Priority: Number

  RuleId: String
}

class `AWS::WAFRegional::WebACLAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFRegional::WebACLAssociationProperties`

  Type: "AWS::WAFRegional::WebACLAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFRegional::WebACLAssociationProperties` {
  ResourceArn: String

  WebACLId: String
}

class `AWS::WAFRegional::XssMatchSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFRegional::XssMatchSetProperties`

  Type: "AWS::WAFRegional::XssMatchSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFRegional::XssMatchSetProperties` {
  Name: String

  XssMatchTuples: Listing<`AWS::WAFRegional::XssMatchSetXssMatchTuple`>?
}

class `AWS::WAFRegional::XssMatchSetXssMatchTuple` {
  FieldToMatch: `AWS::WAFRegional::XssMatchSetFieldToMatch`

  TextTransformation: String
}

class `AWS::WAFv2::IPSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFv2::IPSetProperties`

  Type: "AWS::WAFv2::IPSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFv2::IPSetProperties` {
  Addresses: Listing<String>

  Description: String?

  IPAddressVersion: String

  Name: String?

  Scope: String

  Tags: Listing<Tag>?
}

class `AWS::WAFv2::LoggingConfiguration` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFv2::LoggingConfigurationProperties`

  Type: "AWS::WAFv2::LoggingConfiguration"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFv2::LoggingConfigurationProperties` {
  LogDestinationConfigs: Listing<String>

  LoggingFilter: `AWS::WAFv2::LoggingConfigurationLoggingFilter`?

  RedactedFields: Listing<`AWS::WAFv2::LoggingConfigurationFieldToMatch`>?

  ResourceArn: String
}

class `AWS::WAFv2::LoggingConfigurationCondition` {
  ActionCondition: `AWS::WAFv2::LoggingConfigurationActionCondition`?

  LabelNameCondition: `AWS::WAFv2::LoggingConfigurationLabelNameCondition`?
}

class `AWS::WAFv2::LoggingConfigurationFieldToMatch` {
  JsonBody: `AWS::WAFv2::LoggingConfigurationJsonBody`?

  Method: Dynamic?

  QueryString: Dynamic?

  SingleHeader: `AWS::WAFv2::WebACLSingleQueryArgument`?

  UriPath: Dynamic?
}

class `AWS::WAFv2::LoggingConfigurationFilter` {
  Behavior: String

  Conditions: Listing<`AWS::WAFv2::LoggingConfigurationCondition`>

  Requirement: String
}

class `AWS::WAFv2::LoggingConfigurationJsonBody` {
  InvalidFallbackBehavior: String?

  MatchPattern: `AWS::WAFv2::WebACLJsonMatchPattern`

  MatchScope: String
}

class `AWS::WAFv2::LoggingConfigurationLabelNameCondition` {
  LabelName: String
}

class `AWS::WAFv2::LoggingConfigurationLoggingFilter` {
  DefaultBehavior: String

  Filters: Listing<`AWS::WAFv2::LoggingConfigurationFilter`>
}

class `AWS::WAFv2::WebACLJsonMatchPattern` {
  All: Dynamic?

  IncludedPaths: Listing<String>?
}

class `AWS::WAFv2::RegexPatternSet` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFv2::RegexPatternSetProperties`

  Type: "AWS::WAFv2::RegexPatternSet"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFv2::RegexPatternSetProperties` {
  Description: String?

  Name: String?

  RegularExpressionList: Listing<String>

  Scope: String

  Tags: Listing<Tag>?
}

class `AWS::WAFv2::RuleGroup` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFv2::RuleGroupProperties`

  Type: "AWS::WAFv2::RuleGroup"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFv2::RuleGroupProperties` {
  AvailableLabels: Listing<`AWS::WAFv2::RuleGroupLabelSummary`>?

  Capacity: Number

  ConsumedLabels: Listing<`AWS::WAFv2::RuleGroupLabelSummary`>?

  CustomResponseBodies: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::WAFv2::WebACLCustomResponseBody`>?

  Description: String?

  Name: String?

  Rules: Listing<`AWS::WAFv2::RuleGroupRule`>?

  Scope: String

  Tags: Listing<Tag>?

  VisibilityConfig: `AWS::WAFv2::WebACLVisibilityConfig`
}

class `AWS::WAFv2::RuleGroupCountAction` {
  CustomRequestHandling: `AWS::WAFv2::RuleGroupCustomRequestHandling`?
}

class `AWS::WAFv2::RuleGroupOrStatement` {
  Statements: Listing<`AWS::WAFv2::RuleGroupStatement`>
}

class `AWS::WAFv2::RuleGroupBlockAction` {
  CustomResponse: `AWS::WAFv2::RuleGroupCustomResponse`?
}

class `AWS::WAFv2::WebACLBody` {
  OversizeHandling: String?
}

class `AWS::WAFv2::RuleGroupByteMatchStatement` {
  FieldToMatch: `AWS::WAFv2::RuleGroupFieldToMatch`

  PositionalConstraint: String

  SearchString: String?

  SearchStringBase64: String?

  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::RuleGroupChallengeConfig` {
  ImmunityTimeProperty: `AWS::WAFv2::WebACLImmunityTimeProperty`?
}

class `AWS::WAFv2::WebACLCookieMatchPattern` {
  All: Dynamic?

  ExcludedCookies: Listing<String>?

  IncludedCookies: Listing<String>?
}

class `AWS::WAFv2::RuleGroupCookies` {
  MatchPattern: `AWS::WAFv2::WebACLCookieMatchPattern`

  MatchScope: String

  OversizeHandling: String
}

class `AWS::WAFv2::RuleGroupCustomRequestHandling` {
  InsertHeaders: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>
}

class `AWS::WAFv2::RuleGroupCustomResponse` {
  CustomResponseBodyKey: String?

  ResponseCode: Number

  ResponseHeaders: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?
}

class `AWS::WAFv2::WebACLCustomResponseBody` {
  Content: String

  ContentType: String
}

class `AWS::WAFv2::RuleGroupFieldToMatch` {
  AllQueryArguments: Dynamic?

  Body: `AWS::WAFv2::WebACLBody`?

  Cookies: `AWS::WAFv2::RuleGroupCookies`?

  Headers: `AWS::WAFv2::RuleGroupHeaders`?

  JsonBody: `AWS::WAFv2::RuleGroupJsonBody`?

  Method: Dynamic?

  QueryString: Dynamic?

  SingleHeader: `AWS::WAFv2::WebACLSingleQueryArgument`?

  SingleQueryArgument: `AWS::WAFv2::WebACLSingleQueryArgument`?

  UriPath: Dynamic?
}

class `AWS::WAFv2::WebACLForwardedIPConfiguration` {
  FallbackBehavior: String

  HeaderName: String
}

class `AWS::WAFv2::RuleGroupGeoMatchStatement` {
  CountryCodes: Listing<String>?

  ForwardedIPConfig: `AWS::WAFv2::WebACLForwardedIPConfiguration`?
}

class `AWS::WAFv2::WebACLHeaderMatchPattern` {
  All: Dynamic?

  ExcludedHeaders: Listing<String>?

  IncludedHeaders: Listing<String>?
}

class `AWS::WAFv2::RuleGroupHeaders` {
  MatchPattern: `AWS::WAFv2::WebACLHeaderMatchPattern`

  MatchScope: String

  OversizeHandling: String
}

class `AWS::WAFv2::WebACLIPSetForwardedIPConfiguration` {
  FallbackBehavior: String

  HeaderName: String

  Position: String
}

class `AWS::WAFv2::RuleGroupIPSetReferenceStatement` {
  Arn: String

  IPSetForwardedIPConfig: `AWS::WAFv2::WebACLIPSetForwardedIPConfiguration`?
}

class `AWS::WAFv2::WebACLImmunityTimeProperty` {
  ImmunityTime: Number
}

class `AWS::WAFv2::RuleGroupJsonBody` {
  InvalidFallbackBehavior: String?

  MatchPattern: `AWS::WAFv2::WebACLJsonMatchPattern`

  MatchScope: String

  OversizeHandling: String?
}

class `AWS::WAFv2::WebACLLabelMatchStatement` {
  Key: String

  Scope: String
}

class `AWS::WAFv2::RuleGroupNotStatement` {
  Statement: `AWS::WAFv2::RuleGroupStatement`
}

class `AWS::WAFv2::RuleGroupRateBasedStatement` {
  AggregateKeyType: String

  CustomKeys: Listing<`AWS::WAFv2::RuleGroupRateBasedStatementCustomKey`>?

  ForwardedIPConfig: `AWS::WAFv2::WebACLForwardedIPConfiguration`?

  Limit: Number

  ScopeDownStatement: `AWS::WAFv2::RuleGroupStatement`?
}

class `AWS::WAFv2::RuleGroupRateBasedStatementCustomKey` {
  Cookie: `AWS::WAFv2::RuleGroupRateLimitQueryArgument`?

  ForwardedIP: Dynamic?

  HTTPMethod: Dynamic?

  Header: `AWS::WAFv2::RuleGroupRateLimitQueryArgument`?

  IP: Dynamic?

  LabelNamespace: `AWS::WAFv2::WebACLRateLimitLabelNamespace`?

  QueryArgument: `AWS::WAFv2::RuleGroupRateLimitQueryArgument`?

  QueryString: `AWS::WAFv2::RuleGroupRateLimitUriPath`?

  UriPath: `AWS::WAFv2::RuleGroupRateLimitUriPath`?
}

class `AWS::WAFv2::RuleGroupRateLimitQueryArgument` {
  Name: String

  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::RuleGroupRateLimitUriPath` {
  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::RuleGroupRegexMatchStatement` {
  FieldToMatch: `AWS::WAFv2::RuleGroupFieldToMatch`

  RegexString: String

  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::RuleGroupRegexPatternSetReferenceStatement` {
  Arn: String

  FieldToMatch: `AWS::WAFv2::RuleGroupFieldToMatch`

  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::RuleGroupRule` {
  Action: `AWS::WAFv2::RuleGroupRuleAction`?

  CaptchaConfig: `AWS::WAFv2::RuleGroupChallengeConfig`?

  ChallengeConfig: `AWS::WAFv2::RuleGroupChallengeConfig`?

  Name: String

  Priority: Number

  RuleLabels: Listing<`AWS::WAFv2::WebACLSingleQueryArgument`>?

  Statement: `AWS::WAFv2::RuleGroupStatement`

  VisibilityConfig: `AWS::WAFv2::WebACLVisibilityConfig`
}

class `AWS::WAFv2::RuleGroupRuleAction` {
  Allow: `AWS::WAFv2::RuleGroupCountAction`?

  Block: `AWS::WAFv2::RuleGroupBlockAction`?

  Captcha: `AWS::WAFv2::RuleGroupCountAction`?

  Challenge: `AWS::WAFv2::RuleGroupCountAction`?

  Count: `AWS::WAFv2::RuleGroupCountAction`?
}

class `AWS::WAFv2::RuleGroupSizeConstraintStatement` {
  ComparisonOperator: String

  FieldToMatch: `AWS::WAFv2::RuleGroupFieldToMatch`

  Size: Number

  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::RuleGroupSqliMatchStatement` {
  FieldToMatch: `AWS::WAFv2::RuleGroupFieldToMatch`

  SensitivityLevel: String?

  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::RuleGroupStatement` {
  AndStatement: `AWS::WAFv2::RuleGroupOrStatement`?

  ByteMatchStatement: `AWS::WAFv2::RuleGroupByteMatchStatement`?

  GeoMatchStatement: `AWS::WAFv2::RuleGroupGeoMatchStatement`?

  IPSetReferenceStatement: `AWS::WAFv2::RuleGroupIPSetReferenceStatement`?

  LabelMatchStatement: `AWS::WAFv2::WebACLLabelMatchStatement`?

  NotStatement: `AWS::WAFv2::RuleGroupNotStatement`?

  OrStatement: `AWS::WAFv2::RuleGroupOrStatement`?

  RateBasedStatement: `AWS::WAFv2::RuleGroupRateBasedStatement`?

  RegexMatchStatement: `AWS::WAFv2::RuleGroupRegexMatchStatement`?

  RegexPatternSetReferenceStatement: `AWS::WAFv2::RuleGroupRegexPatternSetReferenceStatement`?

  SizeConstraintStatement: `AWS::WAFv2::RuleGroupSizeConstraintStatement`?

  SqliMatchStatement: `AWS::WAFv2::RuleGroupSqliMatchStatement`?

  XssMatchStatement: `AWS::WAFv2::RuleGroupXssMatchStatement`?
}

class `AWS::WAFv2::WebACLTextTransformation` {
  Priority: Number

  Type: String
}

class `AWS::WAFv2::WebACLVisibilityConfig` {
  CloudWatchMetricsEnabled: Boolean

  MetricName: String

  SampledRequestsEnabled: Boolean
}

class `AWS::WAFv2::RuleGroupXssMatchStatement` {
  FieldToMatch: `AWS::WAFv2::RuleGroupFieldToMatch`

  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::WebACL` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFv2::WebACLProperties`

  Type: "AWS::WAFv2::WebACL"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFv2::WebACLProperties` {
  AssociationConfig: `AWS::WAFv2::WebACLAssociationConfig`?

  CaptchaConfig: `AWS::WAFv2::WebACLChallengeConfig`?

  ChallengeConfig: `AWS::WAFv2::WebACLChallengeConfig`?

  CustomResponseBodies: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::WAFv2::WebACLCustomResponseBody`>?

  DefaultAction: `AWS::WAFv2::WebACLDefaultAction`

  Description: String?

  Name: String?

  Rules: Listing<`AWS::WAFv2::WebACLRule`>?

  Scope: String

  Tags: Listing<Tag>?

  TokenDomains: Listing<String>?

  VisibilityConfig: `AWS::WAFv2::WebACLVisibilityConfig`
}

class `AWS::WAFv2::WebACLAWSManagedRulesACFPRuleSet` {
  CreationPath: String

  EnableRegexInPath: Boolean?

  RegistrationPagePath: String

  RequestInspection: `AWS::WAFv2::WebACLRequestInspectionACFP`

  ResponseInspection: `AWS::WAFv2::WebACLResponseInspection`?
}

class `AWS::WAFv2::WebACLAWSManagedRulesATPRuleSet` {
  EnableRegexInPath: Boolean?

  LoginPath: String

  RequestInspection: `AWS::WAFv2::WebACLRequestInspection`?

  ResponseInspection: `AWS::WAFv2::WebACLResponseInspection`?
}

class `AWS::WAFv2::WebACLAWSManagedRulesBotControlRuleSet` {
  EnableMachineLearning: Boolean?

  InspectionLevel: String
}

class `AWS::WAFv2::WebACLCountAction` {
  CustomRequestHandling: `AWS::WAFv2::WebACLCustomRequestHandling`?
}

class `AWS::WAFv2::WebACLOrStatement` {
  Statements: Listing<`AWS::WAFv2::WebACLStatement`>
}

class `AWS::WAFv2::WebACLAssociationConfig` {
  RequestBody: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), `AWS::WAFv2::WebACLRequestBodyAssociatedResourceTypeConfig`>?
}

class `AWS::WAFv2::WebACLBlockAction` {
  CustomResponse: `AWS::WAFv2::WebACLCustomResponse`?
}

class `AWS::WAFv2::WebACLByteMatchStatement` {
  FieldToMatch: `AWS::WAFv2::WebACLFieldToMatch`

  PositionalConstraint: String

  SearchString: String?

  SearchStringBase64: String?

  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::WebACLChallengeConfig` {
  ImmunityTimeProperty: `AWS::WAFv2::WebACLImmunityTimeProperty`?
}

class `AWS::WAFv2::WebACLCookies` {
  MatchPattern: `AWS::WAFv2::WebACLCookieMatchPattern`

  MatchScope: String

  OversizeHandling: String
}

class `AWS::WAFv2::WebACLCustomRequestHandling` {
  InsertHeaders: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>
}

class `AWS::WAFv2::WebACLCustomResponse` {
  CustomResponseBodyKey: String?

  ResponseCode: Number

  ResponseHeaders: Listing<`AWS::WAFv2::WebACLCustomHTTPHeader`>?
}

class `AWS::WAFv2::WebACLDefaultAction` {
  Allow: `AWS::WAFv2::WebACLCountAction`?

  Block: `AWS::WAFv2::WebACLBlockAction`?
}

class `AWS::WAFv2::WebACLFieldIdentifier` {
  Identifier: String
}

class `AWS::WAFv2::WebACLFieldToMatch` {
  AllQueryArguments: Dynamic?

  Body: `AWS::WAFv2::WebACLBody`?

  Cookies: `AWS::WAFv2::WebACLCookies`?

  Headers: `AWS::WAFv2::WebACLHeaders`?

  JsonBody: `AWS::WAFv2::WebACLJsonBody`?

  Method: Dynamic?

  QueryString: Dynamic?

  SingleHeader: `AWS::WAFv2::WebACLSingleQueryArgument`?

  SingleQueryArgument: `AWS::WAFv2::WebACLSingleQueryArgument`?

  UriPath: Dynamic?
}

class `AWS::WAFv2::WebACLGeoMatchStatement` {
  CountryCodes: Listing<String>?

  ForwardedIPConfig: `AWS::WAFv2::WebACLForwardedIPConfiguration`?
}

class `AWS::WAFv2::WebACLHeaders` {
  MatchPattern: `AWS::WAFv2::WebACLHeaderMatchPattern`

  MatchScope: String

  OversizeHandling: String
}

class `AWS::WAFv2::WebACLIPSetReferenceStatement` {
  Arn: String

  IPSetForwardedIPConfig: `AWS::WAFv2::WebACLIPSetForwardedIPConfiguration`?
}

class `AWS::WAFv2::WebACLJsonBody` {
  InvalidFallbackBehavior: String?

  MatchPattern: `AWS::WAFv2::WebACLJsonMatchPattern`

  MatchScope: String

  OversizeHandling: String?
}

class `AWS::WAFv2::WebACLManagedRuleGroupConfig` {
  AWSManagedRulesACFPRuleSet: `AWS::WAFv2::WebACLAWSManagedRulesACFPRuleSet`?

  AWSManagedRulesATPRuleSet: `AWS::WAFv2::WebACLAWSManagedRulesATPRuleSet`?

  AWSManagedRulesBotControlRuleSet: `AWS::WAFv2::WebACLAWSManagedRulesBotControlRuleSet`?

  LoginPath: String?

  PasswordField: `AWS::WAFv2::WebACLFieldIdentifier`?

  PayloadType: String?

  UsernameField: `AWS::WAFv2::WebACLFieldIdentifier`?
}

class `AWS::WAFv2::WebACLManagedRuleGroupStatement` {
  ExcludedRules: Listing<`AWS::WAFv2::WebACLSingleQueryArgument`>?

  ManagedRuleGroupConfigs: Listing<`AWS::WAFv2::WebACLManagedRuleGroupConfig`>?

  Name: String

  RuleActionOverrides: Listing<`AWS::WAFv2::WebACLRuleActionOverride`>?

  ScopeDownStatement: `AWS::WAFv2::WebACLStatement`?

  VendorName: String

  Version: String?
}

class `AWS::WAFv2::WebACLNotStatement` {
  Statement: `AWS::WAFv2::WebACLStatement`
}

class `AWS::WAFv2::WebACLOverrideAction` {
  Count: Dynamic?

  None: Dynamic?
}

class `AWS::WAFv2::WebACLRateBasedStatement` {
  AggregateKeyType: String

  CustomKeys: Listing<`AWS::WAFv2::WebACLRateBasedStatementCustomKey`>?

  ForwardedIPConfig: `AWS::WAFv2::WebACLForwardedIPConfiguration`?

  Limit: Number

  ScopeDownStatement: `AWS::WAFv2::WebACLStatement`?
}

class `AWS::WAFv2::WebACLRateBasedStatementCustomKey` {
  Cookie: `AWS::WAFv2::WebACLRateLimitQueryArgument`?

  ForwardedIP: Dynamic?

  HTTPMethod: Dynamic?

  Header: `AWS::WAFv2::WebACLRateLimitQueryArgument`?

  IP: Dynamic?

  LabelNamespace: `AWS::WAFv2::WebACLRateLimitLabelNamespace`?

  QueryArgument: `AWS::WAFv2::WebACLRateLimitQueryArgument`?

  QueryString: `AWS::WAFv2::WebACLRateLimitUriPath`?

  UriPath: `AWS::WAFv2::WebACLRateLimitUriPath`?
}

class `AWS::WAFv2::WebACLRateLimitQueryArgument` {
  Name: String

  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::WebACLRateLimitUriPath` {
  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::WebACLRegexMatchStatement` {
  FieldToMatch: `AWS::WAFv2::WebACLFieldToMatch`

  RegexString: String

  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::WebACLRegexPatternSetReferenceStatement` {
  Arn: String

  FieldToMatch: `AWS::WAFv2::WebACLFieldToMatch`

  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::WebACLRequestBodyAssociatedResourceTypeConfig` {
  DefaultSizeInspectionLimit: String
}

class `AWS::WAFv2::WebACLRequestInspection` {
  PasswordField: `AWS::WAFv2::WebACLFieldIdentifier`

  PayloadType: String

  UsernameField: `AWS::WAFv2::WebACLFieldIdentifier`
}

class `AWS::WAFv2::WebACLRequestInspectionACFP` {
  AddressFields: Listing<`AWS::WAFv2::WebACLFieldIdentifier`>?

  EmailField: `AWS::WAFv2::WebACLFieldIdentifier`?

  PasswordField: `AWS::WAFv2::WebACLFieldIdentifier`?

  PayloadType: String

  PhoneNumberFields: Listing<`AWS::WAFv2::WebACLFieldIdentifier`>?

  UsernameField: `AWS::WAFv2::WebACLFieldIdentifier`?
}

class `AWS::WAFv2::WebACLResponseInspection` {
  BodyContains: `AWS::WAFv2::WebACLResponseInspectionBodyContains`?

  Header: `AWS::WAFv2::WebACLResponseInspectionHeader`?

  Json: `AWS::WAFv2::WebACLResponseInspectionJson`?

  StatusCode: `AWS::WAFv2::WebACLResponseInspectionStatusCode`?
}

class `AWS::WAFv2::WebACLResponseInspectionBodyContains` {
  FailureStrings: Listing<String>

  SuccessStrings: Listing<String>
}

class `AWS::WAFv2::WebACLResponseInspectionHeader` {
  FailureValues: Listing<String>

  Name: String

  SuccessValues: Listing<String>
}

class `AWS::WAFv2::WebACLResponseInspectionJson` {
  FailureValues: Listing<String>

  Identifier: String

  SuccessValues: Listing<String>
}

class `AWS::WAFv2::WebACLResponseInspectionStatusCode` {
  FailureCodes: Listing<Number>

  SuccessCodes: Listing<Number>
}

class `AWS::WAFv2::WebACLRule` {
  Action: `AWS::WAFv2::WebACLRuleAction`?

  CaptchaConfig: `AWS::WAFv2::WebACLChallengeConfig`?

  ChallengeConfig: `AWS::WAFv2::WebACLChallengeConfig`?

  Name: String

  OverrideAction: `AWS::WAFv2::WebACLOverrideAction`?

  Priority: Number

  RuleLabels: Listing<`AWS::WAFv2::WebACLSingleQueryArgument`>?

  Statement: `AWS::WAFv2::WebACLStatement`

  VisibilityConfig: `AWS::WAFv2::WebACLVisibilityConfig`
}

class `AWS::WAFv2::WebACLRuleAction` {
  Allow: `AWS::WAFv2::WebACLCountAction`?

  Block: `AWS::WAFv2::WebACLBlockAction`?

  Captcha: `AWS::WAFv2::WebACLCountAction`?

  Challenge: `AWS::WAFv2::WebACLCountAction`?

  Count: `AWS::WAFv2::WebACLCountAction`?
}

class `AWS::WAFv2::WebACLRuleActionOverride` {
  ActionToUse: `AWS::WAFv2::WebACLRuleAction`

  Name: String
}

class `AWS::WAFv2::WebACLRuleGroupReferenceStatement` {
  Arn: String

  ExcludedRules: Listing<`AWS::WAFv2::WebACLSingleQueryArgument`>?

  RuleActionOverrides: Listing<`AWS::WAFv2::WebACLRuleActionOverride`>?
}

class `AWS::WAFv2::WebACLSizeConstraintStatement` {
  ComparisonOperator: String

  FieldToMatch: `AWS::WAFv2::WebACLFieldToMatch`

  Size: Number

  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::WebACLSqliMatchStatement` {
  FieldToMatch: `AWS::WAFv2::WebACLFieldToMatch`

  SensitivityLevel: String?

  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::WebACLStatement` {
  AndStatement: `AWS::WAFv2::WebACLOrStatement`?

  ByteMatchStatement: `AWS::WAFv2::WebACLByteMatchStatement`?

  GeoMatchStatement: `AWS::WAFv2::WebACLGeoMatchStatement`?

  IPSetReferenceStatement: `AWS::WAFv2::WebACLIPSetReferenceStatement`?

  LabelMatchStatement: `AWS::WAFv2::WebACLLabelMatchStatement`?

  ManagedRuleGroupStatement: `AWS::WAFv2::WebACLManagedRuleGroupStatement`?

  NotStatement: `AWS::WAFv2::WebACLNotStatement`?

  OrStatement: `AWS::WAFv2::WebACLOrStatement`?

  RateBasedStatement: `AWS::WAFv2::WebACLRateBasedStatement`?

  RegexMatchStatement: `AWS::WAFv2::WebACLRegexMatchStatement`?

  RegexPatternSetReferenceStatement: `AWS::WAFv2::WebACLRegexPatternSetReferenceStatement`?

  RuleGroupReferenceStatement: `AWS::WAFv2::WebACLRuleGroupReferenceStatement`?

  SizeConstraintStatement: `AWS::WAFv2::WebACLSizeConstraintStatement`?

  SqliMatchStatement: `AWS::WAFv2::WebACLSqliMatchStatement`?

  XssMatchStatement: `AWS::WAFv2::WebACLXssMatchStatement`?
}

class `AWS::WAFv2::WebACLXssMatchStatement` {
  FieldToMatch: `AWS::WAFv2::WebACLFieldToMatch`

  TextTransformations: Listing<`AWS::WAFv2::WebACLTextTransformation`>
}

class `AWS::WAFv2::WebACLAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WAFv2::WebACLAssociationProperties`

  Type: "AWS::WAFv2::WebACLAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WAFv2::WebACLAssociationProperties` {
  ResourceArn: String

  WebACLArn: String
}

class `AWS::Wisdom::Assistant` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Wisdom::AssistantProperties`

  Type: "AWS::Wisdom::Assistant"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Wisdom::AssistantProperties` {
  Description: String?

  Name: String

  ServerSideEncryptionConfiguration: `AWS::Wisdom::KnowledgeBaseServerSideEncryptionConfiguration`?

  Tags: Listing<Tag>?

  Type: String
}

class `AWS::Wisdom::AssistantAssociation` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Wisdom::AssistantAssociationProperties`

  Type: "AWS::Wisdom::AssistantAssociation"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Wisdom::AssistantAssociationProperties` {
  AssistantId: String

  Association: `AWS::Wisdom::AssistantAssociationAssociationData`

  AssociationType: String

  Tags: Listing<Tag>?
}

class `AWS::Wisdom::AssistantAssociationAssociationData` {
  KnowledgeBaseId: String
}

class `AWS::Wisdom::KnowledgeBase` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::Wisdom::KnowledgeBaseProperties`

  Type: "AWS::Wisdom::KnowledgeBase"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::Wisdom::KnowledgeBaseProperties` {
  Description: String?

  KnowledgeBaseType: String

  Name: String

  RenderingConfiguration: `AWS::Wisdom::KnowledgeBaseRenderingConfiguration`?

  ServerSideEncryptionConfiguration: `AWS::Wisdom::KnowledgeBaseServerSideEncryptionConfiguration`?

  SourceConfiguration: `AWS::Wisdom::KnowledgeBaseSourceConfiguration`?

  Tags: Listing<Tag>?
}

class `AWS::Wisdom::KnowledgeBaseAppIntegrationsConfiguration` {
  AppIntegrationArn: String

  ObjectFields: Listing<String>?
}

class `AWS::Wisdom::KnowledgeBaseRenderingConfiguration` {
  TemplateUri: String?
}

class `AWS::Wisdom::KnowledgeBaseSourceConfiguration` {
  AppIntegrations: `AWS::Wisdom::KnowledgeBaseAppIntegrationsConfiguration`
}

class `AWS::WorkSpaces::ConnectionAlias` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WorkSpaces::ConnectionAliasProperties`

  Type: "AWS::WorkSpaces::ConnectionAlias"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WorkSpaces::ConnectionAliasProperties` {
  ConnectionString: String

  Tags: Listing<Tag>?
}

class `AWS::WorkSpaces::ConnectionAliasConnectionAliasAssociation` {
  AssociatedAccountId: String?

  AssociationStatus: String?

  ConnectionIdentifier: String?

  ResourceId: String?
}

class `AWS::WorkSpaces::Workspace` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WorkSpaces::WorkspaceProperties`

  Type: "AWS::WorkSpaces::Workspace"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WorkSpaces::WorkspaceProperties` {
  BundleId: String

  DirectoryId: String

  RootVolumeEncryptionEnabled: Boolean?

  Tags: Listing<Tag>?

  UserName: String

  UserVolumeEncryptionEnabled: Boolean?

  VolumeEncryptionKey: String?

  WorkspaceProperties: `AWS::WorkSpaces::WorkspaceWorkspaceProperties`?
}

class `AWS::WorkSpaces::WorkspaceWorkspaceProperties` {
  ComputeTypeName: String?

  RootVolumeSizeGib: Number?

  RunningMode: String?

  RunningModeAutoStopTimeoutInMinutes: Number?

  UserVolumeSizeGib: Number?
}

class `AWS::WorkSpacesThinClient::Environment` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WorkSpacesThinClient::EnvironmentProperties`

  Type: "AWS::WorkSpacesThinClient::Environment"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WorkSpacesThinClient::EnvironmentProperties` {
  DesiredSoftwareSetId: String?

  DesktopArn: String

  DesktopEndpoint: String?

  KmsKeyArn: String?

  MaintenanceWindow: `AWS::WorkSpacesThinClient::EnvironmentMaintenanceWindow`?

  Name: String?

  SoftwareSetUpdateMode: String?

  SoftwareSetUpdateSchedule: String?

  Tags: Listing<Tag>?
}

class `AWS::WorkSpacesThinClient::EnvironmentMaintenanceWindow` {
  ApplyTimeOf: String?

  DaysOfTheWeek: Listing<String>?

  EndTimeHour: Number?

  EndTimeMinute: Number?

  StartTimeHour: Number?

  StartTimeMinute: Number?

  Type: String
}

class `AWS::WorkSpacesWeb::BrowserSettings` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WorkSpacesWeb::BrowserSettingsProperties`?

  Type: "AWS::WorkSpacesWeb::BrowserSettings"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WorkSpacesWeb::BrowserSettingsProperties` {
  AdditionalEncryptionContext: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  BrowserPolicy: String?

  CustomerManagedKey: String?

  Tags: Listing<Tag>?
}

class `AWS::WorkSpacesWeb::IdentityProvider` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WorkSpacesWeb::IdentityProviderProperties`

  Type: "AWS::WorkSpacesWeb::IdentityProvider"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WorkSpacesWeb::IdentityProviderProperties` {
  IdentityProviderDetails: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>

  IdentityProviderName: String

  IdentityProviderType: String

  PortalArn: String?
}

class `AWS::WorkSpacesWeb::IpAccessSettings` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WorkSpacesWeb::IpAccessSettingsProperties`

  Type: "AWS::WorkSpacesWeb::IpAccessSettings"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WorkSpacesWeb::IpAccessSettingsProperties` {
  AdditionalEncryptionContext: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  CustomerManagedKey: String?

  Description: String?

  DisplayName: String?

  IpRules: Listing<`AWS::WorkSpacesWeb::IpAccessSettingsIpRule`>

  Tags: Listing<Tag>?
}

class `AWS::WorkSpacesWeb::IpAccessSettingsIpRule` {
  Description: String?

  IpRange: String
}

class `AWS::WorkSpacesWeb::NetworkSettings` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WorkSpacesWeb::NetworkSettingsProperties`

  Type: "AWS::WorkSpacesWeb::NetworkSettings"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WorkSpacesWeb::NetworkSettingsProperties` {
  SecurityGroupIds: Listing<String>

  SubnetIds: Listing<String>

  Tags: Listing<Tag>?

  VpcId: String
}

class `AWS::WorkSpacesWeb::Portal` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WorkSpacesWeb::PortalProperties`?

  Type: "AWS::WorkSpacesWeb::Portal"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WorkSpacesWeb::PortalProperties` {
  AdditionalEncryptionContext: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  AuthenticationType: String?

  BrowserSettingsArn: String?

  CustomerManagedKey: String?

  DisplayName: String?

  IpAccessSettingsArn: String?

  NetworkSettingsArn: String?

  Tags: Listing<Tag>?

  TrustStoreArn: String?

  UserAccessLoggingSettingsArn: String?

  UserSettingsArn: String?
}

class `AWS::WorkSpacesWeb::TrustStore` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WorkSpacesWeb::TrustStoreProperties`

  Type: "AWS::WorkSpacesWeb::TrustStore"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WorkSpacesWeb::TrustStoreProperties` {
  CertificateList: Listing<String>

  Tags: Listing<Tag>?
}

class `AWS::WorkSpacesWeb::UserAccessLoggingSettings` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WorkSpacesWeb::UserAccessLoggingSettingsProperties`

  Type: "AWS::WorkSpacesWeb::UserAccessLoggingSettings"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WorkSpacesWeb::UserAccessLoggingSettingsProperties` {
  KinesisStreamArn: String

  Tags: Listing<Tag>?
}

class `AWS::WorkSpacesWeb::UserSettings` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::WorkSpacesWeb::UserSettingsProperties`

  Type: "AWS::WorkSpacesWeb::UserSettings"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::WorkSpacesWeb::UserSettingsProperties` {
  AdditionalEncryptionContext: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  CookieSynchronizationConfiguration: `AWS::WorkSpacesWeb::UserSettingsCookieSynchronizationConfiguration`?

  CopyAllowed: String

  CustomerManagedKey: String?

  DisconnectTimeoutInMinutes: Number?

  DownloadAllowed: String

  IdleDisconnectTimeoutInMinutes: Number?

  PasteAllowed: String

  PrintAllowed: String

  Tags: Listing<Tag>?

  UploadAllowed: String
}

class `AWS::WorkSpacesWeb::UserSettingsCookieSpecification` {
  Domain: String

  Name: String?

  Path: String?
}

class `AWS::WorkSpacesWeb::UserSettingsCookieSynchronizationConfiguration` {
  Allowlist: Listing<`AWS::WorkSpacesWeb::UserSettingsCookieSpecification`>

  Blocklist: Listing<`AWS::WorkSpacesWeb::UserSettingsCookieSpecification`>?
}

class `AWS::XRay::Group` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::XRay::GroupProperties`

  Type: "AWS::XRay::Group"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::XRay::GroupProperties` {
  FilterExpression: String?

  GroupName: String

  InsightsConfiguration: `AWS::XRay::GroupInsightsConfiguration`?

  Tags: Listing<Tag>?
}

class `AWS::XRay::GroupInsightsConfiguration` {
  InsightsEnabled: Boolean?

  NotificationsEnabled: Boolean?
}

class `AWS::XRay::ResourcePolicy` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::XRay::ResourcePolicyProperties`

  Type: "AWS::XRay::ResourcePolicy"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::XRay::ResourcePolicyProperties` {
  BypassPolicyLockoutCheck: Boolean?

  PolicyDocument: String

  PolicyName: String
}

class `AWS::XRay::SamplingRule` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `AWS::XRay::SamplingRuleProperties`?

  Type: "AWS::XRay::SamplingRule"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `AWS::XRay::SamplingRuleProperties` {
  SamplingRule: `AWS::XRay::SamplingRuleSamplingRule`?

  Tags: Listing<Tag>?
}

class `AWS::XRay::SamplingRuleSamplingRule` {
  Attributes: Mapping<String(matches(Regex("^[a-zA-Z0-9]+$"))), String>?

  FixedRate: Number

  HTTPMethod: String

  Host: String

  Priority: Number

  ReservoirSize: Number

  ResourceARN: String

  RuleARN: String?

  RuleName: String?

  ServiceName: String

  ServiceType: String

  URLPath: String

  Version: Number?
}

class `Alexa::ASK::Skill` {
  Condition: String?

  DeletionPolicy: ("Delete"|"Retain"|"Snapshot")?

  DependsOn: (String(matches(Regex("^[a-zA-Z0-9]+$")))|Listing<String(matches(Regex("^[a-zA-Z0-9]+$")))>)?

  Metadata: Dynamic?

  Properties: `Alexa::ASK::SkillProperties`

  Type: "Alexa::ASK::Skill"

  UpdateReplacePolicy: ("Delete"|"Retain"|"Snapshot")?
}

class `Alexa::ASK::SkillProperties` {
  AuthenticationConfiguration: `Alexa::ASK::SkillAuthenticationConfiguration`

  SkillPackage: `Alexa::ASK::SkillSkillPackage`

  VendorId: String
}

class `Alexa::ASK::SkillAuthenticationConfiguration` {
  ClientId: String

  ClientSecret: String

  RefreshToken: String
}

class `Alexa::ASK::SkillOverrides` {
  Manifest: Dynamic?
}

class `Alexa::ASK::SkillSkillPackage` {
  Overrides: `Alexa::ASK::SkillOverrides`?

  S3Bucket: String

  S3BucketRole: String?

  S3Key: String

  S3ObjectVersion: String?
}

class CustomResource {
  Properties: CustomResourceProperties

  Type: String(matches(Regex("^Custom::[a-zA-Z_@-]+$")))
}

class CustomResourceProperties {
  ServiceToken: String
}

class Parameter {
  AllowedPattern: String?

  AllowedValues: Listing?

  ConstraintDescription: String?

  Default: String?

  Description: String?

  MaxLength: String?

  MaxValue: String?

  MinLength: String?

  MinValue: String?

  NoEcho: (String|Boolean)?

  Type: 
    "String"
    |"Number"
    |"List<Number>"
    |"CommaDelimitedList"
    |"AWS::EC2::AvailabilityZone::Name"
    |"AWS::EC2::Image::Id"
    |"AWS::EC2::Instance::Id"
    |"AWS::EC2::KeyPair::KeyName"
    |"AWS::EC2::SecurityGroup::GroupName"
    |"AWS::EC2::SecurityGroup::Id"
    |"AWS::EC2::Subnet::Id"
    |"AWS::EC2::Volume::Id"
    |"AWS::EC2::VPC::Id"
    |"AWS::Route53::HostedZone::Id"
    |"List<AWS::EC2::AvailabilityZone::Name>"
    |"List<AWS::EC2::Image::Id>"
    |"List<AWS::EC2::Instance::Id>"
    |"List<AWS::EC2::SecurityGroup::GroupName>"
    |"List<AWS::EC2::SecurityGroup::Id>"
    |"List<AWS::EC2::Subnet::Id>"
    |"List<AWS::EC2::Volume::Id>"
    |"List<AWS::EC2::VPC::Id>"
    |"List<AWS::Route53::HostedZone::Id>"
    |"List<String>"
    |"AWS::SSM::Parameter::Name"
    |"AWS::SSM::Parameter::Value<String>"
    |"AWS::SSM::Parameter::Value<List<String>>"
    |"AWS::SSM::Parameter::Value<CommaDelimitedList>"
    |"AWS::SSM::Parameter::Value<AWS::EC2::AvailabilityZone::Name>"
    |"AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    |"AWS::SSM::Parameter::Value<AWS::EC2::Instance::Id>"
    |"AWS::SSM::Parameter::Value<AWS::EC2::SecurityGroup::GroupName>"
    |"AWS::SSM::Parameter::Value<AWS::EC2::SecurityGroup::Id>"
    |"AWS::SSM::Parameter::Value<AWS::EC2::Subnet::Id>"
    |"AWS::SSM::Parameter::Value<AWS::EC2::Volume::Id>"
    |"AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>"
    |"AWS::SSM::Parameter::Value<AWS::Route53::HostedZone::Id>"
    |"AWS::SSM::Parameter::Value<List<AWS::EC2::AvailabilityZone::Name>>"
    |"AWS::SSM::Parameter::Value<List<AWS::EC2::Image::Id>>"
    |"AWS::SSM::Parameter::Value<List<AWS::EC2::Instance::Id>>"
    |"AWS::SSM::Parameter::Value<List<AWS::EC2::SecurityGroup::GroupName>>"
    |"AWS::SSM::Parameter::Value<List<AWS::EC2::SecurityGroup::Id>>"
    |"AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>"
    |"AWS::SSM::Parameter::Value<List<AWS::EC2::Volume::Id>>"
    |"AWS::SSM::Parameter::Value<List<AWS::EC2::VPC::Id>>"
    |"AWS::SSM::Parameter::Value<List<AWS::Route53::HostedZone::Id>>" = Undefined()
}
